{
  "api/Mithril.API.Abstractions.Admin.DropDowns.LookUpDropDown.html": {
    "href": "api/Mithril.API.Abstractions.Admin.DropDowns.LookUpDropDown.html",
    "title": "Class LookUpDropDown | Mithril API Reference",
    "keywords": "Class LookUpDropDown Namespace Mithril.API.Abstractions.Admin.DropDowns Assembly Mithril.API.Abstractions.dll LookUp drop down public class LookUpDropDown : DropDownBaseClass<ILookUp>, IDropDownQuery Inheritance object DropDownBaseClass<ILookUp> LookUpDropDown Implements IDropDownQuery Inherited Members DropDownBaseClass<ILookUp>.Name DropDownBaseClass<ILookUp>.CanRun(string, ClaimsPrincipal) DropDownBaseClass<ILookUp>.GetDataAsync(IDataService, string) DropDownBaseClass<ILookUp>.GetValues(IDataService, string, int) DropDownBaseClass<ILookUp>.GetKey(ILookUp) object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods GenericExtensions.When<TObject>(TObject, bool, Func<TObject, TObject>) ExpandoObjectExtensions.ConvertToExpando(object?) Methods FilterQuery(IQueryable<ILookUp>, string) Filters the query. protected override IQueryable<ILookUp> FilterQuery(IQueryable<ILookUp> query, string value) Parameters query IQueryable<ILookUp> The query. value string The value. Returns IQueryable<ILookUp> The filtered query See Also DropDownBaseClass<TModel>"
  },
  "api/Mithril.API.Abstractions.Admin.DropDowns.LookUpTypeDropDown.html": {
    "href": "api/Mithril.API.Abstractions.Admin.DropDowns.LookUpTypeDropDown.html",
    "title": "Class LookUpTypeDropDown | Mithril API Reference",
    "keywords": "Class LookUpTypeDropDown Namespace Mithril.API.Abstractions.Admin.DropDowns Assembly Mithril.API.Abstractions.dll LookUpType drop down public class LookUpTypeDropDown : DropDownBaseClass<ILookUpType>, IDropDownQuery Inheritance object DropDownBaseClass<ILookUpType> LookUpTypeDropDown Implements IDropDownQuery Inherited Members DropDownBaseClass<ILookUpType>.Name DropDownBaseClass<ILookUpType>.CanRun(string, ClaimsPrincipal) DropDownBaseClass<ILookUpType>.GetDataAsync(IDataService, string) DropDownBaseClass<ILookUpType>.GetValues(IDataService, string, int) DropDownBaseClass<ILookUpType>.GetKey(ILookUpType) object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods GenericExtensions.When<TObject>(TObject, bool, Func<TObject, TObject>) ExpandoObjectExtensions.ConvertToExpando(object?) Methods FilterQuery(IQueryable<ILookUpType>, string) Filters the query. protected override IQueryable<ILookUpType> FilterQuery(IQueryable<ILookUpType> query, string value) Parameters query IQueryable<ILookUpType> The query. value string The value. Returns IQueryable<ILookUpType> The filtered query See Also DropDownBaseClass<TModel>"
  },
  "api/Mithril.API.Abstractions.Admin.DropDowns.UserClaimDropDown.html": {
    "href": "api/Mithril.API.Abstractions.Admin.DropDowns.UserClaimDropDown.html",
    "title": "Class UserClaimDropDown | Mithril API Reference",
    "keywords": "Class UserClaimDropDown Namespace Mithril.API.Abstractions.Admin.DropDowns Assembly Mithril.API.Abstractions.dll UserClaim drop down public class UserClaimDropDown : DropDownBaseClass<IUserClaim>, IDropDownQuery Inheritance object DropDownBaseClass<IUserClaim> UserClaimDropDown Implements IDropDownQuery Inherited Members DropDownBaseClass<IUserClaim>.Name DropDownBaseClass<IUserClaim>.CanRun(string, ClaimsPrincipal) DropDownBaseClass<IUserClaim>.GetDataAsync(IDataService, string) DropDownBaseClass<IUserClaim>.GetValues(IDataService, string, int) DropDownBaseClass<IUserClaim>.GetKey(IUserClaim) object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods GenericExtensions.When<TObject>(TObject, bool, Func<TObject, TObject>) ExpandoObjectExtensions.ConvertToExpando(object?) Methods FilterQuery(IQueryable<IUserClaim>, string) Filters the query. protected override IQueryable<IUserClaim> FilterQuery(IQueryable<IUserClaim> query, string value) Parameters query IQueryable<IUserClaim> The query. value string The value. Returns IQueryable<IUserClaim> The filtered query See Also DropDownBaseClass<TModel>"
  },
  "api/Mithril.API.Abstractions.Admin.DropDowns.UserDropDown.html": {
    "href": "api/Mithril.API.Abstractions.Admin.DropDowns.UserDropDown.html",
    "title": "Class UserDropDown | Mithril API Reference",
    "keywords": "Class UserDropDown Namespace Mithril.API.Abstractions.Admin.DropDowns Assembly Mithril.API.Abstractions.dll User drop down public class UserDropDown : DropDownBaseClass<IUser>, IDropDownQuery Inheritance object DropDownBaseClass<IUser> UserDropDown Implements IDropDownQuery Inherited Members DropDownBaseClass<IUser>.Name DropDownBaseClass<IUser>.CanRun(string, ClaimsPrincipal) DropDownBaseClass<IUser>.GetDataAsync(IDataService, string) DropDownBaseClass<IUser>.GetValues(IDataService, string, int) DropDownBaseClass<IUser>.GetKey(IUser) object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods GenericExtensions.When<TObject>(TObject, bool, Func<TObject, TObject>) ExpandoObjectExtensions.ConvertToExpando(object?) Methods FilterQuery(IQueryable<IUser>, string) Filters the query. protected override IQueryable<IUser> FilterQuery(IQueryable<IUser> query, string value) Parameters query IQueryable<IUser> The query. value string The value. Returns IQueryable<IUser> The filtered query See Also DropDownBaseClass<TModel>"
  },
  "api/Mithril.API.Abstractions.Admin.DropDowns.html": {
    "href": "api/Mithril.API.Abstractions.Admin.DropDowns.html",
    "title": "Namespace Mithril.API.Abstractions.Admin.DropDowns | Mithril API Reference",
    "keywords": "Namespace Mithril.API.Abstractions.Admin.DropDowns Classes LookUpDropDown LookUp drop down LookUpTypeDropDown LookUpType drop down UserClaimDropDown UserClaim drop down UserDropDown User drop down"
  },
  "api/Mithril.API.Abstractions.Attributes.ApiAllowAnonymousAttribute.html": {
    "href": "api/Mithril.API.Abstractions.Attributes.ApiAllowAnonymousAttribute.html",
    "title": "Class ApiAllowAnonymousAttribute | Mithril API Reference",
    "keywords": "Class ApiAllowAnonymousAttribute Namespace Mithril.API.Abstractions.Attributes Assembly Mithril.API.Abstractions.dll Allow anonymous access attribute [AttributeUsage(AttributeTargets.Class|AttributeTargets.Method|AttributeTargets.Property|AttributeTargets.Interface)] public class ApiAllowAnonymousAttribute : Attribute Inheritance object Attribute ApiAllowAnonymousAttribute Inherited Members Attribute.Equals(object) Attribute.GetCustomAttribute(Assembly, Type) Attribute.GetCustomAttribute(Assembly, Type, bool) Attribute.GetCustomAttribute(MemberInfo, Type) Attribute.GetCustomAttribute(MemberInfo, Type, bool) Attribute.GetCustomAttribute(Module, Type) Attribute.GetCustomAttribute(Module, Type, bool) Attribute.GetCustomAttribute(ParameterInfo, Type) Attribute.GetCustomAttribute(ParameterInfo, Type, bool) Attribute.GetCustomAttributes(Assembly) Attribute.GetCustomAttributes(Assembly, bool) Attribute.GetCustomAttributes(Assembly, Type) Attribute.GetCustomAttributes(Assembly, Type, bool) Attribute.GetCustomAttributes(MemberInfo) Attribute.GetCustomAttributes(MemberInfo, bool) Attribute.GetCustomAttributes(MemberInfo, Type) Attribute.GetCustomAttributes(MemberInfo, Type, bool) Attribute.GetCustomAttributes(Module) Attribute.GetCustomAttributes(Module, bool) Attribute.GetCustomAttributes(Module, Type) Attribute.GetCustomAttributes(Module, Type, bool) Attribute.GetCustomAttributes(ParameterInfo) Attribute.GetCustomAttributes(ParameterInfo, bool) Attribute.GetCustomAttributes(ParameterInfo, Type) Attribute.GetCustomAttributes(ParameterInfo, Type, bool) Attribute.GetHashCode() Attribute.IsDefaultAttribute() Attribute.IsDefined(Assembly, Type) Attribute.IsDefined(Assembly, Type, bool) Attribute.IsDefined(MemberInfo, Type) Attribute.IsDefined(MemberInfo, Type, bool) Attribute.IsDefined(Module, Type) Attribute.IsDefined(Module, Type, bool) Attribute.IsDefined(ParameterInfo, Type) Attribute.IsDefined(ParameterInfo, Type, bool) Attribute.Match(object) Attribute.TypeId object.Equals(object, object) object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods GenericExtensions.When<TObject>(TObject, bool, Func<TObject, TObject>) ExpandoObjectExtensions.ConvertToExpando(object?) See Also Attribute"
  },
  "api/Mithril.API.Abstractions.Attributes.ApiAuthorizeAttribute.html": {
    "href": "api/Mithril.API.Abstractions.Attributes.ApiAuthorizeAttribute.html",
    "title": "Class ApiAuthorizeAttribute | Mithril API Reference",
    "keywords": "Class ApiAuthorizeAttribute Namespace Mithril.API.Abstractions.Attributes Assembly Mithril.API.Abstractions.dll API authorize [AttributeUsage(AttributeTargets.Class|AttributeTargets.Method|AttributeTargets.Property|AttributeTargets.Interface)] public class ApiAuthorizeAttribute : Attribute Inheritance object Attribute ApiAuthorizeAttribute Inherited Members Attribute.Equals(object) Attribute.GetCustomAttribute(Assembly, Type) Attribute.GetCustomAttribute(Assembly, Type, bool) Attribute.GetCustomAttribute(MemberInfo, Type) Attribute.GetCustomAttribute(MemberInfo, Type, bool) Attribute.GetCustomAttribute(Module, Type) Attribute.GetCustomAttribute(Module, Type, bool) Attribute.GetCustomAttribute(ParameterInfo, Type) Attribute.GetCustomAttribute(ParameterInfo, Type, bool) Attribute.GetCustomAttributes(Assembly) Attribute.GetCustomAttributes(Assembly, bool) Attribute.GetCustomAttributes(Assembly, Type) Attribute.GetCustomAttributes(Assembly, Type, bool) Attribute.GetCustomAttributes(MemberInfo) Attribute.GetCustomAttributes(MemberInfo, bool) Attribute.GetCustomAttributes(MemberInfo, Type) Attribute.GetCustomAttributes(MemberInfo, Type, bool) Attribute.GetCustomAttributes(Module) Attribute.GetCustomAttributes(Module, bool) Attribute.GetCustomAttributes(Module, Type) Attribute.GetCustomAttributes(Module, Type, bool) Attribute.GetCustomAttributes(ParameterInfo) Attribute.GetCustomAttributes(ParameterInfo, bool) Attribute.GetCustomAttributes(ParameterInfo, Type) Attribute.GetCustomAttributes(ParameterInfo, Type, bool) Attribute.GetHashCode() Attribute.IsDefaultAttribute() Attribute.IsDefined(Assembly, Type) Attribute.IsDefined(Assembly, Type, bool) Attribute.IsDefined(MemberInfo, Type) Attribute.IsDefined(MemberInfo, Type, bool) Attribute.IsDefined(Module, Type) Attribute.IsDefined(Module, Type, bool) Attribute.IsDefined(ParameterInfo, Type) Attribute.IsDefined(ParameterInfo, Type, bool) Attribute.Match(object) Attribute.TypeId object.Equals(object, object) object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods GenericExtensions.When<TObject>(TObject, bool, Func<TObject, TObject>) ExpandoObjectExtensions.ConvertToExpando(object?) Constructors ApiAuthorizeAttribute() Initializes a new instance of the ApiAuthorizeAttribute class. public ApiAuthorizeAttribute() ApiAuthorizeAttribute(string) Initializes a new instance of the ApiAuthorizeAttribute class. public ApiAuthorizeAttribute(string policyName) Parameters policyName string Name of the policy. Properties PolicyName Gets or sets the name of the policy. public string? PolicyName { get; } Property Value string The name of the policy. Roles Gets or sets the roles. public string? Roles { get; } Property Value string The roles. See Also Attribute"
  },
  "api/Mithril.API.Abstractions.Attributes.ApiDepricationReasonAttribute.html": {
    "href": "api/Mithril.API.Abstractions.Attributes.ApiDepricationReasonAttribute.html",
    "title": "Class ApiDepricationReasonAttribute | Mithril API Reference",
    "keywords": "Class ApiDepricationReasonAttribute Namespace Mithril.API.Abstractions.Attributes Assembly Mithril.API.Abstractions.dll API Deprication attribute. [AttributeUsage(AttributeTargets.Class|AttributeTargets.Method|AttributeTargets.Property|AttributeTargets.Interface)] public class ApiDepricationReasonAttribute : Attribute Inheritance object Attribute ApiDepricationReasonAttribute Inherited Members Attribute.Equals(object) Attribute.GetCustomAttribute(Assembly, Type) Attribute.GetCustomAttribute(Assembly, Type, bool) Attribute.GetCustomAttribute(MemberInfo, Type) Attribute.GetCustomAttribute(MemberInfo, Type, bool) Attribute.GetCustomAttribute(Module, Type) Attribute.GetCustomAttribute(Module, Type, bool) Attribute.GetCustomAttribute(ParameterInfo, Type) Attribute.GetCustomAttribute(ParameterInfo, Type, bool) Attribute.GetCustomAttributes(Assembly) Attribute.GetCustomAttributes(Assembly, bool) Attribute.GetCustomAttributes(Assembly, Type) Attribute.GetCustomAttributes(Assembly, Type, bool) Attribute.GetCustomAttributes(MemberInfo) Attribute.GetCustomAttributes(MemberInfo, bool) Attribute.GetCustomAttributes(MemberInfo, Type) Attribute.GetCustomAttributes(MemberInfo, Type, bool) Attribute.GetCustomAttributes(Module) Attribute.GetCustomAttributes(Module, bool) Attribute.GetCustomAttributes(Module, Type) Attribute.GetCustomAttributes(Module, Type, bool) Attribute.GetCustomAttributes(ParameterInfo) Attribute.GetCustomAttributes(ParameterInfo, bool) Attribute.GetCustomAttributes(ParameterInfo, Type) Attribute.GetCustomAttributes(ParameterInfo, Type, bool) Attribute.GetHashCode() Attribute.IsDefaultAttribute() Attribute.IsDefined(Assembly, Type) Attribute.IsDefined(Assembly, Type, bool) Attribute.IsDefined(MemberInfo, Type) Attribute.IsDefined(MemberInfo, Type, bool) Attribute.IsDefined(Module, Type) Attribute.IsDefined(Module, Type, bool) Attribute.IsDefined(ParameterInfo, Type) Attribute.IsDefined(ParameterInfo, Type, bool) Attribute.Match(object) Attribute.TypeId object.Equals(object, object) object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods GenericExtensions.When<TObject>(TObject, bool, Func<TObject, TObject>) ExpandoObjectExtensions.ConvertToExpando(object?) Constructors ApiDepricationReasonAttribute() Initializes a new instance of the ApiDepricationReasonAttribute class. public ApiDepricationReasonAttribute() ApiDepricationReasonAttribute(string) Initializes a new instance of the ApiDepricationReasonAttribute class. public ApiDepricationReasonAttribute(string depricationReason) Parameters depricationReason string The deprication reason. Properties DepricationReason Gets the Deprication. public string? DepricationReason { get; } Property Value string The Deprication. See Also Attribute"
  },
  "api/Mithril.API.Abstractions.Attributes.ApiDescriptionAttribute.html": {
    "href": "api/Mithril.API.Abstractions.Attributes.ApiDescriptionAttribute.html",
    "title": "Class ApiDescriptionAttribute | Mithril API Reference",
    "keywords": "Class ApiDescriptionAttribute Namespace Mithril.API.Abstractions.Attributes Assembly Mithril.API.Abstractions.dll API Description attribute. [AttributeUsage(AttributeTargets.Class|AttributeTargets.Method|AttributeTargets.Property|AttributeTargets.Interface)] public class ApiDescriptionAttribute : Attribute Inheritance object Attribute ApiDescriptionAttribute Inherited Members Attribute.Equals(object) Attribute.GetCustomAttribute(Assembly, Type) Attribute.GetCustomAttribute(Assembly, Type, bool) Attribute.GetCustomAttribute(MemberInfo, Type) Attribute.GetCustomAttribute(MemberInfo, Type, bool) Attribute.GetCustomAttribute(Module, Type) Attribute.GetCustomAttribute(Module, Type, bool) Attribute.GetCustomAttribute(ParameterInfo, Type) Attribute.GetCustomAttribute(ParameterInfo, Type, bool) Attribute.GetCustomAttributes(Assembly) Attribute.GetCustomAttributes(Assembly, bool) Attribute.GetCustomAttributes(Assembly, Type) Attribute.GetCustomAttributes(Assembly, Type, bool) Attribute.GetCustomAttributes(MemberInfo) Attribute.GetCustomAttributes(MemberInfo, bool) Attribute.GetCustomAttributes(MemberInfo, Type) Attribute.GetCustomAttributes(MemberInfo, Type, bool) Attribute.GetCustomAttributes(Module) Attribute.GetCustomAttributes(Module, bool) Attribute.GetCustomAttributes(Module, Type) Attribute.GetCustomAttributes(Module, Type, bool) Attribute.GetCustomAttributes(ParameterInfo) Attribute.GetCustomAttributes(ParameterInfo, bool) Attribute.GetCustomAttributes(ParameterInfo, Type) Attribute.GetCustomAttributes(ParameterInfo, Type, bool) Attribute.GetHashCode() Attribute.IsDefaultAttribute() Attribute.IsDefined(Assembly, Type) Attribute.IsDefined(Assembly, Type, bool) Attribute.IsDefined(MemberInfo, Type) Attribute.IsDefined(MemberInfo, Type, bool) Attribute.IsDefined(Module, Type) Attribute.IsDefined(Module, Type, bool) Attribute.IsDefined(ParameterInfo, Type) Attribute.IsDefined(ParameterInfo, Type, bool) Attribute.Match(object) Attribute.TypeId object.Equals(object, object) object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods GenericExtensions.When<TObject>(TObject, bool, Func<TObject, TObject>) ExpandoObjectExtensions.ConvertToExpando(object?) Constructors ApiDescriptionAttribute() Initializes a new instance of the ApiDescriptionAttribute class. public ApiDescriptionAttribute() ApiDescriptionAttribute(string) Initializes a new instance of the ApiDescriptionAttribute class. public ApiDescriptionAttribute(string description) Parameters description string The description. Properties Description Gets the description. public string? Description { get; } Property Value string The description. See Also Attribute"
  },
  "api/Mithril.API.Abstractions.Attributes.ApiIgnoreAttribute.html": {
    "href": "api/Mithril.API.Abstractions.Attributes.ApiIgnoreAttribute.html",
    "title": "Class ApiIgnoreAttribute | Mithril API Reference",
    "keywords": "Class ApiIgnoreAttribute Namespace Mithril.API.Abstractions.Attributes Assembly Mithril.API.Abstractions.dll Used to signify that a property should be ignored by the API. [AttributeUsage(AttributeTargets.Class|AttributeTargets.Method|AttributeTargets.Property)] public class ApiIgnoreAttribute : Attribute Inheritance object Attribute ApiIgnoreAttribute Inherited Members Attribute.Equals(object) Attribute.GetCustomAttribute(Assembly, Type) Attribute.GetCustomAttribute(Assembly, Type, bool) Attribute.GetCustomAttribute(MemberInfo, Type) Attribute.GetCustomAttribute(MemberInfo, Type, bool) Attribute.GetCustomAttribute(Module, Type) Attribute.GetCustomAttribute(Module, Type, bool) Attribute.GetCustomAttribute(ParameterInfo, Type) Attribute.GetCustomAttribute(ParameterInfo, Type, bool) Attribute.GetCustomAttributes(Assembly) Attribute.GetCustomAttributes(Assembly, bool) Attribute.GetCustomAttributes(Assembly, Type) Attribute.GetCustomAttributes(Assembly, Type, bool) Attribute.GetCustomAttributes(MemberInfo) Attribute.GetCustomAttributes(MemberInfo, bool) Attribute.GetCustomAttributes(MemberInfo, Type) Attribute.GetCustomAttributes(MemberInfo, Type, bool) Attribute.GetCustomAttributes(Module) Attribute.GetCustomAttributes(Module, bool) Attribute.GetCustomAttributes(Module, Type) Attribute.GetCustomAttributes(Module, Type, bool) Attribute.GetCustomAttributes(ParameterInfo) Attribute.GetCustomAttributes(ParameterInfo, bool) Attribute.GetCustomAttributes(ParameterInfo, Type) Attribute.GetCustomAttributes(ParameterInfo, Type, bool) Attribute.GetHashCode() Attribute.IsDefaultAttribute() Attribute.IsDefined(Assembly, Type) Attribute.IsDefined(Assembly, Type, bool) Attribute.IsDefined(MemberInfo, Type) Attribute.IsDefined(MemberInfo, Type, bool) Attribute.IsDefined(Module, Type) Attribute.IsDefined(Module, Type, bool) Attribute.IsDefined(ParameterInfo, Type) Attribute.IsDefined(ParameterInfo, Type, bool) Attribute.Match(object) Attribute.TypeId object.Equals(object, object) object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods GenericExtensions.When<TObject>(TObject, bool, Func<TObject, TObject>) ExpandoObjectExtensions.ConvertToExpando(object?) See Also Attribute"
  },
  "api/Mithril.API.Abstractions.Attributes.html": {
    "href": "api/Mithril.API.Abstractions.Attributes.html",
    "title": "Namespace Mithril.API.Abstractions.Attributes | Mithril API Reference",
    "keywords": "Namespace Mithril.API.Abstractions.Attributes Classes ApiAllowAnonymousAttribute Allow anonymous access attribute ApiAuthorizeAttribute API authorize ApiDepricationReasonAttribute API Deprication attribute. ApiDescriptionAttribute API Description attribute. ApiIgnoreAttribute Used to signify that a property should be ignored by the API."
  },
  "api/Mithril.API.Abstractions.Commands.BaseClasses.CommandBaseClass-1.html": {
    "href": "api/Mithril.API.Abstractions.Commands.BaseClasses.CommandBaseClass-1.html",
    "title": "Class CommandBaseClass<TCommand> | Mithril API Reference",
    "keywords": "Class CommandBaseClass<TCommand> Namespace Mithril.API.Abstractions.Commands.BaseClasses Assembly Mithril.API.Abstractions.dll Command base class public abstract class CommandBaseClass<TCommand> : ModelBase<TCommand>, IModel<TCommand>, IEquatable<IModel<TCommand>>, IComparable, IComparable<TCommand>, IEquatable<ModelBase<TCommand>>, ICommand, IEquatable<ICommand>, IModel, IEquatable<IModel>, IEquatable<CommandBaseClass<TCommand>> where TCommand : CommandBaseClass<TCommand>, new() Type Parameters TCommand The type of the command. Inheritance object ModelBase<TCommand> CommandBaseClass<TCommand> Implements IModel<TCommand> IEquatable<IModel<TCommand>> IComparable IComparable<TCommand> IEquatable<ModelBase<TCommand>> ICommand IEquatable<ICommand> IModel IEquatable<IModel> IEquatable<CommandBaseClass<TCommand>> Derived SaveModelCommand SendMessageCommand ToggleFeatureCommand LogCommand SetThemeCommand Inherited Members ModelBase<TCommand>.Active ModelBase<TCommand>.Creator ModelBase<TCommand>.DateCreated ModelBase<TCommand>.DateModified ModelBase<TCommand>.ID ModelBase<TCommand>.Modifier ModelBase<TCommand>.TenantID ModelBase<TCommand>.All(IDataService) ModelBase<TCommand>.AllActive(IDataService) ModelBase<TCommand>.AllInactive(IDataService) ModelBase<TCommand>.Load(long, IDataService) ModelBase<TCommand>.Query(IDataService) ModelBase<TCommand>.CanBeModifiedBy(ClaimsPrincipal) ModelBase<TCommand>.CanBeViewedBy(ClaimsPrincipal) ModelBase<TCommand>.CompareTo(object) ModelBase<TCommand>.CompareTo(TCommand) ModelBase<TCommand>.DeleteAsync(IDataService, ClaimsPrincipal, bool) ModelBase<TCommand>.Equals(IModel) ModelBase<TCommand>.Equals(IModel<TCommand>) ModelBase<TCommand>.Equals(ModelBase<TCommand>) ModelBase<TCommand>.SaveAsync(IDataService, ClaimsPrincipal) ModelBase<TCommand>.SetupObject(IDataService, ClaimsPrincipal) ModelBase<TCommand>.SetupObject(IDataService, IUser) ModelBase<TCommand>.SetupObjectAndReturn(IDataService, ClaimsPrincipal) object.Equals(object, object) object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Extension Methods GenericExtensions.When<TObject>(TObject, bool, Func<TObject, TObject>) ExpandoObjectExtensions.ConvertToExpando(object?) Constructors CommandBaseClass() Initializes a new instance of the CommandBaseClass<TCommand> class. protected CommandBaseClass() Properties Name Gets the name. public string Name { get; } Property Value string The name. Methods CompareTo(CommandBaseClass<TCommand>?) Compares the object to another object public int CompareTo(CommandBaseClass<TCommand>? other) Parameters other CommandBaseClass<TCommand> Object to compare to Returns int 0 if they are equal, -1 if this is smaller, 1 if it is larger Equals(CommandBaseClass<TCommand>?) Indicates whether the current object is equal to another object of the same type. public bool Equals(CommandBaseClass<TCommand>? other) Parameters other CommandBaseClass<TCommand> An object to compare with this object. Returns bool true if the current object is equal to the other parameter; otherwise, false. Equals(ICommand?) Indicates whether the current object is equal to another object of the same type. public bool Equals(ICommand? other) Parameters other ICommand An object to compare with this object. Returns bool true if the current object is equal to the other parameter; otherwise, false. Equals(object?) Determines whether the specified object, is equal to this instance. public override bool Equals(object? obj) Parameters obj object The object to compare with this instance. Returns bool true if the specified object is equal to this instance; otherwise, false. GetHashCode() Returns a hash code for this instance. public override int GetHashCode() Returns int A hash code for this instance, suitable for use in hashing algorithms and data structures like a hash table. ToString() Returns a string that represents this instance. public override string ToString() Returns string A string that represents this instance. Operators operator ==(CommandBaseClass<TCommand>, CommandBaseClass<TCommand>) Implements the operator ==. public static bool operator ==(CommandBaseClass<TCommand> first, CommandBaseClass<TCommand> second) Parameters first CommandBaseClass<TCommand> The first. second CommandBaseClass<TCommand> The second. Returns bool The result of the operator. operator >(CommandBaseClass<TCommand>, CommandBaseClass<TCommand>) Implements the operator >. public static bool operator >(CommandBaseClass<TCommand> left, CommandBaseClass<TCommand> right) Parameters left CommandBaseClass<TCommand> The left. right CommandBaseClass<TCommand> The right. Returns bool The result of the operator. operator >=(CommandBaseClass<TCommand>, CommandBaseClass<TCommand>) Implements the operator >=. public static bool operator >=(CommandBaseClass<TCommand> left, CommandBaseClass<TCommand> right) Parameters left CommandBaseClass<TCommand> The left. right CommandBaseClass<TCommand> The right. Returns bool The result of the operator. operator !=(CommandBaseClass<TCommand>, CommandBaseClass<TCommand>) Implements the operator !=. public static bool operator !=(CommandBaseClass<TCommand> left, CommandBaseClass<TCommand> right) Parameters left CommandBaseClass<TCommand> The left. right CommandBaseClass<TCommand> The right. Returns bool The result of the operator. operator <(CommandBaseClass<TCommand>, CommandBaseClass<TCommand>) Implements the operator <. public static bool operator <(CommandBaseClass<TCommand> left, CommandBaseClass<TCommand> right) Parameters left CommandBaseClass<TCommand> The left. right CommandBaseClass<TCommand> The right. Returns bool The result of the operator. operator <=(CommandBaseClass<TCommand>, CommandBaseClass<TCommand>) Implements the operator <=. public static bool operator <=(CommandBaseClass<TCommand> left, CommandBaseClass<TCommand> right) Parameters left CommandBaseClass<TCommand> The left. right CommandBaseClass<TCommand> The right. Returns bool The result of the operator. See Also ModelBase<TClass> ICommand"
  },
  "api/Mithril.API.Abstractions.Commands.BaseClasses.CommandHandlerBaseClass-2.html": {
    "href": "api/Mithril.API.Abstractions.Commands.BaseClasses.CommandHandlerBaseClass-2.html",
    "title": "Class CommandHandlerBaseClass<TCommand, TViewModel> | Mithril API Reference",
    "keywords": "Class CommandHandlerBaseClass<TCommand, TViewModel> Namespace Mithril.API.Abstractions.Commands.BaseClasses Assembly Mithril.API.Abstractions.dll Command handler base class public abstract class CommandHandlerBaseClass<TCommand, TViewModel> : ICommandHandler<TViewModel>, ICommandHandler where TCommand : class Type Parameters TCommand The type of the command. TViewModel The type of the view model. Inheritance object CommandHandlerBaseClass<TCommand, TViewModel> Implements ICommandHandler<TViewModel> ICommandHandler Derived SaveModelCommandHandler SendMessageCommandHandler ToggleFeatureCommandHandler CSPLogCommandHandler LogCommandHandler SetThemeCommandHandler Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods GenericExtensions.When<TObject>(TObject, bool, Func<TObject, TObject>) ExpandoObjectExtensions.ConvertToExpando(object?) Constructors CommandHandlerBaseClass(ILogger?, IFeatureManager?) Initializes a new instance of the CommandHandlerBaseClass<TCommand, TViewModel> class. protected CommandHandlerBaseClass(ILogger? logger, IFeatureManager? featureManager) Parameters logger ILogger Command handler base class featureManager IFeatureManager Command handler base class Properties CommandName Gets the command type accepted. public virtual string CommandName { get; } Property Value string The command type accepted. ContentTypeAccepts Gets the content type accepted by command handler. public virtual string[] ContentTypeAccepts { get; } Property Value string[] The content type accepted by command handler. FeatureManager Gets the feature manager. protected IFeatureManager? FeatureManager { get; } Property Value IFeatureManager The feature manager. Features Gets the features associated with this command. public virtual IFeature[] Features { get; } Property Value IFeature[] The features associated with this command. Logger Gets the logger. protected ILogger? Logger { get; } Property Value ILogger The logger. Tags Gets the tags (Used by OpenAPI, etc). public virtual string[] Tags { get; } Property Value string[] The tags (Used by OpenAPI, etc). Version Gets the version. public virtual string? Version { get; } Property Value string The version. ViewModelType Gets the type of the view model it accepts. public Type ViewModelType { get; } Property Value Type The type of the view model it accepts. Methods CanHandle(ICommand) Determines whether this instance can handle the specified command. public virtual bool CanHandle(ICommand command) Parameters command ICommand The command. Returns bool true if this instance can handle the specified command; otherwise, false. CreateAsync(TViewModel?, ClaimsPrincipal) Creates the specified value. public abstract ValueTask<CommandCreationResult?> CreateAsync(TViewModel? value, ClaimsPrincipal user) Parameters value TViewModel The value. user ClaimsPrincipal The user. Returns ValueTask<CommandCreationResult> A command value converted from the view model. HandleCommandAsync(params ICommand[]) Handles the Command. public Task<IEvent[]> HandleCommandAsync(params ICommand[] arg) Parameters arg ICommand[] The argument. Returns Task<IEvent[]> Any events that are spawned by the command. HandleCommandAsync(TCommand?[]?) Handles the command. protected abstract Task<IEvent[]> HandleCommandAsync(TCommand?[]? args) Parameters args TCommand[] The arguments. Returns Task<IEvent[]> The events generated by the command. IsFeatureEnabled() Determines whether the associated features are enabled. protected bool IsFeatureEnabled() Returns bool true if all features are enabled; otherwise, false. See Also ICommandHandler<TViewModel>"
  },
  "api/Mithril.API.Abstractions.Commands.BaseClasses.EventBaseClass-1.html": {
    "href": "api/Mithril.API.Abstractions.Commands.BaseClasses.EventBaseClass-1.html",
    "title": "Class EventBaseClass<TEvent> | Mithril API Reference",
    "keywords": "Class EventBaseClass<TEvent> Namespace Mithril.API.Abstractions.Commands.BaseClasses Assembly Mithril.API.Abstractions.dll Event base class public abstract class EventBaseClass<TEvent> : ModelBase<TEvent>, IModel<TEvent>, IEquatable<IModel<TEvent>>, IComparable, IComparable<TEvent>, IEquatable<ModelBase<TEvent>>, IEvent, IEquatable<IEvent>, IModel, IEquatable<IModel>, IEquatable<EventBaseClass<TEvent>> where TEvent : EventBaseClass<TEvent>, new() Type Parameters TEvent The type of the event. Inheritance object ModelBase<TEvent> EventBaseClass<TEvent> Implements IModel<TEvent> IEquatable<IModel<TEvent>> IComparable IComparable<TEvent> IEquatable<ModelBase<TEvent>> IEvent IEquatable<IEvent> IModel IEquatable<IModel> IEquatable<EventBaseClass<TEvent>> Derived ModelSavedEvent MessageSentEvent FeatureToggledEvent ThemeChangedEvent Inherited Members ModelBase<TEvent>.Active ModelBase<TEvent>.Creator ModelBase<TEvent>.DateCreated ModelBase<TEvent>.DateModified ModelBase<TEvent>.ID ModelBase<TEvent>.Modifier ModelBase<TEvent>.TenantID ModelBase<TEvent>.All(IDataService) ModelBase<TEvent>.AllActive(IDataService) ModelBase<TEvent>.AllInactive(IDataService) ModelBase<TEvent>.Load(long, IDataService) ModelBase<TEvent>.Query(IDataService) ModelBase<TEvent>.CanBeModifiedBy(ClaimsPrincipal) ModelBase<TEvent>.CanBeViewedBy(ClaimsPrincipal) ModelBase<TEvent>.CompareTo(object) ModelBase<TEvent>.CompareTo(TEvent) ModelBase<TEvent>.DeleteAsync(IDataService, ClaimsPrincipal, bool) ModelBase<TEvent>.Equals(IModel) ModelBase<TEvent>.Equals(IModel<TEvent>) ModelBase<TEvent>.Equals(ModelBase<TEvent>) ModelBase<TEvent>.SaveAsync(IDataService, ClaimsPrincipal) ModelBase<TEvent>.SetupObject(IDataService, ClaimsPrincipal) ModelBase<TEvent>.SetupObject(IDataService, IUser) ModelBase<TEvent>.SetupObjectAndReturn(IDataService, ClaimsPrincipal) object.Equals(object, object) object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Extension Methods GenericExtensions.When<TObject>(TObject, bool, Func<TObject, TObject>) ExpandoObjectExtensions.ConvertToExpando(object?) Constructors EventBaseClass() Initializes a new instance of the EventBaseClass<TEvent> class. protected EventBaseClass() Properties Name Gets the name. public string Name { get; } Property Value string The name. RetryCount Gets or sets the retry count. public int RetryCount { get; set; } Property Value int The retry count. State Gets or sets the state. [MaxLength(20)] public string? State { get; set; } Property Value string The state. Methods CanRun() Determines whether this instance can run. public virtual bool CanRun() Returns bool true if this instance can run; otherwise, false. CompareTo(EventBaseClass<TEvent>?) Compares the object to another object public int CompareTo(EventBaseClass<TEvent>? other) Parameters other EventBaseClass<TEvent> Object to compare to Returns int 0 if they are equal, -1 if this is smaller, 1 if it is larger Equals(EventBaseClass<TEvent>?) Indicates whether the current object is equal to another object of the same type. public bool Equals(EventBaseClass<TEvent>? other) Parameters other EventBaseClass<TEvent> An object to compare with this object. Returns bool true if the current object is equal to the other parameter; otherwise, false. Equals(IEvent?) Indicates whether the current object is equal to another object of the same type. public bool Equals(IEvent? other) Parameters other IEvent An object to compare with this object. Returns bool true if the current object is equal to the other parameter; otherwise, false. Equals(object?) Determines whether the specified object, is equal to this instance. public override bool Equals(object? obj) Parameters obj object The object to compare with this instance. Returns bool true if the specified object is equal to this instance; otherwise, false. GetData() Gets the data within the event. public abstract ExpandoObject GetData() Returns ExpandoObject The data from the event. GetHashCode() Returns a hash code for this instance. public override int GetHashCode() Returns int A hash code for this instance, suitable for use in hashing algorithms and data structures like a hash table. GetSchema() Gets the schema. public abstract string GetSchema() Returns string The data schema. ToString() Returns a string that represents this instance. public override string ToString() Returns string A string that represents this instance. Operators operator ==(EventBaseClass<TEvent>, EventBaseClass<TEvent>) Implements the operator ==. public static bool operator ==(EventBaseClass<TEvent> first, EventBaseClass<TEvent> second) Parameters first EventBaseClass<TEvent> The first. second EventBaseClass<TEvent> The second. Returns bool The result of the operator. operator >(EventBaseClass<TEvent>, EventBaseClass<TEvent>) Implements the operator >. public static bool operator >(EventBaseClass<TEvent> left, EventBaseClass<TEvent> right) Parameters left EventBaseClass<TEvent> The left. right EventBaseClass<TEvent> The right. Returns bool The result of the operator. operator >=(EventBaseClass<TEvent>, EventBaseClass<TEvent>) Implements the operator >=. public static bool operator >=(EventBaseClass<TEvent> left, EventBaseClass<TEvent> right) Parameters left EventBaseClass<TEvent> The left. right EventBaseClass<TEvent> The right. Returns bool The result of the operator. operator !=(EventBaseClass<TEvent>, EventBaseClass<TEvent>) Implements the operator !=. public static bool operator !=(EventBaseClass<TEvent> left, EventBaseClass<TEvent> right) Parameters left EventBaseClass<TEvent> The left. right EventBaseClass<TEvent> The right. Returns bool The result of the operator. operator <(EventBaseClass<TEvent>, EventBaseClass<TEvent>) Implements the operator <. public static bool operator <(EventBaseClass<TEvent> left, EventBaseClass<TEvent> right) Parameters left EventBaseClass<TEvent> The left. right EventBaseClass<TEvent> The right. Returns bool The result of the operator. operator <=(EventBaseClass<TEvent>, EventBaseClass<TEvent>) Implements the operator <=. public static bool operator <=(EventBaseClass<TEvent> left, EventBaseClass<TEvent> right) Parameters left EventBaseClass<TEvent> The left. right EventBaseClass<TEvent> The right. Returns bool The result of the operator. See Also ModelBase<TClass> IEvent"
  },
  "api/Mithril.API.Abstractions.Commands.BaseClasses.EventHandlerBaseClass-2.html": {
    "href": "api/Mithril.API.Abstractions.Commands.BaseClasses.EventHandlerBaseClass-2.html",
    "title": "Class EventHandlerBaseClass<THandler, TEvent> | Mithril API Reference",
    "keywords": "Class EventHandlerBaseClass<THandler, TEvent> Namespace Mithril.API.Abstractions.Commands.BaseClasses Assembly Mithril.API.Abstractions.dll Event handler base class public abstract class EventHandlerBaseClass<THandler, TEvent> : IEventHandler where THandler : EventHandlerBaseClass<THandler, TEvent> where TEvent : IEvent Type Parameters THandler Event handler base class TEvent Event handler base class Inheritance object EventHandlerBaseClass<THandler, TEvent> Implements IEventHandler Derived MessageSentDefaultEventHandler ThemeChangedEventDefaultHandler Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods GenericExtensions.When<TObject>(TObject, bool, Func<TObject, TObject>) ExpandoObjectExtensions.ConvertToExpando(object?) Constructors EventHandlerBaseClass(ILogger<THandler>?, IFeatureManager?) Initializes a new instance of the EventHandlerBaseClass<THandler, TEvent> class. protected EventHandlerBaseClass(ILogger<THandler>? logger, IFeatureManager? featureManager) Parameters logger ILogger<THandler> The logger. featureManager IFeatureManager The feature manager. Properties FeatureManager Gets the feature manager. protected IFeatureManager? FeatureManager { get; } Property Value IFeatureManager The feature manager. Features Gets the features associated with this command. public virtual IFeature[] Features { get; } Property Value IFeature[] The features associated with this command. Logger Gets the logger. protected ILogger<THandler>? Logger { get; } Property Value ILogger<THandler> The logger. Name Gets the name. public virtual string Name { get; } Property Value string The name. Methods Accepts(IEvent) Determines if this event handler accepts the event. public virtual bool Accepts(IEvent arg) Parameters arg IEvent The argument. Returns bool True if it accepts it, false otherwise. Handle(IEvent) Handles the event. public EventResult Handle(IEvent arg) Parameters arg IEvent The argument. Returns EventResult The result from processing the event. Handle(TEvent) Handles the specified argument. protected abstract EventResult Handle(TEvent arg) Parameters arg TEvent The argument. Returns EventResult The result from processing the event. IsFeatureEnabled() Determines whether the associated features are enabled. protected bool IsFeatureEnabled() Returns bool true if all features are enabled; otherwise, false. See Also IEventHandler"
  },
  "api/Mithril.API.Abstractions.Commands.BaseClasses.html": {
    "href": "api/Mithril.API.Abstractions.Commands.BaseClasses.html",
    "title": "Namespace Mithril.API.Abstractions.Commands.BaseClasses | Mithril API Reference",
    "keywords": "Namespace Mithril.API.Abstractions.Commands.BaseClasses Classes CommandBaseClass<TCommand> Command base class CommandHandlerBaseClass<TCommand, TViewModel> Command handler base class EventBaseClass<TEvent> Event base class EventHandlerBaseClass<THandler, TEvent> Event handler base class"
  },
  "api/Mithril.API.Abstractions.Commands.CommandCreationResult.html": {
    "href": "api/Mithril.API.Abstractions.Commands.CommandCreationResult.html",
    "title": "Class CommandCreationResult | Mithril API Reference",
    "keywords": "Class CommandCreationResult Namespace Mithril.API.Abstractions.Commands Assembly Mithril.API.Abstractions.dll Command creation result. public record CommandCreationResult : GenericResult, IEquatable<GenericResult>, IEquatable<CommandCreationResult> Inheritance object GenericResult CommandCreationResult Implements IEquatable<GenericResult> IEquatable<CommandCreationResult> Inherited Members GenericResult.Message GenericResult.Exception GenericResult.IsErrorState object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods GenericExtensions.When<TObject>(TObject, bool, Func<TObject, TObject>) ExpandoObjectExtensions.ConvertToExpando(object?) Constructors CommandCreationResult(ICommand?, Exception?, string?, int) Command creation result. public CommandCreationResult(ICommand? Command, Exception? Exception = null, string? ResultText = \"Success\", int ReturnCode = 200) Parameters Command ICommand Command creation result. Exception Exception Command creation result. ResultText string Command creation result. ReturnCode int Command creation result. See Also IEquatable<T> Properties Command public ICommand? Command { get; init; } Property Value ICommand Command creation result. ResultText public string? ResultText { get; init; } Property Value string Command creation result. ReturnCode public int ReturnCode { get; init; } Property Value int Command creation result. See Also IEquatable<T>"
  },
  "api/Mithril.API.Abstractions.Commands.Enums.EventStateTypes.html": {
    "href": "api/Mithril.API.Abstractions.Commands.Enums.EventStateTypes.html",
    "title": "Class EventStateTypes | Mithril API Reference",
    "keywords": "Class EventStateTypes Namespace Mithril.API.Abstractions.Commands.Enums Assembly Mithril.API.Abstractions.dll Event state types public class EventStateTypes : LookUpEnumBaseClass<EventStateTypes> Inheritance object StringEnumBaseClass<EventStateTypes> LookUpEnumBaseClass<EventStateTypes> EventStateTypes Inherited Members LookUpEnumBaseClass<EventStateTypes>.Icon LookUpEnumBaseClass<EventStateTypes>.NameMapping LookUpEnumBaseClass<EventStateTypes>.GetEnum(string) LookUpEnumBaseClass<EventStateTypes>.GetEnums() StringEnumBaseClass<EventStateTypes>.ToStringEnumBaseClass(string) StringEnumBaseClass<EventStateTypes>.ToString() StringEnumBaseClass<EventStateTypes>.Name object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Extension Methods GenericExtensions.When<TObject>(TObject, bool, Func<TObject, TObject>) ExpandoObjectExtensions.ConvertToExpando(object?) Remarks Initializes a new instance of the UserClaimTypes class. Constructors EventStateTypes() Initializes a new instance of the UserClaimTypes class. public EventStateTypes() EventStateTypes(string) Event state types public EventStateTypes(string name) Parameters name string The name. Remarks Initializes a new instance of the UserClaimTypes class. See Also StringEnumBaseClass<TClass> Properties Completed Gets the completed. public static EventStateTypes Completed { get; } Property Value EventStateTypes The completed. Created Gets the created state. public static EventStateTypes Created { get; } Property Value EventStateTypes The created state. Error Gets the error state. public static EventStateTypes Error { get; } Property Value EventStateTypes The error state. Retrying Gets the retrying state. public static EventStateTypes Retrying { get; } Property Value EventStateTypes The retrying state. See Also StringEnumBaseClass<TClass>"
  },
  "api/Mithril.API.Abstractions.Commands.Enums.html": {
    "href": "api/Mithril.API.Abstractions.Commands.Enums.html",
    "title": "Namespace Mithril.API.Abstractions.Commands.Enums | Mithril API Reference",
    "keywords": "Namespace Mithril.API.Abstractions.Commands.Enums Classes EventStateTypes Event state types"
  },
  "api/Mithril.API.Abstractions.Commands.EventResult.html": {
    "href": "api/Mithril.API.Abstractions.Commands.EventResult.html",
    "title": "Class EventResult | Mithril API Reference",
    "keywords": "Class EventResult Namespace Mithril.API.Abstractions.Commands Assembly Mithril.API.Abstractions.dll Event result public record EventResult : GenericResult, IEquatable<GenericResult>, IEquatable<EventResult> Inheritance object GenericResult EventResult Implements IEquatable<GenericResult> IEquatable<EventResult> Inherited Members GenericResult.Message GenericResult.Exception object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods GenericExtensions.When<TObject>(TObject, bool, Func<TObject, TObject>) ExpandoObjectExtensions.ConvertToExpando(object?) Constructors EventResult(IEvent?, EventStateTypes, IEventHandler, Exception?) Event result public EventResult(IEvent? Event, EventStateTypes NewState, IEventHandler EventHandler, Exception? Exception = null) Parameters Event IEvent Event result NewState EventStateTypes Event result EventHandler IEventHandler Event result Exception Exception Event result See Also IEquatable<T> Properties Event public IEvent? Event { get; init; } Property Value IEvent Event result EventHandler public IEventHandler EventHandler { get; init; } Property Value IEventHandler Event result IsErrorState Gets a value indicating whether this instance is error state. public override bool IsErrorState { get; } Property Value bool true if this instance is error state; otherwise, false. NewState public EventStateTypes NewState { get; init; } Property Value EventStateTypes Event result See Also IEquatable<T>"
  },
  "api/Mithril.API.Abstractions.Commands.Interfaces.ICommand.html": {
    "href": "api/Mithril.API.Abstractions.Commands.Interfaces.ICommand.html",
    "title": "Interface ICommand | Mithril API Reference",
    "keywords": "Interface ICommand Namespace Mithril.API.Abstractions.Commands.Interfaces Assembly Mithril.API.Abstractions.dll Command interface public interface ICommand : IEquatable<ICommand>, IModel, IEquatable<IModel> Inherited Members IEquatable<ICommand>.Equals(ICommand) IModel.Active IModel.Creator IModel.DateCreated IModel.DateModified IModel.ID IModel.Modifier IModel.TenantID IModel.CanBeModifiedBy(ClaimsPrincipal) IModel.CanBeViewedBy(ClaimsPrincipal) IModel.DeleteAsync(IDataService, ClaimsPrincipal, bool) IModel.SaveAsync(IDataService, ClaimsPrincipal) IModel.SetupObject(IDataService, ClaimsPrincipal) IModel.SetupObject(IDataService, IUser) IEquatable<IModel>.Equals(IModel) Extension Methods GenericExtensions.When<TObject>(TObject, bool, Func<TObject, TObject>) ExpandoObjectExtensions.ConvertToExpando(object?)"
  },
  "api/Mithril.API.Abstractions.Commands.Interfaces.ICommandHandler-1.html": {
    "href": "api/Mithril.API.Abstractions.Commands.Interfaces.ICommandHandler-1.html",
    "title": "Interface ICommandHandler<TViewModel> | Mithril API Reference",
    "keywords": "Interface ICommandHandler<TViewModel> Namespace Mithril.API.Abstractions.Commands.Interfaces Assembly Mithril.API.Abstractions.dll Command handler interface public interface ICommandHandler<TViewModel> : ICommandHandler Type Parameters TViewModel The type of the view model. Inherited Members ICommandHandler.CommandName ICommandHandler.ContentTypeAccepts ICommandHandler.Features ICommandHandler.Tags ICommandHandler.Version ICommandHandler.ViewModelType ICommandHandler.CanHandle(ICommand) ICommandHandler.HandleCommandAsync(params ICommand[]) Extension Methods GenericExtensions.When<TObject>(TObject, bool, Func<TObject, TObject>) ExpandoObjectExtensions.ConvertToExpando(object?) Methods CreateAsync(TViewModel?, ClaimsPrincipal) Creates the specified value. ValueTask<CommandCreationResult?> CreateAsync(TViewModel? value, ClaimsPrincipal user) Parameters value TViewModel The value. user ClaimsPrincipal The user. Returns ValueTask<CommandCreationResult> A command value converted from the view model."
  },
  "api/Mithril.API.Abstractions.Commands.Interfaces.ICommandHandler.html": {
    "href": "api/Mithril.API.Abstractions.Commands.Interfaces.ICommandHandler.html",
    "title": "Interface ICommandHandler | Mithril API Reference",
    "keywords": "Interface ICommandHandler Namespace Mithril.API.Abstractions.Commands.Interfaces Assembly Mithril.API.Abstractions.dll Command handler interface public interface ICommandHandler Extension Methods GenericExtensions.When<TObject>(TObject, bool, Func<TObject, TObject>) ExpandoObjectExtensions.ConvertToExpando(object?) Properties CommandName Gets the command type accepted. string CommandName { get; } Property Value string The command type accepted. ContentTypeAccepts Gets the content type accepted by command handler. string[] ContentTypeAccepts { get; } Property Value string[] The content type accepted by command handler. Features Gets the features associated with this command. IFeature[] Features { get; } Property Value IFeature[] The features associated with this command. Tags Gets the tags (Used by OpenAPI, etc). string[] Tags { get; } Property Value string[] The tags (Used by OpenAPI, etc). Version Gets the version (not guaranteed to be used in all query providers, but defaults to \"v1\"). string? Version { get; } Property Value string The version. ViewModelType Gets the type of the view model it accepts. Type ViewModelType { get; } Property Value Type The type of the view model it accepts. Methods CanHandle(ICommand) Determines whether this instance can handle the specified command. bool CanHandle(ICommand command) Parameters command ICommand The command. Returns bool true if this instance can handle the specified command; otherwise, false. HandleCommandAsync(params ICommand[]) Handles the Command. Task<IEvent[]> HandleCommandAsync(params ICommand[] arg) Parameters arg ICommand[] The argument. Returns Task<IEvent[]> Any events that are spawned by the command."
  },
  "api/Mithril.API.Abstractions.Commands.Interfaces.IEvent.html": {
    "href": "api/Mithril.API.Abstractions.Commands.Interfaces.IEvent.html",
    "title": "Interface IEvent | Mithril API Reference",
    "keywords": "Interface IEvent Namespace Mithril.API.Abstractions.Commands.Interfaces Assembly Mithril.API.Abstractions.dll Event interface public interface IEvent : IEquatable<IEvent>, IModel, IEquatable<IModel> Inherited Members IEquatable<IEvent>.Equals(IEvent) IModel.Active IModel.Creator IModel.DateCreated IModel.DateModified IModel.ID IModel.Modifier IModel.TenantID IModel.CanBeModifiedBy(ClaimsPrincipal) IModel.CanBeViewedBy(ClaimsPrincipal) IModel.DeleteAsync(IDataService, ClaimsPrincipal, bool) IModel.SaveAsync(IDataService, ClaimsPrincipal) IModel.SetupObject(IDataService, ClaimsPrincipal) IModel.SetupObject(IDataService, IUser) IEquatable<IModel>.Equals(IModel) Extension Methods GenericExtensions.When<TObject>(TObject, bool, Func<TObject, TObject>) ExpandoObjectExtensions.ConvertToExpando(object?) Properties Name Gets the name. string Name { get; } Property Value string The name. RetryCount Gets or sets the retry count. int RetryCount { get; set; } Property Value int The retry count. State Gets or sets the state. [MaxLength(20)] string? State { get; set; } Property Value string The state. Methods CanRun() Determines whether this instance can run. bool CanRun() Returns bool true if this instance can run; otherwise, false. GetData() Gets the data within the event. ExpandoObject GetData() Returns ExpandoObject The data from the event. GetSchema() Gets the schema. string GetSchema() Returns string The data schema. See Also IModel"
  },
  "api/Mithril.API.Abstractions.Commands.Interfaces.IEventHandler.html": {
    "href": "api/Mithril.API.Abstractions.Commands.Interfaces.IEventHandler.html",
    "title": "Interface IEventHandler | Mithril API Reference",
    "keywords": "Interface IEventHandler Namespace Mithril.API.Abstractions.Commands.Interfaces Assembly Mithril.API.Abstractions.dll Event handler interface public interface IEventHandler Extension Methods GenericExtensions.When<TObject>(TObject, bool, Func<TObject, TObject>) ExpandoObjectExtensions.ConvertToExpando(object?) Properties Features Gets the features associated with this command. IFeature[] Features { get; } Property Value IFeature[] The features associated with this command. Name Gets the name. string Name { get; } Property Value string The name. Methods Accepts(IEvent) Determines if this event handler accepts the event. bool Accepts(IEvent arg) Parameters arg IEvent The argument. Returns bool True if it accepts it, false otherwise. Handle(IEvent) Handles the event. EventResult Handle(IEvent arg) Parameters arg IEvent The argument. Returns EventResult The result from processing the event."
  },
  "api/Mithril.API.Abstractions.Commands.Interfaces.html": {
    "href": "api/Mithril.API.Abstractions.Commands.Interfaces.html",
    "title": "Namespace Mithril.API.Abstractions.Commands.Interfaces | Mithril API Reference",
    "keywords": "Namespace Mithril.API.Abstractions.Commands.Interfaces Interfaces ICommand Command interface ICommandHandler Command handler interface ICommandHandler<TViewModel> Command handler interface IEvent Event interface IEventHandler Event handler interface"
  },
  "api/Mithril.API.Abstractions.Commands.Mappings.ICommandMapping.html": {
    "href": "api/Mithril.API.Abstractions.Commands.Mappings.ICommandMapping.html",
    "title": "Class ICommandMapping | Mithril API Reference",
    "keywords": "Class ICommandMapping Namespace Mithril.API.Abstractions.Commands.Mappings Assembly Mithril.API.Abstractions.dll Command mapping public class ICommandMapping : MappingBaseClass<ICommand, DefaultDatabase>, IMapping<ICommand>, IMapping Inheritance object MappingBaseClass<ICommand, DefaultDatabase> ICommandMapping Implements IMapping<ICommand> IMapping Inherited Members MappingBaseClass<ICommand, DefaultDatabase>.AddAutoKey() MappingBaseClass<ICommand, DefaultDatabase>.ContainsProperty(string) MappingBaseClass<ICommand, DefaultDatabase>.Copy(IMapping) MappingBaseClass<ICommand, DefaultDatabase>.CopyProperty(IIDProperty) MappingBaseClass<ICommand, DefaultDatabase>.CopyProperty(IProperty) MappingBaseClass<ICommand, DefaultDatabase>.CopyProperty(IMapProperty) MappingBaseClass<ICommand, DefaultDatabase>.CopyProperty(IManyToOneProperty) MappingBaseClass<ICommand, DefaultDatabase>.CopyProperty(IManyToManyProperty) MappingBaseClass<ICommand, DefaultDatabase>.Equals(object) MappingBaseClass<ICommand, DefaultDatabase>.GetColumnName(string) MappingBaseClass<ICommand, DefaultDatabase>.GetHashCode() MappingBaseClass<ICommand, DefaultDatabase>.ID<TDataType>(Expression<Func<ICommand, TDataType>>) MappingBaseClass<ICommand, DefaultDatabase>.ManyToMany<TDataType>(Expression<Func<ICommand, IList<TDataType>>>) MappingBaseClass<ICommand, DefaultDatabase>.ManyToOne<TDataType>(Expression<Func<ICommand, IList<TDataType>>>) MappingBaseClass<ICommand, DefaultDatabase>.ManyToOne<TDataType>(Expression<Func<ICommand, TDataType>>) MappingBaseClass<ICommand, DefaultDatabase>.Map<TDataType>(Expression<Func<ICommand, TDataType>>) MappingBaseClass<ICommand, DefaultDatabase>.Reduce(ILogger) MappingBaseClass<ICommand, DefaultDatabase>.Reduce(IMapping, ILogger) MappingBaseClass<ICommand, DefaultDatabase>.Reference<TDataType>(Expression<Func<ICommand, TDataType>>) MappingBaseClass<ICommand, DefaultDatabase>.SetQuery(QueryType, string, CommandType, params IParameter[]) MappingBaseClass<ICommand, DefaultDatabase>.Setup() MappingBaseClass<ICommand, DefaultDatabase>.ToString() MappingBaseClass<ICommand, DefaultDatabase>.AutoIDProperties MappingBaseClass<ICommand, DefaultDatabase>.DatabaseConfigType MappingBaseClass<ICommand, DefaultDatabase>.IDProperties MappingBaseClass<ICommand, DefaultDatabase>.ManyToManyProperties MappingBaseClass<ICommand, DefaultDatabase>.ManyToOneProperties MappingBaseClass<ICommand, DefaultDatabase>.MapProperties MappingBaseClass<ICommand, DefaultDatabase>.Merge MappingBaseClass<ICommand, DefaultDatabase>.ObjectType MappingBaseClass<ICommand, DefaultDatabase>.Order MappingBaseClass<ICommand, DefaultDatabase>.Prefix MappingBaseClass<ICommand, DefaultDatabase>.Queries MappingBaseClass<ICommand, DefaultDatabase>.ReferenceProperties MappingBaseClass<ICommand, DefaultDatabase>.SchemaName MappingBaseClass<ICommand, DefaultDatabase>.Suffix MappingBaseClass<ICommand, DefaultDatabase>.TableName object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods GenericExtensions.When<TObject>(TObject, bool, Func<TObject, TObject>) ExpandoObjectExtensions.ConvertToExpando(object?) Constructors ICommandMapping() Initializes a new instance of the ICommandMapping class. public ICommandMapping() See Also MappingBaseClass<TClassType, TDatabaseType>"
  },
  "api/Mithril.API.Abstractions.Commands.Mappings.IEventMapping.html": {
    "href": "api/Mithril.API.Abstractions.Commands.Mappings.IEventMapping.html",
    "title": "Class IEventMapping | Mithril API Reference",
    "keywords": "Class IEventMapping Namespace Mithril.API.Abstractions.Commands.Mappings Assembly Mithril.API.Abstractions.dll Event mapping public class IEventMapping : MappingBaseClass<IEvent, DefaultDatabase>, IMapping<IEvent>, IMapping Inheritance object MappingBaseClass<IEvent, DefaultDatabase> IEventMapping Implements IMapping<IEvent> IMapping Inherited Members MappingBaseClass<IEvent, DefaultDatabase>.AddAutoKey() MappingBaseClass<IEvent, DefaultDatabase>.ContainsProperty(string) MappingBaseClass<IEvent, DefaultDatabase>.Copy(IMapping) MappingBaseClass<IEvent, DefaultDatabase>.CopyProperty(IIDProperty) MappingBaseClass<IEvent, DefaultDatabase>.CopyProperty(IProperty) MappingBaseClass<IEvent, DefaultDatabase>.CopyProperty(IMapProperty) MappingBaseClass<IEvent, DefaultDatabase>.CopyProperty(IManyToOneProperty) MappingBaseClass<IEvent, DefaultDatabase>.CopyProperty(IManyToManyProperty) MappingBaseClass<IEvent, DefaultDatabase>.Equals(object) MappingBaseClass<IEvent, DefaultDatabase>.GetColumnName(string) MappingBaseClass<IEvent, DefaultDatabase>.GetHashCode() MappingBaseClass<IEvent, DefaultDatabase>.ID<TDataType>(Expression<Func<IEvent, TDataType>>) MappingBaseClass<IEvent, DefaultDatabase>.ManyToMany<TDataType>(Expression<Func<IEvent, IList<TDataType>>>) MappingBaseClass<IEvent, DefaultDatabase>.ManyToOne<TDataType>(Expression<Func<IEvent, IList<TDataType>>>) MappingBaseClass<IEvent, DefaultDatabase>.ManyToOne<TDataType>(Expression<Func<IEvent, TDataType>>) MappingBaseClass<IEvent, DefaultDatabase>.Map<TDataType>(Expression<Func<IEvent, TDataType>>) MappingBaseClass<IEvent, DefaultDatabase>.Reduce(ILogger) MappingBaseClass<IEvent, DefaultDatabase>.Reduce(IMapping, ILogger) MappingBaseClass<IEvent, DefaultDatabase>.Reference<TDataType>(Expression<Func<IEvent, TDataType>>) MappingBaseClass<IEvent, DefaultDatabase>.SetQuery(QueryType, string, CommandType, params IParameter[]) MappingBaseClass<IEvent, DefaultDatabase>.Setup() MappingBaseClass<IEvent, DefaultDatabase>.ToString() MappingBaseClass<IEvent, DefaultDatabase>.AutoIDProperties MappingBaseClass<IEvent, DefaultDatabase>.DatabaseConfigType MappingBaseClass<IEvent, DefaultDatabase>.IDProperties MappingBaseClass<IEvent, DefaultDatabase>.ManyToManyProperties MappingBaseClass<IEvent, DefaultDatabase>.ManyToOneProperties MappingBaseClass<IEvent, DefaultDatabase>.MapProperties MappingBaseClass<IEvent, DefaultDatabase>.Merge MappingBaseClass<IEvent, DefaultDatabase>.ObjectType MappingBaseClass<IEvent, DefaultDatabase>.Order MappingBaseClass<IEvent, DefaultDatabase>.Prefix MappingBaseClass<IEvent, DefaultDatabase>.Queries MappingBaseClass<IEvent, DefaultDatabase>.ReferenceProperties MappingBaseClass<IEvent, DefaultDatabase>.SchemaName MappingBaseClass<IEvent, DefaultDatabase>.Suffix MappingBaseClass<IEvent, DefaultDatabase>.TableName object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods GenericExtensions.When<TObject>(TObject, bool, Func<TObject, TObject>) ExpandoObjectExtensions.ConvertToExpando(object?) Constructors IEventMapping() Initializes a new instance of the IEventMapping class. public IEventMapping() See Also MappingBaseClass<TClassType, TDatabaseType>"
  },
  "api/Mithril.API.Abstractions.Commands.Mappings.html": {
    "href": "api/Mithril.API.Abstractions.Commands.Mappings.html",
    "title": "Namespace Mithril.API.Abstractions.Commands.Mappings | Mithril API Reference",
    "keywords": "Namespace Mithril.API.Abstractions.Commands.Mappings Classes ICommandMapping Command mapping IEventMapping Event mapping"
  },
  "api/Mithril.API.Abstractions.Commands.html": {
    "href": "api/Mithril.API.Abstractions.Commands.html",
    "title": "Namespace Mithril.API.Abstractions.Commands | Mithril API Reference",
    "keywords": "Namespace Mithril.API.Abstractions.Commands Classes CommandCreationResult Command creation result. EventResult Event result"
  },
  "api/Mithril.API.Abstractions.Configuration.APIOptions.html": {
    "href": "api/Mithril.API.Abstractions.Configuration.APIOptions.html",
    "title": "Class APIOptions | Mithril API Reference",
    "keywords": "Class APIOptions Namespace Mithril.API.Abstractions.Configuration Assembly Mithril.API.Abstractions.dll API configuration information public class APIOptions Inheritance object APIOptions Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods GenericExtensions.When<TObject>(TObject, bool, Func<TObject, TObject>) ExpandoObjectExtensions.ConvertToExpando(object?) Properties AllowAnonymous Gets or sets the allow anonymous users access (defaults to false). public bool? AllowAnonymous { get; set; } Property Value bool? The allow anonymous users access. AuthorizationPolicy Gets or sets the authorization policy (if empty then just Authorize called). public string? AuthorizationPolicy { get; set; } Property Value string The authorization policy. CommandBatchSize Gets or sets the size of the command batch. public int? CommandBatchSize { get; set; } Property Value int? The size of the command batch. CommandEndpoint Gets or sets the command endpoint. public string? CommandEndpoint { get; set; } Property Value string The command endpoint. CommandRunFrequency Gets or sets the command run frequency (in seconds). If set to 0, then command processing will not run. public int? CommandRunFrequency { get; set; } Property Value int? The command run frequency (in seconds). EventBatchSize Gets or sets the size of the event batch. public int? EventBatchSize { get; set; } Property Value int? The size of the event batch. EventRunFrequency Gets or sets the event run frequency (in seconds). If set to 0, then event processing will not run. public int? EventRunFrequency { get; set; } Property Value int? The event run frequency (in seconds). MaxCommandProcessTime Gets or sets the maximum command processing time (in ms). public int? MaxCommandProcessTime { get; set; } Property Value int? The maximum command processing time (in ms). MaxEventProcessTime Gets or sets the maximum event processing time (in ms). public int? MaxEventProcessTime { get; set; } Property Value int? The maximum event processing time (in ms). OpenAPIEndpoint Gets or sets the open API endpoint. public string? OpenAPIEndpoint { get; set; } Property Value string The open API endpoint. QueryEndpoint Gets or sets the query endpoint. public string? QueryEndpoint { get; set; } Property Value string The query endpoint."
  },
  "api/Mithril.API.Abstractions.Configuration.html": {
    "href": "api/Mithril.API.Abstractions.Configuration.html",
    "title": "Namespace Mithril.API.Abstractions.Configuration | Mithril API Reference",
    "keywords": "Namespace Mithril.API.Abstractions.Configuration Classes APIOptions API configuration information"
  },
  "api/Mithril.API.Abstractions.ExtensionMethods.StringExtensions.html": {
    "href": "api/Mithril.API.Abstractions.ExtensionMethods.StringExtensions.html",
    "title": "Class StringExtensions | Mithril API Reference",
    "keywords": "Class StringExtensions Namespace Mithril.API.Abstractions.ExtensionMethods Assembly Mithril.API.Abstractions.dll String extensions public static class StringExtensions Inheritance object StringExtensions Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Methods SplitCamelCase(string?) Splits the camel case. public static string SplitCamelCase(this string? input) Parameters input string The input. Returns string The split camel case string"
  },
  "api/Mithril.API.Abstractions.ExtensionMethods.html": {
    "href": "api/Mithril.API.Abstractions.ExtensionMethods.html",
    "title": "Namespace Mithril.API.Abstractions.ExtensionMethods | Mithril API Reference",
    "keywords": "Namespace Mithril.API.Abstractions.ExtensionMethods Classes StringExtensions String extensions"
  },
  "api/Mithril.API.Abstractions.Modules.APIModule.html": {
    "href": "api/Mithril.API.Abstractions.Modules.APIModule.html",
    "title": "Class APIModule | Mithril API Reference",
    "keywords": "Class APIModule Namespace Mithril.API.Abstractions.Modules Assembly Mithril.API.Abstractions.dll API Module to register config information. public class APIModule : ModuleBaseClass<APIModule>, IEquatable<APIModule>, IModule Inheritance object ModuleBaseClass<APIModule> APIModule Implements IEquatable<APIModule> IModule Inherited Members ModuleBaseClass<APIModule>.Category ModuleBaseClass<APIModule>.ContentPath ModuleBaseClass<APIModule>.Features ModuleBaseClass<APIModule>.ID ModuleBaseClass<APIModule>.LastModified ModuleBaseClass<APIModule>.Name ModuleBaseClass<APIModule>.Order ModuleBaseClass<APIModule>.Tags ModuleBaseClass<APIModule>.Version ModuleBaseClass<APIModule>.ConfigureApplication(IApplicationBuilder, IConfiguration, IHostEnvironment) ModuleBaseClass<APIModule>.ConfigureHostSettings(IHostBuilder, IConfiguration, IHostEnvironment) ModuleBaseClass<APIModule>.ConfigureLoggingSettings(ILoggingBuilder, IConfiguration, IHostEnvironment) ModuleBaseClass<APIModule>.ConfigureMVC(IMvcBuilder, IConfiguration, IHostEnvironment) ModuleBaseClass<APIModule>.ConfigureRoutes(IEndpointRouteBuilder, IConfiguration, IHostEnvironment) ModuleBaseClass<APIModule>.ConfigureWebHostSettings(IWebHostBuilder, IConfiguration, IHostEnvironment) ModuleBaseClass<APIModule>.Equals(object) ModuleBaseClass<APIModule>.Equals(APIModule) ModuleBaseClass<APIModule>.GetHashCode() ModuleBaseClass<APIModule>.InitializeDataAsync(IDataService, IServiceProvider) ModuleBaseClass<APIModule>.OnStarted() ModuleBaseClass<APIModule>.OnStopped() ModuleBaseClass<APIModule>.OnStopping() object.Equals(object, object) object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods GenericExtensions.When<TObject>(TObject, bool, Func<TObject, TObject>) ExpandoObjectExtensions.ConvertToExpando(object?) Methods ConfigureServices(IServiceCollection?, IConfiguration?, IHostEnvironment?) Configures the services for the module. public override IServiceCollection? ConfigureServices(IServiceCollection? services, IConfiguration? configuration, IHostEnvironment? environment) Parameters services IServiceCollection The services collection. configuration IConfiguration The configuration. environment IHostEnvironment The environment. Returns IServiceCollection Services See Also ModuleBaseClass<TModule>"
  },
  "api/Mithril.API.Abstractions.Modules.html": {
    "href": "api/Mithril.API.Abstractions.Modules.html",
    "title": "Namespace Mithril.API.Abstractions.Modules | Mithril API Reference",
    "keywords": "Namespace Mithril.API.Abstractions.Modules Classes APIModule API Module to register config information."
  },
  "api/Mithril.API.Abstractions.Query.Argument-1.html": {
    "href": "api/Mithril.API.Abstractions.Query.Argument-1.html",
    "title": "Class Argument<TValue> | Mithril API Reference",
    "keywords": "Class Argument<TValue> Namespace Mithril.API.Abstractions.Query Assembly Mithril.API.Abstractions.dll Argument that the query accepts public class Argument<TValue> : IArgument Type Parameters TValue The type of the value expected. Inheritance object Argument<TValue> Implements IArgument Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Extension Methods GenericExtensions.When<TObject>(TObject, bool, Func<TObject, TObject>) IArgumentExtensions.CreateArgument(IArgument) ExpandoObjectExtensions.ConvertToExpando(object?) Properties ArgumentType Gets the type of the argument. public Type ArgumentType { get; } Property Value Type The type of the argument. DefaultValue Gets or sets the default value. public object? DefaultValue { get; set; } Property Value object The default value. Description Gets or sets the description. public string? Description { get; set; } Property Value string The description. Name Gets or sets the name. public string? Name { get; set; } Property Value string The name. Methods ToString() Converts to string. public override string ToString() Returns string A string that represents this instance. See Also IArgument"
  },
  "api/Mithril.API.Abstractions.Query.Arguments.html": {
    "href": "api/Mithril.API.Abstractions.Query.Arguments.html",
    "title": "Class Arguments | Mithril API Reference",
    "keywords": "Class Arguments Namespace Mithril.API.Abstractions.Query Assembly Mithril.API.Abstractions.dll Arguments public class Arguments : Dictionary<string, object?>, IDictionary<string, object?>, ICollection<KeyValuePair<string, object?>>, IReadOnlyDictionary<string, object?>, IReadOnlyCollection<KeyValuePair<string, object?>>, IEnumerable<KeyValuePair<string, object?>>, IDictionary, ICollection, IEnumerable, IDeserializationCallback, ISerializable Inheritance object Dictionary<string, object> Arguments Implements IDictionary<string, object> ICollection<KeyValuePair<string, object>> IReadOnlyDictionary<string, object> IReadOnlyCollection<KeyValuePair<string, object>> IEnumerable<KeyValuePair<string, object>> IDictionary ICollection IEnumerable IDeserializationCallback ISerializable Inherited Members Dictionary<string, object>.Add(string, object) Dictionary<string, object>.Clear() Dictionary<string, object>.ContainsKey(string) Dictionary<string, object>.ContainsValue(object) Dictionary<string, object>.EnsureCapacity(int) Dictionary<string, object>.GetEnumerator() Dictionary<string, object>.OnDeserialization(object) Dictionary<string, object>.Remove(string) Dictionary<string, object>.Remove(string, out object) Dictionary<string, object>.TrimExcess() Dictionary<string, object>.TrimExcess(int) Dictionary<string, object>.TryAdd(string, object) Dictionary<string, object>.TryGetValue(string, out object) Dictionary<string, object>.Comparer Dictionary<string, object>.Count Dictionary<string, object>.this[string] Dictionary<string, object>.Keys Dictionary<string, object>.Values object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods GenericExtensions.When<TObject>(TObject, bool, Func<TObject, TObject>) ExpandoObjectExtensions.ConvertToExpando(IDictionary<string, object?>?) ExpandoObjectExtensions.ConvertToExpando(object?) Constructors Arguments() Initializes a new instance of the Arguments class. public Arguments() Methods GetValue<TValue>(string?) Gets the value. public TValue? GetValue<TValue>(string? key) Parameters key string The key. Returns TValue The value specified. Type Parameters TValue The type of the value. TryGetValue<TValue>(string?, out TValue?) Tries to get the value. public bool TryGetValue<TValue>(string? key, out TValue? value) Parameters key string The key. value TValue The value. Returns bool True if it is found, false otherwise. Type Parameters TValue The type of the value."
  },
  "api/Mithril.API.Abstractions.Query.BaseClasses.DropDownBaseClass-1.html": {
    "href": "api/Mithril.API.Abstractions.Query.BaseClasses.DropDownBaseClass-1.html",
    "title": "Class DropDownBaseClass<TModel> | Mithril API Reference",
    "keywords": "Class DropDownBaseClass<TModel> Namespace Mithril.API.Abstractions.Query.BaseClasses Assembly Mithril.API.Abstractions.dll Model query base class public abstract class DropDownBaseClass<TModel> : IDropDownQuery where TModel : class, IModel Type Parameters TModel The type of the model. Inheritance object DropDownBaseClass<TModel> Implements IDropDownQuery Derived LookUpDropDown LookUpTypeDropDown UserClaimDropDown UserDropDown RouteDropDown TenantDropDown ThemeList Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods GenericExtensions.When<TObject>(TObject, bool, Func<TObject, TObject>) ExpandoObjectExtensions.ConvertToExpando(object?) Constructors DropDownBaseClass() Initializes a new instance of the DropDownBaseClass class. protected DropDownBaseClass() Properties Name Gets the name. public virtual string Name { get; } Property Value string The name. Methods CanRun(string?, ClaimsPrincipal?) Determines whether this instance can run the specified data type. public virtual bool CanRun(string? dataType, ClaimsPrincipal? user) Parameters dataType string Type of the data. user ClaimsPrincipal The user. Returns bool true if this instance can run the specified data type; otherwise, false. FilterQuery(IQueryable<TModel>, string) Filters the query. protected abstract IQueryable<TModel> FilterQuery(IQueryable<TModel> query, string value) Parameters query IQueryable<TModel> The query. value string The value. Returns IQueryable<TModel> The filtered query GetDataAsync(IDataService?, string?) Gets the data. public Task<IEnumerable<DropDownVM<long>>?> GetDataAsync(IDataService? dataService, string? filter) Parameters dataService IDataService The data service. filter string The filter. Returns Task<IEnumerable<DropDownVM<long>>> The drop down data. GetKey(TModel) Gets the key for the dropdown. protected virtual long GetKey(TModel model) Parameters model TModel The model. Returns long The key. GetValues(IDataService?, string?, int) Gets all values that start with the value sent in. public IEnumerable<TModel> GetValues(IDataService? dataService, string? value, int count = -1) Parameters dataService IDataService The data service. value string The value. count int The count. Returns IEnumerable<TModel> The values"
  },
  "api/Mithril.API.Abstractions.Query.BaseClasses.DropDownBaseClass.html": {
    "href": "api/Mithril.API.Abstractions.Query.BaseClasses.DropDownBaseClass.html",
    "title": "Class DropDownBaseClass | Mithril API Reference",
    "keywords": "Class DropDownBaseClass Namespace Mithril.API.Abstractions.Query.BaseClasses Assembly Mithril.API.Abstractions.dll Drop down base class public abstract class DropDownBaseClass : IDropDownQuery Inheritance object DropDownBaseClass Implements IDropDownQuery Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods GenericExtensions.When<TObject>(TObject, bool, Func<TObject, TObject>) ExpandoObjectExtensions.ConvertToExpando(object?) Constructors DropDownBaseClass(SQLHelper) Initializes a new instance of the DropDownBaseClass class. protected DropDownBaseClass(SQLHelper helper) Parameters helper SQLHelper The helper. Properties Helper Gets the helper. protected SQLHelper Helper { get; } Property Value SQLHelper The helper. Name Gets the name. public abstract string Name { get; } Property Value string The name. Methods CanRun(string?, ClaimsPrincipal?) Determines whether this instance can run the specified data type. public virtual bool CanRun(string? dataType, ClaimsPrincipal? user) Parameters dataType string Type of the data. user ClaimsPrincipal The user. Returns bool true if this instance can run the specified data type; otherwise, false. GetDataAsync(IDataService?, string?) Gets the data. public abstract Task<IEnumerable<DropDownVM<long>>?> GetDataAsync(IDataService? dataService, string? filter) Parameters dataService IDataService The data service. filter string The filter. Returns Task<IEnumerable<DropDownVM<long>>> The drop down data. See Also IDropDownQuery"
  },
  "api/Mithril.API.Abstractions.Query.BaseClasses.QueryBaseClass-1.html": {
    "href": "api/Mithril.API.Abstractions.Query.BaseClasses.QueryBaseClass-1.html",
    "title": "Class QueryBaseClass<TClass> | Mithril API Reference",
    "keywords": "Class QueryBaseClass<TClass> Namespace Mithril.API.Abstractions.Query.BaseClasses Assembly Mithril.API.Abstractions.dll Query base class public abstract class QueryBaseClass<TClass> : IQuery<TClass>, IQuery where TClass : class Type Parameters TClass The type of the class. Inheritance object QueryBaseClass<TClass> Implements IQuery<TClass> IQuery Derived DropDownQuery EditorListingQuery EntitiesQuery EntityQuery RequestTraceQuery FeaturesQuery TestQuery MenuQuery Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods GenericExtensions.When<TObject>(TObject, bool, Func<TObject, TObject>) ExpandoObjectExtensions.ConvertToExpando(object?) Constructors QueryBaseClass(ILogger?, IFeatureManager?) Initializes a new instance of the QueryBaseClass<TClass> class. protected QueryBaseClass(ILogger? logger, IFeatureManager? featureManager) Parameters logger ILogger The logger. featureManager IFeatureManager The feature manager. Properties Arguments Gets the arguments. public virtual IArgument[] Arguments { get; } Property Value IArgument[] The arguments. DeprecationReason Gets the deprecation reason. public virtual string? DeprecationReason { get; } Property Value string The deprecation reason. Description Gets the description. public virtual string? Description { get; } Property Value string The description. FeatureManager Gets the feature manager. protected IFeatureManager? FeatureManager { get; } Property Value IFeatureManager The feature manager. Features Gets the features associated with this command. public virtual IFeature[] Features { get; } Property Value IFeature[] The features associated with this command. Logger Gets the logger. protected ILogger? Logger { get; } Property Value ILogger The logger. Name Gets the name. public virtual string Name { get; } Property Value string The name. ReturnType Gets the type of the return. public Type ReturnType { get; } Property Value Type The type of the return. Version Gets the version. public virtual string? Version { get; } Property Value string The version. Methods IsFeatureEnabled() Determines whether the associated features are enabled. protected bool IsFeatureEnabled() Returns bool true if all features are enabled; otherwise, false. ResolveAsync(ClaimsPrincipal?, Arguments) Used to resolve the data asked for by the query. public abstract Task<TClass?> ResolveAsync(ClaimsPrincipal? user, Arguments arguments) Parameters user ClaimsPrincipal The user. arguments Arguments The arguments. Returns Task<TClass> The data specified. See Also IQuery<TClass>"
  },
  "api/Mithril.API.Abstractions.Query.BaseClasses.html": {
    "href": "api/Mithril.API.Abstractions.Query.BaseClasses.html",
    "title": "Namespace Mithril.API.Abstractions.Query.BaseClasses | Mithril API Reference",
    "keywords": "Namespace Mithril.API.Abstractions.Query.BaseClasses Classes DropDownBaseClass Drop down base class DropDownBaseClass<TModel> Model query base class QueryBaseClass<TClass> Query base class"
  },
  "api/Mithril.API.Abstractions.Query.Interfaces.IArgument.html": {
    "href": "api/Mithril.API.Abstractions.Query.Interfaces.IArgument.html",
    "title": "Interface IArgument | Mithril API Reference",
    "keywords": "Interface IArgument Namespace Mithril.API.Abstractions.Query.Interfaces Assembly Mithril.API.Abstractions.dll Argument interface public interface IArgument Extension Methods IArgumentExtensions.CreateArgument(IArgument) GenericExtensions.When<TObject>(TObject, bool, Func<TObject, TObject>) ExpandoObjectExtensions.ConvertToExpando(object?) Properties ArgumentType Gets the type of the argument. Type ArgumentType { get; } Property Value Type The type of the argument. DefaultValue Gets or sets the default value. object? DefaultValue { get; set; } Property Value object The default value. Description Gets or sets the description. string? Description { get; set; } Property Value string The description. Name Gets or sets the name. string? Name { get; set; } Property Value string The name."
  },
  "api/Mithril.API.Abstractions.Query.Interfaces.IDropDownQuery.html": {
    "href": "api/Mithril.API.Abstractions.Query.Interfaces.IDropDownQuery.html",
    "title": "Interface IDropDownQuery | Mithril API Reference",
    "keywords": "Interface IDropDownQuery Namespace Mithril.API.Abstractions.Query.Interfaces Assembly Mithril.API.Abstractions.dll Drop down query interface public interface IDropDownQuery Extension Methods GenericExtensions.When<TObject>(TObject, bool, Func<TObject, TObject>) ExpandoObjectExtensions.ConvertToExpando(object?) Properties Name Gets the name. string Name { get; } Property Value string The name. Methods CanRun(string?, ClaimsPrincipal?) Determines whether this instance can run the specified data type. bool CanRun(string? dataType, ClaimsPrincipal? user) Parameters dataType string Type of the data. user ClaimsPrincipal The user. Returns bool true if this instance can run the specified data type; otherwise, false. GetDataAsync(IDataService?, string?) Gets the data asynchronously. Task<IEnumerable<DropDownVM<long>>?> GetDataAsync(IDataService? dataService, string? filter) Parameters dataService IDataService The data service. filter string The filter. Returns Task<IEnumerable<DropDownVM<long>>> The drop down items."
  },
  "api/Mithril.API.Abstractions.Query.Interfaces.IQuery-1.html": {
    "href": "api/Mithril.API.Abstractions.Query.Interfaces.IQuery-1.html",
    "title": "Interface IQuery<TClass> | Mithril API Reference",
    "keywords": "Interface IQuery<TClass> Namespace Mithril.API.Abstractions.Query.Interfaces Assembly Mithril.API.Abstractions.dll Query interface public interface IQuery<TClass> : IQuery where TClass : class Type Parameters TClass The type of the class. Inherited Members IQuery.Arguments IQuery.DeprecationReason IQuery.Description IQuery.Features IQuery.Name IQuery.ReturnType IQuery.Version Extension Methods GenericExtensions.When<TObject>(TObject, bool, Func<TObject, TObject>) ExpandoObjectExtensions.ConvertToExpando(object?) Methods ResolveAsync(ClaimsPrincipal?, Arguments) Used to resolve the data asked for by the query. Task<TClass?> ResolveAsync(ClaimsPrincipal? user, Arguments arguments) Parameters user ClaimsPrincipal The user. arguments Arguments The arguments. Returns Task<TClass> The data specified."
  },
  "api/Mithril.API.Abstractions.Query.Interfaces.IQuery.html": {
    "href": "api/Mithril.API.Abstractions.Query.Interfaces.IQuery.html",
    "title": "Interface IQuery | Mithril API Reference",
    "keywords": "Interface IQuery Namespace Mithril.API.Abstractions.Query.Interfaces Assembly Mithril.API.Abstractions.dll Query interface public interface IQuery Extension Methods GenericExtensions.When<TObject>(TObject, bool, Func<TObject, TObject>) ExpandoObjectExtensions.ConvertToExpando(object?) Properties Arguments Gets the arguments. IArgument[] Arguments { get; } Property Value IArgument[] The arguments. DeprecationReason Gets the deprecation reason. string? DeprecationReason { get; } Property Value string The deprecation reason. Description Gets the description. string? Description { get; } Property Value string The description. Features Gets the features associated with this command. IFeature[] Features { get; } Property Value IFeature[] The features associated with this command. Name Gets the name. string Name { get; } Property Value string The name. ReturnType Gets the type of the return. Type ReturnType { get; } Property Value Type The type of the return. Version Gets the version (not guaranteed to be used in all query providers, but defaults to \"v1\"). string? Version { get; } Property Value string The version."
  },
  "api/Mithril.API.Abstractions.Query.Interfaces.html": {
    "href": "api/Mithril.API.Abstractions.Query.Interfaces.html",
    "title": "Namespace Mithril.API.Abstractions.Query.Interfaces | Mithril API Reference",
    "keywords": "Namespace Mithril.API.Abstractions.Query.Interfaces Interfaces IArgument Argument interface IDropDownQuery Drop down query interface IQuery Query interface IQuery<TClass> Query interface"
  },
  "api/Mithril.API.Abstractions.Query.ViewModels.DropDownVM-1.html": {
    "href": "api/Mithril.API.Abstractions.Query.ViewModels.DropDownVM-1.html",
    "title": "Class DropDownVM<TKey> | Mithril API Reference",
    "keywords": "Class DropDownVM<TKey> Namespace Mithril.API.Abstractions.Query.ViewModels Assembly Mithril.API.Abstractions.dll Drop down VM public class DropDownVM<TKey> Type Parameters TKey Drop down VM Inheritance object DropDownVM<TKey> Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods GenericExtensions.When<TObject>(TObject, bool, Func<TObject, TObject>) ExpandoObjectExtensions.ConvertToExpando(object?) Remarks Initializes a new instance of the DropDownVM<TKey> class. Constructors DropDownVM(TKey, string?) Drop down VM public DropDownVM(TKey key, string? value) Parameters key TKey The key. value string The value. Remarks Initializes a new instance of the DropDownVM<TKey> class. Properties Key Gets or sets the key. public TKey Key { get; set; } Property Value TKey The key. Value Gets or sets the value. public string? Value { get; set; } Property Value string The value."
  },
  "api/Mithril.API.Abstractions.Query.ViewModels.PagedDataVM-1.html": {
    "href": "api/Mithril.API.Abstractions.Query.ViewModels.PagedDataVM-1.html",
    "title": "Class PagedDataVM<TData> | Mithril API Reference",
    "keywords": "Class PagedDataVM<TData> Namespace Mithril.API.Abstractions.Query.ViewModels Assembly Mithril.API.Abstractions.dll Paged data view model public class PagedDataVM<TData> Type Parameters TData The type of the data. Inheritance object PagedDataVM<TData> Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods GenericExtensions.When<TObject>(TObject, bool, Func<TObject, TObject>) ExpandoObjectExtensions.ConvertToExpando(object?) Remarks Initializes a new instance of the PagedDataVM<TData> class. Constructors PagedDataVM(int, int, int, int, List<TData>) Paged data view model public PagedDataVM(int page, int pageSize, int total, int session, List<TData> values) Parameters page int The page. pageSize int Size of the page. total int The total. session int The session. values List<TData> The values. Remarks Initializes a new instance of the PagedDataVM<TData> class. Properties Page Gets or sets the page. public int Page { get; set; } Property Value int The page. PageSize Gets or sets the size of the page. public int PageSize { get; set; } Property Value int The size of the page. Session Gets or sets the session. public int Session { get; set; } Property Value int The session. Total Gets or sets the key. public int Total { get; set; } Property Value int The key. Values Gets or sets the values. public List<TData>? Values { get; set; } Property Value List<TData> The values."
  },
  "api/Mithril.API.Abstractions.Query.ViewModels.html": {
    "href": "api/Mithril.API.Abstractions.Query.ViewModels.html",
    "title": "Namespace Mithril.API.Abstractions.Query.ViewModels | Mithril API Reference",
    "keywords": "Namespace Mithril.API.Abstractions.Query.ViewModels Classes DropDownVM<TKey> Drop down VM PagedDataVM<TData> Paged data view model"
  },
  "api/Mithril.API.Abstractions.Query.html": {
    "href": "api/Mithril.API.Abstractions.Query.html",
    "title": "Namespace Mithril.API.Abstractions.Query | Mithril API Reference",
    "keywords": "Namespace Mithril.API.Abstractions.Query Classes Argument<TValue> Argument that the query accepts Arguments Arguments"
  },
  "api/Mithril.API.Abstractions.Services.ICommandService.html": {
    "href": "api/Mithril.API.Abstractions.Services.ICommandService.html",
    "title": "Interface ICommandService | Mithril API Reference",
    "keywords": "Interface ICommandService Namespace Mithril.API.Abstractions.Services Assembly Mithril.API.Abstractions.dll Command service interface public interface ICommandService Extension Methods GenericExtensions.When<TObject>(TObject, bool, Func<TObject, TObject>) ExpandoObjectExtensions.ConvertToExpando(object?) Methods ProcessAsync() Processes any new commands. Task ProcessAsync() Returns Task The async task."
  },
  "api/Mithril.API.Abstractions.Services.IDropDownQueryService.html": {
    "href": "api/Mithril.API.Abstractions.Services.IDropDownQueryService.html",
    "title": "Interface IDropDownQueryService | Mithril API Reference",
    "keywords": "Interface IDropDownQueryService Namespace Mithril.API.Abstractions.Services Assembly Mithril.API.Abstractions.dll Drop down query service public interface IDropDownQueryService Extension Methods GenericExtensions.When<TObject>(TObject, bool, Func<TObject, TObject>) ExpandoObjectExtensions.ConvertToExpando(object?) Methods FindDropDownQuery(string?, ClaimsPrincipal?) Finds the drop down query. IDropDownQuery? FindDropDownQuery(string? name, ClaimsPrincipal? user) Parameters name string The name. user ClaimsPrincipal The user. Returns IDropDownQuery The drop down query specified."
  },
  "api/Mithril.API.Abstractions.Services.IEventService.html": {
    "href": "api/Mithril.API.Abstractions.Services.IEventService.html",
    "title": "Interface IEventService | Mithril API Reference",
    "keywords": "Interface IEventService Namespace Mithril.API.Abstractions.Services Assembly Mithril.API.Abstractions.dll Event service interface public interface IEventService Extension Methods GenericExtensions.When<TObject>(TObject, bool, Func<TObject, TObject>) ExpandoObjectExtensions.ConvertToExpando(object?) Methods ProcessAsync() Processes any new events. Task ProcessAsync() Returns Task The async task."
  },
  "api/Mithril.API.Abstractions.Services.IQueryService.html": {
    "href": "api/Mithril.API.Abstractions.Services.IQueryService.html",
    "title": "Interface IQueryService | Mithril API Reference",
    "keywords": "Interface IQueryService Namespace Mithril.API.Abstractions.Services Assembly Mithril.API.Abstractions.dll Query service public interface IQueryService Extension Methods GenericExtensions.When<TObject>(TObject, bool, Func<TObject, TObject>) ExpandoObjectExtensions.ConvertToExpando(object?) Methods FindQuery(string?) Finds the query specified. IQuery? FindQuery(string? name) Parameters name string The name of the query. Returns IQuery The query specified."
  },
  "api/Mithril.API.Abstractions.Services.html": {
    "href": "api/Mithril.API.Abstractions.Services.html",
    "title": "Namespace Mithril.API.Abstractions.Services | Mithril API Reference",
    "keywords": "Namespace Mithril.API.Abstractions.Services Interfaces ICommandService Command service interface IDropDownQueryService Drop down query service IEventService Event service interface IQueryService Query service"
  },
  "api/Mithril.API.Commands.BackgroundTasks.CommandProcessorTask.html": {
    "href": "api/Mithril.API.Commands.BackgroundTasks.CommandProcessorTask.html",
    "title": "Class CommandProcessorTask | Mithril API Reference",
    "keywords": "Class CommandProcessorTask Namespace Mithril.API.Commands.BackgroundTasks Assembly Mithril.API.Commands.dll Command processor task public class CommandProcessorTask : IScheduledTask, IBackgroundTask Inheritance object CommandProcessorTask Implements IScheduledTask IBackgroundTask Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods GenericExtensions.When<TObject>(TObject, bool, Func<TObject, TObject>) ExpandoObjectExtensions.ConvertToExpando(object?) Remarks Initializes a new instance of the CommandProcessorTask class. Constructors CommandProcessorTask(ICommandService?, IOptions<APIOptions>?) Command processor task public CommandProcessorTask(ICommandService? commandService, IOptions<APIOptions>? configuration) Parameters commandService ICommandService The command service. configuration IOptions<APIOptions> The configuration. Remarks Initializes a new instance of the CommandProcessorTask class. See Also IHostedService IDisposable Properties Frequencies Gets the frequencies. public IFrequency[] Frequencies { get; } Property Value IFrequency[] The frequencies. LastRunTime Gets the last run time. public DateTime LastRunTime { get; set; } Property Value DateTime The last run time. Name Gets the name. public string Name { get; } Property Value string The name. Methods ExecuteAsync() Executes the asynchronous. public Task ExecuteAsync() Returns Task See Also IHostedService IDisposable"
  },
  "api/Mithril.API.Commands.BackgroundTasks.EventProcessorTask.html": {
    "href": "api/Mithril.API.Commands.BackgroundTasks.EventProcessorTask.html",
    "title": "Class EventProcessorTask | Mithril API Reference",
    "keywords": "Class EventProcessorTask Namespace Mithril.API.Commands.BackgroundTasks Assembly Mithril.API.Commands.dll Event processor task public class EventProcessorTask : IScheduledTask, IBackgroundTask Inheritance object EventProcessorTask Implements IScheduledTask IBackgroundTask Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods GenericExtensions.When<TObject>(TObject, bool, Func<TObject, TObject>) ExpandoObjectExtensions.ConvertToExpando(object?) Remarks Initializes a new instance of the EventProcessorTask class. Constructors EventProcessorTask(IEventService?, IOptions<APIOptions>?) Event processor task public EventProcessorTask(IEventService? eventService, IOptions<APIOptions>? configuration) Parameters eventService IEventService The event service. configuration IOptions<APIOptions> The configuration. Remarks Initializes a new instance of the EventProcessorTask class. See Also IHostedService IDisposable Properties Frequencies Gets the frequencies that the task is run at. public IFrequency[] Frequencies { get; } Property Value IFrequency[] The frequencies the task is run at. LastRunTime Gets the last run time. public DateTime LastRunTime { get; set; } Property Value DateTime The last run time. Name Gets the name. public string Name { get; } Property Value string The name. Methods ExecuteAsync() Executes this instance. public Task ExecuteAsync() Returns Task Async task. See Also IHostedService IDisposable"
  },
  "api/Mithril.API.Commands.BackgroundTasks.html": {
    "href": "api/Mithril.API.Commands.BackgroundTasks.html",
    "title": "Namespace Mithril.API.Commands.BackgroundTasks | Mithril API Reference",
    "keywords": "Namespace Mithril.API.Commands.BackgroundTasks Classes CommandProcessorTask Command processor task EventProcessorTask Event processor task"
  },
  "api/Mithril.API.Commands.CommandModule.html": {
    "href": "api/Mithril.API.Commands.CommandModule.html",
    "title": "Class CommandModule | Mithril API Reference",
    "keywords": "Class CommandModule Namespace Mithril.API.Commands Assembly Mithril.API.Commands.dll Command module public class CommandModule : ModuleBaseClass<CommandModule>, IEquatable<CommandModule>, IModule Inheritance object ModuleBaseClass<CommandModule> CommandModule Implements IEquatable<CommandModule> IModule Inherited Members ModuleBaseClass<CommandModule>.Category ModuleBaseClass<CommandModule>.ContentPath ModuleBaseClass<CommandModule>.Features ModuleBaseClass<CommandModule>.ID ModuleBaseClass<CommandModule>.LastModified ModuleBaseClass<CommandModule>.Name ModuleBaseClass<CommandModule>.Order ModuleBaseClass<CommandModule>.Tags ModuleBaseClass<CommandModule>.Version ModuleBaseClass<CommandModule>.ConfigureApplication(IApplicationBuilder, IConfiguration, IHostEnvironment) ModuleBaseClass<CommandModule>.ConfigureHostSettings(IHostBuilder, IConfiguration, IHostEnvironment) ModuleBaseClass<CommandModule>.ConfigureLoggingSettings(ILoggingBuilder, IConfiguration, IHostEnvironment) ModuleBaseClass<CommandModule>.ConfigureWebHostSettings(IWebHostBuilder, IConfiguration, IHostEnvironment) ModuleBaseClass<CommandModule>.Equals(object) ModuleBaseClass<CommandModule>.Equals(CommandModule) ModuleBaseClass<CommandModule>.GetHashCode() ModuleBaseClass<CommandModule>.InitializeDataAsync(IDataService, IServiceProvider) ModuleBaseClass<CommandModule>.OnStarted() ModuleBaseClass<CommandModule>.OnStopped() ModuleBaseClass<CommandModule>.OnStopping() object.Equals(object, object) object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods GenericExtensions.When<TObject>(TObject, bool, Func<TObject, TObject>) ExpandoObjectExtensions.ConvertToExpando(object?) Constructors CommandModule() Initializes a new instance of the CommandModule class. public CommandModule() Methods ConfigureMVC(IMvcBuilder?, IConfiguration?, IHostEnvironment?) Configures the MVC. public override IMvcBuilder? ConfigureMVC(IMvcBuilder? mvcBuilder, IConfiguration? configuration, IHostEnvironment? environment) Parameters mvcBuilder IMvcBuilder The MVC builder. configuration IConfiguration The configuration. environment IHostEnvironment The environment. Returns IMvcBuilder MVC Builder ConfigureRoutes(IEndpointRouteBuilder?, IConfiguration?, IHostEnvironment?) Configures the routes. public override IEndpointRouteBuilder? ConfigureRoutes(IEndpointRouteBuilder? endpoints, IConfiguration? configuration, IHostEnvironment? environment) Parameters endpoints IEndpointRouteBuilder The endpoints. configuration IConfiguration The configuration. environment IHostEnvironment The environment. Returns IEndpointRouteBuilder Endpoint route builder ConfigureServices(IServiceCollection?, IConfiguration?, IHostEnvironment?) Configures the services for the module. public override IServiceCollection? ConfigureServices(IServiceCollection? services, IConfiguration? configuration, IHostEnvironment? environment) Parameters services IServiceCollection The services collection. configuration IConfiguration The configuration. environment IHostEnvironment The environment. Returns IServiceCollection Services See Also ModuleBaseClass<TModule>"
  },
  "api/Mithril.API.Commands.Endpoint.CommandEndpoint.html": {
    "href": "api/Mithril.API.Commands.Endpoint.CommandEndpoint.html",
    "title": "Class CommandEndpoint | Mithril API Reference",
    "keywords": "Class CommandEndpoint Namespace Mithril.API.Commands.Endpoint Assembly Mithril.API.Commands.dll Command endpoint public static class CommandEndpoint Inheritance object CommandEndpoint Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Methods RequestDelegate<TViewModel>(IDataService, ILogger, ClaimsPrincipal, ICommandHandler<TViewModel>, TViewModel) Requests the delegate. public static Task<IResult> RequestDelegate<TViewModel>(IDataService dataService, ILogger logger, ClaimsPrincipal user, ICommandHandler<TViewModel> commandHandler, TViewModel value) Parameters dataService IDataService The data service. logger ILogger The logger. user ClaimsPrincipal The user. commandHandler ICommandHandler<TViewModel> The command handler. value TViewModel The value. Returns Task<IResult> Type Parameters TViewModel The type of the view model."
  },
  "api/Mithril.API.Commands.Endpoint.ReturnedResult.html": {
    "href": "api/Mithril.API.Commands.Endpoint.ReturnedResult.html",
    "title": "Class ReturnedResult | Mithril API Reference",
    "keywords": "Class ReturnedResult Namespace Mithril.API.Commands.Endpoint Assembly Mithril.API.Commands.dll Result of the command call public class ReturnedResult Inheritance object ReturnedResult Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods GenericExtensions.When<TObject>(TObject, bool, Func<TObject, TObject>) ExpandoObjectExtensions.ConvertToExpando(object?) Properties Result Gets or sets the result. public string? Result { get; set; } Property Value string The result."
  },
  "api/Mithril.API.Commands.Endpoint.html": {
    "href": "api/Mithril.API.Commands.Endpoint.html",
    "title": "Namespace Mithril.API.Commands.Endpoint | Mithril API Reference",
    "keywords": "Namespace Mithril.API.Commands.Endpoint Classes CommandEndpoint Command endpoint ReturnedResult Result of the command call"
  },
  "api/Mithril.API.Commands.Services.CommandService.html": {
    "href": "api/Mithril.API.Commands.Services.CommandService.html",
    "title": "Class CommandService | Mithril API Reference",
    "keywords": "Class CommandService Namespace Mithril.API.Commands.Services Assembly Mithril.API.Commands.dll Command service public class CommandService : ICommandService Inheritance object CommandService Implements ICommandService Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods GenericExtensions.When<TObject>(TObject, bool, Func<TObject, TObject>) ExpandoObjectExtensions.ConvertToExpando(object?) Remarks Initializes a new instance of the CommandService class. Constructors CommandService(IEnumerable<ICommandHandler>, ILogger<CommandService>?, IOptions<APIOptions>?, IDataService?, ISecurityService?) Command service public CommandService(IEnumerable<ICommandHandler> commandHandlers, ILogger<CommandService>? logger, IOptions<APIOptions>? configuration, IDataService? dataService, ISecurityService? securityService) Parameters commandHandlers IEnumerable<ICommandHandler> The command handlers. logger ILogger<CommandService> The logger. configuration IOptions<APIOptions> The configuration. dataService IDataService The data service. securityService ISecurityService The security service. Remarks Initializes a new instance of the CommandService class. See Also ICommandService Methods ProcessAsync() Runs this instance. public Task ProcessAsync() Returns Task Command service See Also ICommandService"
  },
  "api/Mithril.API.Commands.Services.EventService.html": {
    "href": "api/Mithril.API.Commands.Services.EventService.html",
    "title": "Class EventService | Mithril API Reference",
    "keywords": "Class EventService Namespace Mithril.API.Commands.Services Assembly Mithril.API.Commands.dll Event service public class EventService : IEventService Inheritance object EventService Implements IEventService Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods GenericExtensions.When<TObject>(TObject, bool, Func<TObject, TObject>) ExpandoObjectExtensions.ConvertToExpando(object?) Remarks Initializes a new instance of the EventService class. Constructors EventService(IEnumerable<IEventHandler>, ILogger<EventService>?, IOptions<APIOptions>?, IDataService?, ISecurityService?) Event service public EventService(IEnumerable<IEventHandler> eventHandlers, ILogger<EventService>? logger, IOptions<APIOptions>? configuration, IDataService? dataService, ISecurityService? securityService) Parameters eventHandlers IEnumerable<IEventHandler> The event handlers. logger ILogger<EventService> The logger. configuration IOptions<APIOptions> The configuration. dataService IDataService The data service. securityService ISecurityService The security service. Remarks Initializes a new instance of the EventService class. See Also IEventService Methods ProcessAsync() Runs this instance. public Task ProcessAsync() Returns Task Event service See Also IEventService"
  },
  "api/Mithril.API.Commands.Services.html": {
    "href": "api/Mithril.API.Commands.Services.html",
    "title": "Namespace Mithril.API.Commands.Services | Mithril API Reference",
    "keywords": "Namespace Mithril.API.Commands.Services Classes CommandService Command service EventService Event service"
  },
  "api/Mithril.API.Commands.Utils.CommandEndpointBuilder.html": {
    "href": "api/Mithril.API.Commands.Utils.CommandEndpointBuilder.html",
    "title": "Class CommandEndpointBuilder | Mithril API Reference",
    "keywords": "Class CommandEndpointBuilder Namespace Mithril.API.Commands.Utils Assembly Mithril.API.Commands.dll Command endpoint builder public static class CommandEndpointBuilder Inheritance object CommandEndpointBuilder Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Methods SetupEndPoint<TViewModel>(IEndpointRouteBuilder?, string, ICommandHandler<TViewModel>, MithrilConfig?, APIOptions?) Setups the end point. public static void SetupEndPoint<TViewModel>(IEndpointRouteBuilder? endpoints, string commandEndPoint, ICommandHandler<TViewModel> commandHandler, MithrilConfig? config, APIOptions? apiOptions) where TViewModel : notnull Parameters endpoints IEndpointRouteBuilder The endpoints. commandEndPoint string The command end point. commandHandler ICommandHandler<TViewModel> The command handler. config MithrilConfig The configuration. apiOptions APIOptions The API options. Type Parameters TViewModel The type of the view model."
  },
  "api/Mithril.API.Commands.Utils.html": {
    "href": "api/Mithril.API.Commands.Utils.html",
    "title": "Namespace Mithril.API.Commands.Utils | Mithril API Reference",
    "keywords": "Namespace Mithril.API.Commands.Utils Classes CommandEndpointBuilder Command endpoint builder"
  },
  "api/Mithril.API.Commands.html": {
    "href": "api/Mithril.API.Commands.html",
    "title": "Namespace Mithril.API.Commands | Mithril API Reference",
    "keywords": "Namespace Mithril.API.Commands Classes CommandModule Command module"
  },
  "api/Mithril.API.GraphQL.Authorization.GraphQLUserContextBuilder.html": {
    "href": "api/Mithril.API.GraphQL.Authorization.GraphQLUserContextBuilder.html",
    "title": "Class GraphQLUserContextBuilder | Mithril API Reference",
    "keywords": "Class GraphQLUserContextBuilder Namespace Mithril.API.GraphQL.Authorization Assembly Mithril.API.GraphQL.dll User context builder public class GraphQLUserContextBuilder : IUserContextBuilder Inheritance object GraphQLUserContextBuilder Implements IUserContextBuilder Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods GenericExtensions.When<TObject>(TObject, bool, Func<TObject, TObject>) ExpandoObjectExtensions.ConvertToExpando(object?) Methods BuildUserContextAsync(HttpContext, object?) Builds the user context object. public ValueTask<IDictionary<string, object?>?> BuildUserContextAsync(HttpContext context, object? payload) Parameters context HttpContext The HttpContext of the HTTP connection. payload object The payload of the WebSocket connection request, if applicable. Typically this is either null or an object that has not fully been deserialized yet; when using the Newtonsoft.Json deserializer, this will be a JObject, and when using System.Text.Json this will be a JsonElement. You may call ReadNode<T>(object) to deserialize the node into the expected type. To deserialize into a nested set of IDictionary<string, object?> maps, call ReadNode<T>(object) with GraphQL.Inputs as the generic type. To determine if this is a WebSocket connection request, check context. WebSockets. IsWebSocketRequest. Returns ValueTask<IDictionary<string, object>> Dictionary object representing user context. Return null to use default user context. See Also IUserContextBuilder"
  },
  "api/Mithril.API.GraphQL.Authorization.GraphQLUserContextDictionary.html": {
    "href": "api/Mithril.API.GraphQL.Authorization.GraphQLUserContextDictionary.html",
    "title": "Class GraphQLUserContextDictionary | Mithril API Reference",
    "keywords": "Class GraphQLUserContextDictionary Namespace Mithril.API.GraphQL.Authorization Assembly Mithril.API.GraphQL.dll GraphQL User Context Holder public class GraphQLUserContextDictionary : Dictionary<string, object?>, IDictionary<string, object?>, ICollection<KeyValuePair<string, object?>>, IReadOnlyDictionary<string, object?>, IReadOnlyCollection<KeyValuePair<string, object?>>, IEnumerable<KeyValuePair<string, object?>>, IDictionary, ICollection, IEnumerable, IDeserializationCallback, ISerializable Inheritance object Dictionary<string, object> GraphQLUserContextDictionary Implements IDictionary<string, object> ICollection<KeyValuePair<string, object>> IReadOnlyDictionary<string, object> IReadOnlyCollection<KeyValuePair<string, object>> IEnumerable<KeyValuePair<string, object>> IDictionary ICollection IEnumerable IDeserializationCallback ISerializable Inherited Members Dictionary<string, object>.Add(string, object) Dictionary<string, object>.Clear() Dictionary<string, object>.ContainsKey(string) Dictionary<string, object>.ContainsValue(object) Dictionary<string, object>.EnsureCapacity(int) Dictionary<string, object>.GetEnumerator() Dictionary<string, object>.OnDeserialization(object) Dictionary<string, object>.Remove(string) Dictionary<string, object>.Remove(string, out object) Dictionary<string, object>.TrimExcess() Dictionary<string, object>.TrimExcess(int) Dictionary<string, object>.TryAdd(string, object) Dictionary<string, object>.TryGetValue(string, out object) Dictionary<string, object>.Comparer Dictionary<string, object>.Count Dictionary<string, object>.this[string] Dictionary<string, object>.Keys Dictionary<string, object>.Values object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods GenericExtensions.When<TObject>(TObject, bool, Func<TObject, TObject>) ExpandoObjectExtensions.ConvertToExpando(IDictionary<string, object?>?) ExpandoObjectExtensions.ConvertToExpando(object?) Remarks Initializes a new instance of the GraphQLUserContextDictionary class. Constructors GraphQLUserContextDictionary(ClaimsPrincipal?) GraphQL User Context Holder public GraphQLUserContextDictionary(ClaimsPrincipal? user) Parameters user ClaimsPrincipal The user. Remarks Initializes a new instance of the GraphQLUserContextDictionary class. See Also Dictionary<TKey, TValue> Properties User Gets the user. public ClaimsPrincipal? User { get; } Property Value ClaimsPrincipal The user. See Also Dictionary<TKey, TValue>"
  },
  "api/Mithril.API.GraphQL.Authorization.html": {
    "href": "api/Mithril.API.GraphQL.Authorization.html",
    "title": "Namespace Mithril.API.GraphQL.Authorization | Mithril API Reference",
    "keywords": "Namespace Mithril.API.GraphQL.Authorization Classes GraphQLUserContextBuilder User context builder GraphQLUserContextDictionary GraphQL User Context Holder"
  },
  "api/Mithril.API.GraphQL.GraphQLModule.html": {
    "href": "api/Mithril.API.GraphQL.GraphQLModule.html",
    "title": "Class GraphQLModule | Mithril API Reference",
    "keywords": "Class GraphQLModule Namespace Mithril.API.GraphQL Assembly Mithril.API.GraphQL.dll API Module public class GraphQLModule : ModuleBaseClass<GraphQLModule>, IEquatable<GraphQLModule>, IModule Inheritance object ModuleBaseClass<GraphQLModule> GraphQLModule Implements IEquatable<GraphQLModule> IModule Inherited Members ModuleBaseClass<GraphQLModule>.Category ModuleBaseClass<GraphQLModule>.ContentPath ModuleBaseClass<GraphQLModule>.Features ModuleBaseClass<GraphQLModule>.ID ModuleBaseClass<GraphQLModule>.LastModified ModuleBaseClass<GraphQLModule>.Name ModuleBaseClass<GraphQLModule>.Tags ModuleBaseClass<GraphQLModule>.Version ModuleBaseClass<GraphQLModule>.ConfigureHostSettings(IHostBuilder, IConfiguration, IHostEnvironment) ModuleBaseClass<GraphQLModule>.ConfigureLoggingSettings(ILoggingBuilder, IConfiguration, IHostEnvironment) ModuleBaseClass<GraphQLModule>.ConfigureMVC(IMvcBuilder, IConfiguration, IHostEnvironment) ModuleBaseClass<GraphQLModule>.ConfigureWebHostSettings(IWebHostBuilder, IConfiguration, IHostEnvironment) ModuleBaseClass<GraphQLModule>.Equals(object) ModuleBaseClass<GraphQLModule>.Equals(GraphQLModule) ModuleBaseClass<GraphQLModule>.GetHashCode() ModuleBaseClass<GraphQLModule>.InitializeDataAsync(IDataService, IServiceProvider) ModuleBaseClass<GraphQLModule>.OnStarted() ModuleBaseClass<GraphQLModule>.OnStopped() ModuleBaseClass<GraphQLModule>.OnStopping() object.Equals(object, object) object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods GenericExtensions.When<TObject>(TObject, bool, Func<TObject, TObject>) ExpandoObjectExtensions.ConvertToExpando(object?) Constructors GraphQLModule() Initializes a new instance of the GraphQLModule class. public GraphQLModule() Properties Order Gets the order that they are initialized in. public override int Order { get; } Property Value int The order that they are initialized in. Methods ConfigureApplication(IApplicationBuilder?, IConfiguration?, IHostEnvironment?) Configures the application. public override IApplicationBuilder? ConfigureApplication(IApplicationBuilder? app, IConfiguration? configuration, IHostEnvironment? environment) Parameters app IApplicationBuilder The application. configuration IConfiguration The configuration. environment IHostEnvironment The environment. Returns IApplicationBuilder Application builder ConfigureRoutes(IEndpointRouteBuilder?, IConfiguration?, IHostEnvironment?) Configures the routes. public override IEndpointRouteBuilder? ConfigureRoutes(IEndpointRouteBuilder? endpoints, IConfiguration? configuration, IHostEnvironment? environment) Parameters endpoints IEndpointRouteBuilder The endpoints. configuration IConfiguration The configuration. environment IHostEnvironment The environment. Returns IEndpointRouteBuilder Endpoint route builder ConfigureServices(IServiceCollection?, IConfiguration?, IHostEnvironment?) Configures the services for the module. public override IServiceCollection? ConfigureServices(IServiceCollection? services, IConfiguration? configuration, IHostEnvironment? environment) Parameters services IServiceCollection The services collection. configuration IConfiguration The configuration. environment IHostEnvironment The environment. Returns IServiceCollection Services See Also ModuleBaseClass<TModule>"
  },
  "api/Mithril.API.GraphQL.GraphTypes.Builder.GraphTypeManager.html": {
    "href": "api/Mithril.API.GraphQL.GraphTypes.Builder.GraphTypeManager.html",
    "title": "Class GraphTypeManager | Mithril API Reference",
    "keywords": "Class GraphTypeManager Namespace Mithril.API.GraphQL.GraphTypes.Builder Assembly Mithril.API.GraphQL.dll GraphType manager public class GraphTypeManager Inheritance object GraphTypeManager Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods GenericExtensions.When<TObject>(TObject, bool, Func<TObject, TObject>) ExpandoObjectExtensions.ConvertToExpando(object?) Constructors GraphTypeManager() Initializes a new instance of the GraphTypeManager class. public GraphTypeManager() Methods GetGraphType(Type) Gets the graph type associated with the type of the object. public GraphType? GetGraphType(Type objectType) Parameters objectType Type Type of the object. Returns GraphType The graph type. GetGraphType<TObject>() Gets the graph type associated with the type of the object. public GraphType? GetGraphType<TObject>() Returns GraphType The graph type. Type Parameters TObject The type of the object."
  },
  "api/Mithril.API.GraphQL.GraphTypes.Builder.TypeCacheFor-1.html": {
    "href": "api/Mithril.API.GraphQL.GraphTypes.Builder.TypeCacheFor-1.html",
    "title": "Class TypeCacheFor<T> | Mithril API Reference",
    "keywords": "Class TypeCacheFor<T> Namespace Mithril.API.GraphQL.GraphTypes.Builder Assembly Mithril.API.GraphQL.dll Type cache info public static class TypeCacheFor<T> Type Parameters T Type to cache. Inheritance object TypeCacheFor<T> Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Fields Interfaces The interfaces public static readonly Type[] Interfaces Field Value Type[] Type cache info Methods The methods public static readonly MethodInfo[] Methods Field Value MethodInfo[] Type cache info Properties The properties public static readonly PropertyInfo[] Properties Field Value PropertyInfo[] Type cache info Type The type public static readonly Type Type Field Value Type Type cache info"
  },
  "api/Mithril.API.GraphQL.GraphTypes.Builder.html": {
    "href": "api/Mithril.API.GraphQL.GraphTypes.Builder.html",
    "title": "Namespace Mithril.API.GraphQL.GraphTypes.Builder | Mithril API Reference",
    "keywords": "Namespace Mithril.API.GraphQL.GraphTypes.Builder Classes GraphTypeManager GraphType manager TypeCacheFor<T> Type cache info"
  },
  "api/Mithril.API.GraphQL.GraphTypes.CompositeQuery.html": {
    "href": "api/Mithril.API.GraphQL.GraphTypes.CompositeQuery.html",
    "title": "Class CompositeQuery | Mithril API Reference",
    "keywords": "Class CompositeQuery Namespace Mithril.API.GraphQL.GraphTypes Assembly Mithril.API.GraphQL.dll Composite query that creates the root node. public class CompositeQuery : ObjectGraphType, IObjectGraphType, IComplexGraphType, IGraphType, IProvideMetadata, IProvideDescription, IProvideDeprecationReason, INamedType, IImplementInterfaces Inheritance object MetadataProvider GraphType ComplexGraphType<object> ObjectGraphType<object> ObjectGraphType CompositeQuery Implements IObjectGraphType IComplexGraphType IGraphType IProvideMetadata IProvideDescription IProvideDeprecationReason INamedType IImplementInterfaces Inherited Members ObjectGraphType<object>.AddResolvedInterface(IInterfaceGraphType) ObjectGraphType<object>.Interface<TInterface>() ObjectGraphType<object>.Interface(Type) ObjectGraphType<object>.IsTypeOf ObjectGraphType<object>.Interfaces ObjectGraphType<object>.ResolvedInterfaces ComplexGraphType<object>.HasField(string) ComplexGraphType<object>.GetField(ROM) ComplexGraphType<object>.AddField(FieldType) ComplexGraphType<object>.CreateBuilder<TReturnType>(Type) ComplexGraphType<object>.CreateBuilder<TReturnType>(IGraphType) ComplexGraphType<object>.Field(Type, string, string, QueryArguments, Func<IResolveFieldContext<object>, object>, string) ComplexGraphType<object>.Field<TGraphType>(string, string, QueryArguments, Func<IResolveFieldContext<object>, object>, string) ComplexGraphType<object>.FieldDelegate<TGraphType>(string, string, QueryArguments, Delegate, string) ComplexGraphType<object>.FieldAsync(Type, string, string, QueryArguments, Func<IResolveFieldContext<object>, Task<object>>, string) ComplexGraphType<object>.FieldAsync<TGraphType>(string, string, QueryArguments, Func<IResolveFieldContext<object>, Task<object>>, string) ComplexGraphType<object>.FieldAsync<TGraphType, TReturnType>(string, string, QueryArguments, Func<IResolveFieldContext<object>, Task<TReturnType>>, string) ComplexGraphType<object>.FieldSubscribe<TGraphType>(string, string, QueryArguments, Func<IResolveFieldContext<object>, object>, Func<IResolveFieldContext, IObservable<object>>, string) ComplexGraphType<object>.FieldSubscribeAsync<TGraphType>(string, string, QueryArguments, Func<IResolveFieldContext<object>, object>, Func<IResolveFieldContext, Task<IObservable<object>>>, string) ComplexGraphType<object>.Field<TGraphType, TReturnType>(string) ComplexGraphType<object>.Field<TGraphType, TReturnType>() ComplexGraphType<object>.Field<TGraphType>() ComplexGraphType<object>.Field<TGraphType>(string) ComplexGraphType<object>.Field<TReturnType>(string, bool) ComplexGraphType<object>.Field(string, Type) ComplexGraphType<object>.Field(string, IGraphType) ComplexGraphType<object>.Field<TProperty>(string, Expression<Func<object, TProperty>>, bool, Type) ComplexGraphType<object>.Field<TProperty>(Expression<Func<object, TProperty>>, bool, Type) ComplexGraphType<object>.Connection<TNodeType>() ComplexGraphType<object>.Connection<TNodeType, TEdgeType>() ComplexGraphType<object>.Connection<TNodeType, TEdgeType, TConnectionType>() ComplexGraphType<object>.Fields GraphType.Initialize(ISchema) GraphType.ToString() GraphType.Equals(IGraphType) GraphType.Equals(object) GraphType.GetHashCode() GraphType.Name GraphType.Description GraphType.DeprecationReason MetadataProvider.GetMetadata<TType>(string, TType) MetadataProvider.GetMetadata<TType>(string, Func<TType>) MetadataProvider.HasMetadata(string) MetadataProvider.CopyMetadataTo(IProvideMetadata) MetadataProvider.Metadata object.Equals(object, object) object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Extension Methods GenericExtensions.When<TObject>(TObject, bool, Func<TObject, TObject>) ExpandoObjectExtensions.ConvertToExpando(object?) Constructors CompositeQuery(IEnumerable<IQuery?>?) Initializes a new instance of the CompositeQuery class. public CompositeQuery(IEnumerable<IQuery?>? queries) Parameters queries IEnumerable<IQuery> The queries. See Also ObjectGraphType"
  },
  "api/Mithril.API.GraphQL.GraphTypes.ExtensionMethods.FieldTypeExtensions.html": {
    "href": "api/Mithril.API.GraphQL.GraphTypes.ExtensionMethods.FieldTypeExtensions.html",
    "title": "Class FieldTypeExtensions | Mithril API Reference",
    "keywords": "Class FieldTypeExtensions Namespace Mithril.API.GraphQL.GraphTypes.ExtensionMethods Assembly Mithril.API.GraphQL.dll FieldType extensions public static class FieldTypeExtensions Inheritance object FieldTypeExtensions Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Methods SetSecurity(FieldType?, MemberInfo?) Sets the security. public static FieldType? SetSecurity(this FieldType? fieldBuilder, MemberInfo? memberInfo) Parameters fieldBuilder FieldType The field builder. memberInfo MemberInfo The member information. Returns FieldType The field builder SetSecurity<TClass, TReturn>(FieldBuilder<TClass, TReturn>?, MemberInfo?) Sets the security. public static FieldBuilder<TClass, TReturn>? SetSecurity<TClass, TReturn>(this FieldBuilder<TClass, TReturn>? fieldBuilder, MemberInfo? memberInfo) Parameters fieldBuilder FieldBuilder<TClass, TReturn> The field builder. memberInfo MemberInfo The member information. Returns FieldBuilder<TClass, TReturn> The field builder. Type Parameters TClass The type of the class. TReturn The type of the return."
  },
  "api/Mithril.API.GraphQL.GraphTypes.ExtensionMethods.IArgumentExtensions.html": {
    "href": "api/Mithril.API.GraphQL.GraphTypes.ExtensionMethods.IArgumentExtensions.html",
    "title": "Class IArgumentExtensions | Mithril API Reference",
    "keywords": "Class IArgumentExtensions Namespace Mithril.API.GraphQL.GraphTypes.ExtensionMethods Assembly Mithril.API.GraphQL.dll IArgument extensions public static class IArgumentExtensions Inheritance object IArgumentExtensions Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Methods CreateArgument(IArgument) Creates the argument object. public static QueryArgument? CreateArgument(this IArgument argument) Parameters argument IArgument The x. Returns QueryArgument The query argument."
  },
  "api/Mithril.API.GraphQL.GraphTypes.ExtensionMethods.MemberInfoExtensions.html": {
    "href": "api/Mithril.API.GraphQL.GraphTypes.ExtensionMethods.MemberInfoExtensions.html",
    "title": "Class MemberInfoExtensions | Mithril API Reference",
    "keywords": "Class MemberInfoExtensions Namespace Mithril.API.GraphQL.GraphTypes.ExtensionMethods Assembly Mithril.API.GraphQL.dll MemberInfo extension methods public static class MemberInfoExtensions Inheritance object MemberInfoExtensions Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Methods GetDeprecationReason(MemberInfo) Gets the deprecation reason. public static string? GetDeprecationReason(this MemberInfo memberInfo) Parameters memberInfo MemberInfo The member information. Returns string The deprecation reason GetDescription(MemberInfo) Gets the description. public static string GetDescription(this MemberInfo memberInfo) Parameters memberInfo MemberInfo The member information. Returns string The API description. GetDescription(MethodInfo) Gets the description for the method. public static string GetDescription(this MethodInfo memberInfo) Parameters memberInfo MethodInfo The member information. Returns string The description. GetDescription(PropertyInfo) Gets the description for the property. public static string GetDescription(this PropertyInfo memberInfo) Parameters memberInfo PropertyInfo The member information. Returns string The description. GetDescription(Type) Gets the description. public static string GetDescription(this Type memberInfo) Parameters memberInfo Type The member information. Returns string The API description. GetName(MemberInfo) Gets the name. public static string GetName(this MemberInfo memberInfo) Parameters memberInfo MemberInfo The member information. Returns string The name of the MemberInfo"
  },
  "api/Mithril.API.GraphQL.GraphTypes.ExtensionMethods.ParameterInfoExtensions.html": {
    "href": "api/Mithril.API.GraphQL.GraphTypes.ExtensionMethods.ParameterInfoExtensions.html",
    "title": "Class ParameterInfoExtensions | Mithril API Reference",
    "keywords": "Class ParameterInfoExtensions Namespace Mithril.API.GraphQL.GraphTypes.ExtensionMethods Assembly Mithril.API.GraphQL.dll ParameterInfo extensions public static class ParameterInfoExtensions Inheritance object ParameterInfoExtensions Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Methods ToQueryArgument(ParameterInfo) Creates the query argument object. public static QueryArgument? ToQueryArgument(this ParameterInfo parameterInfo) Parameters parameterInfo ParameterInfo The parameter information. Returns QueryArgument The query argument."
  },
  "api/Mithril.API.GraphQL.GraphTypes.ExtensionMethods.TypeExtensions.html": {
    "href": "api/Mithril.API.GraphQL.GraphTypes.ExtensionMethods.TypeExtensions.html",
    "title": "Class TypeExtensions | Mithril API Reference",
    "keywords": "Class TypeExtensions Namespace Mithril.API.GraphQL.GraphTypes.ExtensionMethods Assembly Mithril.API.GraphQL.dll Type extensions public static class TypeExtensions Inheritance object TypeExtensions Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Methods FindGraphType(Type?) Finds the graph type associated with the C# type. public static Type? FindGraphType(this Type? type) Parameters type Type The property. Returns Type The graph type GetMappableMethods(Type) Gets the methods that are mappable by the system. public static MethodInfo[] GetMappableMethods(this Type classType) Parameters classType Type Type of the class. Returns MethodInfo[] The methods. GetMappableProperties(Type) Gets the mappable properties. public static PropertyInfo[] GetMappableProperties(this Type classType) Parameters classType Type Type of the class. Returns PropertyInfo[] The mappable properties IsBuiltInType(Type?) Determines whether [is built in type] [the specified type]. public static bool IsBuiltInType(this Type? type) Parameters type Type The type. Returns bool true if [is built in type] [the specified type]; otherwise, false. IsClassType(Type?) Determines whether [is class type] [the specified property type]. public static bool IsClassType(this Type? type) Parameters type Type Type of the property. Returns bool true if [is class type] [the specified property type]; otherwise, false. IsExpando(Type?) Determines whether the specified property type is expando. public static bool IsExpando(this Type? type) Parameters type Type Type of the property. Returns bool true if the specified property type is expando; otherwise, false. IsInterfaceType(Type?) Determines whether [is interface type] [the specified property type]. public static bool IsInterfaceType(this Type? type) Parameters type Type The type. Returns bool true if [is interface type] [the specified property type]; otherwise, false. IsListType(Type?) Determines whether [is list type] [the specified property type]. public static bool IsListType(this Type? type) Parameters type Type The type. Returns bool true if [is list type] [the specified property type]; otherwise, false. IsNullable(Type?) Determines whether the specified property is nullable. public static bool IsNullable(this Type? type) Parameters type Type The type. Returns bool true if the specified property is nullable; otherwise, false."
  },
  "api/Mithril.API.GraphQL.GraphTypes.ExtensionMethods.html": {
    "href": "api/Mithril.API.GraphQL.GraphTypes.ExtensionMethods.html",
    "title": "Namespace Mithril.API.GraphQL.GraphTypes.ExtensionMethods | Mithril API Reference",
    "keywords": "Namespace Mithril.API.GraphQL.GraphTypes.ExtensionMethods Classes FieldTypeExtensions FieldType extensions IArgumentExtensions IArgument extensions MemberInfoExtensions MemberInfo extension methods ParameterInfoExtensions ParameterInfo extensions TypeExtensions Type extensions"
  },
  "api/Mithril.API.GraphQL.GraphTypes.GenericGraphType-1.html": {
    "href": "api/Mithril.API.GraphQL.GraphTypes.GenericGraphType-1.html",
    "title": "Class GenericGraphType<TClass> | Mithril API Reference",
    "keywords": "Class GenericGraphType<TClass> Namespace Mithril.API.GraphQL.GraphTypes Assembly Mithril.API.GraphQL.dll Generic graph type public class GenericGraphType<TClass> : ObjectGraphType<TClass>, IObjectGraphType, IComplexGraphType, IGraphType, IProvideMetadata, IProvideDescription, IProvideDeprecationReason, INamedType, IImplementInterfaces Type Parameters TClass The type of the class. Inheritance object MetadataProvider GraphType ComplexGraphType<TClass> ObjectGraphType<TClass> GenericGraphType<TClass> Implements IObjectGraphType IComplexGraphType IGraphType IProvideMetadata IProvideDescription IProvideDeprecationReason INamedType IImplementInterfaces Inherited Members ObjectGraphType<TClass>.AddResolvedInterface(IInterfaceGraphType) ObjectGraphType<TClass>.Interface<TInterface>() ObjectGraphType<TClass>.Interface(Type) ObjectGraphType<TClass>.IsTypeOf ObjectGraphType<TClass>.Interfaces ObjectGraphType<TClass>.ResolvedInterfaces ComplexGraphType<TClass>.HasField(string) ComplexGraphType<TClass>.GetField(ROM) ComplexGraphType<TClass>.AddField(FieldType) ComplexGraphType<TClass>.CreateBuilder<TReturnType>(Type) ComplexGraphType<TClass>.CreateBuilder<TReturnType>(IGraphType) ComplexGraphType<TClass>.Field(Type, string, string, QueryArguments, Func<IResolveFieldContext<TClass>, object>, string) ComplexGraphType<TClass>.Field<TGraphType>(string, string, QueryArguments, Func<IResolveFieldContext<TClass>, object>, string) ComplexGraphType<TClass>.FieldDelegate<TGraphType>(string, string, QueryArguments, Delegate, string) ComplexGraphType<TClass>.FieldAsync(Type, string, string, QueryArguments, Func<IResolveFieldContext<TClass>, Task<object>>, string) ComplexGraphType<TClass>.FieldAsync<TGraphType>(string, string, QueryArguments, Func<IResolveFieldContext<TClass>, Task<object>>, string) ComplexGraphType<TClass>.FieldAsync<TGraphType, TReturnType>(string, string, QueryArguments, Func<IResolveFieldContext<TClass>, Task<TReturnType>>, string) ComplexGraphType<TClass>.FieldSubscribe<TGraphType>(string, string, QueryArguments, Func<IResolveFieldContext<TClass>, object>, Func<IResolveFieldContext, IObservable<object>>, string) ComplexGraphType<TClass>.FieldSubscribeAsync<TGraphType>(string, string, QueryArguments, Func<IResolveFieldContext<TClass>, object>, Func<IResolveFieldContext, Task<IObservable<object>>>, string) ComplexGraphType<TClass>.Field<TGraphType, TReturnType>(string) ComplexGraphType<TClass>.Field<TGraphType, TReturnType>() ComplexGraphType<TClass>.Field<TGraphType>() ComplexGraphType<TClass>.Field<TGraphType>(string) ComplexGraphType<TClass>.Field<TReturnType>(string, bool) ComplexGraphType<TClass>.Field(string, Type) ComplexGraphType<TClass>.Field(string, IGraphType) ComplexGraphType<TClass>.Field<TProperty>(string, Expression<Func<TClass, TProperty>>, bool, Type) ComplexGraphType<TClass>.Field<TProperty>(Expression<Func<TClass, TProperty>>, bool, Type) ComplexGraphType<TClass>.Connection<TNodeType>() ComplexGraphType<TClass>.Connection<TNodeType, TEdgeType>() ComplexGraphType<TClass>.Connection<TNodeType, TEdgeType, TConnectionType>() ComplexGraphType<TClass>.Fields GraphType.Initialize(ISchema) GraphType.ToString() GraphType.Equals(IGraphType) GraphType.Equals(object) GraphType.GetHashCode() GraphType.Name GraphType.Description GraphType.DeprecationReason MetadataProvider.GetMetadata<TType>(string, TType) MetadataProvider.GetMetadata<TType>(string, Func<TType>) MetadataProvider.HasMetadata(string) MetadataProvider.CopyMetadataTo(IProvideMetadata) MetadataProvider.Metadata object.Equals(object, object) object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Extension Methods GenericExtensions.When<TObject>(TObject, bool, Func<TObject, TObject>) ExpandoObjectExtensions.ConvertToExpando(object?) Constructors GenericGraphType() Initializes a new instance of the GenericGraphType<TClass> class. public GenericGraphType() GenericGraphType(GraphTypeManager?) Initializes a new instance of the GenericGraphType<TClass> class. public GenericGraphType(GraphTypeManager? graphTypeManager) Parameters graphTypeManager GraphTypeManager Generic graph type Methods AutoWire(GraphTypeManager) Automatically wires up known properties of the view model. public void AutoWire(GraphTypeManager graphTypeManager) Parameters graphTypeManager GraphTypeManager Generic graph type See Also ObjectGraphType<TSourceType>"
  },
  "api/Mithril.API.GraphQL.GraphTypes.IGenericGraphType.html": {
    "href": "api/Mithril.API.GraphQL.GraphTypes.IGenericGraphType.html",
    "title": "Interface IGenericGraphType | Mithril API Reference",
    "keywords": "Interface IGenericGraphType Namespace Mithril.API.GraphQL.GraphTypes Assembly Mithril.API.GraphQL.dll Generic graph type public interface IGenericGraphType Extension Methods GenericExtensions.When<TObject>(TObject, bool, Func<TObject, TObject>) ExpandoObjectExtensions.ConvertToExpando(object?) Methods AutoWire(GraphTypeManager) Automatically wires up the graph type. void AutoWire(GraphTypeManager graphTypeManager) Parameters graphTypeManager GraphTypeManager The graph type manager."
  },
  "api/Mithril.API.GraphQL.GraphTypes.JsonGraphType.html": {
    "href": "api/Mithril.API.GraphQL.GraphTypes.JsonGraphType.html",
    "title": "Class JsonGraphType | Mithril API Reference",
    "keywords": "Class JsonGraphType Namespace Mithril.API.GraphQL.GraphTypes Assembly Mithril.API.GraphQL.dll The Json scalar graph type represents a JSON document. (Copy of what should be built in to the library and will be taken out once merged into main on GraphQL.Net) public class JsonGraphType : ScalarGraphType, IGraphType, IProvideMetadata, IProvideDescription, IProvideDeprecationReason, INamedType Inheritance object MetadataProvider GraphType ScalarGraphType JsonGraphType Implements IGraphType IProvideMetadata IProvideDescription IProvideDeprecationReason INamedType Inherited Members ScalarGraphType.Serialize(object) ScalarGraphType.ParseDoubleAccordingSpec<TValueNode>(TValueNode) ScalarGraphType.IsValidDefault(object) ScalarGraphType.ToAST(object) ScalarGraphType.ThrowASTConversionError(object) ScalarGraphType.ThrowLiteralConversionError(GraphQLValue, string) ScalarGraphType.ThrowValueConversionError(object) ScalarGraphType.ThrowSerializationError(object) ScalarGraphType.Initialize(ISchema) GraphType.ToString() GraphType.Equals(IGraphType) GraphType.Equals(object) GraphType.GetHashCode() GraphType.Name GraphType.Description GraphType.DeprecationReason MetadataProvider.GetMetadata<TType>(string, TType) MetadataProvider.GetMetadata<TType>(string, Func<TType>) MetadataProvider.HasMetadata(string) MetadataProvider.CopyMetadataTo(IProvideMetadata) MetadataProvider.Metadata object.Equals(object, object) object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Extension Methods GenericExtensions.When<TObject>(TObject, bool, Func<TObject, TObject>) ExpandoObjectExtensions.ConvertToExpando(object?) Methods CanParseLiteral(GraphQLValue) Checks for literal input coercion possibility. It takes an abstract syntax tree (AST) element from a schema definition or query and checks if it can be converted into an appropriate internal value. In other words it checks if a scalar can be converted from its client-side representation as an argument to its server-side representation. This method can be overridden to validate input values without directly getting those values, i.e. without boxing. This method must return true when passed a GraphQLParser.AST.GraphQLNullValue node. public override bool CanParseLiteral(GraphQLValue value) Parameters value GraphQLValue AST value node. Must not be null, but may be GraphQLParser.AST.GraphQLNullValue. Returns bool CanParseValue(object?) Checks for value input coercion possibility. Argument values can not only provided via GraphQL syntax inside a query, but also via variable. It checks if a scalar can be converted from its client-side representation as a variable to its server-side representation. Parsing for arguments and variables are handled separately because while arguments must always be expressed in GraphQL query syntax, variable format is transport-specific (usually JSON). This method can be overridden to validate input values without directly getting those values, i.e. without boxing. This method must return true when passed a null value. public override bool CanParseValue(object? value) Parameters value object Runtime object from variables. May be null. Returns bool ParseLiteral(GraphQLValue) Literal input coercion. It takes an abstract syntax tree (AST) element from a schema definition or query and converts it into an appropriate internal value. In other words it transforms a scalar from its client-side representation as an argument to its server-side representation. Input coercion may not only return primitive values like String but rather complex ones when appropriate. This method must handle a value of GraphQLParser.AST.GraphQLNullValue. This method SHOULD be overridden by descendants. public override object? ParseLiteral(GraphQLValue value) Parameters value GraphQLValue AST value node. Must not be null, but may be GraphQLParser.AST.GraphQLNullValue. Returns object Internal scalar representation. Returning null is valid. ParseValue(object?) Value input coercion. Argument values can not only provided via GraphQL syntax inside a query, but also via variable. It transforms a scalar from its client-side representation as a variable to its server-side representation. Parsing for arguments and variables are handled separately because while arguments must always be expressed in GraphQL query syntax, variable format is transport-specific (usually JSON). This method must handle a value of null. public override object? ParseValue(object? value) Parameters value object Runtime object from variables. May be null. Returns object Internal scalar representation. Returning null is valid."
  },
  "api/Mithril.API.GraphQL.GraphTypes.html": {
    "href": "api/Mithril.API.GraphQL.GraphTypes.html",
    "title": "Namespace Mithril.API.GraphQL.GraphTypes | Mithril API Reference",
    "keywords": "Namespace Mithril.API.GraphQL.GraphTypes Classes CompositeQuery Composite query that creates the root node. GenericGraphType<TClass> Generic graph type JsonGraphType The Json scalar graph type represents a JSON document. (Copy of what should be built in to the library and will be taken out once merged into main on GraphQL.Net) Interfaces IGenericGraphType Generic graph type"
  },
  "api/Mithril.API.GraphQL.ObjectGraphs.CompositeSchema.html": {
    "href": "api/Mithril.API.GraphQL.ObjectGraphs.CompositeSchema.html",
    "title": "Class CompositeSchema | Mithril API Reference",
    "keywords": "Class CompositeSchema Namespace Mithril.API.GraphQL.ObjectGraphs Assembly Mithril.API.GraphQL.dll Composite schema public class CompositeSchema : Schema, ISchema, IProvideMetadata, IProvideDescription, IServiceProvider, IDisposable Inheritance object MetadataProvider Schema CompositeSchema Implements ISchema IProvideMetadata IProvideDescription IServiceProvider IDisposable Inherited Members Schema.For(string, Action<SchemaBuilder>) Schema.For<TSchemaBuilder>(string, Action<TSchemaBuilder>) Schema.Initialize() Schema.RegisterVisitor(ISchemaNodeVisitor) Schema.RegisterVisitor(Type) Schema.RegisterType(IGraphType) Schema.RegisterType(Type) Schema.RegisterTypes(params Type[]) Schema.RegisterTypeMapping(Type, Type) Schema.Dispose() Schema.Dispose(bool) Schema.CreateSchemaTypes() Schema.Validate() Schema.CoerceInputTypeDefaultValues() Schema.Features Schema.NameConverter Schema.FieldMiddleware Schema.Initialized Schema.Description Schema.Query Schema.Mutation Schema.Subscription Schema.Filter Schema.Comparer Schema.Directives Schema.AllTypes Schema.AdditionalTypes Schema.AdditionalTypeInstances Schema.SchemaMetaFieldType Schema.TypeMetaFieldType Schema.TypeNameMetaFieldType Schema.TypeMappings Schema.BuiltInTypeMappings MetadataProvider.GetMetadata<TType>(string, TType) MetadataProvider.GetMetadata<TType>(string, Func<TType>) MetadataProvider.HasMetadata(string) MetadataProvider.CopyMetadataTo(IProvideMetadata) MetadataProvider.Metadata object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods GenericExtensions.When<TObject>(TObject, bool, Func<TObject, TObject>) IServiceProviderExtensions.Exists<TClass>(IServiceProvider?) ExpandoObjectExtensions.ConvertToExpando(object?) Constructors CompositeSchema(IEnumerable<IQuery?>?) Initializes a new instance of the CompositeSchema class. public CompositeSchema(IEnumerable<IQuery?>? graphQueries) Parameters graphQueries IEnumerable<IQuery> The graph queries. See Also Schema"
  },
  "api/Mithril.API.GraphQL.ObjectGraphs.html": {
    "href": "api/Mithril.API.GraphQL.ObjectGraphs.html",
    "title": "Namespace Mithril.API.GraphQL.ObjectGraphs | Mithril API Reference",
    "keywords": "Namespace Mithril.API.GraphQL.ObjectGraphs Classes CompositeSchema Composite schema"
  },
  "api/Mithril.API.GraphQL.Queries.DropDownQuery.html": {
    "href": "api/Mithril.API.GraphQL.Queries.DropDownQuery.html",
    "title": "Class DropDownQuery | Mithril API Reference",
    "keywords": "Class DropDownQuery Namespace Mithril.API.GraphQL.Queries Assembly Mithril.API.GraphQL.dll Simple entry point for drop down style key/value pair queries. public class DropDownQuery : QueryBaseClass<IEnumerable<DropDownVM<long>>>, IQuery<IEnumerable<DropDownVM<long>>>, IQuery Inheritance object QueryBaseClass<IEnumerable<DropDownVM<long>>> DropDownQuery Implements IQuery<IEnumerable<DropDownVM<long>>> IQuery Inherited Members QueryBaseClass<IEnumerable<DropDownVM<long>>>.DeprecationReason QueryBaseClass<IEnumerable<DropDownVM<long>>>.Description QueryBaseClass<IEnumerable<DropDownVM<long>>>.Features QueryBaseClass<IEnumerable<DropDownVM<long>>>.ReturnType QueryBaseClass<IEnumerable<DropDownVM<long>>>.Version QueryBaseClass<IEnumerable<DropDownVM<long>>>.FeatureManager QueryBaseClass<IEnumerable<DropDownVM<long>>>.Logger QueryBaseClass<IEnumerable<DropDownVM<long>>>.IsFeatureEnabled() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods GenericExtensions.When<TObject>(TObject, bool, Func<TObject, TObject>) ExpandoObjectExtensions.ConvertToExpando(object?) Remarks Initializes a new instance of the DropDownQuery class. Constructors DropDownQuery(ILogger<DropDownQuery>?, IFeatureManager?, IDropDownQueryService?, IDataService?) Simple entry point for drop down style key/value pair queries. public DropDownQuery(ILogger<DropDownQuery>? logger, IFeatureManager? featureManager, IDropDownQueryService? dropDownQueryService, IDataService? dataService) Parameters logger ILogger<DropDownQuery> The logger. featureManager IFeatureManager The feature manager. dropDownQueryService IDropDownQueryService The drop down query service. dataService IDataService The data service. Remarks Initializes a new instance of the DropDownQuery class. Properties Arguments Gets the arguments. public override IArgument[] Arguments { get; } Property Value IArgument[] The arguments. Name Gets the name. public override string Name { get; } Property Value string The name. Methods ResolveAsync(ClaimsPrincipal?, Arguments) Used to resolve the data asked for by the query. public override Task<IEnumerable<DropDownVM<long>>?> ResolveAsync(ClaimsPrincipal? user, Arguments arguments) Parameters user ClaimsPrincipal The user. arguments Arguments The arguments. Returns Task<IEnumerable<DropDownVM<long>>> The data specified."
  },
  "api/Mithril.API.GraphQL.Queries.html": {
    "href": "api/Mithril.API.GraphQL.Queries.html",
    "title": "Namespace Mithril.API.GraphQL.Queries | Mithril API Reference",
    "keywords": "Namespace Mithril.API.GraphQL.Queries Classes DropDownQuery Simple entry point for drop down style key/value pair queries."
  },
  "api/Mithril.API.GraphQL.Services.DropDownQueryService.html": {
    "href": "api/Mithril.API.GraphQL.Services.DropDownQueryService.html",
    "title": "Class DropDownQueryService | Mithril API Reference",
    "keywords": "Class DropDownQueryService Namespace Mithril.API.GraphQL.Services Assembly Mithril.API.GraphQL.dll Drop down query service public class DropDownQueryService : IDropDownQueryService Inheritance object DropDownQueryService Implements IDropDownQueryService Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods GenericExtensions.When<TObject>(TObject, bool, Func<TObject, TObject>) ExpandoObjectExtensions.ConvertToExpando(object?) Remarks Initializes a new instance of the DropDownQueryService class. Constructors DropDownQueryService(IEnumerable<IDropDownQuery>) Drop down query service public DropDownQueryService(IEnumerable<IDropDownQuery> dropDownQueries) Parameters dropDownQueries IEnumerable<IDropDownQuery> The drop down queries. Remarks Initializes a new instance of the DropDownQueryService class. See Also IDropDownQueryService Methods FindDropDownQuery(string?, ClaimsPrincipal?) Finds the drop down query. public IDropDownQuery? FindDropDownQuery(string? name, ClaimsPrincipal? user) Parameters name string The name. user ClaimsPrincipal The user. Returns IDropDownQuery The drop down query specified. See Also IDropDownQueryService"
  },
  "api/Mithril.API.GraphQL.Services.QueryService.html": {
    "href": "api/Mithril.API.GraphQL.Services.QueryService.html",
    "title": "Class QueryService | Mithril API Reference",
    "keywords": "Class QueryService Namespace Mithril.API.GraphQL.Services Assembly Mithril.API.GraphQL.dll Query service public class QueryService : IQueryService Inheritance object QueryService Implements IQueryService Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods GenericExtensions.When<TObject>(TObject, bool, Func<TObject, TObject>) ExpandoObjectExtensions.ConvertToExpando(object?) Remarks Initializes a new instance of the QueryService class. Constructors QueryService(IEnumerable<IQuery>) Query service public QueryService(IEnumerable<IQuery> queries) Parameters queries IEnumerable<IQuery> The queries. Remarks Initializes a new instance of the QueryService class. See Also IQueryService Methods FindQuery(string?) Finds the query specified. public IQuery? FindQuery(string? name) Parameters name string The name of the query. Returns IQuery The query specified. See Also IQueryService"
  },
  "api/Mithril.API.GraphQL.Services.html": {
    "href": "api/Mithril.API.GraphQL.Services.html",
    "title": "Namespace Mithril.API.GraphQL.Services | Mithril API Reference",
    "keywords": "Namespace Mithril.API.GraphQL.Services Classes DropDownQueryService Drop down query service QueryService Query service"
  },
  "api/Mithril.API.GraphQL.html": {
    "href": "api/Mithril.API.GraphQL.html",
    "title": "Namespace Mithril.API.GraphQL | Mithril API Reference",
    "keywords": "Namespace Mithril.API.GraphQL Classes GraphQLModule API Module"
  },
  "api/Mithril.API.Swagger.SchemaFilters.EnumNameSchemaFilter.html": {
    "href": "api/Mithril.API.Swagger.SchemaFilters.EnumNameSchemaFilter.html",
    "title": "Class EnumNameSchemaFilter | Mithril API Reference",
    "keywords": "Class EnumNameSchemaFilter Namespace Mithril.API.Swagger.SchemaFilters Assembly Mithril.API.Swagger.dll Enum name schema filter public class EnumNameSchemaFilter : ISchemaFilter Inheritance object EnumNameSchemaFilter Implements ISchemaFilter Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods GenericExtensions.When<TObject>(TObject, bool, Func<TObject, TObject>) ExpandoObjectExtensions.ConvertToExpando(object?) Methods Apply(OpenApiSchema, SchemaFilterContext) Applies the specified schema. public void Apply(OpenApiSchema schema, SchemaFilterContext context) Parameters schema OpenApiSchema The schema. context SchemaFilterContext The context. See Also ISchemaFilter"
  },
  "api/Mithril.API.Swagger.SchemaFilters.html": {
    "href": "api/Mithril.API.Swagger.SchemaFilters.html",
    "title": "Namespace Mithril.API.Swagger.SchemaFilters | Mithril API Reference",
    "keywords": "Namespace Mithril.API.Swagger.SchemaFilters Classes EnumNameSchemaFilter Enum name schema filter"
  },
  "api/Mithril.API.Swagger.SwaggerModule.html": {
    "href": "api/Mithril.API.Swagger.SwaggerModule.html",
    "title": "Class SwaggerModule | Mithril API Reference",
    "keywords": "Class SwaggerModule Namespace Mithril.API.Swagger Assembly Mithril.API.Swagger.dll Swagger module public class SwaggerModule : ModuleBaseClass<SwaggerModule>, IEquatable<SwaggerModule>, IModule Inheritance object ModuleBaseClass<SwaggerModule> SwaggerModule Implements IEquatable<SwaggerModule> IModule Inherited Members ModuleBaseClass<SwaggerModule>.Category ModuleBaseClass<SwaggerModule>.ContentPath ModuleBaseClass<SwaggerModule>.Features ModuleBaseClass<SwaggerModule>.ID ModuleBaseClass<SwaggerModule>.LastModified ModuleBaseClass<SwaggerModule>.Name ModuleBaseClass<SwaggerModule>.Order ModuleBaseClass<SwaggerModule>.Tags ModuleBaseClass<SwaggerModule>.Version ModuleBaseClass<SwaggerModule>.ConfigureHostSettings(IHostBuilder, IConfiguration, IHostEnvironment) ModuleBaseClass<SwaggerModule>.ConfigureLoggingSettings(ILoggingBuilder, IConfiguration, IHostEnvironment) ModuleBaseClass<SwaggerModule>.ConfigureMVC(IMvcBuilder, IConfiguration, IHostEnvironment) ModuleBaseClass<SwaggerModule>.ConfigureRoutes(IEndpointRouteBuilder, IConfiguration, IHostEnvironment) ModuleBaseClass<SwaggerModule>.ConfigureWebHostSettings(IWebHostBuilder, IConfiguration, IHostEnvironment) ModuleBaseClass<SwaggerModule>.Equals(object) ModuleBaseClass<SwaggerModule>.Equals(SwaggerModule) ModuleBaseClass<SwaggerModule>.GetHashCode() ModuleBaseClass<SwaggerModule>.InitializeDataAsync(IDataService, IServiceProvider) ModuleBaseClass<SwaggerModule>.OnStarted() ModuleBaseClass<SwaggerModule>.OnStopped() ModuleBaseClass<SwaggerModule>.OnStopping() object.Equals(object, object) object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods GenericExtensions.When<TObject>(TObject, bool, Func<TObject, TObject>) ExpandoObjectExtensions.ConvertToExpando(object?) Constructors SwaggerModule() Initializes a new instance of the SwaggerModule class. public SwaggerModule() Methods ConfigureApplication(IApplicationBuilder?, IConfiguration?, IHostEnvironment?) Configures the application. public override IApplicationBuilder? ConfigureApplication(IApplicationBuilder? app, IConfiguration? configuration, IHostEnvironment? environment) Parameters app IApplicationBuilder The application. configuration IConfiguration The configuration. environment IHostEnvironment The environment. Returns IApplicationBuilder Application builder ConfigureServices(IServiceCollection?, IConfiguration?, IHostEnvironment?) Configures the services for the module. public override IServiceCollection? ConfigureServices(IServiceCollection? services, IConfiguration? configuration, IHostEnvironment? environment) Parameters services IServiceCollection The services collection. configuration IConfiguration The configuration. environment IHostEnvironment The environment. Returns IServiceCollection Services See Also ModuleBaseClass<TModule>"
  },
  "api/Mithril.API.Swagger.html": {
    "href": "api/Mithril.API.Swagger.html",
    "title": "Namespace Mithril.API.Swagger | Mithril API Reference",
    "keywords": "Namespace Mithril.API.Swagger Classes SwaggerModule Swagger module"
  },
  "api/Mithril.Admin.Abstractions.BaseClasses.EntityBaseClass-1.html": {
    "href": "api/Mithril.Admin.Abstractions.BaseClasses.EntityBaseClass-1.html",
    "title": "Class EntityBaseClass<TEntity> | Mithril API Reference",
    "keywords": "Class EntityBaseClass<TEntity> Namespace Mithril.Admin.Abstractions.BaseClasses Assembly Mithril.Admin.Abstractions.dll Entity base class public abstract class EntityBaseClass<TEntity> : IEntity<TEntity>, IEntity where TEntity : IModel Type Parameters TEntity The type of the entity. Inheritance object EntityBaseClass<TEntity> Implements IEntity<TEntity> IEntity Derived RequestTraceVM MessageTemplateVM LookUpTypeVM FeatureVM MenuVM RouteEntryVM PermissionVM TenantVM UserClaimVM UserVM Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods GenericExtensions.When<TObject>(TObject, bool, Func<TObject, TObject>) ExpandoObjectExtensions.ConvertToExpando(object?) Constructors EntityBaseClass() Initializes a new instance of the EntityBaseClass<TEntity> class. protected EntityBaseClass() EntityBaseClass(TEntity?) Initializes a new instance of the EntityBaseClass<TEntity> class. protected EntityBaseClass(TEntity? entity) Parameters entity TEntity The entity. Properties Active Gets or sets a value indicating whether this IEntity is active. [Order(2147483647)] public bool Active { get; set; } Property Value bool true if active; otherwise, false. ID Gets or sets the identifier. [Order(-2147483648)] public long ID { get; set; } Property Value long The identifier. Methods SaveAsync(long, IDataService?, IServiceProvider?, ClaimsPrincipal?) Saves the changes asynchronously. public abstract Task<TEntity?> SaveAsync(long id, IDataService? dataService, IServiceProvider? serviceProvider, ClaimsPrincipal? currentUser) Parameters id long The identifier. dataService IDataService The data service. serviceProvider IServiceProvider The service provider. currentUser ClaimsPrincipal The current user. Returns Task<TEntity> The async task. See Also IEntity<TModel>"
  },
  "api/Mithril.Admin.Abstractions.BaseClasses.EntityEditorBaseClass-1.html": {
    "href": "api/Mithril.Admin.Abstractions.BaseClasses.EntityEditorBaseClass-1.html",
    "title": "Class EntityEditorBaseClass<TEntity> | Mithril API Reference",
    "keywords": "Class EntityEditorBaseClass<TEntity> Namespace Mithril.Admin.Abstractions.BaseClasses Assembly Mithril.Admin.Abstractions.dll Entity editor base class public abstract class EntityEditorBaseClass<TEntity> : IEntityEditor, IEditor where TEntity : IEntity, new() Type Parameters TEntity The type of the entity. Inheritance object EntityEditorBaseClass<TEntity> Implements IEntityEditor IEditor Derived EntityEditorBaseClass<TEntity, TModel> SettingsEditorBaseClass<TEntity> Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods GenericExtensions.When<TObject>(TObject, bool, Func<TObject, TObject>) ExpandoObjectExtensions.ConvertToExpando(object?) Constructors EntityEditorBaseClass(IDataService?, IEntityMetadataService?, IServiceProvider?, string?) Initializes a new instance of the EntityEditorBaseClass<TEntity> class. protected EntityEditorBaseClass(IDataService? dataService, IEntityMetadataService? entityMetadataService, IServiceProvider? serviceProvider, string? dataType = null) Parameters dataService IDataService The data service. entityMetadataService IEntityMetadataService The entity metadata service. serviceProvider IServiceProvider The service provider. dataType string Type of the data. Properties Category Gets the category. public virtual string Category { get; } Property Value string The category. ComponentDefinition Gets the component definition. public IComponentDefinition ComponentDefinition { get; protected set; } Property Value IComponentDefinition The component definition. DataService Gets the data service. protected IDataService? DataService { get; } Property Value IDataService The data service. Description Gets the description. public virtual string Description { get; } Property Value string The description. EntityType Gets the type of the entity. public string EntityType { get; } Property Value string The type of the entity. Icon Gets the icon. public virtual string Icon { get; } Property Value string The icon. Name Gets the name. public virtual string Name { get; } Property Value string The name. ServiceProvider Gets the service provider. protected IServiceProvider? ServiceProvider { get; } Property Value IServiceProvider The service provider. Methods ActivateAsync(long, ClaimsPrincipal?) Activates the entity specified asynchronously. public abstract Task<bool> ActivateAsync(long id, ClaimsPrincipal? currentUser) Parameters id long The identifier. currentUser ClaimsPrincipal The current user. Returns Task<bool> True if it succeeds, false otherwise. CanView(ClaimsPrincipal?) Determines whether this instance can be viewed by the specified user. public virtual bool CanView(ClaimsPrincipal? user) Parameters user ClaimsPrincipal The user. Returns bool true if this instance can be viewed by the specified user; otherwise, false. DeleteEntityAsync(long, ClaimsPrincipal?) Deletes the entity asynchronously. public abstract Task<bool> DeleteEntityAsync(long id, ClaimsPrincipal? currentUser) Parameters id long The identifier. currentUser ClaimsPrincipal The current user. Returns Task<bool> True if it succeeds, false otherwise. Exceptions NotImplementedException Load(long, ExpandoObject?, ClaimsPrincipal?) Loads the specified identifier. public abstract IEntity? Load(long id, ExpandoObject? model, ClaimsPrincipal? currentUser) Parameters id long The identifier. model ExpandoObject The model. currentUser ClaimsPrincipal The current user. Returns IEntity The entity specified. LoadPageAsync(int, int, string, bool, string, ClaimsPrincipal?) Loads the page asynchronously. public abstract Task<IEnumerable<IEntity>> LoadPageAsync(int page, int pageSize, string sortField, bool sortAscending, string searchQuery, ClaimsPrincipal? currentUser) Parameters page int The page (zero based). pageSize int Size of the page. sortField string The sort field. sortAscending bool if set to true [sort ascending]. searchQuery string The search query. currentUser ClaimsPrincipal The current user. Returns Task<IEnumerable<IEntity>> The entities specified. SaveEntityAsync(long, ExpandoObject, ClaimsPrincipal?) Saves the changes asynchronously. public abstract Task<bool> SaveEntityAsync(long id, ExpandoObject entity, ClaimsPrincipal? currentUser) Parameters id long The identifier. entity ExpandoObject The entity. currentUser ClaimsPrincipal The current user. Returns Task<bool> True if it succeeds, false otherwise. TotalActiveAsync(ClaimsPrincipal?) Gets the total active items. public abstract Task<int> TotalActiveAsync(ClaimsPrincipal? currentUser) Parameters currentUser ClaimsPrincipal The current user. Returns Task<int> The total. See Also EntityEditorBaseClass<TEntity>"
  },
  "api/Mithril.Admin.Abstractions.BaseClasses.EntityEditorBaseClass-2.html": {
    "href": "api/Mithril.Admin.Abstractions.BaseClasses.EntityEditorBaseClass-2.html",
    "title": "Class EntityEditorBaseClass<TEntity, TModel> | Mithril API Reference",
    "keywords": "Class EntityEditorBaseClass<TEntity, TModel> Namespace Mithril.Admin.Abstractions.BaseClasses Assembly Mithril.Admin.Abstractions.dll Entity editor base class public abstract class EntityEditorBaseClass<TEntity, TModel> : EntityEditorBaseClass<TEntity>, IEntityEditor, IEditor where TEntity : IEntity<TModel>, new() where TModel : ModelBase<TModel>, new() Type Parameters TEntity The type of the entity. TModel The type of the model. Inheritance object EntityEditorBaseClass<TEntity> EntityEditorBaseClass<TEntity, TModel> Implements IEntityEditor IEditor Derived SettingsEditorBaseClass<TEntity, TModel> RequestTraceEditor MessageTemplateEditor LookUpTypeEditor FeatureEditor MenuEditor RouteEditor PermissionEditor TenantEditor UserClaimEditor UserEditor Inherited Members EntityEditorBaseClass<TEntity>.Category EntityEditorBaseClass<TEntity>.ComponentDefinition EntityEditorBaseClass<TEntity>.Description EntityEditorBaseClass<TEntity>.EntityType EntityEditorBaseClass<TEntity>.Icon EntityEditorBaseClass<TEntity>.Name EntityEditorBaseClass<TEntity>.DataService EntityEditorBaseClass<TEntity>.ServiceProvider object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods GenericExtensions.When<TObject>(TObject, bool, Func<TObject, TObject>) ExpandoObjectExtensions.ConvertToExpando(object?) Constructors EntityEditorBaseClass(IDataService?, IEntityMetadataService?, IServiceProvider?, string?) Initializes a new instance of the EntityEditorBaseClass<TEntity> class. protected EntityEditorBaseClass(IDataService? dataService, IEntityMetadataService? entityMetadataService, IServiceProvider? serviceProvider, string? dataType = null) Parameters dataService IDataService The data service. entityMetadataService IEntityMetadataService The entity metadata service. serviceProvider IServiceProvider The service provider. dataType string Type of the data. Methods ActivateAsync(long, ClaimsPrincipal?) Activates the entity specified asynchronously. public override Task<bool> ActivateAsync(long id, ClaimsPrincipal? currentUser) Parameters id long The identifier. currentUser ClaimsPrincipal The current user. Returns Task<bool> True if it succeeds, false otherwise. CanView(ClaimsPrincipal?) Determines whether this instance can be viewed by the specified user. public override bool CanView(ClaimsPrincipal? user) Parameters user ClaimsPrincipal The user. Returns bool true if this instance can be viewed by the specified user; otherwise, false. Convert(TModel, bool) Converts the model into the appropriate view model. protected abstract IEntity Convert(TModel model, bool full = true) Parameters model TModel The model. full bool if set to true [full]. Returns IEntity The view model DeleteEntityAsync(long, ClaimsPrincipal?) Deletes the entity asynchronously. public override Task<bool> DeleteEntityAsync(long id, ClaimsPrincipal? currentUser) Parameters id long The identifier. currentUser ClaimsPrincipal The current user. Returns Task<bool> True if it succeeds, false otherwise. Exceptions NotImplementedException FilterQueryBySearchQuery(IQueryable<TModel>?, string) Filters the query by search term. protected virtual IQueryable<TModel>? FilterQueryBySearchQuery(IQueryable<TModel>? query, string searchQuery) Parameters query IQueryable<TModel> The query. searchQuery string The search query. Returns IQueryable<TModel> The resulting query. Load(long, ExpandoObject?, ClaimsPrincipal?) Loads the specified identifier. public override IEntity? Load(long id, ExpandoObject? model, ClaimsPrincipal? currentUser) Parameters id long The identifier. model ExpandoObject The model. currentUser ClaimsPrincipal The current user. Returns IEntity The entity specified. LoadModel(long) Loads the model. protected virtual TModel LoadModel(long id) Parameters id long The identifier. Returns TModel The model requested LoadPageAsync(int, int, string, bool, string, ClaimsPrincipal?) Loads the page asynchronously. public override Task<IEnumerable<IEntity>> LoadPageAsync(int page, int pageSize, string sortField, bool sortAscending, string searchQuery, ClaimsPrincipal? currentUser) Parameters page int The page (zero based). pageSize int Size of the page. sortField string The sort field. sortAscending bool if set to true [sort ascending]. searchQuery string The search query. currentUser ClaimsPrincipal The current user. Returns Task<IEnumerable<IEntity>> The entities specified. MakeActiveAsync(TModel) Makes the model active. protected virtual Task MakeActiveAsync(TModel model) Parameters model TModel The model. Returns Task The async task. MakeInactiveAsync(TModel) Makes the model inactive. protected virtual Task MakeInactiveAsync(TModel model) Parameters model TModel The model. Returns Task The async task. SaveEntityAsync(long, ExpandoObject, ClaimsPrincipal?) Saves the changes asynchronously. public override Task<bool> SaveEntityAsync(long id, ExpandoObject entity, ClaimsPrincipal? currentUser) Parameters id long The identifier. entity ExpandoObject The entity. currentUser ClaimsPrincipal The current user. Returns Task<bool> True if it succeeds, false otherwise. TotalActiveAsync(ClaimsPrincipal?) Gets the total active items. public override Task<int> TotalActiveAsync(ClaimsPrincipal? currentUser) Parameters currentUser ClaimsPrincipal Entity editor base class Returns Task<int> The total. See Also EntityEditorBaseClass<TEntity>"
  },
  "api/Mithril.Admin.Abstractions.BaseClasses.MetadataBuilderBaseClass.html": {
    "href": "api/Mithril.Admin.Abstractions.BaseClasses.MetadataBuilderBaseClass.html",
    "title": "Class MetadataBuilderBaseClass | Mithril API Reference",
    "keywords": "Class MetadataBuilderBaseClass Namespace Mithril.Admin.Abstractions.BaseClasses Assembly Mithril.Admin.Abstractions.dll Metadata Builder base class public abstract class MetadataBuilderBaseClass : IMetadataBuilder Inheritance object MetadataBuilderBaseClass Implements IMetadataBuilder Derived CanList HasHint HasMax HasMin HasPattern HasPlaceholder HasQuery HasReadOnly HasStep HasSubtitle IsCheckbox IsDefaultInput IsEnumRadioList IsHtml IsList IsSelect IsText IsTextArea IsUpload StandardValidation Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods GenericExtensions.When<TObject>(TObject, bool, Func<TObject, TObject>) ExpandoObjectExtensions.ConvertToExpando(object?) Constructors MetadataBuilderBaseClass() Initializes a new instance of the MetadataBuilderBaseClass class. protected MetadataBuilderBaseClass() Properties Order Gets the order. public virtual int Order { get; } Property Value int The order. Methods ExtractMetadata(PropertyMetadata?, IEntityMetadataService) Extracts metadata and adds it to the PropertyMetadata object. public abstract PropertyMetadata? ExtractMetadata(PropertyMetadata? propertyMetadata, IEntityMetadataService metadataService) Parameters propertyMetadata PropertyMetadata The property metadata. metadataService IEntityMetadataService The metadata service. Returns PropertyMetadata The resulting property metadata. See Also IMetadataBuilder"
  },
  "api/Mithril.Admin.Abstractions.BaseClasses.SettingsBaseClass.html": {
    "href": "api/Mithril.Admin.Abstractions.BaseClasses.SettingsBaseClass.html",
    "title": "Class SettingsBaseClass | Mithril API Reference",
    "keywords": "Class SettingsBaseClass Namespace Mithril.Admin.Abstractions.BaseClasses Assembly Mithril.Admin.Abstractions.dll Base class for settings public class SettingsBaseClass : IEntity Inheritance object SettingsBaseClass Implements IEntity Derived ThemeSettingsVM Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods GenericExtensions.When<TObject>(TObject, bool, Func<TObject, TObject>) ExpandoObjectExtensions.ConvertToExpando(object?) Constructors SettingsBaseClass() Initializes a new instance of the SettingsBaseClass class. protected SettingsBaseClass() Properties Active Gets or sets a value indicating whether this IEntity is active. [JsonIgnore] public bool Active { get; set; } Property Value bool true if active; otherwise, false. ID Gets or sets the identifier. [JsonIgnore] public long ID { get; set; } Property Value long The identifier. See Also IEntity"
  },
  "api/Mithril.Admin.Abstractions.BaseClasses.SettingsEditorBaseClass-1.html": {
    "href": "api/Mithril.Admin.Abstractions.BaseClasses.SettingsEditorBaseClass-1.html",
    "title": "Class SettingsEditorBaseClass<TEntity> | Mithril API Reference",
    "keywords": "Class SettingsEditorBaseClass<TEntity> Namespace Mithril.Admin.Abstractions.BaseClasses Assembly Mithril.Admin.Abstractions.dll Settings editor base class public abstract class SettingsEditorBaseClass<TEntity> : EntityEditorBaseClass<TEntity>, IEntityEditor, IEditor where TEntity : IEntity, new() Type Parameters TEntity The type of the entity. Inheritance object EntityEditorBaseClass<TEntity> SettingsEditorBaseClass<TEntity> Implements IEntityEditor IEditor Derived ThemeEditor Inherited Members EntityEditorBaseClass<TEntity>.ComponentDefinition EntityEditorBaseClass<TEntity>.Description EntityEditorBaseClass<TEntity>.EntityType EntityEditorBaseClass<TEntity>.Icon EntityEditorBaseClass<TEntity>.Name EntityEditorBaseClass<TEntity>.DataService EntityEditorBaseClass<TEntity>.ServiceProvider EntityEditorBaseClass<TEntity>.CanView(ClaimsPrincipal) EntityEditorBaseClass<TEntity>.Load(long, ExpandoObject, ClaimsPrincipal) object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods GenericExtensions.When<TObject>(TObject, bool, Func<TObject, TObject>) ExpandoObjectExtensions.ConvertToExpando(object?) Constructors SettingsEditorBaseClass(IDataService?, IEntityMetadataService?, IServiceProvider?, string?) Initializes a new instance of the SettingsEditorBaseClass<TEntity> class. protected SettingsEditorBaseClass(IDataService? dataService, IEntityMetadataService? entityMetadataService, IServiceProvider? serviceProvider, string? dataType = null) Parameters dataService IDataService The data service. entityMetadataService IEntityMetadataService The entity metadata service. serviceProvider IServiceProvider The service provider. dataType string Type of the data. Properties Category Gets the category. public override string Category { get; } Property Value string The category. Methods ActivateAsync(long, ClaimsPrincipal?) Activates the entity specified asynchronously. public override Task<bool> ActivateAsync(long id, ClaimsPrincipal? currentUser) Parameters id long The identifier. currentUser ClaimsPrincipal Returns Task<bool> True if it succeeds, false otherwise. DeleteEntityAsync(long, ClaimsPrincipal?) Deletes the entity asynchronously. public override Task<bool> DeleteEntityAsync(long id, ClaimsPrincipal? currentUser) Parameters id long The identifier. currentUser ClaimsPrincipal Returns Task<bool> True if it succeeds, false otherwise. LoadPageAsync(int, int, string, bool, string, ClaimsPrincipal?) Loads the page asynchronously. public override Task<IEnumerable<IEntity>> LoadPageAsync(int page, int pageSize, string sortField, bool sortAscending, string searchQuery, ClaimsPrincipal? currentUser) Parameters page int The page (zero based). pageSize int Size of the page. sortField string The sort field. sortAscending bool if set to true [sort ascending]. searchQuery string The search query. currentUser ClaimsPrincipal Returns Task<IEnumerable<IEntity>> The entities specified. SaveEntityAsync(long, ExpandoObject, ClaimsPrincipal?) Saves the changes asynchronously. public override Task<bool> SaveEntityAsync(long id, ExpandoObject entity, ClaimsPrincipal? currentUser) Parameters id long The identifier. entity ExpandoObject The entity. currentUser ClaimsPrincipal Returns Task<bool> True if it succeeds, false otherwise. SaveEntityAsync(long, TEntity?, ClaimsPrincipal?) Saves the entity asynchronous. protected abstract Task<bool> SaveEntityAsync(long id, TEntity? entity, ClaimsPrincipal? currentUser) Parameters id long The identifier. entity TEntity The entity. currentUser ClaimsPrincipal The current user. Returns Task<bool> TotalActiveAsync(ClaimsPrincipal?) Gets the total active items. public override Task<int> TotalActiveAsync(ClaimsPrincipal? currentUser) Parameters currentUser ClaimsPrincipal Returns Task<int> The total. See Also EntityEditorBaseClass<TEntity, TModel>"
  },
  "api/Mithril.Admin.Abstractions.BaseClasses.SettingsEditorBaseClass-2.html": {
    "href": "api/Mithril.Admin.Abstractions.BaseClasses.SettingsEditorBaseClass-2.html",
    "title": "Class SettingsEditorBaseClass<TEntity, TModel> | Mithril API Reference",
    "keywords": "Class SettingsEditorBaseClass<TEntity, TModel> Namespace Mithril.Admin.Abstractions.BaseClasses Assembly Mithril.Admin.Abstractions.dll Settings editor base class public abstract class SettingsEditorBaseClass<TEntity, TModel> : EntityEditorBaseClass<TEntity, TModel>, IEntityEditor, IEditor where TEntity : IEntity<TModel>, new() where TModel : ModelBase<TModel>, new() Type Parameters TEntity The type of the entity. TModel The type of the model. Inheritance object EntityEditorBaseClass<TEntity> EntityEditorBaseClass<TEntity, TModel> SettingsEditorBaseClass<TEntity, TModel> Implements IEntityEditor IEditor Inherited Members EntityEditorBaseClass<TEntity, TModel>.ActivateAsync(long, ClaimsPrincipal) EntityEditorBaseClass<TEntity, TModel>.CanView(ClaimsPrincipal) EntityEditorBaseClass<TEntity, TModel>.DeleteEntityAsync(long, ClaimsPrincipal) EntityEditorBaseClass<TEntity, TModel>.Load(long, ExpandoObject, ClaimsPrincipal) EntityEditorBaseClass<TEntity, TModel>.LoadPageAsync(int, int, string, bool, string, ClaimsPrincipal) EntityEditorBaseClass<TEntity, TModel>.SaveEntityAsync(long, ExpandoObject, ClaimsPrincipal) EntityEditorBaseClass<TEntity, TModel>.TotalActiveAsync(ClaimsPrincipal) EntityEditorBaseClass<TEntity, TModel>.Convert(TModel, bool) EntityEditorBaseClass<TEntity, TModel>.FilterQueryBySearchQuery(IQueryable<TModel>, string) EntityEditorBaseClass<TEntity, TModel>.LoadModel(long) EntityEditorBaseClass<TEntity, TModel>.MakeActiveAsync(TModel) EntityEditorBaseClass<TEntity, TModel>.MakeInactiveAsync(TModel) EntityEditorBaseClass<TEntity>.ComponentDefinition EntityEditorBaseClass<TEntity>.Description EntityEditorBaseClass<TEntity>.EntityType EntityEditorBaseClass<TEntity>.Icon EntityEditorBaseClass<TEntity>.Name EntityEditorBaseClass<TEntity>.DataService EntityEditorBaseClass<TEntity>.ServiceProvider EntityEditorBaseClass<TEntity>.CanView(ClaimsPrincipal) EntityEditorBaseClass<TEntity>.Load(long, ExpandoObject, ClaimsPrincipal) EntityEditorBaseClass<TEntity>.SaveEntityAsync(long, ExpandoObject, ClaimsPrincipal) EntityEditorBaseClass<TEntity>.TotalActiveAsync(ClaimsPrincipal) object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods GenericExtensions.When<TObject>(TObject, bool, Func<TObject, TObject>) ExpandoObjectExtensions.ConvertToExpando(object?) Constructors SettingsEditorBaseClass(IDataService, IEntityMetadataService, IServiceProvider?, string?) Initializes a new instance of the SettingsEditorBaseClass<TEntity> class. protected SettingsEditorBaseClass(IDataService dataService, IEntityMetadataService entityMetadataService, IServiceProvider? serviceProvider, string? dataType = null) Parameters dataService IDataService The data service. entityMetadataService IEntityMetadataService The entity metadata service. serviceProvider IServiceProvider The service provider. dataType string Type of the data. Properties Category Gets the category. public override string Category { get; } Property Value string The category. Methods ActivateAsync(long, ClaimsPrincipal?) Activates the entity specified asynchronously. public override Task<bool> ActivateAsync(long id, ClaimsPrincipal? currentUser) Parameters id long The identifier. currentUser ClaimsPrincipal Returns Task<bool> True if it succeeds, false otherwise. DeleteEntityAsync(long, ClaimsPrincipal?) Deletes the entity asynchronously. public override Task<bool> DeleteEntityAsync(long id, ClaimsPrincipal? currentUser) Parameters id long The identifier. currentUser ClaimsPrincipal Returns Task<bool> True if it succeeds, false otherwise. LoadModel(long) Loads the model. protected override TModel LoadModel(long id) Parameters id long The identifier. Returns TModel The model requested LoadPageAsync(int, int, string, bool, string, ClaimsPrincipal?) Loads the page asynchronously. public override Task<IEnumerable<IEntity>> LoadPageAsync(int page, int pageSize, string sortField, bool sortAscending, string searchQuery, ClaimsPrincipal? currentUser) Parameters page int The page (zero based). pageSize int Size of the page. sortField string The sort field. sortAscending bool if set to true [sort ascending]. searchQuery string The search query. currentUser ClaimsPrincipal Returns Task<IEnumerable<IEntity>> The entities specified. See Also EntityEditorBaseClass<TEntity, TModel>"
  },
  "api/Mithril.Admin.Abstractions.BaseClasses.html": {
    "href": "api/Mithril.Admin.Abstractions.BaseClasses.html",
    "title": "Namespace Mithril.Admin.Abstractions.BaseClasses | Mithril API Reference",
    "keywords": "Namespace Mithril.Admin.Abstractions.BaseClasses Classes EntityBaseClass<TEntity> Entity base class EntityEditorBaseClass<TEntity> Entity editor base class EntityEditorBaseClass<TEntity, TModel> Entity editor base class MetadataBuilderBaseClass Metadata Builder base class SettingsBaseClass Base class for settings SettingsEditorBaseClass<TEntity> Settings editor base class SettingsEditorBaseClass<TEntity, TModel> Settings editor base class"
  },
  "api/Mithril.Admin.Abstractions.Commands.SaveModelCommand.html": {
    "href": "api/Mithril.Admin.Abstractions.Commands.SaveModelCommand.html",
    "title": "Class SaveModelCommand | Mithril API Reference",
    "keywords": "Class SaveModelCommand Namespace Mithril.Admin.Abstractions.Commands Assembly Mithril.Admin.Abstractions.dll Save model command public class SaveModelCommand : CommandBaseClass<SaveModelCommand>, IModel<SaveModelCommand>, IEquatable<IModel<SaveModelCommand>>, IComparable, IComparable<SaveModelCommand>, IEquatable<ModelBase<SaveModelCommand>>, ICommand, IEquatable<ICommand>, IModel, IEquatable<IModel>, IEquatable<CommandBaseClass<SaveModelCommand>> Inheritance object ModelBase<SaveModelCommand> CommandBaseClass<SaveModelCommand> SaveModelCommand Implements IModel<SaveModelCommand> IEquatable<IModel<SaveModelCommand>> IComparable IComparable<SaveModelCommand> IEquatable<ModelBase<SaveModelCommand>> ICommand IEquatable<ICommand> IModel IEquatable<IModel> IEquatable<CommandBaseClass<SaveModelCommand>> Inherited Members CommandBaseClass<SaveModelCommand>.Name CommandBaseClass<SaveModelCommand>.CompareTo(CommandBaseClass<SaveModelCommand>) CommandBaseClass<SaveModelCommand>.Equals(CommandBaseClass<SaveModelCommand>) CommandBaseClass<SaveModelCommand>.Equals(ICommand) CommandBaseClass<SaveModelCommand>.ToString() ModelBase<SaveModelCommand>.Active ModelBase<SaveModelCommand>.Creator ModelBase<SaveModelCommand>.DateCreated ModelBase<SaveModelCommand>.DateModified ModelBase<SaveModelCommand>.ID ModelBase<SaveModelCommand>.Modifier ModelBase<SaveModelCommand>.TenantID ModelBase<SaveModelCommand>.All(IDataService) ModelBase<SaveModelCommand>.AllActive(IDataService) ModelBase<SaveModelCommand>.AllInactive(IDataService) ModelBase<SaveModelCommand>.Load(long, IDataService) ModelBase<SaveModelCommand>.Query(IDataService) ModelBase<SaveModelCommand>.CanBeModifiedBy(ClaimsPrincipal) ModelBase<SaveModelCommand>.CanBeViewedBy(ClaimsPrincipal) ModelBase<SaveModelCommand>.CompareTo(object) ModelBase<SaveModelCommand>.DeleteAsync(IDataService, ClaimsPrincipal, bool) ModelBase<SaveModelCommand>.Equals(IModel) ModelBase<SaveModelCommand>.Equals(IModel<SaveModelCommand>) ModelBase<SaveModelCommand>.Equals(ModelBase<SaveModelCommand>) ModelBase<SaveModelCommand>.SaveAsync(IDataService, ClaimsPrincipal) ModelBase<SaveModelCommand>.SetupObject(IDataService, ClaimsPrincipal) ModelBase<SaveModelCommand>.SetupObject(IDataService, IUser) ModelBase<SaveModelCommand>.SetupObjectAndReturn(IDataService, ClaimsPrincipal) object.Equals(object, object) object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Extension Methods GenericExtensions.When<TObject>(TObject, bool, Func<TObject, TObject>) ExpandoObjectExtensions.ConvertToExpando(object?) Constructors SaveModelCommand() Initializes a new instance of the SaveModelCommand class. public SaveModelCommand() SaveModelCommand(ExpandoObject?, string?, long) Initializes a new instance of the SaveModelCommand class. public SaveModelCommand(ExpandoObject? data, string? entityType, long id) Parameters data ExpandoObject The data. entityType string Type of the entity. id long The identifier. Properties Data Gets or sets the data. [MaxLength] public string? Data { get; set; } Property Value string The data. EntityID Gets or sets the identifier. public long EntityID { get; set; } Property Value long The identifier. EntityType Gets or sets the type of the entity. [MaxLength(64)] public string? EntityType { get; set; } Property Value string The type of the entity. Methods CompareTo(SaveModelCommand?) Compares the object to another object public override int CompareTo(SaveModelCommand? other) Parameters other SaveModelCommand Object to compare to Returns int 0 if they are equal, -1 if this is smaller, 1 if it is larger Equals(SaveModelCommand) Indicates whether the current object is equal to another object of the same type. public bool Equals(SaveModelCommand other) Parameters other SaveModelCommand An object to compare with this object. Returns bool true if the current object is equal to the other parameter; otherwise, false. Equals(object?) Determines whether the specified object, is equal to this instance. public override bool Equals(object? obj) Parameters obj object The object to compare with this instance. Returns bool true if the specified object is equal to this instance; otherwise, false. GetHashCode() Returns a hash code for this instance. public override int GetHashCode() Returns int A hash code for this instance, suitable for use in hashing algorithms and data structures like a hash table. Operators operator ==(SaveModelCommand, SaveModelCommand) Implements the operator ==. public static bool operator ==(SaveModelCommand first, SaveModelCommand second) Parameters first SaveModelCommand The first. second SaveModelCommand The second. Returns bool The result of the operator. operator >(SaveModelCommand, SaveModelCommand) Implements the operator >. public static bool operator >(SaveModelCommand left, SaveModelCommand right) Parameters left SaveModelCommand The left. right SaveModelCommand The right. Returns bool The result of the operator. operator >=(SaveModelCommand, SaveModelCommand) Implements the operator >=. public static bool operator >=(SaveModelCommand left, SaveModelCommand right) Parameters left SaveModelCommand The left. right SaveModelCommand The right. Returns bool The result of the operator. operator !=(SaveModelCommand, SaveModelCommand) Implements the operator !=. public static bool operator !=(SaveModelCommand left, SaveModelCommand right) Parameters left SaveModelCommand The left. right SaveModelCommand The right. Returns bool The result of the operator. operator <(SaveModelCommand, SaveModelCommand) Implements the operator <. public static bool operator <(SaveModelCommand left, SaveModelCommand right) Parameters left SaveModelCommand The left. right SaveModelCommand The right. Returns bool The result of the operator. operator <=(SaveModelCommand, SaveModelCommand) Implements the operator <=. public static bool operator <=(SaveModelCommand left, SaveModelCommand right) Parameters left SaveModelCommand The left. right SaveModelCommand The right. Returns bool The result of the operator. See Also CommandBaseClass<TCommand>"
  },
  "api/Mithril.Admin.Abstractions.Commands.html": {
    "href": "api/Mithril.Admin.Abstractions.Commands.html",
    "title": "Namespace Mithril.Admin.Abstractions.Commands | Mithril API Reference",
    "keywords": "Namespace Mithril.Admin.Abstractions.Commands Classes SaveModelCommand Save model command"
  },
  "api/Mithril.Admin.Abstractions.Components.DataEditorComponent-1.html": {
    "href": "api/Mithril.Admin.Abstractions.Components.DataEditorComponent-1.html",
    "title": "Class DataEditorComponent<TEntity> | Mithril API Reference",
    "keywords": "Class DataEditorComponent<TEntity> Namespace Mithril.Admin.Abstractions.Components Assembly Mithril.Admin.Abstractions.dll Data editor component public class DataEditorComponent<TEntity> : ComponentDefinitionBaseClass<DataEditorComponent<TEntity>>, IComponentDefinition Type Parameters TEntity Data editor component Inheritance object ComponentDefinitionBaseClass<DataEditorComponent<TEntity>> DataEditorComponent<TEntity> Implements IComponentDefinition Inherited Members ComponentDefinitionBaseClass<DataEditorComponent<TEntity>>.DefaultClass ComponentDefinitionBaseClass<DataEditorComponent<TEntity>>.Name ComponentDefinitionBaseClass<DataEditorComponent<TEntity>>.Schema ComponentDefinitionBaseClass<DataEditorComponent<TEntity>>.ScriptFile object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods GenericExtensions.When<TObject>(TObject, bool, Func<TObject, TObject>) ExpandoObjectExtensions.ConvertToExpando(object?) Constructors DataEditorComponent() Initializes a new instance of the DataEditorComponent<TEntity> class. public DataEditorComponent() DataEditorComponent(string, IEntityMetadataService?) Initializes a new instance of the DataEditorComponent<TEntity> class. public DataEditorComponent(string dataType, IEntityMetadataService? entityMetadataService) Parameters dataType string Type of the data. entityMetadataService IEntityMetadataService The entity metadata service. Properties DefaultProperties Gets the default properties. public override Dictionary<string, string> DefaultProperties { get; } Property Value Dictionary<string, string> The default properties. See Also ComponentDefinitionBaseClass<TClass>"
  },
  "api/Mithril.Admin.Abstractions.Components.SettingsEditorComponent-1.html": {
    "href": "api/Mithril.Admin.Abstractions.Components.SettingsEditorComponent-1.html",
    "title": "Class SettingsEditorComponent<TEntity> | Mithril API Reference",
    "keywords": "Class SettingsEditorComponent<TEntity> Namespace Mithril.Admin.Abstractions.Components Assembly Mithril.Admin.Abstractions.dll Settings editor component public class SettingsEditorComponent<TEntity> : ComponentDefinitionBaseClass<SettingsEditorComponent<TEntity>>, IComponentDefinition Type Parameters TEntity Settings editor component Inheritance object ComponentDefinitionBaseClass<SettingsEditorComponent<TEntity>> SettingsEditorComponent<TEntity> Implements IComponentDefinition Inherited Members ComponentDefinitionBaseClass<SettingsEditorComponent<TEntity>>.DefaultClass ComponentDefinitionBaseClass<SettingsEditorComponent<TEntity>>.Name ComponentDefinitionBaseClass<SettingsEditorComponent<TEntity>>.Schema ComponentDefinitionBaseClass<SettingsEditorComponent<TEntity>>.ScriptFile object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods GenericExtensions.When<TObject>(TObject, bool, Func<TObject, TObject>) ExpandoObjectExtensions.ConvertToExpando(object?) Constructors SettingsEditorComponent() Initializes a new instance of the SettingsEditorComponent<TEntity> class. public SettingsEditorComponent() SettingsEditorComponent(string, IEntityMetadataService?) Initializes a new instance of the SettingsEditorComponent<TEntity> class. public SettingsEditorComponent(string dataType, IEntityMetadataService? entityMetadataService) Parameters dataType string Type of the data. entityMetadataService IEntityMetadataService The entity metadata service. Properties DefaultProperties Gets the default properties. public override Dictionary<string, string> DefaultProperties { get; } Property Value Dictionary<string, string> The default properties. See Also ComponentDefinitionBaseClass<TClass>"
  },
  "api/Mithril.Admin.Abstractions.Components.html": {
    "href": "api/Mithril.Admin.Abstractions.Components.html",
    "title": "Namespace Mithril.Admin.Abstractions.Components | Mithril API Reference",
    "keywords": "Namespace Mithril.Admin.Abstractions.Components Classes DataEditorComponent<TEntity> Data editor component SettingsEditorComponent<TEntity> Settings editor component"
  },
  "api/Mithril.Admin.Abstractions.DataEditor.Attributes.DateAndTimeAttribute.html": {
    "href": "api/Mithril.Admin.Abstractions.DataEditor.Attributes.DateAndTimeAttribute.html",
    "title": "Class DateAndTimeAttribute | Mithril API Reference",
    "keywords": "Class DateAndTimeAttribute Namespace Mithril.Admin.Abstractions.DataEditor.Attributes Assembly Mithril.Admin.Abstractions.dll Used to indicate that the generator should do both a date and time picker [AttributeUsage(AttributeTargets.Property, AllowMultiple = false)] public sealed class DateAndTimeAttribute : Attribute Inheritance object Attribute DateAndTimeAttribute Inherited Members Attribute.Equals(object) Attribute.GetCustomAttribute(Assembly, Type) Attribute.GetCustomAttribute(Assembly, Type, bool) Attribute.GetCustomAttribute(MemberInfo, Type) Attribute.GetCustomAttribute(MemberInfo, Type, bool) Attribute.GetCustomAttribute(Module, Type) Attribute.GetCustomAttribute(Module, Type, bool) Attribute.GetCustomAttribute(ParameterInfo, Type) Attribute.GetCustomAttribute(ParameterInfo, Type, bool) Attribute.GetCustomAttributes(Assembly) Attribute.GetCustomAttributes(Assembly, bool) Attribute.GetCustomAttributes(Assembly, Type) Attribute.GetCustomAttributes(Assembly, Type, bool) Attribute.GetCustomAttributes(MemberInfo) Attribute.GetCustomAttributes(MemberInfo, bool) Attribute.GetCustomAttributes(MemberInfo, Type) Attribute.GetCustomAttributes(MemberInfo, Type, bool) Attribute.GetCustomAttributes(Module) Attribute.GetCustomAttributes(Module, bool) Attribute.GetCustomAttributes(Module, Type) Attribute.GetCustomAttributes(Module, Type, bool) Attribute.GetCustomAttributes(ParameterInfo) Attribute.GetCustomAttributes(ParameterInfo, bool) Attribute.GetCustomAttributes(ParameterInfo, Type) Attribute.GetCustomAttributes(ParameterInfo, Type, bool) Attribute.GetHashCode() Attribute.IsDefaultAttribute() Attribute.IsDefined(Assembly, Type) Attribute.IsDefined(Assembly, Type, bool) Attribute.IsDefined(MemberInfo, Type) Attribute.IsDefined(MemberInfo, Type, bool) Attribute.IsDefined(Module, Type) Attribute.IsDefined(Module, Type, bool) Attribute.IsDefined(ParameterInfo, Type) Attribute.IsDefined(ParameterInfo, Type, bool) Attribute.Match(object) Attribute.TypeId object.Equals(object, object) object.GetType() object.ReferenceEquals(object, object) object.ToString() Extension Methods GenericExtensions.When<TObject>(TObject, bool, Func<TObject, TObject>) ExpandoObjectExtensions.ConvertToExpando(object?) See Also Attribute"
  },
  "api/Mithril.Admin.Abstractions.DataEditor.Attributes.DisplayAsTextAttribute.html": {
    "href": "api/Mithril.Admin.Abstractions.DataEditor.Attributes.DisplayAsTextAttribute.html",
    "title": "Class DisplayAsTextAttribute | Mithril API Reference",
    "keywords": "Class DisplayAsTextAttribute Namespace Mithril.Admin.Abstractions.DataEditor.Attributes Assembly Mithril.Admin.Abstractions.dll Used to indicate that the generator should display this as text (may have the ability for markdown, html, etc. depending on the generator) [AttributeUsage(AttributeTargets.Property, AllowMultiple = false)] public sealed class DisplayAsTextAttribute : Attribute Inheritance object Attribute DisplayAsTextAttribute Inherited Members Attribute.Equals(object) Attribute.GetCustomAttribute(Assembly, Type) Attribute.GetCustomAttribute(Assembly, Type, bool) Attribute.GetCustomAttribute(MemberInfo, Type) Attribute.GetCustomAttribute(MemberInfo, Type, bool) Attribute.GetCustomAttribute(Module, Type) Attribute.GetCustomAttribute(Module, Type, bool) Attribute.GetCustomAttribute(ParameterInfo, Type) Attribute.GetCustomAttribute(ParameterInfo, Type, bool) Attribute.GetCustomAttributes(Assembly) Attribute.GetCustomAttributes(Assembly, bool) Attribute.GetCustomAttributes(Assembly, Type) Attribute.GetCustomAttributes(Assembly, Type, bool) Attribute.GetCustomAttributes(MemberInfo) Attribute.GetCustomAttributes(MemberInfo, bool) Attribute.GetCustomAttributes(MemberInfo, Type) Attribute.GetCustomAttributes(MemberInfo, Type, bool) Attribute.GetCustomAttributes(Module) Attribute.GetCustomAttributes(Module, bool) Attribute.GetCustomAttributes(Module, Type) Attribute.GetCustomAttributes(Module, Type, bool) Attribute.GetCustomAttributes(ParameterInfo) Attribute.GetCustomAttributes(ParameterInfo, bool) Attribute.GetCustomAttributes(ParameterInfo, Type) Attribute.GetCustomAttributes(ParameterInfo, Type, bool) Attribute.GetHashCode() Attribute.IsDefaultAttribute() Attribute.IsDefined(Assembly, Type) Attribute.IsDefined(Assembly, Type, bool) Attribute.IsDefined(MemberInfo, Type) Attribute.IsDefined(MemberInfo, Type, bool) Attribute.IsDefined(Module, Type) Attribute.IsDefined(Module, Type, bool) Attribute.IsDefined(ParameterInfo, Type) Attribute.IsDefined(ParameterInfo, Type, bool) Attribute.Match(object) Attribute.TypeId object.Equals(object, object) object.GetType() object.ReferenceEquals(object, object) object.ToString() Extension Methods GenericExtensions.When<TObject>(TObject, bool, Func<TObject, TObject>) ExpandoObjectExtensions.ConvertToExpando(object?) See Also Attribute"
  },
  "api/Mithril.Admin.Abstractions.DataEditor.Attributes.DoNotListAttribute.html": {
    "href": "api/Mithril.Admin.Abstractions.DataEditor.Attributes.DoNotListAttribute.html",
    "title": "Class DoNotListAttribute | Mithril API Reference",
    "keywords": "Class DoNotListAttribute Namespace Mithril.Admin.Abstractions.DataEditor.Attributes Assembly Mithril.Admin.Abstractions.dll Do not list attribute [AttributeUsage(AttributeTargets.Property, AllowMultiple = false)] public class DoNotListAttribute : Attribute Inheritance object Attribute DoNotListAttribute Inherited Members Attribute.Equals(object) Attribute.GetCustomAttribute(Assembly, Type) Attribute.GetCustomAttribute(Assembly, Type, bool) Attribute.GetCustomAttribute(MemberInfo, Type) Attribute.GetCustomAttribute(MemberInfo, Type, bool) Attribute.GetCustomAttribute(Module, Type) Attribute.GetCustomAttribute(Module, Type, bool) Attribute.GetCustomAttribute(ParameterInfo, Type) Attribute.GetCustomAttribute(ParameterInfo, Type, bool) Attribute.GetCustomAttributes(Assembly) Attribute.GetCustomAttributes(Assembly, bool) Attribute.GetCustomAttributes(Assembly, Type) Attribute.GetCustomAttributes(Assembly, Type, bool) Attribute.GetCustomAttributes(MemberInfo) Attribute.GetCustomAttributes(MemberInfo, bool) Attribute.GetCustomAttributes(MemberInfo, Type) Attribute.GetCustomAttributes(MemberInfo, Type, bool) Attribute.GetCustomAttributes(Module) Attribute.GetCustomAttributes(Module, bool) Attribute.GetCustomAttributes(Module, Type) Attribute.GetCustomAttributes(Module, Type, bool) Attribute.GetCustomAttributes(ParameterInfo) Attribute.GetCustomAttributes(ParameterInfo, bool) Attribute.GetCustomAttributes(ParameterInfo, Type) Attribute.GetCustomAttributes(ParameterInfo, Type, bool) Attribute.GetHashCode() Attribute.IsDefaultAttribute() Attribute.IsDefined(Assembly, Type) Attribute.IsDefined(Assembly, Type, bool) Attribute.IsDefined(MemberInfo, Type) Attribute.IsDefined(MemberInfo, Type, bool) Attribute.IsDefined(Module, Type) Attribute.IsDefined(Module, Type, bool) Attribute.IsDefined(ParameterInfo, Type) Attribute.IsDefined(ParameterInfo, Type, bool) Attribute.Match(object) Attribute.TypeId object.Equals(object, object) object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods GenericExtensions.When<TObject>(TObject, bool, Func<TObject, TObject>) ExpandoObjectExtensions.ConvertToExpando(object?) See Also Attribute"
  },
  "api/Mithril.Admin.Abstractions.DataEditor.Attributes.HintAttribute.html": {
    "href": "api/Mithril.Admin.Abstractions.DataEditor.Attributes.HintAttribute.html",
    "title": "Class HintAttribute | Mithril API Reference",
    "keywords": "Class HintAttribute Namespace Mithril.Admin.Abstractions.DataEditor.Attributes Assembly Mithril.Admin.Abstractions.dll Hint attribute [AttributeUsage(AttributeTargets.Property, AllowMultiple = false)] public class HintAttribute : Attribute Inheritance object Attribute HintAttribute Inherited Members Attribute.Equals(object) Attribute.GetCustomAttribute(Assembly, Type) Attribute.GetCustomAttribute(Assembly, Type, bool) Attribute.GetCustomAttribute(MemberInfo, Type) Attribute.GetCustomAttribute(MemberInfo, Type, bool) Attribute.GetCustomAttribute(Module, Type) Attribute.GetCustomAttribute(Module, Type, bool) Attribute.GetCustomAttribute(ParameterInfo, Type) Attribute.GetCustomAttribute(ParameterInfo, Type, bool) Attribute.GetCustomAttributes(Assembly) Attribute.GetCustomAttributes(Assembly, bool) Attribute.GetCustomAttributes(Assembly, Type) Attribute.GetCustomAttributes(Assembly, Type, bool) Attribute.GetCustomAttributes(MemberInfo) Attribute.GetCustomAttributes(MemberInfo, bool) Attribute.GetCustomAttributes(MemberInfo, Type) Attribute.GetCustomAttributes(MemberInfo, Type, bool) Attribute.GetCustomAttributes(Module) Attribute.GetCustomAttributes(Module, bool) Attribute.GetCustomAttributes(Module, Type) Attribute.GetCustomAttributes(Module, Type, bool) Attribute.GetCustomAttributes(ParameterInfo) Attribute.GetCustomAttributes(ParameterInfo, bool) Attribute.GetCustomAttributes(ParameterInfo, Type) Attribute.GetCustomAttributes(ParameterInfo, Type, bool) Attribute.GetHashCode() Attribute.IsDefaultAttribute() Attribute.IsDefined(Assembly, Type) Attribute.IsDefined(Assembly, Type, bool) Attribute.IsDefined(MemberInfo, Type) Attribute.IsDefined(MemberInfo, Type, bool) Attribute.IsDefined(Module, Type) Attribute.IsDefined(Module, Type, bool) Attribute.IsDefined(ParameterInfo, Type) Attribute.IsDefined(ParameterInfo, Type, bool) Attribute.Match(object) Attribute.TypeId object.Equals(object, object) object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods GenericExtensions.When<TObject>(TObject, bool, Func<TObject, TObject>) ExpandoObjectExtensions.ConvertToExpando(object?) Remarks Initializes a new instance of the HintAttribute class. Constructors HintAttribute(string) Hint attribute public HintAttribute(string value) Parameters value string The value. Remarks Initializes a new instance of the HintAttribute class. See Also Attribute Properties Value Gets or sets the value. public string Value { get; set; } Property Value string The value. See Also Attribute"
  },
  "api/Mithril.Admin.Abstractions.DataEditor.Attributes.HtmlAttribute.html": {
    "href": "api/Mithril.Admin.Abstractions.DataEditor.Attributes.HtmlAttribute.html",
    "title": "Class HtmlAttribute | Mithril API Reference",
    "keywords": "Class HtmlAttribute Namespace Mithril.Admin.Abstractions.DataEditor.Attributes Assembly Mithril.Admin.Abstractions.dll HTML attribute [AttributeUsage(AttributeTargets.Property, AllowMultiple = false)] public class HtmlAttribute : Attribute Inheritance object Attribute HtmlAttribute Inherited Members Attribute.Equals(object) Attribute.GetCustomAttribute(Assembly, Type) Attribute.GetCustomAttribute(Assembly, Type, bool) Attribute.GetCustomAttribute(MemberInfo, Type) Attribute.GetCustomAttribute(MemberInfo, Type, bool) Attribute.GetCustomAttribute(Module, Type) Attribute.GetCustomAttribute(Module, Type, bool) Attribute.GetCustomAttribute(ParameterInfo, Type) Attribute.GetCustomAttribute(ParameterInfo, Type, bool) Attribute.GetCustomAttributes(Assembly) Attribute.GetCustomAttributes(Assembly, bool) Attribute.GetCustomAttributes(Assembly, Type) Attribute.GetCustomAttributes(Assembly, Type, bool) Attribute.GetCustomAttributes(MemberInfo) Attribute.GetCustomAttributes(MemberInfo, bool) Attribute.GetCustomAttributes(MemberInfo, Type) Attribute.GetCustomAttributes(MemberInfo, Type, bool) Attribute.GetCustomAttributes(Module) Attribute.GetCustomAttributes(Module, bool) Attribute.GetCustomAttributes(Module, Type) Attribute.GetCustomAttributes(Module, Type, bool) Attribute.GetCustomAttributes(ParameterInfo) Attribute.GetCustomAttributes(ParameterInfo, bool) Attribute.GetCustomAttributes(ParameterInfo, Type) Attribute.GetCustomAttributes(ParameterInfo, Type, bool) Attribute.GetHashCode() Attribute.IsDefaultAttribute() Attribute.IsDefined(Assembly, Type) Attribute.IsDefined(Assembly, Type, bool) Attribute.IsDefined(MemberInfo, Type) Attribute.IsDefined(MemberInfo, Type, bool) Attribute.IsDefined(Module, Type) Attribute.IsDefined(Module, Type, bool) Attribute.IsDefined(ParameterInfo, Type) Attribute.IsDefined(ParameterInfo, Type, bool) Attribute.Match(object) Attribute.TypeId object.Equals(object, object) object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods GenericExtensions.When<TObject>(TObject, bool, Func<TObject, TObject>) ExpandoObjectExtensions.ConvertToExpando(object?) See Also Attribute"
  },
  "api/Mithril.Admin.Abstractions.DataEditor.Attributes.IgnoreAttribute.html": {
    "href": "api/Mithril.Admin.Abstractions.DataEditor.Attributes.IgnoreAttribute.html",
    "title": "Class IgnoreAttribute | Mithril API Reference",
    "keywords": "Class IgnoreAttribute Namespace Mithril.Admin.Abstractions.DataEditor.Attributes Assembly Mithril.Admin.Abstractions.dll Ignore attribute [AttributeUsage(AttributeTargets.Property, AllowMultiple = false)] public class IgnoreAttribute : Attribute Inheritance object Attribute IgnoreAttribute Inherited Members Attribute.Equals(object) Attribute.GetCustomAttribute(Assembly, Type) Attribute.GetCustomAttribute(Assembly, Type, bool) Attribute.GetCustomAttribute(MemberInfo, Type) Attribute.GetCustomAttribute(MemberInfo, Type, bool) Attribute.GetCustomAttribute(Module, Type) Attribute.GetCustomAttribute(Module, Type, bool) Attribute.GetCustomAttribute(ParameterInfo, Type) Attribute.GetCustomAttribute(ParameterInfo, Type, bool) Attribute.GetCustomAttributes(Assembly) Attribute.GetCustomAttributes(Assembly, bool) Attribute.GetCustomAttributes(Assembly, Type) Attribute.GetCustomAttributes(Assembly, Type, bool) Attribute.GetCustomAttributes(MemberInfo) Attribute.GetCustomAttributes(MemberInfo, bool) Attribute.GetCustomAttributes(MemberInfo, Type) Attribute.GetCustomAttributes(MemberInfo, Type, bool) Attribute.GetCustomAttributes(Module) Attribute.GetCustomAttributes(Module, bool) Attribute.GetCustomAttributes(Module, Type) Attribute.GetCustomAttributes(Module, Type, bool) Attribute.GetCustomAttributes(ParameterInfo) Attribute.GetCustomAttributes(ParameterInfo, bool) Attribute.GetCustomAttributes(ParameterInfo, Type) Attribute.GetCustomAttributes(ParameterInfo, Type, bool) Attribute.GetHashCode() Attribute.IsDefaultAttribute() Attribute.IsDefined(Assembly, Type) Attribute.IsDefined(Assembly, Type, bool) Attribute.IsDefined(MemberInfo, Type) Attribute.IsDefined(MemberInfo, Type, bool) Attribute.IsDefined(Module, Type) Attribute.IsDefined(Module, Type, bool) Attribute.IsDefined(ParameterInfo, Type) Attribute.IsDefined(ParameterInfo, Type, bool) Attribute.Match(object) Attribute.TypeId object.Equals(object, object) object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods GenericExtensions.When<TObject>(TObject, bool, Func<TObject, TObject>) ExpandoObjectExtensions.ConvertToExpando(object?) See Also Attribute"
  },
  "api/Mithril.Admin.Abstractions.DataEditor.Attributes.InputTypeAttribute.html": {
    "href": "api/Mithril.Admin.Abstractions.DataEditor.Attributes.InputTypeAttribute.html",
    "title": "Class InputTypeAttribute | Mithril API Reference",
    "keywords": "Class InputTypeAttribute Namespace Mithril.Admin.Abstractions.DataEditor.Attributes Assembly Mithril.Admin.Abstractions.dll Input type attribute [AttributeUsage(AttributeTargets.Property, AllowMultiple = false)] public sealed class InputTypeAttribute : Attribute Inheritance object Attribute InputTypeAttribute Inherited Members Attribute.Equals(object) Attribute.GetCustomAttribute(Assembly, Type) Attribute.GetCustomAttribute(Assembly, Type, bool) Attribute.GetCustomAttribute(MemberInfo, Type) Attribute.GetCustomAttribute(MemberInfo, Type, bool) Attribute.GetCustomAttribute(Module, Type) Attribute.GetCustomAttribute(Module, Type, bool) Attribute.GetCustomAttribute(ParameterInfo, Type) Attribute.GetCustomAttribute(ParameterInfo, Type, bool) Attribute.GetCustomAttributes(Assembly) Attribute.GetCustomAttributes(Assembly, bool) Attribute.GetCustomAttributes(Assembly, Type) Attribute.GetCustomAttributes(Assembly, Type, bool) Attribute.GetCustomAttributes(MemberInfo) Attribute.GetCustomAttributes(MemberInfo, bool) Attribute.GetCustomAttributes(MemberInfo, Type) Attribute.GetCustomAttributes(MemberInfo, Type, bool) Attribute.GetCustomAttributes(Module) Attribute.GetCustomAttributes(Module, bool) Attribute.GetCustomAttributes(Module, Type) Attribute.GetCustomAttributes(Module, Type, bool) Attribute.GetCustomAttributes(ParameterInfo) Attribute.GetCustomAttributes(ParameterInfo, bool) Attribute.GetCustomAttributes(ParameterInfo, Type) Attribute.GetCustomAttributes(ParameterInfo, Type, bool) Attribute.GetHashCode() Attribute.IsDefaultAttribute() Attribute.IsDefined(Assembly, Type) Attribute.IsDefined(Assembly, Type, bool) Attribute.IsDefined(MemberInfo, Type) Attribute.IsDefined(MemberInfo, Type, bool) Attribute.IsDefined(Module, Type) Attribute.IsDefined(Module, Type, bool) Attribute.IsDefined(ParameterInfo, Type) Attribute.IsDefined(ParameterInfo, Type, bool) Attribute.Match(object) Attribute.TypeId object.Equals(object, object) object.GetType() object.ReferenceEquals(object, object) object.ToString() Extension Methods GenericExtensions.When<TObject>(TObject, bool, Func<TObject, TObject>) ExpandoObjectExtensions.ConvertToExpando(object?) Remarks Initializes a new instance of the InputTypeAttribute class. Constructors InputTypeAttribute(string) Input type attribute public InputTypeAttribute(string inputType) Parameters inputType string Type of the input. Remarks Initializes a new instance of the InputTypeAttribute class. See Also Attribute Properties InputType Gets the type of the input. public string InputType { get; } Property Value string The type of the input. See Also Attribute"
  },
  "api/Mithril.Admin.Abstractions.DataEditor.Attributes.OrderAttribute.html": {
    "href": "api/Mithril.Admin.Abstractions.DataEditor.Attributes.OrderAttribute.html",
    "title": "Class OrderAttribute | Mithril API Reference",
    "keywords": "Class OrderAttribute Namespace Mithril.Admin.Abstractions.DataEditor.Attributes Assembly Mithril.Admin.Abstractions.dll Order attribute [AttributeUsage(AttributeTargets.Property, AllowMultiple = false)] public sealed class OrderAttribute : Attribute Inheritance object Attribute OrderAttribute Inherited Members Attribute.Equals(object) Attribute.GetCustomAttribute(Assembly, Type) Attribute.GetCustomAttribute(Assembly, Type, bool) Attribute.GetCustomAttribute(MemberInfo, Type) Attribute.GetCustomAttribute(MemberInfo, Type, bool) Attribute.GetCustomAttribute(Module, Type) Attribute.GetCustomAttribute(Module, Type, bool) Attribute.GetCustomAttribute(ParameterInfo, Type) Attribute.GetCustomAttribute(ParameterInfo, Type, bool) Attribute.GetCustomAttributes(Assembly) Attribute.GetCustomAttributes(Assembly, bool) Attribute.GetCustomAttributes(Assembly, Type) Attribute.GetCustomAttributes(Assembly, Type, bool) Attribute.GetCustomAttributes(MemberInfo) Attribute.GetCustomAttributes(MemberInfo, bool) Attribute.GetCustomAttributes(MemberInfo, Type) Attribute.GetCustomAttributes(MemberInfo, Type, bool) Attribute.GetCustomAttributes(Module) Attribute.GetCustomAttributes(Module, bool) Attribute.GetCustomAttributes(Module, Type) Attribute.GetCustomAttributes(Module, Type, bool) Attribute.GetCustomAttributes(ParameterInfo) Attribute.GetCustomAttributes(ParameterInfo, bool) Attribute.GetCustomAttributes(ParameterInfo, Type) Attribute.GetCustomAttributes(ParameterInfo, Type, bool) Attribute.GetHashCode() Attribute.IsDefaultAttribute() Attribute.IsDefined(Assembly, Type) Attribute.IsDefined(Assembly, Type, bool) Attribute.IsDefined(MemberInfo, Type) Attribute.IsDefined(MemberInfo, Type, bool) Attribute.IsDefined(Module, Type) Attribute.IsDefined(Module, Type, bool) Attribute.IsDefined(ParameterInfo, Type) Attribute.IsDefined(ParameterInfo, Type, bool) Attribute.Match(object) Attribute.TypeId object.Equals(object, object) object.GetType() object.ReferenceEquals(object, object) object.ToString() Extension Methods GenericExtensions.When<TObject>(TObject, bool, Func<TObject, TObject>) ExpandoObjectExtensions.ConvertToExpando(object?) Remarks Initializes a new instance of the OrderAttribute class. Constructors OrderAttribute(int) Order attribute public OrderAttribute(int order) Parameters order int The order. Remarks Initializes a new instance of the OrderAttribute class. See Also Attribute Properties Order Gets the order. public int Order { get; } Property Value int The order. See Also Attribute"
  },
  "api/Mithril.Admin.Abstractions.DataEditor.Attributes.PasswordAttribute.html": {
    "href": "api/Mithril.Admin.Abstractions.DataEditor.Attributes.PasswordAttribute.html",
    "title": "Class PasswordAttribute | Mithril API Reference",
    "keywords": "Class PasswordAttribute Namespace Mithril.Admin.Abstractions.DataEditor.Attributes Assembly Mithril.Admin.Abstractions.dll Password attribute [AttributeUsage(AttributeTargets.Property, AllowMultiple = false)] public sealed class PasswordAttribute : Attribute Inheritance object Attribute PasswordAttribute Inherited Members Attribute.Equals(object) Attribute.GetCustomAttribute(Assembly, Type) Attribute.GetCustomAttribute(Assembly, Type, bool) Attribute.GetCustomAttribute(MemberInfo, Type) Attribute.GetCustomAttribute(MemberInfo, Type, bool) Attribute.GetCustomAttribute(Module, Type) Attribute.GetCustomAttribute(Module, Type, bool) Attribute.GetCustomAttribute(ParameterInfo, Type) Attribute.GetCustomAttribute(ParameterInfo, Type, bool) Attribute.GetCustomAttributes(Assembly) Attribute.GetCustomAttributes(Assembly, bool) Attribute.GetCustomAttributes(Assembly, Type) Attribute.GetCustomAttributes(Assembly, Type, bool) Attribute.GetCustomAttributes(MemberInfo) Attribute.GetCustomAttributes(MemberInfo, bool) Attribute.GetCustomAttributes(MemberInfo, Type) Attribute.GetCustomAttributes(MemberInfo, Type, bool) Attribute.GetCustomAttributes(Module) Attribute.GetCustomAttributes(Module, bool) Attribute.GetCustomAttributes(Module, Type) Attribute.GetCustomAttributes(Module, Type, bool) Attribute.GetCustomAttributes(ParameterInfo) Attribute.GetCustomAttributes(ParameterInfo, bool) Attribute.GetCustomAttributes(ParameterInfo, Type) Attribute.GetCustomAttributes(ParameterInfo, Type, bool) Attribute.GetHashCode() Attribute.IsDefaultAttribute() Attribute.IsDefined(Assembly, Type) Attribute.IsDefined(Assembly, Type, bool) Attribute.IsDefined(MemberInfo, Type) Attribute.IsDefined(MemberInfo, Type, bool) Attribute.IsDefined(Module, Type) Attribute.IsDefined(Module, Type, bool) Attribute.IsDefined(ParameterInfo, Type) Attribute.IsDefined(ParameterInfo, Type, bool) Attribute.Match(object) Attribute.TypeId object.Equals(object, object) object.GetType() object.ReferenceEquals(object, object) object.ToString() Extension Methods GenericExtensions.When<TObject>(TObject, bool, Func<TObject, TObject>) ExpandoObjectExtensions.ConvertToExpando(object?) See Also Attribute"
  },
  "api/Mithril.Admin.Abstractions.DataEditor.Attributes.PatternAttribute.html": {
    "href": "api/Mithril.Admin.Abstractions.DataEditor.Attributes.PatternAttribute.html",
    "title": "Class PatternAttribute | Mithril API Reference",
    "keywords": "Class PatternAttribute Namespace Mithril.Admin.Abstractions.DataEditor.Attributes Assembly Mithril.Admin.Abstractions.dll Pattern attribute [AttributeUsage(AttributeTargets.Property, AllowMultiple = false)] public class PatternAttribute : Attribute Inheritance object Attribute PatternAttribute Inherited Members Attribute.Equals(object) Attribute.GetCustomAttribute(Assembly, Type) Attribute.GetCustomAttribute(Assembly, Type, bool) Attribute.GetCustomAttribute(MemberInfo, Type) Attribute.GetCustomAttribute(MemberInfo, Type, bool) Attribute.GetCustomAttribute(Module, Type) Attribute.GetCustomAttribute(Module, Type, bool) Attribute.GetCustomAttribute(ParameterInfo, Type) Attribute.GetCustomAttribute(ParameterInfo, Type, bool) Attribute.GetCustomAttributes(Assembly) Attribute.GetCustomAttributes(Assembly, bool) Attribute.GetCustomAttributes(Assembly, Type) Attribute.GetCustomAttributes(Assembly, Type, bool) Attribute.GetCustomAttributes(MemberInfo) Attribute.GetCustomAttributes(MemberInfo, bool) Attribute.GetCustomAttributes(MemberInfo, Type) Attribute.GetCustomAttributes(MemberInfo, Type, bool) Attribute.GetCustomAttributes(Module) Attribute.GetCustomAttributes(Module, bool) Attribute.GetCustomAttributes(Module, Type) Attribute.GetCustomAttributes(Module, Type, bool) Attribute.GetCustomAttributes(ParameterInfo) Attribute.GetCustomAttributes(ParameterInfo, bool) Attribute.GetCustomAttributes(ParameterInfo, Type) Attribute.GetCustomAttributes(ParameterInfo, Type, bool) Attribute.GetHashCode() Attribute.IsDefaultAttribute() Attribute.IsDefined(Assembly, Type) Attribute.IsDefined(Assembly, Type, bool) Attribute.IsDefined(MemberInfo, Type) Attribute.IsDefined(MemberInfo, Type, bool) Attribute.IsDefined(Module, Type) Attribute.IsDefined(Module, Type, bool) Attribute.IsDefined(ParameterInfo, Type) Attribute.IsDefined(ParameterInfo, Type, bool) Attribute.Match(object) Attribute.TypeId object.Equals(object, object) object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods GenericExtensions.When<TObject>(TObject, bool, Func<TObject, TObject>) ExpandoObjectExtensions.ConvertToExpando(object?) Remarks Initializes a new instance of the PatternAttribute class. Constructors PatternAttribute(string) Pattern attribute public PatternAttribute(string value) Parameters value string The value. Remarks Initializes a new instance of the PatternAttribute class. See Also Attribute Properties Value Gets or sets the value. public string Value { get; set; } Property Value string The value. See Also Attribute"
  },
  "api/Mithril.Admin.Abstractions.DataEditor.Attributes.PlaceholderAttribute.html": {
    "href": "api/Mithril.Admin.Abstractions.DataEditor.Attributes.PlaceholderAttribute.html",
    "title": "Class PlaceholderAttribute | Mithril API Reference",
    "keywords": "Class PlaceholderAttribute Namespace Mithril.Admin.Abstractions.DataEditor.Attributes Assembly Mithril.Admin.Abstractions.dll Placeholder attribute [AttributeUsage(AttributeTargets.Property, AllowMultiple = false)] public class PlaceholderAttribute : Attribute Inheritance object Attribute PlaceholderAttribute Inherited Members Attribute.Equals(object) Attribute.GetCustomAttribute(Assembly, Type) Attribute.GetCustomAttribute(Assembly, Type, bool) Attribute.GetCustomAttribute(MemberInfo, Type) Attribute.GetCustomAttribute(MemberInfo, Type, bool) Attribute.GetCustomAttribute(Module, Type) Attribute.GetCustomAttribute(Module, Type, bool) Attribute.GetCustomAttribute(ParameterInfo, Type) Attribute.GetCustomAttribute(ParameterInfo, Type, bool) Attribute.GetCustomAttributes(Assembly) Attribute.GetCustomAttributes(Assembly, bool) Attribute.GetCustomAttributes(Assembly, Type) Attribute.GetCustomAttributes(Assembly, Type, bool) Attribute.GetCustomAttributes(MemberInfo) Attribute.GetCustomAttributes(MemberInfo, bool) Attribute.GetCustomAttributes(MemberInfo, Type) Attribute.GetCustomAttributes(MemberInfo, Type, bool) Attribute.GetCustomAttributes(Module) Attribute.GetCustomAttributes(Module, bool) Attribute.GetCustomAttributes(Module, Type) Attribute.GetCustomAttributes(Module, Type, bool) Attribute.GetCustomAttributes(ParameterInfo) Attribute.GetCustomAttributes(ParameterInfo, bool) Attribute.GetCustomAttributes(ParameterInfo, Type) Attribute.GetCustomAttributes(ParameterInfo, Type, bool) Attribute.GetHashCode() Attribute.IsDefaultAttribute() Attribute.IsDefined(Assembly, Type) Attribute.IsDefined(Assembly, Type, bool) Attribute.IsDefined(MemberInfo, Type) Attribute.IsDefined(MemberInfo, Type, bool) Attribute.IsDefined(Module, Type) Attribute.IsDefined(Module, Type, bool) Attribute.IsDefined(ParameterInfo, Type) Attribute.IsDefined(ParameterInfo, Type, bool) Attribute.Match(object) Attribute.TypeId object.Equals(object, object) object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods GenericExtensions.When<TObject>(TObject, bool, Func<TObject, TObject>) ExpandoObjectExtensions.ConvertToExpando(object?) Remarks Initializes a new instance of the PlaceholderAttribute class. Constructors PlaceholderAttribute(string) Placeholder attribute public PlaceholderAttribute(string value) Parameters value string The value. Remarks Initializes a new instance of the PlaceholderAttribute class. See Also Attribute Properties Value Gets or sets the value. public string Value { get; set; } Property Value string The value. See Also Attribute"
  },
  "api/Mithril.Admin.Abstractions.DataEditor.Attributes.QueryAttribute.html": {
    "href": "api/Mithril.Admin.Abstractions.DataEditor.Attributes.QueryAttribute.html",
    "title": "Class QueryAttribute | Mithril API Reference",
    "keywords": "Class QueryAttribute Namespace Mithril.Admin.Abstractions.DataEditor.Attributes Assembly Mithril.Admin.Abstractions.dll Query attribute [AttributeUsage(AttributeTargets.Property, AllowMultiple = false)] public class QueryAttribute : Attribute Inheritance object Attribute QueryAttribute Derived SelectAttribute Inherited Members Attribute.Equals(object) Attribute.GetCustomAttribute(Assembly, Type) Attribute.GetCustomAttribute(Assembly, Type, bool) Attribute.GetCustomAttribute(MemberInfo, Type) Attribute.GetCustomAttribute(MemberInfo, Type, bool) Attribute.GetCustomAttribute(Module, Type) Attribute.GetCustomAttribute(Module, Type, bool) Attribute.GetCustomAttribute(ParameterInfo, Type) Attribute.GetCustomAttribute(ParameterInfo, Type, bool) Attribute.GetCustomAttributes(Assembly) Attribute.GetCustomAttributes(Assembly, bool) Attribute.GetCustomAttributes(Assembly, Type) Attribute.GetCustomAttributes(Assembly, Type, bool) Attribute.GetCustomAttributes(MemberInfo) Attribute.GetCustomAttributes(MemberInfo, bool) Attribute.GetCustomAttributes(MemberInfo, Type) Attribute.GetCustomAttributes(MemberInfo, Type, bool) Attribute.GetCustomAttributes(Module) Attribute.GetCustomAttributes(Module, bool) Attribute.GetCustomAttributes(Module, Type) Attribute.GetCustomAttributes(Module, Type, bool) Attribute.GetCustomAttributes(ParameterInfo) Attribute.GetCustomAttributes(ParameterInfo, bool) Attribute.GetCustomAttributes(ParameterInfo, Type) Attribute.GetCustomAttributes(ParameterInfo, Type, bool) Attribute.GetHashCode() Attribute.IsDefaultAttribute() Attribute.IsDefined(Assembly, Type) Attribute.IsDefined(Assembly, Type, bool) Attribute.IsDefined(MemberInfo, Type) Attribute.IsDefined(MemberInfo, Type, bool) Attribute.IsDefined(Module, Type) Attribute.IsDefined(Module, Type, bool) Attribute.IsDefined(ParameterInfo, Type) Attribute.IsDefined(ParameterInfo, Type, bool) Attribute.Match(object) Attribute.TypeId object.Equals(object, object) object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods GenericExtensions.When<TObject>(TObject, bool, Func<TObject, TObject>) ExpandoObjectExtensions.ConvertToExpando(object?) Remarks Initializes a new instance of the QueryAttribute class. Constructors QueryAttribute(Type, string) Query attribute public QueryAttribute(Type queryType, string filter = \"\") Parameters queryType Type Type of the query. filter string The filter. Remarks Initializes a new instance of the QueryAttribute class. See Also Attribute Properties Filter Gets or sets the filter. public string Filter { get; set; } Property Value string The filter. QueryType Gets the name of the query. public Type QueryType { get; set; } Property Value Type The name of the query. See Also Attribute"
  },
  "api/Mithril.Admin.Abstractions.DataEditor.Attributes.ReadOnlyAttribute.html": {
    "href": "api/Mithril.Admin.Abstractions.DataEditor.Attributes.ReadOnlyAttribute.html",
    "title": "Class ReadOnlyAttribute | Mithril API Reference",
    "keywords": "Class ReadOnlyAttribute Namespace Mithril.Admin.Abstractions.DataEditor.Attributes Assembly Mithril.Admin.Abstractions.dll Read only attribute [AttributeUsage(AttributeTargets.Property, AllowMultiple = false)] public sealed class ReadOnlyAttribute : Attribute Inheritance object Attribute ReadOnlyAttribute Inherited Members Attribute.Equals(object) Attribute.GetCustomAttribute(Assembly, Type) Attribute.GetCustomAttribute(Assembly, Type, bool) Attribute.GetCustomAttribute(MemberInfo, Type) Attribute.GetCustomAttribute(MemberInfo, Type, bool) Attribute.GetCustomAttribute(Module, Type) Attribute.GetCustomAttribute(Module, Type, bool) Attribute.GetCustomAttribute(ParameterInfo, Type) Attribute.GetCustomAttribute(ParameterInfo, Type, bool) Attribute.GetCustomAttributes(Assembly) Attribute.GetCustomAttributes(Assembly, bool) Attribute.GetCustomAttributes(Assembly, Type) Attribute.GetCustomAttributes(Assembly, Type, bool) Attribute.GetCustomAttributes(MemberInfo) Attribute.GetCustomAttributes(MemberInfo, bool) Attribute.GetCustomAttributes(MemberInfo, Type) Attribute.GetCustomAttributes(MemberInfo, Type, bool) Attribute.GetCustomAttributes(Module) Attribute.GetCustomAttributes(Module, bool) Attribute.GetCustomAttributes(Module, Type) Attribute.GetCustomAttributes(Module, Type, bool) Attribute.GetCustomAttributes(ParameterInfo) Attribute.GetCustomAttributes(ParameterInfo, bool) Attribute.GetCustomAttributes(ParameterInfo, Type) Attribute.GetCustomAttributes(ParameterInfo, Type, bool) Attribute.GetHashCode() Attribute.IsDefaultAttribute() Attribute.IsDefined(Assembly, Type) Attribute.IsDefined(Assembly, Type, bool) Attribute.IsDefined(MemberInfo, Type) Attribute.IsDefined(MemberInfo, Type, bool) Attribute.IsDefined(Module, Type) Attribute.IsDefined(Module, Type, bool) Attribute.IsDefined(ParameterInfo, Type) Attribute.IsDefined(ParameterInfo, Type, bool) Attribute.Match(object) Attribute.TypeId object.Equals(object, object) object.GetType() object.ReferenceEquals(object, object) object.ToString() Extension Methods GenericExtensions.When<TObject>(TObject, bool, Func<TObject, TObject>) ExpandoObjectExtensions.ConvertToExpando(object?) See Also Attribute"
  },
  "api/Mithril.Admin.Abstractions.DataEditor.Attributes.SelectAttribute.html": {
    "href": "api/Mithril.Admin.Abstractions.DataEditor.Attributes.SelectAttribute.html",
    "title": "Class SelectAttribute | Mithril API Reference",
    "keywords": "Class SelectAttribute Namespace Mithril.Admin.Abstractions.DataEditor.Attributes Assembly Mithril.Admin.Abstractions.dll Determines if the system should treat this as a select [AttributeUsage(AttributeTargets.Property, AllowMultiple = false)] public class SelectAttribute : QueryAttribute Inheritance object Attribute QueryAttribute SelectAttribute Inherited Members QueryAttribute.Filter QueryAttribute.QueryType Attribute.Equals(object) Attribute.GetCustomAttribute(Assembly, Type) Attribute.GetCustomAttribute(Assembly, Type, bool) Attribute.GetCustomAttribute(MemberInfo, Type) Attribute.GetCustomAttribute(MemberInfo, Type, bool) Attribute.GetCustomAttribute(Module, Type) Attribute.GetCustomAttribute(Module, Type, bool) Attribute.GetCustomAttribute(ParameterInfo, Type) Attribute.GetCustomAttribute(ParameterInfo, Type, bool) Attribute.GetCustomAttributes(Assembly) Attribute.GetCustomAttributes(Assembly, bool) Attribute.GetCustomAttributes(Assembly, Type) Attribute.GetCustomAttributes(Assembly, Type, bool) Attribute.GetCustomAttributes(MemberInfo) Attribute.GetCustomAttributes(MemberInfo, bool) Attribute.GetCustomAttributes(MemberInfo, Type) Attribute.GetCustomAttributes(MemberInfo, Type, bool) Attribute.GetCustomAttributes(Module) Attribute.GetCustomAttributes(Module, bool) Attribute.GetCustomAttributes(Module, Type) Attribute.GetCustomAttributes(Module, Type, bool) Attribute.GetCustomAttributes(ParameterInfo) Attribute.GetCustomAttributes(ParameterInfo, bool) Attribute.GetCustomAttributes(ParameterInfo, Type) Attribute.GetCustomAttributes(ParameterInfo, Type, bool) Attribute.GetHashCode() Attribute.IsDefaultAttribute() Attribute.IsDefined(Assembly, Type) Attribute.IsDefined(Assembly, Type, bool) Attribute.IsDefined(MemberInfo, Type) Attribute.IsDefined(MemberInfo, Type, bool) Attribute.IsDefined(Module, Type) Attribute.IsDefined(Module, Type, bool) Attribute.IsDefined(ParameterInfo, Type) Attribute.IsDefined(ParameterInfo, Type, bool) Attribute.Match(object) Attribute.TypeId object.Equals(object, object) object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods GenericExtensions.When<TObject>(TObject, bool, Func<TObject, TObject>) ExpandoObjectExtensions.ConvertToExpando(object?) Remarks Initializes a new instance of the SelectAttribute class. Constructors SelectAttribute(Type, string) Determines if the system should treat this as a select public SelectAttribute(Type queryType, string filter = \"\") Parameters queryType Type Type of the query. filter string The filter. Remarks Initializes a new instance of the SelectAttribute class. See Also QueryAttribute See Also QueryAttribute"
  },
  "api/Mithril.Admin.Abstractions.DataEditor.Attributes.StepAttribute.html": {
    "href": "api/Mithril.Admin.Abstractions.DataEditor.Attributes.StepAttribute.html",
    "title": "Class StepAttribute | Mithril API Reference",
    "keywords": "Class StepAttribute Namespace Mithril.Admin.Abstractions.DataEditor.Attributes Assembly Mithril.Admin.Abstractions.dll Step attribute [AttributeUsage(AttributeTargets.Property, AllowMultiple = false)] public sealed class StepAttribute : Attribute Inheritance object Attribute StepAttribute Inherited Members Attribute.Equals(object) Attribute.GetCustomAttribute(Assembly, Type) Attribute.GetCustomAttribute(Assembly, Type, bool) Attribute.GetCustomAttribute(MemberInfo, Type) Attribute.GetCustomAttribute(MemberInfo, Type, bool) Attribute.GetCustomAttribute(Module, Type) Attribute.GetCustomAttribute(Module, Type, bool) Attribute.GetCustomAttribute(ParameterInfo, Type) Attribute.GetCustomAttribute(ParameterInfo, Type, bool) Attribute.GetCustomAttributes(Assembly) Attribute.GetCustomAttributes(Assembly, bool) Attribute.GetCustomAttributes(Assembly, Type) Attribute.GetCustomAttributes(Assembly, Type, bool) Attribute.GetCustomAttributes(MemberInfo) Attribute.GetCustomAttributes(MemberInfo, bool) Attribute.GetCustomAttributes(MemberInfo, Type) Attribute.GetCustomAttributes(MemberInfo, Type, bool) Attribute.GetCustomAttributes(Module) Attribute.GetCustomAttributes(Module, bool) Attribute.GetCustomAttributes(Module, Type) Attribute.GetCustomAttributes(Module, Type, bool) Attribute.GetCustomAttributes(ParameterInfo) Attribute.GetCustomAttributes(ParameterInfo, bool) Attribute.GetCustomAttributes(ParameterInfo, Type) Attribute.GetCustomAttributes(ParameterInfo, Type, bool) Attribute.GetHashCode() Attribute.IsDefaultAttribute() Attribute.IsDefined(Assembly, Type) Attribute.IsDefined(Assembly, Type, bool) Attribute.IsDefined(MemberInfo, Type) Attribute.IsDefined(MemberInfo, Type, bool) Attribute.IsDefined(Module, Type) Attribute.IsDefined(Module, Type, bool) Attribute.IsDefined(ParameterInfo, Type) Attribute.IsDefined(ParameterInfo, Type, bool) Attribute.Match(object) Attribute.TypeId object.Equals(object, object) object.GetType() object.ReferenceEquals(object, object) object.ToString() Extension Methods GenericExtensions.When<TObject>(TObject, bool, Func<TObject, TObject>) ExpandoObjectExtensions.ConvertToExpando(object?) Remarks Initializes a new instance of the StepAttribute class. Constructors StepAttribute(decimal) Step attribute public StepAttribute(decimal value) Parameters value decimal The value. Remarks Initializes a new instance of the StepAttribute class. See Also Attribute Properties Value Gets or sets the value. public decimal Value { get; set; } Property Value decimal The value. See Also Attribute"
  },
  "api/Mithril.Admin.Abstractions.DataEditor.Attributes.SubtitleAttribute.html": {
    "href": "api/Mithril.Admin.Abstractions.DataEditor.Attributes.SubtitleAttribute.html",
    "title": "Class SubtitleAttribute | Mithril API Reference",
    "keywords": "Class SubtitleAttribute Namespace Mithril.Admin.Abstractions.DataEditor.Attributes Assembly Mithril.Admin.Abstractions.dll Subtitle attribute [AttributeUsage(AttributeTargets.Property, AllowMultiple = false)] public class SubtitleAttribute : Attribute Inheritance object Attribute SubtitleAttribute Inherited Members Attribute.Equals(object) Attribute.GetCustomAttribute(Assembly, Type) Attribute.GetCustomAttribute(Assembly, Type, bool) Attribute.GetCustomAttribute(MemberInfo, Type) Attribute.GetCustomAttribute(MemberInfo, Type, bool) Attribute.GetCustomAttribute(Module, Type) Attribute.GetCustomAttribute(Module, Type, bool) Attribute.GetCustomAttribute(ParameterInfo, Type) Attribute.GetCustomAttribute(ParameterInfo, Type, bool) Attribute.GetCustomAttributes(Assembly) Attribute.GetCustomAttributes(Assembly, bool) Attribute.GetCustomAttributes(Assembly, Type) Attribute.GetCustomAttributes(Assembly, Type, bool) Attribute.GetCustomAttributes(MemberInfo) Attribute.GetCustomAttributes(MemberInfo, bool) Attribute.GetCustomAttributes(MemberInfo, Type) Attribute.GetCustomAttributes(MemberInfo, Type, bool) Attribute.GetCustomAttributes(Module) Attribute.GetCustomAttributes(Module, bool) Attribute.GetCustomAttributes(Module, Type) Attribute.GetCustomAttributes(Module, Type, bool) Attribute.GetCustomAttributes(ParameterInfo) Attribute.GetCustomAttributes(ParameterInfo, bool) Attribute.GetCustomAttributes(ParameterInfo, Type) Attribute.GetCustomAttributes(ParameterInfo, Type, bool) Attribute.GetHashCode() Attribute.IsDefaultAttribute() Attribute.IsDefined(Assembly, Type) Attribute.IsDefined(Assembly, Type, bool) Attribute.IsDefined(MemberInfo, Type) Attribute.IsDefined(MemberInfo, Type, bool) Attribute.IsDefined(Module, Type) Attribute.IsDefined(Module, Type, bool) Attribute.IsDefined(ParameterInfo, Type) Attribute.IsDefined(ParameterInfo, Type, bool) Attribute.Match(object) Attribute.TypeId object.Equals(object, object) object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods GenericExtensions.When<TObject>(TObject, bool, Func<TObject, TObject>) ExpandoObjectExtensions.ConvertToExpando(object?) Remarks Initializes a new instance of the SubtitleAttribute class. Constructors SubtitleAttribute(string) Subtitle attribute public SubtitleAttribute(string value) Parameters value string The value. Remarks Initializes a new instance of the SubtitleAttribute class. See Also Attribute Properties Value Gets or sets the value. public string Value { get; set; } Property Value string The value. See Also Attribute"
  },
  "api/Mithril.Admin.Abstractions.DataEditor.Attributes.TextAreaAttribute.html": {
    "href": "api/Mithril.Admin.Abstractions.DataEditor.Attributes.TextAreaAttribute.html",
    "title": "Class TextAreaAttribute | Mithril API Reference",
    "keywords": "Class TextAreaAttribute Namespace Mithril.Admin.Abstractions.DataEditor.Attributes Assembly Mithril.Admin.Abstractions.dll Determines if the system should treat this as a text area [AttributeUsage(AttributeTargets.Property, AllowMultiple = false)] public class TextAreaAttribute : Attribute Inheritance object Attribute TextAreaAttribute Inherited Members Attribute.Equals(object) Attribute.GetCustomAttribute(Assembly, Type) Attribute.GetCustomAttribute(Assembly, Type, bool) Attribute.GetCustomAttribute(MemberInfo, Type) Attribute.GetCustomAttribute(MemberInfo, Type, bool) Attribute.GetCustomAttribute(Module, Type) Attribute.GetCustomAttribute(Module, Type, bool) Attribute.GetCustomAttribute(ParameterInfo, Type) Attribute.GetCustomAttribute(ParameterInfo, Type, bool) Attribute.GetCustomAttributes(Assembly) Attribute.GetCustomAttributes(Assembly, bool) Attribute.GetCustomAttributes(Assembly, Type) Attribute.GetCustomAttributes(Assembly, Type, bool) Attribute.GetCustomAttributes(MemberInfo) Attribute.GetCustomAttributes(MemberInfo, bool) Attribute.GetCustomAttributes(MemberInfo, Type) Attribute.GetCustomAttributes(MemberInfo, Type, bool) Attribute.GetCustomAttributes(Module) Attribute.GetCustomAttributes(Module, bool) Attribute.GetCustomAttributes(Module, Type) Attribute.GetCustomAttributes(Module, Type, bool) Attribute.GetCustomAttributes(ParameterInfo) Attribute.GetCustomAttributes(ParameterInfo, bool) Attribute.GetCustomAttributes(ParameterInfo, Type) Attribute.GetCustomAttributes(ParameterInfo, Type, bool) Attribute.GetHashCode() Attribute.IsDefaultAttribute() Attribute.IsDefined(Assembly, Type) Attribute.IsDefined(Assembly, Type, bool) Attribute.IsDefined(MemberInfo, Type) Attribute.IsDefined(MemberInfo, Type, bool) Attribute.IsDefined(Module, Type) Attribute.IsDefined(Module, Type, bool) Attribute.IsDefined(ParameterInfo, Type) Attribute.IsDefined(ParameterInfo, Type, bool) Attribute.Match(object) Attribute.TypeId object.Equals(object, object) object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods GenericExtensions.When<TObject>(TObject, bool, Func<TObject, TObject>) ExpandoObjectExtensions.ConvertToExpando(object?) Remarks Initializes a new instance of the TextAreaAttribute class. Constructors TextAreaAttribute(int) Determines if the system should treat this as a text area public TextAreaAttribute(int rows = 3) Parameters rows int The rows. Remarks Initializes a new instance of the TextAreaAttribute class. See Also Attribute Properties Rows Gets or sets the rows. public int Rows { get; set; } Property Value int The rows. See Also Attribute"
  },
  "api/Mithril.Admin.Abstractions.DataEditor.Attributes.UploadAttribute.html": {
    "href": "api/Mithril.Admin.Abstractions.DataEditor.Attributes.UploadAttribute.html",
    "title": "Class UploadAttribute | Mithril API Reference",
    "keywords": "Class UploadAttribute Namespace Mithril.Admin.Abstractions.DataEditor.Attributes Assembly Mithril.Admin.Abstractions.dll Determines if the system should treat this as an upload [AttributeUsage(AttributeTargets.Property, AllowMultiple = false)] public class UploadAttribute : Attribute Inheritance object Attribute UploadAttribute Inherited Members Attribute.Equals(object) Attribute.GetCustomAttribute(Assembly, Type) Attribute.GetCustomAttribute(Assembly, Type, bool) Attribute.GetCustomAttribute(MemberInfo, Type) Attribute.GetCustomAttribute(MemberInfo, Type, bool) Attribute.GetCustomAttribute(Module, Type) Attribute.GetCustomAttribute(Module, Type, bool) Attribute.GetCustomAttribute(ParameterInfo, Type) Attribute.GetCustomAttribute(ParameterInfo, Type, bool) Attribute.GetCustomAttributes(Assembly) Attribute.GetCustomAttributes(Assembly, bool) Attribute.GetCustomAttributes(Assembly, Type) Attribute.GetCustomAttributes(Assembly, Type, bool) Attribute.GetCustomAttributes(MemberInfo) Attribute.GetCustomAttributes(MemberInfo, bool) Attribute.GetCustomAttributes(MemberInfo, Type) Attribute.GetCustomAttributes(MemberInfo, Type, bool) Attribute.GetCustomAttributes(Module) Attribute.GetCustomAttributes(Module, bool) Attribute.GetCustomAttributes(Module, Type) Attribute.GetCustomAttributes(Module, Type, bool) Attribute.GetCustomAttributes(ParameterInfo) Attribute.GetCustomAttributes(ParameterInfo, bool) Attribute.GetCustomAttributes(ParameterInfo, Type) Attribute.GetCustomAttributes(ParameterInfo, Type, bool) Attribute.GetHashCode() Attribute.IsDefaultAttribute() Attribute.IsDefined(Assembly, Type) Attribute.IsDefined(Assembly, Type, bool) Attribute.IsDefined(MemberInfo, Type) Attribute.IsDefined(MemberInfo, Type, bool) Attribute.IsDefined(Module, Type) Attribute.IsDefined(Module, Type, bool) Attribute.IsDefined(ParameterInfo, Type) Attribute.IsDefined(ParameterInfo, Type, bool) Attribute.Match(object) Attribute.TypeId object.Equals(object, object) object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods GenericExtensions.When<TObject>(TObject, bool, Func<TObject, TObject>) ExpandoObjectExtensions.ConvertToExpando(object?) Remarks Initializes a new instance of the UploadAttribute class. Constructors UploadAttribute(string, bool) Determines if the system should treat this as an upload public UploadAttribute(string accept, bool allowMultiple = false) Parameters accept string The accept. allowMultiple bool if set to true [allow multiple]. Remarks Initializes a new instance of the UploadAttribute class. See Also Attribute Properties Accept Gets the file types accepted. public string Accept { get; } Property Value string The acceptted file types. AllowMultiple Gets a value indicating whether [allow multiple]. public bool AllowMultiple { get; } Property Value bool true if [allow multiple]; otherwise, false. See Also Attribute"
  },
  "api/Mithril.Admin.Abstractions.DataEditor.Attributes.html": {
    "href": "api/Mithril.Admin.Abstractions.DataEditor.Attributes.html",
    "title": "Namespace Mithril.Admin.Abstractions.DataEditor.Attributes | Mithril API Reference",
    "keywords": "Namespace Mithril.Admin.Abstractions.DataEditor.Attributes Classes DateAndTimeAttribute Used to indicate that the generator should do both a date and time picker DisplayAsTextAttribute Used to indicate that the generator should display this as text (may have the ability for markdown, html, etc. depending on the generator) DoNotListAttribute Do not list attribute HintAttribute Hint attribute HtmlAttribute HTML attribute IgnoreAttribute Ignore attribute InputTypeAttribute Input type attribute OrderAttribute Order attribute PasswordAttribute Password attribute PatternAttribute Pattern attribute PlaceholderAttribute Placeholder attribute QueryAttribute Query attribute ReadOnlyAttribute Read only attribute SelectAttribute Determines if the system should treat this as a select StepAttribute Step attribute SubtitleAttribute Subtitle attribute TextAreaAttribute Determines if the system should treat this as a text area UploadAttribute Determines if the system should treat this as an upload"
  },
  "api/Mithril.Admin.Abstractions.DataEditor.EntityMetadata.html": {
    "href": "api/Mithril.Admin.Abstractions.DataEditor.EntityMetadata.html",
    "title": "Class EntityMetadata | Mithril API Reference",
    "keywords": "Class EntityMetadata Namespace Mithril.Admin.Abstractions.DataEditor Assembly Mithril.Admin.Abstractions.dll Entity metadata public class EntityMetadata Inheritance object EntityMetadata Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods GenericExtensions.When<TObject>(TObject, bool, Func<TObject, TObject>) ExpandoObjectExtensions.ConvertToExpando(object?) Constructors EntityMetadata(Type) Initializes a new instance of the EntityMetadata class. public EntityMetadata(Type objectType) Parameters objectType Type Type of the object. Properties DisplayName Gets or sets the display name. public string DisplayName { get; } Property Value string The display name. Name Gets the name. public string Name { get; } Property Value string The name. Properties Gets the properties. public PropertyMetadata[] Properties { get; } Property Value PropertyMetadata[] The properties."
  },
  "api/Mithril.Admin.Abstractions.DataEditor.PropertyMetadata.html": {
    "href": "api/Mithril.Admin.Abstractions.DataEditor.PropertyMetadata.html",
    "title": "Class PropertyMetadata | Mithril API Reference",
    "keywords": "Class PropertyMetadata Namespace Mithril.Admin.Abstractions.DataEditor Assembly Mithril.Admin.Abstractions.dll Property metadata public class PropertyMetadata Inheritance object PropertyMetadata Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods GenericExtensions.When<TObject>(TObject, bool, Func<TObject, TObject>) ExpandoObjectExtensions.ConvertToExpando(object?) Remarks Initializes a new instance of the PropertyMetadata class. Constructors PropertyMetadata(PropertyInfo?) Property metadata public PropertyMetadata(PropertyInfo? property) Parameters property PropertyInfo The property. Remarks Initializes a new instance of the PropertyMetadata class. Properties DisplayName Gets or sets the name. [JsonPropertyName(\"displayName\")] public string? DisplayName { get; set; } Property Value string The name. Metadata Gets or sets the metadata. [JsonPropertyName(\"metadata\")] public Dictionary<string, object?> Metadata { get; } Property Value Dictionary<string, object> The metadata. Property Gets or sets the property. [JsonIgnore] public PropertyInfo? Property { get; set; } Property Value PropertyInfo The property. PropertyName Gets or sets the name of the property. [JsonPropertyName(\"propertyName\")] public string? PropertyName { get; set; } Property Value string The name of the property. PropertyType Gets or sets the type of the property. [JsonPropertyName(\"propertyType\")] public string? PropertyType { get; set; } Property Value string The type of the property."
  },
  "api/Mithril.Admin.Abstractions.DataEditor.html": {
    "href": "api/Mithril.Admin.Abstractions.DataEditor.html",
    "title": "Namespace Mithril.Admin.Abstractions.DataEditor | Mithril API Reference",
    "keywords": "Namespace Mithril.Admin.Abstractions.DataEditor Classes EntityMetadata Entity metadata PropertyMetadata Property metadata"
  },
  "api/Mithril.Admin.Abstractions.Events.ModelSavedEvent.html": {
    "href": "api/Mithril.Admin.Abstractions.Events.ModelSavedEvent.html",
    "title": "Class ModelSavedEvent | Mithril API Reference",
    "keywords": "Class ModelSavedEvent Namespace Mithril.Admin.Abstractions.Events Assembly Mithril.Admin.Abstractions.dll Model saved event public class ModelSavedEvent : EventBaseClass<ModelSavedEvent>, IModel<ModelSavedEvent>, IEquatable<IModel<ModelSavedEvent>>, IComparable, IComparable<ModelSavedEvent>, IEquatable<ModelBase<ModelSavedEvent>>, IEvent, IEquatable<IEvent>, IModel, IEquatable<IModel>, IEquatable<EventBaseClass<ModelSavedEvent>> Inheritance object ModelBase<ModelSavedEvent> EventBaseClass<ModelSavedEvent> ModelSavedEvent Implements IModel<ModelSavedEvent> IEquatable<IModel<ModelSavedEvent>> IComparable IComparable<ModelSavedEvent> IEquatable<ModelBase<ModelSavedEvent>> IEvent IEquatable<IEvent> IModel IEquatable<IModel> IEquatable<EventBaseClass<ModelSavedEvent>> Inherited Members EventBaseClass<ModelSavedEvent>.Name EventBaseClass<ModelSavedEvent>.RetryCount EventBaseClass<ModelSavedEvent>.State EventBaseClass<ModelSavedEvent>.CanRun() EventBaseClass<ModelSavedEvent>.CompareTo(EventBaseClass<ModelSavedEvent>) EventBaseClass<ModelSavedEvent>.Equals(EventBaseClass<ModelSavedEvent>) EventBaseClass<ModelSavedEvent>.Equals(IEvent) EventBaseClass<ModelSavedEvent>.ToString() ModelBase<ModelSavedEvent>.Active ModelBase<ModelSavedEvent>.Creator ModelBase<ModelSavedEvent>.DateCreated ModelBase<ModelSavedEvent>.DateModified ModelBase<ModelSavedEvent>.ID ModelBase<ModelSavedEvent>.Modifier ModelBase<ModelSavedEvent>.TenantID ModelBase<ModelSavedEvent>.All(IDataService) ModelBase<ModelSavedEvent>.AllActive(IDataService) ModelBase<ModelSavedEvent>.AllInactive(IDataService) ModelBase<ModelSavedEvent>.Load(long, IDataService) ModelBase<ModelSavedEvent>.Query(IDataService) ModelBase<ModelSavedEvent>.CanBeModifiedBy(ClaimsPrincipal) ModelBase<ModelSavedEvent>.CanBeViewedBy(ClaimsPrincipal) ModelBase<ModelSavedEvent>.CompareTo(object) ModelBase<ModelSavedEvent>.DeleteAsync(IDataService, ClaimsPrincipal, bool) ModelBase<ModelSavedEvent>.Equals(IModel) ModelBase<ModelSavedEvent>.Equals(IModel<ModelSavedEvent>) ModelBase<ModelSavedEvent>.Equals(ModelBase<ModelSavedEvent>) ModelBase<ModelSavedEvent>.SaveAsync(IDataService, ClaimsPrincipal) ModelBase<ModelSavedEvent>.SetupObject(IDataService, ClaimsPrincipal) ModelBase<ModelSavedEvent>.SetupObject(IDataService, IUser) ModelBase<ModelSavedEvent>.SetupObjectAndReturn(IDataService, ClaimsPrincipal) object.Equals(object, object) object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Extension Methods GenericExtensions.When<TObject>(TObject, bool, Func<TObject, TObject>) ExpandoObjectExtensions.ConvertToExpando(object?) Constructors ModelSavedEvent() Initializes a new instance of the ModelSavedEvent class. public ModelSavedEvent() ModelSavedEvent(ExpandoObject?, string?, long) Initializes a new instance of the ModelSavedEvent class. public ModelSavedEvent(ExpandoObject? data, string? entityType, long id) Parameters data ExpandoObject The data. entityType string Type of the entity. id long The identifier. Exceptions ArgumentException entityType - entityType ModelSavedEvent(string?, string?, long) Initializes a new instance of the ModelSavedEvent class. public ModelSavedEvent(string? data, string? entityType, long id) Parameters data string The data. entityType string Type of the entity. id long The identifier. Exceptions ArgumentException entityType - entityType Properties Data Gets or sets the data. [MaxLength] public string? Data { get; set; } Property Value string The data. EntityID Gets or sets the identifier. public long EntityID { get; set; } Property Value long The identifier. EntityType Gets or sets the type of the entity. [MaxLength(64)] public string? EntityType { get; set; } Property Value string The type of the entity. Methods CompareTo(ModelSavedEvent?) Compares the object to another object public override int CompareTo(ModelSavedEvent? other) Parameters other ModelSavedEvent Object to compare to Returns int 0 if they are equal, -1 if this is smaller, 1 if it is larger Equals(ModelSavedEvent) Indicates whether the current object is equal to another object of the same type. public bool Equals(ModelSavedEvent other) Parameters other ModelSavedEvent An object to compare with this object. Returns bool true if the current object is equal to the other parameter; otherwise, false. Equals(object?) Determines whether the specified object, is equal to this instance. public override bool Equals(object? obj) Parameters obj object The object to compare with this instance. Returns bool true if the specified object is equal to this instance; otherwise, false. GetData() Gets the data within the event. public override ExpandoObject GetData() Returns ExpandoObject The data from the event. GetHashCode() Returns a hash code for this instance. public override int GetHashCode() Returns int A hash code for this instance, suitable for use in hashing algorithms and data structures like a hash table. GetSchema() Gets the schema. public override string GetSchema() Returns string The data schema. Operators operator ==(ModelSavedEvent, ModelSavedEvent) Implements the operator ==. public static bool operator ==(ModelSavedEvent first, ModelSavedEvent second) Parameters first ModelSavedEvent The first. second ModelSavedEvent The second. Returns bool The result of the operator. operator >(ModelSavedEvent, ModelSavedEvent) Implements the operator >. public static bool operator >(ModelSavedEvent left, ModelSavedEvent right) Parameters left ModelSavedEvent The left. right ModelSavedEvent The right. Returns bool The result of the operator. operator >=(ModelSavedEvent, ModelSavedEvent) Implements the operator >=. public static bool operator >=(ModelSavedEvent left, ModelSavedEvent right) Parameters left ModelSavedEvent The left. right ModelSavedEvent The right. Returns bool The result of the operator. operator !=(ModelSavedEvent, ModelSavedEvent) Implements the operator !=. public static bool operator !=(ModelSavedEvent left, ModelSavedEvent right) Parameters left ModelSavedEvent The left. right ModelSavedEvent The right. Returns bool The result of the operator. operator <(ModelSavedEvent, ModelSavedEvent) Implements the operator <. public static bool operator <(ModelSavedEvent left, ModelSavedEvent right) Parameters left ModelSavedEvent The left. right ModelSavedEvent The right. Returns bool The result of the operator. operator <=(ModelSavedEvent, ModelSavedEvent) Implements the operator <=. public static bool operator <=(ModelSavedEvent left, ModelSavedEvent right) Parameters left ModelSavedEvent The left. right ModelSavedEvent The right. Returns bool The result of the operator. See Also EventBaseClass<TEvent>"
  },
  "api/Mithril.Admin.Abstractions.Events.html": {
    "href": "api/Mithril.Admin.Abstractions.Events.html",
    "title": "Namespace Mithril.Admin.Abstractions.Events | Mithril API Reference",
    "keywords": "Namespace Mithril.Admin.Abstractions.Events Classes ModelSavedEvent Model saved event"
  },
  "api/Mithril.Admin.Abstractions.ExtensionMethods.PropertyInfoExtensions.html": {
    "href": "api/Mithril.Admin.Abstractions.ExtensionMethods.PropertyInfoExtensions.html",
    "title": "Class PropertyInfoExtensions | Mithril API Reference",
    "keywords": "Class PropertyInfoExtensions Namespace Mithril.Admin.Abstractions.ExtensionMethods Assembly Mithril.Admin.Abstractions.dll PropertyInfo extension methods public static class PropertyInfoExtensions Inheritance object PropertyInfoExtensions Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Methods HasAttribute<TAttribute>(PropertyInfo?) Determines whether the specified property has attribute. public static bool HasAttribute<TAttribute>(this PropertyInfo? property) where TAttribute : Attribute Parameters property PropertyInfo The property. Returns bool true if the specified property has attribute; otherwise, false. Type Parameters TAttribute The type of the attribute."
  },
  "api/Mithril.Admin.Abstractions.ExtensionMethods.html": {
    "href": "api/Mithril.Admin.Abstractions.ExtensionMethods.html",
    "title": "Namespace Mithril.Admin.Abstractions.ExtensionMethods | Mithril API Reference",
    "keywords": "Namespace Mithril.Admin.Abstractions.ExtensionMethods Classes PropertyInfoExtensions PropertyInfo extension methods"
  },
  "api/Mithril.Admin.Abstractions.Interfaces.IEditor.html": {
    "href": "api/Mithril.Admin.Abstractions.Interfaces.IEditor.html",
    "title": "Interface IEditor | Mithril API Reference",
    "keywords": "Interface IEditor Namespace Mithril.Admin.Abstractions.Interfaces Assembly Mithril.Admin.Abstractions.dll Editor interface, used to define an admin page component public interface IEditor Extension Methods GenericExtensions.When<TObject>(TObject, bool, Func<TObject, TObject>) ExpandoObjectExtensions.ConvertToExpando(object?) Properties Category Gets the category. string Category { get; } Property Value string The category. ComponentDefinition Gets the component definition. IComponentDefinition ComponentDefinition { get; } Property Value IComponentDefinition The component definition. Description Gets the description. string Description { get; } Property Value string The description. Icon Gets the icon. string Icon { get; } Property Value string The icon. Name Gets the name. string Name { get; } Property Value string The name. Methods CanView(ClaimsPrincipal?) Determines whether this instance can be viewed by the specified user. bool CanView(ClaimsPrincipal? user) Parameters user ClaimsPrincipal The user. Returns bool true if this instance can be viewed by the specified user; otherwise, false."
  },
  "api/Mithril.Admin.Abstractions.Interfaces.IEntity-1.html": {
    "href": "api/Mithril.Admin.Abstractions.Interfaces.IEntity-1.html",
    "title": "Interface IEntity<TModel> | Mithril API Reference",
    "keywords": "Interface IEntity<TModel> Namespace Mithril.Admin.Abstractions.Interfaces Assembly Mithril.Admin.Abstractions.dll IEntity interface public interface IEntity<TModel> : IEntity where TModel : IModel Type Parameters TModel The type of the model. Inherited Members IEntity.Active IEntity.ID Extension Methods GenericExtensions.When<TObject>(TObject, bool, Func<TObject, TObject>) ExpandoObjectExtensions.ConvertToExpando(object?) Methods SaveAsync(long, IDataService?, IServiceProvider?, ClaimsPrincipal?) Saves the changes asynchronously. Task<TModel?> SaveAsync(long id, IDataService? dataService, IServiceProvider? serviceProvider, ClaimsPrincipal? currentUser) Parameters id long The identifier. dataService IDataService The data service. serviceProvider IServiceProvider The service provider. currentUser ClaimsPrincipal The current user. Returns Task<TModel> The async task."
  },
  "api/Mithril.Admin.Abstractions.Interfaces.IEntity.html": {
    "href": "api/Mithril.Admin.Abstractions.Interfaces.IEntity.html",
    "title": "Interface IEntity | Mithril API Reference",
    "keywords": "Interface IEntity Namespace Mithril.Admin.Abstractions.Interfaces Assembly Mithril.Admin.Abstractions.dll Entity interface public interface IEntity Extension Methods GenericExtensions.When<TObject>(TObject, bool, Func<TObject, TObject>) ExpandoObjectExtensions.ConvertToExpando(object?) Properties Active Gets or sets a value indicating whether this IEntity is active. bool Active { get; set; } Property Value bool true if active; otherwise, false. ID Gets or sets the identifier. long ID { get; set; } Property Value long The identifier."
  },
  "api/Mithril.Admin.Abstractions.Interfaces.IEntityEditor.html": {
    "href": "api/Mithril.Admin.Abstractions.Interfaces.IEntityEditor.html",
    "title": "Interface IEntityEditor | Mithril API Reference",
    "keywords": "Interface IEntityEditor Namespace Mithril.Admin.Abstractions.Interfaces Assembly Mithril.Admin.Abstractions.dll Entity editor public interface IEntityEditor : IEditor Inherited Members IEditor.Category IEditor.ComponentDefinition IEditor.Description IEditor.Icon IEditor.Name IEditor.CanView(ClaimsPrincipal) Extension Methods GenericExtensions.When<TObject>(TObject, bool, Func<TObject, TObject>) ExpandoObjectExtensions.ConvertToExpando(object?) Properties EntityType Gets the type of the entity. string EntityType { get; } Property Value string The type of the entity. Methods ActivateAsync(long, ClaimsPrincipal?) Activates the entity specified asynchronously. Task<bool> ActivateAsync(long id, ClaimsPrincipal? currentUser) Parameters id long The identifier. currentUser ClaimsPrincipal The current user. Returns Task<bool> True if it succeeds, false otherwise. DeleteEntityAsync(long, ClaimsPrincipal?) Deletes the entity asynchronously. Task<bool> DeleteEntityAsync(long id, ClaimsPrincipal? currentUser) Parameters id long The identifier. currentUser ClaimsPrincipal The current user. Returns Task<bool> True if it succeeds, false otherwise. Load(long, ExpandoObject?, ClaimsPrincipal?) Loads the specified identifier. IEntity? Load(long id, ExpandoObject? model, ClaimsPrincipal? currentUser) Parameters id long The identifier. model ExpandoObject The model. currentUser ClaimsPrincipal The current user. Returns IEntity The entity specified. LoadPageAsync(int, int, string, bool, string, ClaimsPrincipal?) Loads the page asynchronously. Task<IEnumerable<IEntity>> LoadPageAsync(int page, int pageSize, string sortField, bool sortAscending, string searchQuery, ClaimsPrincipal? currentUser) Parameters page int The page (zero based). pageSize int Size of the page. sortField string The sort field. sortAscending bool if set to true [sort ascending]. searchQuery string The search query. currentUser ClaimsPrincipal The current user. Returns Task<IEnumerable<IEntity>> The entities specified. SaveEntityAsync(long, ExpandoObject, ClaimsPrincipal?) Saves the changes asynchronously. Task<bool> SaveEntityAsync(long id, ExpandoObject entity, ClaimsPrincipal? currentUser) Parameters id long The identifier. entity ExpandoObject The entity. currentUser ClaimsPrincipal The current user. Returns Task<bool> True if it succeeds, false otherwise. TotalActiveAsync(ClaimsPrincipal?) Gets the total active items. Task<int> TotalActiveAsync(ClaimsPrincipal? currentUser) Parameters currentUser ClaimsPrincipal The current user. Returns Task<int> The total. See Also IEditor"
  },
  "api/Mithril.Admin.Abstractions.Interfaces.IMetadataBuilder.html": {
    "href": "api/Mithril.Admin.Abstractions.Interfaces.IMetadataBuilder.html",
    "title": "Interface IMetadataBuilder | Mithril API Reference",
    "keywords": "Interface IMetadataBuilder Namespace Mithril.Admin.Abstractions.Interfaces Assembly Mithril.Admin.Abstractions.dll Metadata builder interface public interface IMetadataBuilder Extension Methods GenericExtensions.When<TObject>(TObject, bool, Func<TObject, TObject>) ExpandoObjectExtensions.ConvertToExpando(object?) Properties Order Gets the order. int Order { get; } Property Value int The order. Methods ExtractMetadata(PropertyMetadata?, IEntityMetadataService) Extracts metadata and adds it to the PropertyMetadata object. PropertyMetadata? ExtractMetadata(PropertyMetadata? propertyMetadata, IEntityMetadataService metadataService) Parameters propertyMetadata PropertyMetadata The property metadata. metadataService IEntityMetadataService The metadata service. Returns PropertyMetadata The resulting property metadata."
  },
  "api/Mithril.Admin.Abstractions.Interfaces.html": {
    "href": "api/Mithril.Admin.Abstractions.Interfaces.html",
    "title": "Namespace Mithril.Admin.Abstractions.Interfaces | Mithril API Reference",
    "keywords": "Namespace Mithril.Admin.Abstractions.Interfaces Interfaces IEditor Editor interface, used to define an admin page component IEntity Entity interface IEntityEditor Entity editor IEntity<TModel> IEntity interface IMetadataBuilder Metadata builder interface"
  },
  "api/Mithril.Admin.Abstractions.Mappings.ModelSavedEventMapping.html": {
    "href": "api/Mithril.Admin.Abstractions.Mappings.ModelSavedEventMapping.html",
    "title": "Class ModelSavedEventMapping | Mithril API Reference",
    "keywords": "Class ModelSavedEventMapping Namespace Mithril.Admin.Abstractions.Mappings Assembly Mithril.Admin.Abstractions.dll Model saved event mapping public class ModelSavedEventMapping : MappingBaseClass<ModelSavedEvent, DefaultDatabase>, IMapping<ModelSavedEvent>, IMapping Inheritance object MappingBaseClass<ModelSavedEvent, DefaultDatabase> ModelSavedEventMapping Implements IMapping<ModelSavedEvent> IMapping Inherited Members MappingBaseClass<ModelSavedEvent, DefaultDatabase>.AddAutoKey() MappingBaseClass<ModelSavedEvent, DefaultDatabase>.ContainsProperty(string) MappingBaseClass<ModelSavedEvent, DefaultDatabase>.Copy(IMapping) MappingBaseClass<ModelSavedEvent, DefaultDatabase>.CopyProperty(IIDProperty) MappingBaseClass<ModelSavedEvent, DefaultDatabase>.CopyProperty(IProperty) MappingBaseClass<ModelSavedEvent, DefaultDatabase>.CopyProperty(IMapProperty) MappingBaseClass<ModelSavedEvent, DefaultDatabase>.CopyProperty(IManyToOneProperty) MappingBaseClass<ModelSavedEvent, DefaultDatabase>.CopyProperty(IManyToManyProperty) MappingBaseClass<ModelSavedEvent, DefaultDatabase>.Equals(object) MappingBaseClass<ModelSavedEvent, DefaultDatabase>.GetColumnName(string) MappingBaseClass<ModelSavedEvent, DefaultDatabase>.GetHashCode() MappingBaseClass<ModelSavedEvent, DefaultDatabase>.ID<TDataType>(Expression<Func<ModelSavedEvent, TDataType>>) MappingBaseClass<ModelSavedEvent, DefaultDatabase>.ManyToMany<TDataType>(Expression<Func<ModelSavedEvent, IList<TDataType>>>) MappingBaseClass<ModelSavedEvent, DefaultDatabase>.ManyToOne<TDataType>(Expression<Func<ModelSavedEvent, IList<TDataType>>>) MappingBaseClass<ModelSavedEvent, DefaultDatabase>.ManyToOne<TDataType>(Expression<Func<ModelSavedEvent, TDataType>>) MappingBaseClass<ModelSavedEvent, DefaultDatabase>.Map<TDataType>(Expression<Func<ModelSavedEvent, TDataType>>) MappingBaseClass<ModelSavedEvent, DefaultDatabase>.Reduce(ILogger) MappingBaseClass<ModelSavedEvent, DefaultDatabase>.Reduce(IMapping, ILogger) MappingBaseClass<ModelSavedEvent, DefaultDatabase>.Reference<TDataType>(Expression<Func<ModelSavedEvent, TDataType>>) MappingBaseClass<ModelSavedEvent, DefaultDatabase>.SetQuery(QueryType, string, CommandType, params IParameter[]) MappingBaseClass<ModelSavedEvent, DefaultDatabase>.Setup() MappingBaseClass<ModelSavedEvent, DefaultDatabase>.ToString() MappingBaseClass<ModelSavedEvent, DefaultDatabase>.AutoIDProperties MappingBaseClass<ModelSavedEvent, DefaultDatabase>.DatabaseConfigType MappingBaseClass<ModelSavedEvent, DefaultDatabase>.IDProperties MappingBaseClass<ModelSavedEvent, DefaultDatabase>.ManyToManyProperties MappingBaseClass<ModelSavedEvent, DefaultDatabase>.ManyToOneProperties MappingBaseClass<ModelSavedEvent, DefaultDatabase>.MapProperties MappingBaseClass<ModelSavedEvent, DefaultDatabase>.Merge MappingBaseClass<ModelSavedEvent, DefaultDatabase>.ObjectType MappingBaseClass<ModelSavedEvent, DefaultDatabase>.Order MappingBaseClass<ModelSavedEvent, DefaultDatabase>.Prefix MappingBaseClass<ModelSavedEvent, DefaultDatabase>.Queries MappingBaseClass<ModelSavedEvent, DefaultDatabase>.ReferenceProperties MappingBaseClass<ModelSavedEvent, DefaultDatabase>.SchemaName MappingBaseClass<ModelSavedEvent, DefaultDatabase>.Suffix MappingBaseClass<ModelSavedEvent, DefaultDatabase>.TableName object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods GenericExtensions.When<TObject>(TObject, bool, Func<TObject, TObject>) ExpandoObjectExtensions.ConvertToExpando(object?) Constructors ModelSavedEventMapping() Initializes a new instance of the ModelSavedEventMapping class. public ModelSavedEventMapping() See Also MappingBaseClass<TClassType, TDatabaseType>"
  },
  "api/Mithril.Admin.Abstractions.Mappings.SaveModelCommandMapping.html": {
    "href": "api/Mithril.Admin.Abstractions.Mappings.SaveModelCommandMapping.html",
    "title": "Class SaveModelCommandMapping | Mithril API Reference",
    "keywords": "Class SaveModelCommandMapping Namespace Mithril.Admin.Abstractions.Mappings Assembly Mithril.Admin.Abstractions.dll Save model command mapping public class SaveModelCommandMapping : MappingBaseClass<SaveModelCommand, DefaultDatabase>, IMapping<SaveModelCommand>, IMapping Inheritance object MappingBaseClass<SaveModelCommand, DefaultDatabase> SaveModelCommandMapping Implements IMapping<SaveModelCommand> IMapping Inherited Members MappingBaseClass<SaveModelCommand, DefaultDatabase>.AddAutoKey() MappingBaseClass<SaveModelCommand, DefaultDatabase>.ContainsProperty(string) MappingBaseClass<SaveModelCommand, DefaultDatabase>.Copy(IMapping) MappingBaseClass<SaveModelCommand, DefaultDatabase>.CopyProperty(IIDProperty) MappingBaseClass<SaveModelCommand, DefaultDatabase>.CopyProperty(IProperty) MappingBaseClass<SaveModelCommand, DefaultDatabase>.CopyProperty(IMapProperty) MappingBaseClass<SaveModelCommand, DefaultDatabase>.CopyProperty(IManyToOneProperty) MappingBaseClass<SaveModelCommand, DefaultDatabase>.CopyProperty(IManyToManyProperty) MappingBaseClass<SaveModelCommand, DefaultDatabase>.Equals(object) MappingBaseClass<SaveModelCommand, DefaultDatabase>.GetColumnName(string) MappingBaseClass<SaveModelCommand, DefaultDatabase>.GetHashCode() MappingBaseClass<SaveModelCommand, DefaultDatabase>.ID<TDataType>(Expression<Func<SaveModelCommand, TDataType>>) MappingBaseClass<SaveModelCommand, DefaultDatabase>.ManyToMany<TDataType>(Expression<Func<SaveModelCommand, IList<TDataType>>>) MappingBaseClass<SaveModelCommand, DefaultDatabase>.ManyToOne<TDataType>(Expression<Func<SaveModelCommand, IList<TDataType>>>) MappingBaseClass<SaveModelCommand, DefaultDatabase>.ManyToOne<TDataType>(Expression<Func<SaveModelCommand, TDataType>>) MappingBaseClass<SaveModelCommand, DefaultDatabase>.Map<TDataType>(Expression<Func<SaveModelCommand, TDataType>>) MappingBaseClass<SaveModelCommand, DefaultDatabase>.Reduce(ILogger) MappingBaseClass<SaveModelCommand, DefaultDatabase>.Reduce(IMapping, ILogger) MappingBaseClass<SaveModelCommand, DefaultDatabase>.Reference<TDataType>(Expression<Func<SaveModelCommand, TDataType>>) MappingBaseClass<SaveModelCommand, DefaultDatabase>.SetQuery(QueryType, string, CommandType, params IParameter[]) MappingBaseClass<SaveModelCommand, DefaultDatabase>.Setup() MappingBaseClass<SaveModelCommand, DefaultDatabase>.ToString() MappingBaseClass<SaveModelCommand, DefaultDatabase>.AutoIDProperties MappingBaseClass<SaveModelCommand, DefaultDatabase>.DatabaseConfigType MappingBaseClass<SaveModelCommand, DefaultDatabase>.IDProperties MappingBaseClass<SaveModelCommand, DefaultDatabase>.ManyToManyProperties MappingBaseClass<SaveModelCommand, DefaultDatabase>.ManyToOneProperties MappingBaseClass<SaveModelCommand, DefaultDatabase>.MapProperties MappingBaseClass<SaveModelCommand, DefaultDatabase>.Merge MappingBaseClass<SaveModelCommand, DefaultDatabase>.ObjectType MappingBaseClass<SaveModelCommand, DefaultDatabase>.Order MappingBaseClass<SaveModelCommand, DefaultDatabase>.Prefix MappingBaseClass<SaveModelCommand, DefaultDatabase>.Queries MappingBaseClass<SaveModelCommand, DefaultDatabase>.ReferenceProperties MappingBaseClass<SaveModelCommand, DefaultDatabase>.SchemaName MappingBaseClass<SaveModelCommand, DefaultDatabase>.Suffix MappingBaseClass<SaveModelCommand, DefaultDatabase>.TableName object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods GenericExtensions.When<TObject>(TObject, bool, Func<TObject, TObject>) ExpandoObjectExtensions.ConvertToExpando(object?) Constructors SaveModelCommandMapping() Initializes a new instance of the SaveModelCommandMapping class. public SaveModelCommandMapping() See Also MappingBaseClass<TClassType, TDatabaseType>"
  },
  "api/Mithril.Admin.Abstractions.Mappings.html": {
    "href": "api/Mithril.Admin.Abstractions.Mappings.html",
    "title": "Namespace Mithril.Admin.Abstractions.Mappings | Mithril API Reference",
    "keywords": "Namespace Mithril.Admin.Abstractions.Mappings Classes ModelSavedEventMapping Model saved event mapping SaveModelCommandMapping Save model command mapping"
  },
  "api/Mithril.Admin.Abstractions.Services.IEditorService.html": {
    "href": "api/Mithril.Admin.Abstractions.Services.IEditorService.html",
    "title": "Interface IEditorService | Mithril API Reference",
    "keywords": "Interface IEditorService Namespace Mithril.Admin.Abstractions.Services Assembly Mithril.Admin.Abstractions.dll Editor service public interface IEditorService Extension Methods GenericExtensions.When<TObject>(TObject, bool, Func<TObject, TObject>) ExpandoObjectExtensions.ConvertToExpando(object?) Properties Editors Gets the editors. IEnumerable<IEditor> Editors { get; } Property Value IEnumerable<IEditor> The editors."
  },
  "api/Mithril.Admin.Abstractions.Services.IEntityMetadataService.html": {
    "href": "api/Mithril.Admin.Abstractions.Services.IEntityMetadataService.html",
    "title": "Interface IEntityMetadataService | Mithril API Reference",
    "keywords": "Interface IEntityMetadataService Namespace Mithril.Admin.Abstractions.Services Assembly Mithril.Admin.Abstractions.dll Entity metadata service public interface IEntityMetadataService Extension Methods GenericExtensions.When<TObject>(TObject, bool, Func<TObject, TObject>) ExpandoObjectExtensions.ConvertToExpando(object?) Methods ExtractMetadata(PropertyInfo?) Extracts the metadata defining this entity. EntityMetadata? ExtractMetadata(PropertyInfo? property) Parameters property PropertyInfo The property. Returns EntityMetadata The metadata for the entity type. ExtractMetadata(Type?) Extracts the metadata defining this entity. EntityMetadata? ExtractMetadata(Type? entityType) Parameters entityType Type Type of the entity. Returns EntityMetadata The metadata for the entity type. ExtractMetadata<TEntity>() Extracts the metadata defining this entity. EntityMetadata? ExtractMetadata<TEntity>() Returns EntityMetadata The metadata for the entity type. Type Parameters TEntity The type of the entity."
  },
  "api/Mithril.Admin.Abstractions.Services.html": {
    "href": "api/Mithril.Admin.Abstractions.Services.html",
    "title": "Namespace Mithril.Admin.Abstractions.Services | Mithril API Reference",
    "keywords": "Namespace Mithril.Admin.Abstractions.Services Interfaces IEditorService Editor service IEntityMetadataService Entity metadata service"
  },
  "api/Mithril.Admin.AdminModule.html": {
    "href": "api/Mithril.Admin.AdminModule.html",
    "title": "Class AdminModule | Mithril API Reference",
    "keywords": "Class AdminModule Namespace Mithril.Admin Assembly Mithril.Admin.dll Admin module public class AdminModule : ModuleBaseClass<AdminModule>, IEquatable<AdminModule>, IModule Inheritance object ModuleBaseClass<AdminModule> AdminModule Implements IEquatable<AdminModule> IModule Inherited Members ModuleBaseClass<AdminModule>.Category ModuleBaseClass<AdminModule>.ContentPath ModuleBaseClass<AdminModule>.Features ModuleBaseClass<AdminModule>.ID ModuleBaseClass<AdminModule>.LastModified ModuleBaseClass<AdminModule>.Name ModuleBaseClass<AdminModule>.Order ModuleBaseClass<AdminModule>.Tags ModuleBaseClass<AdminModule>.Version ModuleBaseClass<AdminModule>.ConfigureApplication(IApplicationBuilder, IConfiguration, IHostEnvironment) ModuleBaseClass<AdminModule>.ConfigureHostSettings(IHostBuilder, IConfiguration, IHostEnvironment) ModuleBaseClass<AdminModule>.ConfigureLoggingSettings(ILoggingBuilder, IConfiguration, IHostEnvironment) ModuleBaseClass<AdminModule>.ConfigureMVC(IMvcBuilder, IConfiguration, IHostEnvironment) ModuleBaseClass<AdminModule>.ConfigureRoutes(IEndpointRouteBuilder, IConfiguration, IHostEnvironment) ModuleBaseClass<AdminModule>.ConfigureWebHostSettings(IWebHostBuilder, IConfiguration, IHostEnvironment) ModuleBaseClass<AdminModule>.Equals(object) ModuleBaseClass<AdminModule>.Equals(AdminModule) ModuleBaseClass<AdminModule>.GetHashCode() ModuleBaseClass<AdminModule>.InitializeDataAsync(IDataService, IServiceProvider) ModuleBaseClass<AdminModule>.OnStarted() ModuleBaseClass<AdminModule>.OnStopped() ModuleBaseClass<AdminModule>.OnStopping() object.Equals(object, object) object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods GenericExtensions.When<TObject>(TObject, bool, Func<TObject, TObject>) ExpandoObjectExtensions.ConvertToExpando(object?) Methods ConfigureServices(IServiceCollection?, IConfiguration?, IHostEnvironment?) Configures the services for the module. public override IServiceCollection? ConfigureServices(IServiceCollection? services, IConfiguration? configuration, IHostEnvironment? environment) Parameters services IServiceCollection The services collection. configuration IConfiguration The configuration. environment IHostEnvironment The environment. Returns IServiceCollection Services See Also ModuleBaseClass<TModule>"
  },
  "api/Mithril.Admin.Commands.SaveModelCommandHandler.html": {
    "href": "api/Mithril.Admin.Commands.SaveModelCommandHandler.html",
    "title": "Class SaveModelCommandHandler | Mithril API Reference",
    "keywords": "Class SaveModelCommandHandler Namespace Mithril.Admin.Commands Assembly Mithril.Admin.dll Save model command handler public class SaveModelCommandHandler : CommandHandlerBaseClass<SaveModelCommand, SaveModelCommandVM>, ICommandHandler<SaveModelCommandVM>, ICommandHandler Inheritance object CommandHandlerBaseClass<SaveModelCommand, SaveModelCommandVM> SaveModelCommandHandler Implements ICommandHandler<SaveModelCommandVM> ICommandHandler Inherited Members CommandHandlerBaseClass<SaveModelCommand, SaveModelCommandVM>.CommandName CommandHandlerBaseClass<SaveModelCommand, SaveModelCommandVM>.ContentTypeAccepts CommandHandlerBaseClass<SaveModelCommand, SaveModelCommandVM>.Features CommandHandlerBaseClass<SaveModelCommand, SaveModelCommandVM>.Tags CommandHandlerBaseClass<SaveModelCommand, SaveModelCommandVM>.Version CommandHandlerBaseClass<SaveModelCommand, SaveModelCommandVM>.ViewModelType CommandHandlerBaseClass<SaveModelCommand, SaveModelCommandVM>.FeatureManager CommandHandlerBaseClass<SaveModelCommand, SaveModelCommandVM>.Logger CommandHandlerBaseClass<SaveModelCommand, SaveModelCommandVM>.CanHandle(ICommand) CommandHandlerBaseClass<SaveModelCommand, SaveModelCommandVM>.CreateAsync(SaveModelCommandVM, ClaimsPrincipal) CommandHandlerBaseClass<SaveModelCommand, SaveModelCommandVM>.HandleCommandAsync(params ICommand[]) CommandHandlerBaseClass<SaveModelCommand, SaveModelCommandVM>.HandleCommandAsync(SaveModelCommand[]) CommandHandlerBaseClass<SaveModelCommand, SaveModelCommandVM>.IsFeatureEnabled() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods GenericExtensions.When<TObject>(TObject, bool, Func<TObject, TObject>) ExpandoObjectExtensions.ConvertToExpando(object?) Remarks Initializes a new instance of the SaveModelCommandHandler class. Constructors SaveModelCommandHandler(IEditorService?, ILogger<SaveModelCommandHandler>?, IFeatureManager?) Save model command handler public SaveModelCommandHandler(IEditorService? editorService, ILogger<SaveModelCommandHandler>? logger, IFeatureManager? featureManager) Parameters editorService IEditorService The editor service. logger ILogger<SaveModelCommandHandler> The logger. featureManager IFeatureManager The feature manager. Remarks Initializes a new instance of the SaveModelCommandHandler class. See Also CommandHandlerBaseClass<TCommand, TViewModel> Properties CommandName Gets the command type accepted. public override string CommandName { get; } Property Value string The command type accepted. Tags Gets the tags (Used by OpenAPI, etc). public override string[] Tags { get; } Property Value string[] The tags (Used by OpenAPI, etc). Methods CreateAsync(SaveModelCommandVM?, ClaimsPrincipal?) Creates the specified value. public override ValueTask<CommandCreationResult?> CreateAsync(SaveModelCommandVM? value, ClaimsPrincipal? user) Parameters value SaveModelCommandVM The value. user ClaimsPrincipal The user. Returns ValueTask<CommandCreationResult> A command value converted from the view model. HandleCommandAsync(SaveModelCommand?[]?) Handles the command. protected override Task<IEvent[]> HandleCommandAsync(SaveModelCommand?[]? args) Parameters args SaveModelCommand[] The arguments. Returns Task<IEvent[]> The events generated by the command. See Also CommandHandlerBaseClass<TCommand, TViewModel>"
  },
  "api/Mithril.Admin.Commands.ViewModels.SaveModelCommandVM.html": {
    "href": "api/Mithril.Admin.Commands.ViewModels.SaveModelCommandVM.html",
    "title": "Class SaveModelCommandVM | Mithril API Reference",
    "keywords": "Class SaveModelCommandVM Namespace Mithril.Admin.Commands.ViewModels Assembly Mithril.Admin.dll Save model command VM public class SaveModelCommandVM Inheritance object SaveModelCommandVM Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods GenericExtensions.When<TObject>(TObject, bool, Func<TObject, TObject>) ExpandoObjectExtensions.ConvertToExpando(object?) Properties Data Gets or sets the data. public ExpandoObject? Data { get; set; } Property Value ExpandoObject The data. EntityType Gets or sets the type of the entity. public string? EntityType { get; set; } Property Value string The type of the entity. ID Gets or sets the identifier. public long ID { get; set; } Property Value long The identifier."
  },
  "api/Mithril.Admin.Commands.ViewModels.html": {
    "href": "api/Mithril.Admin.Commands.ViewModels.html",
    "title": "Namespace Mithril.Admin.Commands.ViewModels | Mithril API Reference",
    "keywords": "Namespace Mithril.Admin.Commands.ViewModels Classes SaveModelCommandVM Save model command VM"
  },
  "api/Mithril.Admin.Commands.html": {
    "href": "api/Mithril.Admin.Commands.html",
    "title": "Namespace Mithril.Admin.Commands | Mithril API Reference",
    "keywords": "Namespace Mithril.Admin.Commands Classes SaveModelCommandHandler Save model command handler"
  },
  "api/Mithril.Admin.Controllers.AdminController.html": {
    "href": "api/Mithril.Admin.Controllers.AdminController.html",
    "title": "Class AdminController | Mithril API Reference",
    "keywords": "Class AdminController Namespace Mithril.Admin.Controllers Assembly Mithril.Admin.dll Admin controller [Area(\"Admin\")] [Authorize] [ApiExplorerSettings(IgnoreApi = true)] [Route(\"/Admin\")] public class AdminController : Controller, IActionFilter, IAsyncActionFilter, IFilterMetadata, IDisposable Inheritance object ControllerBase Controller AdminController Implements IActionFilter IAsyncActionFilter IFilterMetadata IDisposable Inherited Members Controller.View() Controller.View(string) Controller.View(object) Controller.View(string, object) Controller.PartialView() Controller.PartialView(string) Controller.PartialView(object) Controller.PartialView(string, object) Controller.ViewComponent(string) Controller.ViewComponent(Type) Controller.ViewComponent(string, object) Controller.ViewComponent(Type, object) Controller.Json(object) Controller.Json(object, object) Controller.OnActionExecuting(ActionExecutingContext) Controller.OnActionExecuted(ActionExecutedContext) Controller.OnActionExecutionAsync(ActionExecutingContext, ActionExecutionDelegate) Controller.Dispose() Controller.Dispose(bool) Controller.ViewData Controller.TempData Controller.ViewBag ControllerBase.StatusCode(int) ControllerBase.StatusCode(int, object) ControllerBase.Content(string) ControllerBase.Content(string, string) ControllerBase.Content(string, string, Encoding) ControllerBase.Content(string, MediaTypeHeaderValue) ControllerBase.NoContent() ControllerBase.Ok() ControllerBase.Ok(object) ControllerBase.Redirect(string) ControllerBase.RedirectPermanent(string) ControllerBase.RedirectPreserveMethod(string) ControllerBase.RedirectPermanentPreserveMethod(string) ControllerBase.LocalRedirect(string) ControllerBase.LocalRedirectPermanent(string) ControllerBase.LocalRedirectPreserveMethod(string) ControllerBase.LocalRedirectPermanentPreserveMethod(string) ControllerBase.RedirectToAction() ControllerBase.RedirectToAction(string) ControllerBase.RedirectToAction(string, object) ControllerBase.RedirectToAction(string, string) ControllerBase.RedirectToAction(string, string, object) ControllerBase.RedirectToAction(string, string, string) ControllerBase.RedirectToAction(string, string, object, string) ControllerBase.RedirectToActionPreserveMethod(string, string, object, string) ControllerBase.RedirectToActionPermanent(string) ControllerBase.RedirectToActionPermanent(string, object) ControllerBase.RedirectToActionPermanent(string, string) ControllerBase.RedirectToActionPermanent(string, string, string) ControllerBase.RedirectToActionPermanent(string, string, object) ControllerBase.RedirectToActionPermanent(string, string, object, string) ControllerBase.RedirectToActionPermanentPreserveMethod(string, string, object, string) ControllerBase.RedirectToRoute(string) ControllerBase.RedirectToRoute(object) ControllerBase.RedirectToRoute(string, object) ControllerBase.RedirectToRoute(string, string) ControllerBase.RedirectToRoute(string, object, string) ControllerBase.RedirectToRoutePreserveMethod(string, object, string) ControllerBase.RedirectToRoutePermanent(string) ControllerBase.RedirectToRoutePermanent(object) ControllerBase.RedirectToRoutePermanent(string, object) ControllerBase.RedirectToRoutePermanent(string, string) ControllerBase.RedirectToRoutePermanent(string, object, string) ControllerBase.RedirectToRoutePermanentPreserveMethod(string, object, string) ControllerBase.RedirectToPage(string) ControllerBase.RedirectToPage(string, object) ControllerBase.RedirectToPage(string, string) ControllerBase.RedirectToPage(string, string, object) ControllerBase.RedirectToPage(string, string, string) ControllerBase.RedirectToPage(string, string, object, string) ControllerBase.RedirectToPagePermanent(string) ControllerBase.RedirectToPagePermanent(string, object) ControllerBase.RedirectToPagePermanent(string, string) ControllerBase.RedirectToPagePermanent(string, string, string) ControllerBase.RedirectToPagePermanent(string, string, object, string) ControllerBase.RedirectToPagePreserveMethod(string, string, object, string) ControllerBase.RedirectToPagePermanentPreserveMethod(string, string, object, string) ControllerBase.File(byte[], string) ControllerBase.File(byte[], string, bool) ControllerBase.File(byte[], string, string) ControllerBase.File(byte[], string, string, bool) ControllerBase.File(byte[], string, DateTimeOffset?, EntityTagHeaderValue) ControllerBase.File(byte[], string, DateTimeOffset?, EntityTagHeaderValue, bool) ControllerBase.File(byte[], string, string, DateTimeOffset?, EntityTagHeaderValue) ControllerBase.File(byte[], string, string, DateTimeOffset?, EntityTagHeaderValue, bool) ControllerBase.File(Stream, string) ControllerBase.File(Stream, string, bool) ControllerBase.File(Stream, string, string) ControllerBase.File(Stream, string, string, bool) ControllerBase.File(Stream, string, DateTimeOffset?, EntityTagHeaderValue) ControllerBase.File(Stream, string, DateTimeOffset?, EntityTagHeaderValue, bool) ControllerBase.File(Stream, string, string, DateTimeOffset?, EntityTagHeaderValue) ControllerBase.File(Stream, string, string, DateTimeOffset?, EntityTagHeaderValue, bool) ControllerBase.File(string, string) ControllerBase.File(string, string, bool) ControllerBase.File(string, string, string) ControllerBase.File(string, string, string, bool) ControllerBase.File(string, string, DateTimeOffset?, EntityTagHeaderValue) ControllerBase.File(string, string, DateTimeOffset?, EntityTagHeaderValue, bool) ControllerBase.File(string, string, string, DateTimeOffset?, EntityTagHeaderValue) ControllerBase.File(string, string, string, DateTimeOffset?, EntityTagHeaderValue, bool) ControllerBase.PhysicalFile(string, string) ControllerBase.PhysicalFile(string, string, bool) ControllerBase.PhysicalFile(string, string, string) ControllerBase.PhysicalFile(string, string, string, bool) ControllerBase.PhysicalFile(string, string, DateTimeOffset?, EntityTagHeaderValue) ControllerBase.PhysicalFile(string, string, DateTimeOffset?, EntityTagHeaderValue, bool) ControllerBase.PhysicalFile(string, string, string, DateTimeOffset?, EntityTagHeaderValue) ControllerBase.PhysicalFile(string, string, string, DateTimeOffset?, EntityTagHeaderValue, bool) ControllerBase.Unauthorized() ControllerBase.Unauthorized(object) ControllerBase.NotFound() ControllerBase.NotFound(object) ControllerBase.BadRequest() ControllerBase.BadRequest(object) ControllerBase.BadRequest(ModelStateDictionary) ControllerBase.UnprocessableEntity() ControllerBase.UnprocessableEntity(object) ControllerBase.UnprocessableEntity(ModelStateDictionary) ControllerBase.Conflict() ControllerBase.Conflict(object) ControllerBase.Conflict(ModelStateDictionary) ControllerBase.Problem(string, string, int?, string, string) ControllerBase.ValidationProblem(ValidationProblemDetails) ControllerBase.ValidationProblem(ModelStateDictionary) ControllerBase.ValidationProblem() ControllerBase.ValidationProblem(string, string, int?, string, string, ModelStateDictionary) ControllerBase.Created() ControllerBase.Created(string, object) ControllerBase.Created(Uri, object) ControllerBase.CreatedAtAction(string, object) ControllerBase.CreatedAtAction(string, object, object) ControllerBase.CreatedAtAction(string, string, object, object) ControllerBase.CreatedAtRoute(string, object) ControllerBase.CreatedAtRoute(object, object) ControllerBase.CreatedAtRoute(string, object, object) ControllerBase.Accepted() ControllerBase.Accepted(object) ControllerBase.Accepted(Uri) ControllerBase.Accepted(string) ControllerBase.Accepted(string, object) ControllerBase.Accepted(Uri, object) ControllerBase.AcceptedAtAction(string) ControllerBase.AcceptedAtAction(string, string) ControllerBase.AcceptedAtAction(string, object) ControllerBase.AcceptedAtAction(string, string, object) ControllerBase.AcceptedAtAction(string, object, object) ControllerBase.AcceptedAtAction(string, string, object, object) ControllerBase.AcceptedAtRoute(object) ControllerBase.AcceptedAtRoute(string) ControllerBase.AcceptedAtRoute(string, object) ControllerBase.AcceptedAtRoute(object, object) ControllerBase.AcceptedAtRoute(string, object, object) ControllerBase.Challenge() ControllerBase.Challenge(params string[]) ControllerBase.Challenge(AuthenticationProperties) ControllerBase.Challenge(AuthenticationProperties, params string[]) ControllerBase.Forbid() ControllerBase.Forbid(params string[]) ControllerBase.Forbid(AuthenticationProperties) ControllerBase.Forbid(AuthenticationProperties, params string[]) ControllerBase.SignIn(ClaimsPrincipal) ControllerBase.SignIn(ClaimsPrincipal, string) ControllerBase.SignIn(ClaimsPrincipal, AuthenticationProperties) ControllerBase.SignIn(ClaimsPrincipal, AuthenticationProperties, string) ControllerBase.SignOut() ControllerBase.SignOut(AuthenticationProperties) ControllerBase.SignOut(params string[]) ControllerBase.SignOut(AuthenticationProperties, params string[]) ControllerBase.TryUpdateModelAsync<TModel>(TModel) ControllerBase.TryUpdateModelAsync<TModel>(TModel, string) ControllerBase.TryUpdateModelAsync<TModel>(TModel, string, IValueProvider) ControllerBase.TryUpdateModelAsync<TModel>(TModel, string, params Expression<Func<TModel, object>>[]) ControllerBase.TryUpdateModelAsync<TModel>(TModel, string, Func<ModelMetadata, bool>) ControllerBase.TryUpdateModelAsync<TModel>(TModel, string, IValueProvider, params Expression<Func<TModel, object>>[]) ControllerBase.TryUpdateModelAsync<TModel>(TModel, string, IValueProvider, Func<ModelMetadata, bool>) ControllerBase.TryUpdateModelAsync(object, Type, string) ControllerBase.TryUpdateModelAsync(object, Type, string, IValueProvider, Func<ModelMetadata, bool>) ControllerBase.TryValidateModel(object) ControllerBase.TryValidateModel(object, string) ControllerBase.HttpContext ControllerBase.Request ControllerBase.Response ControllerBase.RouteData ControllerBase.ModelState ControllerBase.ControllerContext ControllerBase.MetadataProvider ControllerBase.ModelBinderFactory ControllerBase.Url ControllerBase.ObjectValidator ControllerBase.ProblemDetailsFactory ControllerBase.User ControllerBase.Empty object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods GenericExtensions.When<TObject>(TObject, bool, Func<TObject, TObject>) ExpandoObjectExtensions.ConvertToExpando(object?) Constructors AdminController() Initializes a new instance of the AdminController class. public AdminController() Methods Index() Returns the admin home page. [HttpGet] public IActionResult Index() Returns IActionResult The view. See Also Controller"
  },
  "api/Mithril.Admin.Controllers.html": {
    "href": "api/Mithril.Admin.Controllers.html",
    "title": "Namespace Mithril.Admin.Controllers | Mithril API Reference",
    "keywords": "Namespace Mithril.Admin.Controllers Classes AdminController Admin controller"
  },
  "api/Mithril.Admin.Queries.EditorListingQuery.html": {
    "href": "api/Mithril.Admin.Queries.EditorListingQuery.html",
    "title": "Class EditorListingQuery | Mithril API Reference",
    "keywords": "Class EditorListingQuery Namespace Mithril.Admin.Queries Assembly Mithril.Admin.dll Editor listing query public class EditorListingQuery : QueryBaseClass<IEnumerable<EditorVM>>, IQuery<IEnumerable<EditorVM>>, IQuery Inheritance object QueryBaseClass<IEnumerable<EditorVM>> EditorListingQuery Implements IQuery<IEnumerable<EditorVM>> IQuery Inherited Members QueryBaseClass<IEnumerable<EditorVM>>.Arguments QueryBaseClass<IEnumerable<EditorVM>>.DeprecationReason QueryBaseClass<IEnumerable<EditorVM>>.Description QueryBaseClass<IEnumerable<EditorVM>>.Features QueryBaseClass<IEnumerable<EditorVM>>.ReturnType QueryBaseClass<IEnumerable<EditorVM>>.Version QueryBaseClass<IEnumerable<EditorVM>>.FeatureManager QueryBaseClass<IEnumerable<EditorVM>>.Logger QueryBaseClass<IEnumerable<EditorVM>>.IsFeatureEnabled() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods GenericExtensions.When<TObject>(TObject, bool, Func<TObject, TObject>) ExpandoObjectExtensions.ConvertToExpando(object?) Remarks Initializes a new instance of the EditorListingQuery class. Constructors EditorListingQuery(ILogger<EditorListingQuery>?, IFeatureManager?, IEditorService?) Editor listing query public EditorListingQuery(ILogger<EditorListingQuery>? logger, IFeatureManager? featureManager, IEditorService? editorService) Parameters logger ILogger<EditorListingQuery> The logger. featureManager IFeatureManager The feature manager. editorService IEditorService The editor service. Remarks Initializes a new instance of the EditorListingQuery class. Properties Name Gets the name. public override string Name { get; } Property Value string The name. Methods ResolveAsync(ClaimsPrincipal?, Arguments) Used to resolve the data asked for by the query. public override Task<IEnumerable<EditorVM>?> ResolveAsync(ClaimsPrincipal? user, Arguments arguments) Parameters user ClaimsPrincipal The user. arguments Arguments The arguments. Returns Task<IEnumerable<EditorVM>> The data specified."
  },
  "api/Mithril.Admin.Queries.EntitiesQuery.html": {
    "href": "api/Mithril.Admin.Queries.EntitiesQuery.html",
    "title": "Class EntitiesQuery | Mithril API Reference",
    "keywords": "Class EntitiesQuery Namespace Mithril.Admin.Queries Assembly Mithril.Admin.dll Entity listing query public class EntitiesQuery : QueryBaseClass<List<ExpandoObject>>, IQuery<List<ExpandoObject>>, IQuery Inheritance object QueryBaseClass<List<ExpandoObject>> EntitiesQuery Implements IQuery<List<ExpandoObject>> IQuery Inherited Members QueryBaseClass<List<ExpandoObject>>.DeprecationReason QueryBaseClass<List<ExpandoObject>>.Description QueryBaseClass<List<ExpandoObject>>.Features QueryBaseClass<List<ExpandoObject>>.ReturnType QueryBaseClass<List<ExpandoObject>>.Version QueryBaseClass<List<ExpandoObject>>.FeatureManager QueryBaseClass<List<ExpandoObject>>.Logger QueryBaseClass<List<ExpandoObject>>.IsFeatureEnabled() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods GenericExtensions.When<TObject>(TObject, bool, Func<TObject, TObject>) ExpandoObjectExtensions.ConvertToExpando(object?) Remarks Initializes a new instance of the EntitiesQuery class. Constructors EntitiesQuery(ILogger<EntitiesQuery>?, IFeatureManager?, IEditorService?) Entity listing query public EntitiesQuery(ILogger<EntitiesQuery>? logger, IFeatureManager? featureManager, IEditorService? editorService) Parameters logger ILogger<EntitiesQuery> The logger. featureManager IFeatureManager The feature manager. editorService IEditorService The editor service. Remarks Initializes a new instance of the EntitiesQuery class. See Also QueryBaseClass<TClass> Properties Arguments Gets the arguments. public override IArgument[] Arguments { get; } Property Value IArgument[] The arguments. Name Gets the name. public override string Name { get; } Property Value string The name. Methods ResolveAsync(ClaimsPrincipal?, Arguments) Used to resolve the data asked for by the query. public override Task<List<ExpandoObject>?> ResolveAsync(ClaimsPrincipal? user, Arguments arguments) Parameters user ClaimsPrincipal The user. arguments Arguments The arguments. Returns Task<List<ExpandoObject>> The data specified. See Also QueryBaseClass<TClass>"
  },
  "api/Mithril.Admin.Queries.EntityQuery.html": {
    "href": "api/Mithril.Admin.Queries.EntityQuery.html",
    "title": "Class EntityQuery | Mithril API Reference",
    "keywords": "Class EntityQuery Namespace Mithril.Admin.Queries Assembly Mithril.Admin.dll Entity query public class EntityQuery : QueryBaseClass<ExpandoObject>, IQuery<ExpandoObject>, IQuery Inheritance object QueryBaseClass<ExpandoObject> EntityQuery Implements IQuery<ExpandoObject> IQuery Inherited Members QueryBaseClass<ExpandoObject>.DeprecationReason QueryBaseClass<ExpandoObject>.Description QueryBaseClass<ExpandoObject>.Features QueryBaseClass<ExpandoObject>.ReturnType QueryBaseClass<ExpandoObject>.Version QueryBaseClass<ExpandoObject>.FeatureManager QueryBaseClass<ExpandoObject>.Logger QueryBaseClass<ExpandoObject>.IsFeatureEnabled() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods GenericExtensions.When<TObject>(TObject, bool, Func<TObject, TObject>) ExpandoObjectExtensions.ConvertToExpando(object?) Remarks Initializes a new instance of the EntityQuery class. Constructors EntityQuery(ILogger<EntityQuery>?, IFeatureManager?, IEditorService?) Entity query public EntityQuery(ILogger<EntityQuery>? logger, IFeatureManager? featureManager, IEditorService? editorService) Parameters logger ILogger<EntityQuery> The logger. featureManager IFeatureManager The feature manager. editorService IEditorService The editor service. Remarks Initializes a new instance of the EntityQuery class. See Also QueryBaseClass<TClass> Properties Arguments Gets the arguments. public override IArgument[] Arguments { get; } Property Value IArgument[] The arguments. Name Gets the name. public override string Name { get; } Property Value string The name. Methods ResolveAsync(ClaimsPrincipal?, Arguments) Used to resolve the data asked for by the query. public override Task<ExpandoObject?> ResolveAsync(ClaimsPrincipal? user, Arguments arguments) Parameters user ClaimsPrincipal The user. arguments Arguments The arguments. Returns Task<ExpandoObject> The data specified. See Also QueryBaseClass<TClass>"
  },
  "api/Mithril.Admin.Queries.ViewModels.EditorVM.html": {
    "href": "api/Mithril.Admin.Queries.ViewModels.EditorVM.html",
    "title": "Class EditorVM | Mithril API Reference",
    "keywords": "Class EditorVM Namespace Mithril.Admin.Queries.ViewModels Assembly Mithril.Admin.dll Editor VM public class EditorVM Inheritance object EditorVM Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods GenericExtensions.When<TObject>(TObject, bool, Func<TObject, TObject>) ExpandoObjectExtensions.ConvertToExpando(object?) Constructors EditorVM(IEditor?) Initializes a new instance of the EditorVM class. public EditorVM(IEditor? model) Parameters model IEditor The model. Properties Category Gets the category. public string? Category { get; } Property Value string The category. ComponentDefinition Gets the component definition. public IComponentDefinition? ComponentDefinition { get; } Property Value IComponentDefinition The component definition. DataModel Gets the data model. public Dictionary<string, string> DataModel { get; } Property Value Dictionary<string, string> The data model. Description Gets the description. public string? Description { get; } Property Value string The description. Icon Gets the icon. public string? Icon { get; } Property Value string The icon. Name Gets the name. public string? Name { get; } Property Value string The name."
  },
  "api/Mithril.Admin.Queries.ViewModels.html": {
    "href": "api/Mithril.Admin.Queries.ViewModels.html",
    "title": "Namespace Mithril.Admin.Queries.ViewModels | Mithril API Reference",
    "keywords": "Namespace Mithril.Admin.Queries.ViewModels Classes EditorVM Editor VM"
  },
  "api/Mithril.Admin.Queries.html": {
    "href": "api/Mithril.Admin.Queries.html",
    "title": "Namespace Mithril.Admin.Queries | Mithril API Reference",
    "keywords": "Namespace Mithril.Admin.Queries Classes EditorListingQuery Editor listing query EntitiesQuery Entity listing query EntityQuery Entity query"
  },
  "api/Mithril.Admin.Services.EditorService.html": {
    "href": "api/Mithril.Admin.Services.EditorService.html",
    "title": "Class EditorService | Mithril API Reference",
    "keywords": "Class EditorService Namespace Mithril.Admin.Services Assembly Mithril.Admin.dll Editor service public class EditorService : IEditorService Inheritance object EditorService Implements IEditorService Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods GenericExtensions.When<TObject>(TObject, bool, Func<TObject, TObject>) ExpandoObjectExtensions.ConvertToExpando(object?) Remarks Initializes a new instance of the EditorService class. Constructors EditorService(IEnumerable<IEditor>) Editor service public EditorService(IEnumerable<IEditor> editors) Parameters editors IEnumerable<IEditor> The editors. Remarks Initializes a new instance of the EditorService class. See Also IEditorService Properties Editors Gets the editors. public IEnumerable<IEditor> Editors { get; } Property Value IEnumerable<IEditor> The editors. See Also IEditorService"
  },
  "api/Mithril.Admin.Services.EntityMetadataService.html": {
    "href": "api/Mithril.Admin.Services.EntityMetadataService.html",
    "title": "Class EntityMetadataService | Mithril API Reference",
    "keywords": "Class EntityMetadataService Namespace Mithril.Admin.Services Assembly Mithril.Admin.dll Entity metadata service public class EntityMetadataService : IEntityMetadataService Inheritance object EntityMetadataService Implements IEntityMetadataService Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods GenericExtensions.When<TObject>(TObject, bool, Func<TObject, TObject>) ExpandoObjectExtensions.ConvertToExpando(object?) Remarks Initializes a new instance of the EntityMetadataService class. Constructors EntityMetadataService(IEnumerable<IMetadataBuilder>) Entity metadata service public EntityMetadataService(IEnumerable<IMetadataBuilder> metadataBuilders) Parameters metadataBuilders IEnumerable<IMetadataBuilder> The metadata builders. Remarks Initializes a new instance of the EntityMetadataService class. See Also IEntityMetadataService Methods ExtractMetadata(PropertyInfo?) Extracts the metadata defining this entity. public EntityMetadata? ExtractMetadata(PropertyInfo? property) Parameters property PropertyInfo The property. Returns EntityMetadata The metadata for the entity type. ExtractMetadata(Type?) Extracts the metadata defining this entity. public EntityMetadata? ExtractMetadata(Type? entityType) Parameters entityType Type Type of the entity. Returns EntityMetadata The metadata for the entity type. ExtractMetadata<TEntity>() Extracts the metadata defining this entity. public EntityMetadata? ExtractMetadata<TEntity>() Returns EntityMetadata The metadata for the entity type. Type Parameters TEntity The type of the entity. See Also IEntityMetadataService"
  },
  "api/Mithril.Admin.Services.MetadataBuilders.CanList.html": {
    "href": "api/Mithril.Admin.Services.MetadataBuilders.CanList.html",
    "title": "Class CanList | Mithril API Reference",
    "keywords": "Class CanList Namespace Mithril.Admin.Services.MetadataBuilders Assembly Mithril.Admin.dll Can list public class CanList : MetadataBuilderBaseClass, IMetadataBuilder Inheritance object MetadataBuilderBaseClass CanList Implements IMetadataBuilder Inherited Members MetadataBuilderBaseClass.Order object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods GenericExtensions.When<TObject>(TObject, bool, Func<TObject, TObject>) ExpandoObjectExtensions.ConvertToExpando(object?) Methods ExtractMetadata(PropertyMetadata?, IEntityMetadataService) Extracts metadata and adds it to the PropertyMetadata object. public override PropertyMetadata? ExtractMetadata(PropertyMetadata? propertyMetadata, IEntityMetadataService metadataService) Parameters propertyMetadata PropertyMetadata The property metadata. metadataService IEntityMetadataService The metadata service. Returns PropertyMetadata The resulting property metadata. See Also MetadataBuilderBaseClass"
  },
  "api/Mithril.Admin.Services.MetadataBuilders.HasHint.html": {
    "href": "api/Mithril.Admin.Services.MetadataBuilders.HasHint.html",
    "title": "Class HasHint | Mithril API Reference",
    "keywords": "Class HasHint Namespace Mithril.Admin.Services.MetadataBuilders Assembly Mithril.Admin.dll Determines if the property has a hint. public class HasHint : MetadataBuilderBaseClass, IMetadataBuilder Inheritance object MetadataBuilderBaseClass HasHint Implements IMetadataBuilder Inherited Members MetadataBuilderBaseClass.Order object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods GenericExtensions.When<TObject>(TObject, bool, Func<TObject, TObject>) ExpandoObjectExtensions.ConvertToExpando(object?) Methods ExtractMetadata(PropertyMetadata?, IEntityMetadataService) Extracts metadata and adds it to the PropertyMetadata object. public override PropertyMetadata? ExtractMetadata(PropertyMetadata? propertyMetadata, IEntityMetadataService metadataService) Parameters propertyMetadata PropertyMetadata The property metadata. metadataService IEntityMetadataService The metadata service. Returns PropertyMetadata The resulting property metadata. See Also MetadataBuilderBaseClass"
  },
  "api/Mithril.Admin.Services.MetadataBuilders.HasMax.html": {
    "href": "api/Mithril.Admin.Services.MetadataBuilders.HasMax.html",
    "title": "Class HasMax | Mithril API Reference",
    "keywords": "Class HasMax Namespace Mithril.Admin.Services.MetadataBuilders Assembly Mithril.Admin.dll Determines if the property has a max value. public class HasMax : MetadataBuilderBaseClass, IMetadataBuilder Inheritance object MetadataBuilderBaseClass HasMax Implements IMetadataBuilder Inherited Members MetadataBuilderBaseClass.Order object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods GenericExtensions.When<TObject>(TObject, bool, Func<TObject, TObject>) ExpandoObjectExtensions.ConvertToExpando(object?) Methods ExtractMetadata(PropertyMetadata?, IEntityMetadataService) Extracts metadata and adds it to the PropertyMetadata object. public override PropertyMetadata? ExtractMetadata(PropertyMetadata? propertyMetadata, IEntityMetadataService metadataService) Parameters propertyMetadata PropertyMetadata The property metadata. metadataService IEntityMetadataService The metadata service. Returns PropertyMetadata The resulting property metadata. See Also MetadataBuilderBaseClass"
  },
  "api/Mithril.Admin.Services.MetadataBuilders.HasMin.html": {
    "href": "api/Mithril.Admin.Services.MetadataBuilders.HasMin.html",
    "title": "Class HasMin | Mithril API Reference",
    "keywords": "Class HasMin Namespace Mithril.Admin.Services.MetadataBuilders Assembly Mithril.Admin.dll Determines if the property has a Min value. public class HasMin : MetadataBuilderBaseClass, IMetadataBuilder Inheritance object MetadataBuilderBaseClass HasMin Implements IMetadataBuilder Inherited Members MetadataBuilderBaseClass.Order object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods GenericExtensions.When<TObject>(TObject, bool, Func<TObject, TObject>) ExpandoObjectExtensions.ConvertToExpando(object?) Methods ExtractMetadata(PropertyMetadata?, IEntityMetadataService) Extracts metadata and adds it to the PropertyMetadata object. public override PropertyMetadata? ExtractMetadata(PropertyMetadata? propertyMetadata, IEntityMetadataService metadataService) Parameters propertyMetadata PropertyMetadata The property metadata. metadataService IEntityMetadataService The metadata service. Returns PropertyMetadata The resulting property metadata. See Also MetadataBuilderBaseClass"
  },
  "api/Mithril.Admin.Services.MetadataBuilders.HasPattern.html": {
    "href": "api/Mithril.Admin.Services.MetadataBuilders.HasPattern.html",
    "title": "Class HasPattern | Mithril API Reference",
    "keywords": "Class HasPattern Namespace Mithril.Admin.Services.MetadataBuilders Assembly Mithril.Admin.dll Determines if the property has a pattern value. public class HasPattern : MetadataBuilderBaseClass, IMetadataBuilder Inheritance object MetadataBuilderBaseClass HasPattern Implements IMetadataBuilder Inherited Members MetadataBuilderBaseClass.Order object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods GenericExtensions.When<TObject>(TObject, bool, Func<TObject, TObject>) ExpandoObjectExtensions.ConvertToExpando(object?) Methods DeterminePattern(PropertyInfo?) Determines the pattern. protected static string? DeterminePattern(PropertyInfo? property) Parameters property PropertyInfo The property. Returns string The pattern value if one exists. ExtractMetadata(PropertyMetadata?, IEntityMetadataService) Extracts metadata and adds it to the PropertyMetadata object. public override PropertyMetadata? ExtractMetadata(PropertyMetadata? propertyMetadata, IEntityMetadataService metadataService) Parameters propertyMetadata PropertyMetadata The property metadata. metadataService IEntityMetadataService The metadata service. Returns PropertyMetadata The resulting property metadata. See Also MetadataBuilderBaseClass"
  },
  "api/Mithril.Admin.Services.MetadataBuilders.HasPlaceholder.html": {
    "href": "api/Mithril.Admin.Services.MetadataBuilders.HasPlaceholder.html",
    "title": "Class HasPlaceholder | Mithril API Reference",
    "keywords": "Class HasPlaceholder Namespace Mithril.Admin.Services.MetadataBuilders Assembly Mithril.Admin.dll Determines if the property has a placeholder value. public class HasPlaceholder : MetadataBuilderBaseClass, IMetadataBuilder Inheritance object MetadataBuilderBaseClass HasPlaceholder Implements IMetadataBuilder Inherited Members MetadataBuilderBaseClass.Order object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods GenericExtensions.When<TObject>(TObject, bool, Func<TObject, TObject>) ExpandoObjectExtensions.ConvertToExpando(object?) Methods DeterminePlaceholder(PropertyInfo?) Determines the Placeholder. protected static string? DeterminePlaceholder(PropertyInfo? property) Parameters property PropertyInfo The property. Returns string The Placeholder value if one exists. ExtractMetadata(PropertyMetadata?, IEntityMetadataService) Extracts metadata and adds it to the PropertyMetadata object. public override PropertyMetadata? ExtractMetadata(PropertyMetadata? propertyMetadata, IEntityMetadataService metadataService) Parameters propertyMetadata PropertyMetadata The property metadata. metadataService IEntityMetadataService The metadata service. Returns PropertyMetadata The resulting property metadata. See Also MetadataBuilderBaseClass"
  },
  "api/Mithril.Admin.Services.MetadataBuilders.HasQuery.html": {
    "href": "api/Mithril.Admin.Services.MetadataBuilders.HasQuery.html",
    "title": "Class HasQuery | Mithril API Reference",
    "keywords": "Class HasQuery Namespace Mithril.Admin.Services.MetadataBuilders Assembly Mithril.Admin.dll Determines if the property has a query value. public class HasQuery : MetadataBuilderBaseClass, IMetadataBuilder Inheritance object MetadataBuilderBaseClass HasQuery Implements IMetadataBuilder Inherited Members MetadataBuilderBaseClass.Order object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods GenericExtensions.When<TObject>(TObject, bool, Func<TObject, TObject>) ExpandoObjectExtensions.ConvertToExpando(object?) Remarks Initializes a new instance of the HasQuery class. Constructors HasQuery(IEnumerable<IDropDownQuery>) Determines if the property has a query value. public HasQuery(IEnumerable<IDropDownQuery> dropDownQueries) Parameters dropDownQueries IEnumerable<IDropDownQuery> The drop down queries. Remarks Initializes a new instance of the HasQuery class. See Also MetadataBuilderBaseClass Methods ExtractMetadata(PropertyMetadata?, IEntityMetadataService) Extracts metadata and adds it to the PropertyMetadata object. public override PropertyMetadata? ExtractMetadata(PropertyMetadata? propertyMetadata, IEntityMetadataService metadataService) Parameters propertyMetadata PropertyMetadata The property metadata. metadataService IEntityMetadataService The metadata service. Returns PropertyMetadata The resulting property metadata. See Also MetadataBuilderBaseClass"
  },
  "api/Mithril.Admin.Services.MetadataBuilders.HasReadOnly.html": {
    "href": "api/Mithril.Admin.Services.MetadataBuilders.HasReadOnly.html",
    "title": "Class HasReadOnly | Mithril API Reference",
    "keywords": "Class HasReadOnly Namespace Mithril.Admin.Services.MetadataBuilders Assembly Mithril.Admin.dll Determines if the property has a read only value. public class HasReadOnly : MetadataBuilderBaseClass, IMetadataBuilder Inheritance object MetadataBuilderBaseClass HasReadOnly Implements IMetadataBuilder Inherited Members MetadataBuilderBaseClass.Order object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods GenericExtensions.When<TObject>(TObject, bool, Func<TObject, TObject>) ExpandoObjectExtensions.ConvertToExpando(object?) Methods ExtractMetadata(PropertyMetadata?, IEntityMetadataService) Extracts metadata and adds it to the PropertyMetadata object. public override PropertyMetadata? ExtractMetadata(PropertyMetadata? propertyMetadata, IEntityMetadataService metadataService) Parameters propertyMetadata PropertyMetadata The property metadata. metadataService IEntityMetadataService The metadata service. Returns PropertyMetadata The resulting property metadata. See Also MetadataBuilderBaseClass"
  },
  "api/Mithril.Admin.Services.MetadataBuilders.HasStep.html": {
    "href": "api/Mithril.Admin.Services.MetadataBuilders.HasStep.html",
    "title": "Class HasStep | Mithril API Reference",
    "keywords": "Class HasStep Namespace Mithril.Admin.Services.MetadataBuilders Assembly Mithril.Admin.dll Determines if the property has a step value. public class HasStep : MetadataBuilderBaseClass, IMetadataBuilder Inheritance object MetadataBuilderBaseClass HasStep Implements IMetadataBuilder Inherited Members MetadataBuilderBaseClass.Order object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods GenericExtensions.When<TObject>(TObject, bool, Func<TObject, TObject>) ExpandoObjectExtensions.ConvertToExpando(object?) Methods Determinestep(PropertyInfo?) Determines the step. protected static decimal? Determinestep(PropertyInfo? property) Parameters property PropertyInfo The property. Returns decimal? The step value if one exists. ExtractMetadata(PropertyMetadata?, IEntityMetadataService) Extracts metadata and adds it to the PropertyMetadata object. public override PropertyMetadata? ExtractMetadata(PropertyMetadata? propertyMetadata, IEntityMetadataService metadataService) Parameters propertyMetadata PropertyMetadata The property metadata. metadataService IEntityMetadataService The metadata service. Returns PropertyMetadata The resulting property metadata. See Also MetadataBuilderBaseClass"
  },
  "api/Mithril.Admin.Services.MetadataBuilders.HasSubtitle.html": {
    "href": "api/Mithril.Admin.Services.MetadataBuilders.HasSubtitle.html",
    "title": "Class HasSubtitle | Mithril API Reference",
    "keywords": "Class HasSubtitle Namespace Mithril.Admin.Services.MetadataBuilders Assembly Mithril.Admin.dll Determines if the property has a subtitle value. public class HasSubtitle : MetadataBuilderBaseClass, IMetadataBuilder Inheritance object MetadataBuilderBaseClass HasSubtitle Implements IMetadataBuilder Inherited Members MetadataBuilderBaseClass.Order object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods GenericExtensions.When<TObject>(TObject, bool, Func<TObject, TObject>) ExpandoObjectExtensions.ConvertToExpando(object?) Methods DetermineSubtitle(PropertyInfo?) Determines the Subtitle. protected static string? DetermineSubtitle(PropertyInfo? property) Parameters property PropertyInfo The property. Returns string The Subtitle value if one exists. ExtractMetadata(PropertyMetadata?, IEntityMetadataService) Extracts metadata and adds it to the PropertyMetadata object. public override PropertyMetadata? ExtractMetadata(PropertyMetadata? propertyMetadata, IEntityMetadataService metadataService) Parameters propertyMetadata PropertyMetadata The property metadata. metadataService IEntityMetadataService The metadata service. Returns PropertyMetadata The resulting property metadata. See Also MetadataBuilderBaseClass"
  },
  "api/Mithril.Admin.Services.MetadataBuilders.IsCheckbox.html": {
    "href": "api/Mithril.Admin.Services.MetadataBuilders.IsCheckbox.html",
    "title": "Class IsCheckbox | Mithril API Reference",
    "keywords": "Class IsCheckbox Namespace Mithril.Admin.Services.MetadataBuilders Assembly Mithril.Admin.dll Is Checkbox public class IsCheckbox : MetadataBuilderBaseClass, IMetadataBuilder Inheritance object MetadataBuilderBaseClass IsCheckbox Implements IMetadataBuilder Inherited Members MetadataBuilderBaseClass.Order object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods GenericExtensions.When<TObject>(TObject, bool, Func<TObject, TObject>) ExpandoObjectExtensions.ConvertToExpando(object?) Methods ExtractMetadata(PropertyMetadata?, IEntityMetadataService) Extracts metadata and adds it to the PropertyMetadata object. public override PropertyMetadata? ExtractMetadata(PropertyMetadata? propertyMetadata, IEntityMetadataService metadataService) Parameters propertyMetadata PropertyMetadata The property metadata. metadataService IEntityMetadataService The metadata service. Returns PropertyMetadata The resulting property metadata. See Also MetadataBuilderBaseClass"
  },
  "api/Mithril.Admin.Services.MetadataBuilders.IsDefaultInput.html": {
    "href": "api/Mithril.Admin.Services.MetadataBuilders.IsDefaultInput.html",
    "title": "Class IsDefaultInput | Mithril API Reference",
    "keywords": "Class IsDefaultInput Namespace Mithril.Admin.Services.MetadataBuilders Assembly Mithril.Admin.dll Is Default Input type public class IsDefaultInput : MetadataBuilderBaseClass, IMetadataBuilder Inheritance object MetadataBuilderBaseClass IsDefaultInput Implements IMetadataBuilder Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods GenericExtensions.When<TObject>(TObject, bool, Func<TObject, TObject>) ExpandoObjectExtensions.ConvertToExpando(object?) Properties Order Gets the order. public override int Order { get; } Property Value int The order. Methods ExtractMetadata(PropertyMetadata?, IEntityMetadataService) Extracts metadata and adds it to the PropertyMetadata object. public override PropertyMetadata? ExtractMetadata(PropertyMetadata? propertyMetadata, IEntityMetadataService metadataService) Parameters propertyMetadata PropertyMetadata The property metadata. metadataService IEntityMetadataService The metadata service. Returns PropertyMetadata The resulting property metadata. See Also MetadataBuilderBaseClass"
  },
  "api/Mithril.Admin.Services.MetadataBuilders.IsEnumRadioList.html": {
    "href": "api/Mithril.Admin.Services.MetadataBuilders.IsEnumRadioList.html",
    "title": "Class IsEnumRadioList | Mithril API Reference",
    "keywords": "Class IsEnumRadioList Namespace Mithril.Admin.Services.MetadataBuilders Assembly Mithril.Admin.dll Determines if this should be a radio list public class IsEnumRadioList : MetadataBuilderBaseClass, IMetadataBuilder Inheritance object MetadataBuilderBaseClass IsEnumRadioList Implements IMetadataBuilder Inherited Members MetadataBuilderBaseClass.Order object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods GenericExtensions.When<TObject>(TObject, bool, Func<TObject, TObject>) ExpandoObjectExtensions.ConvertToExpando(object?) Methods ExtractMetadata(PropertyMetadata?, IEntityMetadataService) Extracts metadata and adds it to the PropertyMetadata object. public override PropertyMetadata? ExtractMetadata(PropertyMetadata? propertyMetadata, IEntityMetadataService metadataService) Parameters propertyMetadata PropertyMetadata The property metadata. metadataService IEntityMetadataService The metadata service. Returns PropertyMetadata The resulting property metadata. See Also MetadataBuilderBaseClass"
  },
  "api/Mithril.Admin.Services.MetadataBuilders.IsHtml.html": {
    "href": "api/Mithril.Admin.Services.MetadataBuilders.IsHtml.html",
    "title": "Class IsHtml | Mithril API Reference",
    "keywords": "Class IsHtml Namespace Mithril.Admin.Services.MetadataBuilders Assembly Mithril.Admin.dll Is HTML public class IsHtml : MetadataBuilderBaseClass, IMetadataBuilder Inheritance object MetadataBuilderBaseClass IsHtml Implements IMetadataBuilder Inherited Members MetadataBuilderBaseClass.Order object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods GenericExtensions.When<TObject>(TObject, bool, Func<TObject, TObject>) ExpandoObjectExtensions.ConvertToExpando(object?) Methods ExtractMetadata(PropertyMetadata?, IEntityMetadataService) Extracts metadata and adds it to the PropertyMetadata object. public override PropertyMetadata? ExtractMetadata(PropertyMetadata? propertyMetadata, IEntityMetadataService metadataService) Parameters propertyMetadata PropertyMetadata The property metadata. metadataService IEntityMetadataService The metadata service. Returns PropertyMetadata The resulting property metadata. See Also MetadataBuilderBaseClass"
  },
  "api/Mithril.Admin.Services.MetadataBuilders.IsList.html": {
    "href": "api/Mithril.Admin.Services.MetadataBuilders.IsList.html",
    "title": "Class IsList | Mithril API Reference",
    "keywords": "Class IsList Namespace Mithril.Admin.Services.MetadataBuilders Assembly Mithril.Admin.dll Determines if the property is a list. public class IsList : MetadataBuilderBaseClass, IMetadataBuilder Inheritance object MetadataBuilderBaseClass IsList Implements IMetadataBuilder Inherited Members MetadataBuilderBaseClass.Order object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods GenericExtensions.When<TObject>(TObject, bool, Func<TObject, TObject>) ExpandoObjectExtensions.ConvertToExpando(object?) Methods ExtractMetadata(PropertyMetadata?, IEntityMetadataService) Extracts metadata and adds it to the PropertyMetadata object. public override PropertyMetadata? ExtractMetadata(PropertyMetadata? propertyMetadata, IEntityMetadataService metadataService) Parameters propertyMetadata PropertyMetadata The property metadata. metadataService IEntityMetadataService The metadata service. Returns PropertyMetadata The resulting property metadata. See Also MetadataBuilderBaseClass"
  },
  "api/Mithril.Admin.Services.MetadataBuilders.IsSelect.html": {
    "href": "api/Mithril.Admin.Services.MetadataBuilders.IsSelect.html",
    "title": "Class IsSelect | Mithril API Reference",
    "keywords": "Class IsSelect Namespace Mithril.Admin.Services.MetadataBuilders Assembly Mithril.Admin.dll Determines if the property is a select object. public class IsSelect : MetadataBuilderBaseClass, IMetadataBuilder Inheritance object MetadataBuilderBaseClass IsSelect Implements IMetadataBuilder Inherited Members MetadataBuilderBaseClass.Order object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods GenericExtensions.When<TObject>(TObject, bool, Func<TObject, TObject>) ExpandoObjectExtensions.ConvertToExpando(object?) Methods ExtractMetadata(PropertyMetadata?, IEntityMetadataService) Extracts metadata and adds it to the PropertyMetadata object. public override PropertyMetadata? ExtractMetadata(PropertyMetadata? propertyMetadata, IEntityMetadataService metadataService) Parameters propertyMetadata PropertyMetadata The property metadata. metadataService IEntityMetadataService The metadata service. Returns PropertyMetadata The resulting property metadata. See Also MetadataBuilderBaseClass"
  },
  "api/Mithril.Admin.Services.MetadataBuilders.IsText.html": {
    "href": "api/Mithril.Admin.Services.MetadataBuilders.IsText.html",
    "title": "Class IsText | Mithril API Reference",
    "keywords": "Class IsText Namespace Mithril.Admin.Services.MetadataBuilders Assembly Mithril.Admin.dll Is Text public class IsText : MetadataBuilderBaseClass, IMetadataBuilder Inheritance object MetadataBuilderBaseClass IsText Implements IMetadataBuilder Inherited Members MetadataBuilderBaseClass.Order object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods GenericExtensions.When<TObject>(TObject, bool, Func<TObject, TObject>) ExpandoObjectExtensions.ConvertToExpando(object?) Methods ExtractMetadata(PropertyMetadata?, IEntityMetadataService) Extracts metadata and adds it to the PropertyMetadata object. public override PropertyMetadata? ExtractMetadata(PropertyMetadata? propertyMetadata, IEntityMetadataService metadataService) Parameters propertyMetadata PropertyMetadata The property metadata. metadataService IEntityMetadataService The metadata service. Returns PropertyMetadata The resulting property metadata. See Also MetadataBuilderBaseClass"
  },
  "api/Mithril.Admin.Services.MetadataBuilders.IsTextArea.html": {
    "href": "api/Mithril.Admin.Services.MetadataBuilders.IsTextArea.html",
    "title": "Class IsTextArea | Mithril API Reference",
    "keywords": "Class IsTextArea Namespace Mithril.Admin.Services.MetadataBuilders Assembly Mithril.Admin.dll Determines if the property is a TextArea object. public class IsTextArea : MetadataBuilderBaseClass, IMetadataBuilder Inheritance object MetadataBuilderBaseClass IsTextArea Implements IMetadataBuilder Inherited Members MetadataBuilderBaseClass.Order object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods GenericExtensions.When<TObject>(TObject, bool, Func<TObject, TObject>) ExpandoObjectExtensions.ConvertToExpando(object?) Methods ExtractMetadata(PropertyMetadata?, IEntityMetadataService) Extracts metadata and adds it to the PropertyMetadata object. public override PropertyMetadata? ExtractMetadata(PropertyMetadata? propertyMetadata, IEntityMetadataService metadataService) Parameters propertyMetadata PropertyMetadata The property metadata. metadataService IEntityMetadataService The metadata service. Returns PropertyMetadata The resulting property metadata. See Also MetadataBuilderBaseClass"
  },
  "api/Mithril.Admin.Services.MetadataBuilders.IsUpload.html": {
    "href": "api/Mithril.Admin.Services.MetadataBuilders.IsUpload.html",
    "title": "Class IsUpload | Mithril API Reference",
    "keywords": "Class IsUpload Namespace Mithril.Admin.Services.MetadataBuilders Assembly Mithril.Admin.dll Determines if the property is a Upload object. public class IsUpload : MetadataBuilderBaseClass, IMetadataBuilder Inheritance object MetadataBuilderBaseClass IsUpload Implements IMetadataBuilder Inherited Members MetadataBuilderBaseClass.Order object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods GenericExtensions.When<TObject>(TObject, bool, Func<TObject, TObject>) ExpandoObjectExtensions.ConvertToExpando(object?) Methods ExtractMetadata(PropertyMetadata?, IEntityMetadataService) Extracts metadata and adds it to the PropertyMetadata object. public override PropertyMetadata? ExtractMetadata(PropertyMetadata? propertyMetadata, IEntityMetadataService metadataService) Parameters propertyMetadata PropertyMetadata The property metadata. metadataService IEntityMetadataService The metadata service. Returns PropertyMetadata The resulting property metadata. See Also MetadataBuilderBaseClass"
  },
  "api/Mithril.Admin.Services.MetadataBuilders.StandardValidation.html": {
    "href": "api/Mithril.Admin.Services.MetadataBuilders.StandardValidation.html",
    "title": "Class StandardValidation | Mithril API Reference",
    "keywords": "Class StandardValidation Namespace Mithril.Admin.Services.MetadataBuilders Assembly Mithril.Admin.dll Extracts standard validation metadata public class StandardValidation : MetadataBuilderBaseClass, IMetadataBuilder Inheritance object MetadataBuilderBaseClass StandardValidation Implements IMetadataBuilder Inherited Members MetadataBuilderBaseClass.Order object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods GenericExtensions.When<TObject>(TObject, bool, Func<TObject, TObject>) ExpandoObjectExtensions.ConvertToExpando(object?) Methods ExtractMetadata(PropertyMetadata?, IEntityMetadataService?) Extracts metadata and adds it to the PropertyMetadata object. public override PropertyMetadata? ExtractMetadata(PropertyMetadata? propertyMetadata, IEntityMetadataService? metadataService) Parameters propertyMetadata PropertyMetadata The property metadata. metadataService IEntityMetadataService The metadata service. Returns PropertyMetadata The resulting property metadata. See Also IMetadataBuilder"
  },
  "api/Mithril.Admin.Services.MetadataBuilders.html": {
    "href": "api/Mithril.Admin.Services.MetadataBuilders.html",
    "title": "Namespace Mithril.Admin.Services.MetadataBuilders | Mithril API Reference",
    "keywords": "Namespace Mithril.Admin.Services.MetadataBuilders Classes CanList Can list HasHint Determines if the property has a hint. HasMax Determines if the property has a max value. HasMin Determines if the property has a Min value. HasPattern Determines if the property has a pattern value. HasPlaceholder Determines if the property has a placeholder value. HasQuery Determines if the property has a query value. HasReadOnly Determines if the property has a read only value. HasStep Determines if the property has a step value. HasSubtitle Determines if the property has a subtitle value. IsCheckbox Is Checkbox IsDefaultInput Is Default Input type IsEnumRadioList Determines if this should be a radio list IsHtml Is HTML IsList Determines if the property is a list. IsSelect Determines if the property is a select object. IsText Is Text IsTextArea Determines if the property is a TextArea object. IsUpload Determines if the property is a Upload object. StandardValidation Extracts standard validation metadata"
  },
  "api/Mithril.Admin.Services.html": {
    "href": "api/Mithril.Admin.Services.html",
    "title": "Namespace Mithril.Admin.Services | Mithril API Reference",
    "keywords": "Namespace Mithril.Admin.Services Classes EditorService Editor service EntityMetadataService Entity metadata service"
  },
  "api/Mithril.Admin.html": {
    "href": "api/Mithril.Admin.html",
    "title": "Namespace Mithril.Admin | Mithril API Reference",
    "keywords": "Namespace Mithril.Admin Classes AdminModule Admin module"
  },
  "api/Mithril.Apm.Abstractions.BaseClasses.MetaDataCollectorBaseClass-1.html": {
    "href": "api/Mithril.Apm.Abstractions.BaseClasses.MetaDataCollectorBaseClass-1.html",
    "title": "Class MetaDataCollectorBaseClass<TSource> | Mithril API Reference",
    "keywords": "Class MetaDataCollectorBaseClass<TSource> Namespace Mithril.Apm.Abstractions.BaseClasses Assembly Mithril.Apm.Abstractions.dll TraceData source base class public abstract class MetaDataCollectorBaseClass<TSource> : IMetaDataCollector, IObservable<MetaDataEntry>, IDisposable where TSource : MetaDataCollectorBaseClass<TSource> Type Parameters TSource The type of the source. Inheritance object MetaDataCollectorBaseClass<TSource> Implements IMetaDataCollector IObservable<MetaDataEntry> IDisposable Derived DefaultMetaDataCollector Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods GenericExtensions.When<TObject>(TObject, bool, Func<TObject, TObject>) ExpandoObjectExtensions.ConvertToExpando(object?) Constructors MetaDataCollectorBaseClass() Initializes a new instance of the MetaDataCollectorBaseClass<TSource> class. protected MetaDataCollectorBaseClass() Properties Name Gets the name. public virtual string Name { get; } Property Value string The name. Methods AddEntry(string, params KeyValuePair<string, string>[]) Adds an entry to the collector. public IMetaDataCollector AddEntry(string traceId, params KeyValuePair<string, string>[] entries) Parameters traceId string The trace identifier. entries KeyValuePair<string, string>[] The entries. Returns IMetaDataCollector This. Dispose() Releases unmanaged and - optionally - managed resources. public void Dispose() Dispose(bool) Releases unmanaged and - optionally - managed resources. protected virtual void Dispose(bool disposing) Parameters disposing bool true to release both managed and unmanaged resources; false to release only unmanaged resources. ~MetaDataCollectorBaseClass() Finalizes an instance of the MetaDataCollectorBaseClass<TSource> class. protected ~MetaDataCollectorBaseClass() Subscribe(IObserver<MetaDataEntry>) Subscribes the specified observer. public IDisposable Subscribe(IObserver<MetaDataEntry> observer) Parameters observer IObserver<MetaDataEntry> The observer. Returns IDisposable See Also IMetaDataCollector"
  },
  "api/Mithril.Apm.Abstractions.BaseClasses.MetricsCollectorBaseClass-1.html": {
    "href": "api/Mithril.Apm.Abstractions.BaseClasses.MetricsCollectorBaseClass-1.html",
    "title": "Class MetricsCollectorBaseClass<TSource> | Mithril API Reference",
    "keywords": "Class MetricsCollectorBaseClass<TSource> Namespace Mithril.Apm.Abstractions.BaseClasses Assembly Mithril.Apm.Abstractions.dll Metrics source base class public abstract class MetricsCollectorBaseClass<TSource> : IMetricsCollector, IObservable<MetricsEntry>, IDisposable where TSource : MetricsCollectorBaseClass<TSource> Type Parameters TSource The type of the source. Inheritance object MetricsCollectorBaseClass<TSource> Implements IMetricsCollector IObservable<MetricsEntry> IDisposable Derived DefaultMetricsCollector Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods GenericExtensions.When<TObject>(TObject, bool, Func<TObject, TObject>) ExpandoObjectExtensions.ConvertToExpando(object?) Constructors MetricsCollectorBaseClass() Initializes a new instance of the MetricsCollectorBaseClass<TSource> class. protected MetricsCollectorBaseClass() Properties Name Gets the name. public virtual string Name { get; } Property Value string The name. Methods AddEntry(string, string, params KeyValuePair<string, decimal>[]) Adds the entry. public IMetricsCollector AddEntry(string traceId, string metaData, params KeyValuePair<string, decimal>[] entries) Parameters traceId string The trace identifier. metaData string The meta data. entries KeyValuePair<string, decimal>[] The entries. Returns IMetricsCollector This. Dispose() Releases unmanaged and - optionally - managed resources. public void Dispose() Dispose(bool) Releases unmanaged and - optionally - managed resources. protected virtual void Dispose(bool disposing) Parameters disposing bool true to release both managed and unmanaged resources; false to release only unmanaged resources. ~MetricsCollectorBaseClass() Finalizes an instance of the MetricsCollectorBaseClass<TSource> class. protected ~MetricsCollectorBaseClass() Subscribe(IObserver<MetricsEntry>) Subscribes the specified observer. public IDisposable Subscribe(IObserver<MetricsEntry> observer) Parameters observer IObserver<MetricsEntry> The observer. Returns IDisposable See Also IMetricsCollector"
  },
  "api/Mithril.Apm.Abstractions.BaseClasses.html": {
    "href": "api/Mithril.Apm.Abstractions.BaseClasses.html",
    "title": "Namespace Mithril.Apm.Abstractions.BaseClasses | Mithril API Reference",
    "keywords": "Namespace Mithril.Apm.Abstractions.BaseClasses Classes MetaDataCollectorBaseClass<TSource> TraceData source base class MetricsCollectorBaseClass<TSource> Metrics source base class"
  },
  "api/Mithril.Apm.Abstractions.Configuration.APMOptions.html": {
    "href": "api/Mithril.Apm.Abstractions.Configuration.APMOptions.html",
    "title": "Class APMOptions | Mithril API Reference",
    "keywords": "Class APMOptions Namespace Mithril.Apm.Abstractions.Configuration Assembly Mithril.Apm.Abstractions.dll APM Options public class APMOptions Inheritance object APMOptions Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods GenericExtensions.When<TObject>(TObject, bool, Func<TObject, TObject>) ExpandoObjectExtensions.ConvertToExpando(object?) Properties BatchingFrequency Gets or sets the batching frequency (in seconds). public int? BatchingFrequency { get; set; } Property Value int? The batching frequency (in seconds). MaximumAge Gets or sets the maximum age (in hours). public int? MaximumAge { get; set; } Property Value int? The maximum age (in hours)."
  },
  "api/Mithril.Apm.Abstractions.Configuration.html": {
    "href": "api/Mithril.Apm.Abstractions.Configuration.html",
    "title": "Namespace Mithril.Apm.Abstractions.Configuration | Mithril API Reference",
    "keywords": "Namespace Mithril.Apm.Abstractions.Configuration Classes APMOptions APM Options"
  },
  "api/Mithril.Apm.Abstractions.DefaultMetaDataCollector.html": {
    "href": "api/Mithril.Apm.Abstractions.DefaultMetaDataCollector.html",
    "title": "Class DefaultMetaDataCollector | Mithril API Reference",
    "keywords": "Class DefaultMetaDataCollector Namespace Mithril.Apm.Abstractions Assembly Mithril.Apm.Abstractions.dll Default meta data collector public class DefaultMetaDataCollector : MetaDataCollectorBaseClass<DefaultMetaDataCollector>, IMetaDataCollector, IObservable<MetaDataEntry>, IDisposable Inheritance object MetaDataCollectorBaseClass<DefaultMetaDataCollector> DefaultMetaDataCollector Implements IMetaDataCollector IObservable<MetaDataEntry> IDisposable Inherited Members MetaDataCollectorBaseClass<DefaultMetaDataCollector>.Name MetaDataCollectorBaseClass<DefaultMetaDataCollector>.AddEntry(string, params KeyValuePair<string, string>[]) MetaDataCollectorBaseClass<DefaultMetaDataCollector>.Dispose() MetaDataCollectorBaseClass<DefaultMetaDataCollector>.Subscribe(IObserver<MetaDataEntry>) MetaDataCollectorBaseClass<DefaultMetaDataCollector>.Dispose(bool) object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods GenericExtensions.When<TObject>(TObject, bool, Func<TObject, TObject>) ExpandoObjectExtensions.ConvertToExpando(object?) See Also MetaDataCollectorBaseClass<TSource>"
  },
  "api/Mithril.Apm.Abstractions.DefaultMetricsCollector.html": {
    "href": "api/Mithril.Apm.Abstractions.DefaultMetricsCollector.html",
    "title": "Class DefaultMetricsCollector | Mithril API Reference",
    "keywords": "Class DefaultMetricsCollector Namespace Mithril.Apm.Abstractions Assembly Mithril.Apm.Abstractions.dll Default Metrics Collector public class DefaultMetricsCollector : MetricsCollectorBaseClass<DefaultMetricsCollector>, IMetricsCollector, IObservable<MetricsEntry>, IDisposable Inheritance object MetricsCollectorBaseClass<DefaultMetricsCollector> DefaultMetricsCollector Implements IMetricsCollector IObservable<MetricsEntry> IDisposable Inherited Members MetricsCollectorBaseClass<DefaultMetricsCollector>.Name MetricsCollectorBaseClass<DefaultMetricsCollector>.AddEntry(string, string, params KeyValuePair<string, decimal>[]) MetricsCollectorBaseClass<DefaultMetricsCollector>.Dispose() MetricsCollectorBaseClass<DefaultMetricsCollector>.Subscribe(IObserver<MetricsEntry>) MetricsCollectorBaseClass<DefaultMetricsCollector>.Dispose(bool) object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods GenericExtensions.When<TObject>(TObject, bool, Func<TObject, TObject>) ExpandoObjectExtensions.ConvertToExpando(object?) See Also MetricsCollectorBaseClass<TSource>"
  },
  "api/Mithril.Apm.Abstractions.Features.APMFeature.html": {
    "href": "api/Mithril.Apm.Abstractions.Features.APMFeature.html",
    "title": "Class APMFeature | Mithril API Reference",
    "keywords": "Class APMFeature Namespace Mithril.Apm.Abstractions.Features Assembly Mithril.Apm.Abstractions.dll APM Feature public class APMFeature : FeatureBaseClass<APMFeature>, IFeature, IEquatable<APMFeature> Inheritance object FeatureBaseClass<APMFeature> APMFeature Implements IFeature IEquatable<APMFeature> Inherited Members FeatureBaseClass<APMFeature>.Instance FeatureBaseClass<APMFeature>.Equals(object) FeatureBaseClass<APMFeature>.Equals(APMFeature) FeatureBaseClass<APMFeature>.GetHashCode() object.Equals(object, object) object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods GenericExtensions.When<TObject>(TObject, bool, Func<TObject, TObject>) ExpandoObjectExtensions.ConvertToExpando(object?) Properties Category The group (by category) that the feature belongs. If not provided, defaults to 'Uncategorized'. public override string Category { get; } Property Value string The category. Description Gets or sets the description. public override string Description { get; } Property Value string The description. Name Human-readable name of the feature. If not provided, the identifier will be used. public override string Name { get; } Property Value string The name. See Also FeatureBaseClass<TFeature>"
  },
  "api/Mithril.Apm.Abstractions.Features.html": {
    "href": "api/Mithril.Apm.Abstractions.Features.html",
    "title": "Namespace Mithril.Apm.Abstractions.Features | Mithril API Reference",
    "keywords": "Namespace Mithril.Apm.Abstractions.Features Classes APMFeature APM Feature"
  },
  "api/Mithril.Apm.Abstractions.Interfaces.IEventListener.html": {
    "href": "api/Mithril.Apm.Abstractions.Interfaces.IEventListener.html",
    "title": "Interface IEventListener | Mithril API Reference",
    "keywords": "Interface IEventListener Namespace Mithril.Apm.Abstractions.Interfaces Assembly Mithril.Apm.Abstractions.dll Event listener interface public interface IEventListener Extension Methods GenericExtensions.When<TObject>(TObject, bool, Func<TObject, TObject>) ExpandoObjectExtensions.ConvertToExpando(object?) Methods Subscribe(IMetricsCollectorService) Subscribes the specified observer. IEventListener Subscribe(IMetricsCollectorService observer) Parameters observer IMetricsCollectorService The observer. Returns IEventListener This."
  },
  "api/Mithril.Apm.Abstractions.Interfaces.IMetaDataCollector.html": {
    "href": "api/Mithril.Apm.Abstractions.Interfaces.IMetaDataCollector.html",
    "title": "Interface IMetaDataCollector | Mithril API Reference",
    "keywords": "Interface IMetaDataCollector Namespace Mithril.Apm.Abstractions.Interfaces Assembly Mithril.Apm.Abstractions.dll Trace data collector public interface IMetaDataCollector : IObservable<MetaDataEntry>, IDisposable Inherited Members IObservable<MetaDataEntry>.Subscribe(IObserver<MetaDataEntry>) IDisposable.Dispose() Extension Methods GenericExtensions.When<TObject>(TObject, bool, Func<TObject, TObject>) ExpandoObjectExtensions.ConvertToExpando(object?) Properties Name Gets the name. string Name { get; } Property Value string The name. Methods AddEntry(string, params KeyValuePair<string, string>[]) Adds an entry to the collector. IMetaDataCollector AddEntry(string traceId, params KeyValuePair<string, string>[] entries) Parameters traceId string The trace identifier. entries KeyValuePair<string, string>[] The entries. Returns IMetaDataCollector This."
  },
  "api/Mithril.Apm.Abstractions.Interfaces.IMetricsCollector.html": {
    "href": "api/Mithril.Apm.Abstractions.Interfaces.IMetricsCollector.html",
    "title": "Interface IMetricsCollector | Mithril API Reference",
    "keywords": "Interface IMetricsCollector Namespace Mithril.Apm.Abstractions.Interfaces Assembly Mithril.Apm.Abstractions.dll Metrics source interface public interface IMetricsCollector : IObservable<MetricsEntry>, IDisposable Inherited Members IObservable<MetricsEntry>.Subscribe(IObserver<MetricsEntry>) IDisposable.Dispose() Extension Methods GenericExtensions.When<TObject>(TObject, bool, Func<TObject, TObject>) ExpandoObjectExtensions.ConvertToExpando(object?) Properties Name Gets the name. string Name { get; } Property Value string The name. Methods AddEntry(string, string, params KeyValuePair<string, decimal>[]) Adds an entry to the collector. IMetricsCollector AddEntry(string traceId, string metaData, params KeyValuePair<string, decimal>[] entries) Parameters traceId string The trace identifier. metaData string The meta data. entries KeyValuePair<string, decimal>[] The entries. Returns IMetricsCollector This."
  },
  "api/Mithril.Apm.Abstractions.Interfaces.IMetricsReporter.html": {
    "href": "api/Mithril.Apm.Abstractions.Interfaces.IMetricsReporter.html",
    "title": "Interface IMetricsReporter | Mithril API Reference",
    "keywords": "Interface IMetricsReporter Namespace Mithril.Apm.Abstractions.Interfaces Assembly Mithril.Apm.Abstractions.dll Metrics reporter interface public interface IMetricsReporter Extension Methods GenericExtensions.When<TObject>(TObject, bool, Func<TObject, TObject>) ExpandoObjectExtensions.ConvertToExpando(object?) Methods Batch(Dictionary<string, TraceInformation>) Batches the specified data for reporting. void Batch(Dictionary<string, TraceInformation> data) Parameters data Dictionary<string, TraceInformation> The data."
  },
  "api/Mithril.Apm.Abstractions.Interfaces.html": {
    "href": "api/Mithril.Apm.Abstractions.Interfaces.html",
    "title": "Namespace Mithril.Apm.Abstractions.Interfaces | Mithril API Reference",
    "keywords": "Namespace Mithril.Apm.Abstractions.Interfaces Interfaces IEventListener Event listener interface IMetaDataCollector Trace data collector IMetricsCollector Metrics source interface IMetricsReporter Metrics reporter interface"
  },
  "api/Mithril.Apm.Abstractions.MetaDataEntry.html": {
    "href": "api/Mithril.Apm.Abstractions.MetaDataEntry.html",
    "title": "Struct MetaDataEntry | Mithril API Reference",
    "keywords": "Struct MetaDataEntry Namespace Mithril.Apm.Abstractions Assembly Mithril.Apm.Abstractions.dll Trace entry public readonly record struct MetaDataEntry : IEquatable<MetaDataEntry> Implements IEquatable<MetaDataEntry> Inherited Members ValueType.Equals(object) ValueType.GetHashCode() ValueType.ToString() object.Equals(object, object) object.GetType() object.ReferenceEquals(object, object) Extension Methods GenericExtensions.When<TObject>(TObject, bool, Func<TObject, TObject>) ExpandoObjectExtensions.ConvertToExpando(object?) Constructors MetaDataEntry(IMetaDataCollector?, string, KeyValuePair<string, string>[]) Trace entry public MetaDataEntry(IMetaDataCollector? Source, string TraceIdentifier, KeyValuePair<string, string>[] Data) Parameters Source IMetaDataCollector Source this came from TraceIdentifier string The trace identifier. Data KeyValuePair<string, string>[] Data to save. See Also IEquatable<T> Properties Data Data to save. public KeyValuePair<string, string>[] Data { get; init; } Property Value KeyValuePair<string, string>[] Trace entry Source Source this came from public IMetaDataCollector? Source { get; init; } Property Value IMetaDataCollector Trace entry TraceIdentifier The trace identifier. public string TraceIdentifier { get; init; } Property Value string Trace entry See Also IEquatable<T>"
  },
  "api/Mithril.Apm.Abstractions.MetricsEntry.html": {
    "href": "api/Mithril.Apm.Abstractions.MetricsEntry.html",
    "title": "Struct MetricsEntry | Mithril API Reference",
    "keywords": "Struct MetricsEntry Namespace Mithril.Apm.Abstractions Assembly Mithril.Apm.Abstractions.dll Metrics Entry public readonly record struct MetricsEntry : IEquatable<MetricsEntry> Implements IEquatable<MetricsEntry> Inherited Members ValueType.Equals(object) ValueType.GetHashCode() ValueType.ToString() object.Equals(object, object) object.GetType() object.ReferenceEquals(object, object) Extension Methods GenericExtensions.When<TObject>(TObject, bool, Func<TObject, TObject>) ExpandoObjectExtensions.ConvertToExpando(object?) Constructors MetricsEntry(IMetricsCollector?, string, string, KeyValuePair<string, decimal>[]) Metrics Entry public MetricsEntry(IMetricsCollector? Source, string TraceIdentifier, string MetaData, KeyValuePair<string, decimal>[] Data) Parameters Source IMetricsCollector Metrics Entry TraceIdentifier string Metrics Entry MetaData string Metrics Entry Data KeyValuePair<string, decimal>[] Metrics Entry Properties Data public KeyValuePair<string, decimal>[] Data { get; init; } Property Value KeyValuePair<string, decimal>[] Metrics Entry MetaData public string MetaData { get; init; } Property Value string Metrics Entry Source public IMetricsCollector? Source { get; init; } Property Value IMetricsCollector Metrics Entry TraceIdentifier public string TraceIdentifier { get; init; } Property Value string Metrics Entry"
  },
  "api/Mithril.Apm.Abstractions.Services.IMetricsCollectorService.html": {
    "href": "api/Mithril.Apm.Abstractions.Services.IMetricsCollectorService.html",
    "title": "Interface IMetricsCollectorService | Mithril API Reference",
    "keywords": "Interface IMetricsCollectorService Namespace Mithril.Apm.Abstractions.Services Assembly Mithril.Apm.Abstractions.dll Metrics collector service public interface IMetricsCollectorService : IObserver<MetricsEntry>, IObserver<MetaDataEntry>, IDisposable Inherited Members IObserver<MetricsEntry>.OnCompleted() IObserver<MetricsEntry>.OnError(Exception) IObserver<MetricsEntry>.OnNext(MetricsEntry) IObserver<MetaDataEntry>.OnNext(MetaDataEntry) IDisposable.Dispose() Extension Methods GenericExtensions.When<TObject>(TObject, bool, Func<TObject, TObject>) ExpandoObjectExtensions.ConvertToExpando(object?) Methods BatchCollectedMetrics() Reports the collected metrics to the registered reporters. IMetricsCollectorService BatchCollectedMetrics() Returns IMetricsCollectorService This. GetMetaDataCollector(string) Gets the trace data collector. IMetaDataCollector? GetMetaDataCollector(string name) Parameters name string The name. Returns IMetaDataCollector The trace data collector specified. GetMetricsCollector(string) Gets the source specified. IMetricsCollector? GetMetricsCollector(string name) Parameters name string The name. Returns IMetricsCollector Metrics source object specified. See Also IObserver<T> IDisposable"
  },
  "api/Mithril.Apm.Abstractions.Services.html": {
    "href": "api/Mithril.Apm.Abstractions.Services.html",
    "title": "Namespace Mithril.Apm.Abstractions.Services | Mithril API Reference",
    "keywords": "Namespace Mithril.Apm.Abstractions.Services Interfaces IMetricsCollectorService Metrics collector service"
  },
  "api/Mithril.Apm.Abstractions.TraceInformation.html": {
    "href": "api/Mithril.Apm.Abstractions.TraceInformation.html",
    "title": "Class TraceInformation | Mithril API Reference",
    "keywords": "Class TraceInformation Namespace Mithril.Apm.Abstractions Assembly Mithril.Apm.Abstractions.dll Trace information public class TraceInformation Inheritance object TraceInformation Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods GenericExtensions.When<TObject>(TObject, bool, Func<TObject, TObject>) ExpandoObjectExtensions.ConvertToExpando(object?) Properties Created Gets or sets the when ran. public DateTime Created { get; } Property Value DateTime The when ran. MetaData Gets the data. public List<MetaDataEntry> MetaData { get; } Property Value List<MetaDataEntry> The data. Metrics Gets the metrics. public List<MetricsEntry> Metrics { get; } Property Value List<MetricsEntry> The metrics. TraceIdentifier Gets or sets the trace identifier. public string? TraceIdentifier { get; set; } Property Value string The trace identifier."
  },
  "api/Mithril.Apm.Abstractions.html": {
    "href": "api/Mithril.Apm.Abstractions.html",
    "title": "Namespace Mithril.Apm.Abstractions | Mithril API Reference",
    "keywords": "Namespace Mithril.Apm.Abstractions Classes DefaultMetaDataCollector Default meta data collector DefaultMetricsCollector Default Metrics Collector TraceInformation Trace information Structs MetaDataEntry Trace entry MetricsEntry Metrics Entry"
  },
  "api/Mithril.Apm.Default.Admin.RequestTraceEditor.html": {
    "href": "api/Mithril.Apm.Default.Admin.RequestTraceEditor.html",
    "title": "Class RequestTraceEditor | Mithril API Reference",
    "keywords": "Class RequestTraceEditor Namespace Mithril.Apm.Default.Admin Assembly Mithril.Apm.Default.dll Request trace editor public class RequestTraceEditor : EntityEditorBaseClass<RequestTraceVM, RequestTrace>, IEntityEditor, IEditor Inheritance object EntityEditorBaseClass<RequestTraceVM> EntityEditorBaseClass<RequestTraceVM, RequestTrace> RequestTraceEditor Implements IEntityEditor IEditor Inherited Members EntityEditorBaseClass<RequestTraceVM, RequestTrace>.ActivateAsync(long, ClaimsPrincipal) EntityEditorBaseClass<RequestTraceVM, RequestTrace>.CanView(ClaimsPrincipal) EntityEditorBaseClass<RequestTraceVM, RequestTrace>.DeleteEntityAsync(long, ClaimsPrincipal) EntityEditorBaseClass<RequestTraceVM, RequestTrace>.Load(long, ExpandoObject, ClaimsPrincipal) EntityEditorBaseClass<RequestTraceVM, RequestTrace>.LoadPageAsync(int, int, string, bool, string, ClaimsPrincipal) EntityEditorBaseClass<RequestTraceVM, RequestTrace>.SaveEntityAsync(long, ExpandoObject, ClaimsPrincipal) EntityEditorBaseClass<RequestTraceVM, RequestTrace>.TotalActiveAsync(ClaimsPrincipal) EntityEditorBaseClass<RequestTraceVM, RequestTrace>.Convert(RequestTrace, bool) EntityEditorBaseClass<RequestTraceVM, RequestTrace>.FilterQueryBySearchQuery(IQueryable<RequestTrace>, string) EntityEditorBaseClass<RequestTraceVM, RequestTrace>.LoadModel(long) EntityEditorBaseClass<RequestTraceVM, RequestTrace>.MakeActiveAsync(RequestTrace) EntityEditorBaseClass<RequestTraceVM, RequestTrace>.MakeInactiveAsync(RequestTrace) EntityEditorBaseClass<RequestTraceVM>.Category EntityEditorBaseClass<RequestTraceVM>.ComponentDefinition EntityEditorBaseClass<RequestTraceVM>.Description EntityEditorBaseClass<RequestTraceVM>.EntityType EntityEditorBaseClass<RequestTraceVM>.Name EntityEditorBaseClass<RequestTraceVM>.DataService EntityEditorBaseClass<RequestTraceVM>.ServiceProvider EntityEditorBaseClass<RequestTraceVM>.ActivateAsync(long, ClaimsPrincipal) EntityEditorBaseClass<RequestTraceVM>.CanView(ClaimsPrincipal) EntityEditorBaseClass<RequestTraceVM>.DeleteEntityAsync(long, ClaimsPrincipal) EntityEditorBaseClass<RequestTraceVM>.Load(long, ExpandoObject, ClaimsPrincipal) EntityEditorBaseClass<RequestTraceVM>.LoadPageAsync(int, int, string, bool, string, ClaimsPrincipal) EntityEditorBaseClass<RequestTraceVM>.SaveEntityAsync(long, ExpandoObject, ClaimsPrincipal) EntityEditorBaseClass<RequestTraceVM>.TotalActiveAsync(ClaimsPrincipal) object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods GenericExtensions.When<TObject>(TObject, bool, Func<TObject, TObject>) ExpandoObjectExtensions.ConvertToExpando(object?) Remarks Initializes a new instance of the RequestTraceEditor class. Constructors RequestTraceEditor(IDataService?, IEntityMetadataService?, IServiceProvider?, string?) Request trace editor public RequestTraceEditor(IDataService? dataService, IEntityMetadataService? entityMetadataService, IServiceProvider? serviceProvider, string? dataType = null) Parameters dataService IDataService The data service. entityMetadataService IEntityMetadataService The entity metadata service. serviceProvider IServiceProvider The service provider. dataType string Type of the data. Remarks Initializes a new instance of the RequestTraceEditor class. See Also EntityEditorBaseClass<TEntity, TModel> Properties Icon Gets the icon. public override string Icon { get; } Property Value string The icon. Methods Convert(RequestTrace, bool) Converts the model into the appropriate view model. protected override IEntity Convert(RequestTrace model, bool full = true) Parameters model RequestTrace The model. full bool if set to true [full]. Returns IEntity The view model FilterQueryBySearchQuery(IQueryable<RequestTrace>?, string) Filters the query by search term. protected override IQueryable<RequestTrace>? FilterQueryBySearchQuery(IQueryable<RequestTrace>? query, string searchQuery) Parameters query IQueryable<RequestTrace> The query. searchQuery string The search query. Returns IQueryable<RequestTrace> The resulting query. See Also EntityEditorBaseClass<TEntity, TModel>"
  },
  "api/Mithril.Apm.Default.Admin.ViewModels.RequestMetaDataVM.html": {
    "href": "api/Mithril.Apm.Default.Admin.ViewModels.RequestMetaDataVM.html",
    "title": "Class RequestMetaDataVM | Mithril API Reference",
    "keywords": "Class RequestMetaDataVM Namespace Mithril.Apm.Default.Admin.ViewModels Assembly Mithril.Apm.Default.dll RequestMetaData VM public class RequestMetaDataVM Inheritance object RequestMetaDataVM Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods GenericExtensions.When<TObject>(TObject, bool, Func<TObject, TObject>) ExpandoObjectExtensions.ConvertToExpando(object?) Constructors RequestMetaDataVM() Initializes a new instance of the RequestMetaDataVM class. public RequestMetaDataVM() RequestMetaDataVM(RequestMetaData?) Initializes a new instance of the RequestMetaDataVM class. public RequestMetaDataVM(RequestMetaData? model) Parameters model RequestMetaData The model. Properties DisplayName Gets the display name. public string? DisplayName { get; } Property Value string The display name. MetaData Gets the meta data. [TextArea(3)] public string? MetaData { get; } Property Value string The meta data."
  },
  "api/Mithril.Apm.Default.Admin.ViewModels.RequestMetricVM.html": {
    "href": "api/Mithril.Apm.Default.Admin.ViewModels.RequestMetricVM.html",
    "title": "Class RequestMetricVM | Mithril API Reference",
    "keywords": "Class RequestMetricVM Namespace Mithril.Apm.Default.Admin.ViewModels Assembly Mithril.Apm.Default.dll Request metric view model public class RequestMetricVM Inheritance object RequestMetricVM Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods GenericExtensions.When<TObject>(TObject, bool, Func<TObject, TObject>) ExpandoObjectExtensions.ConvertToExpando(object?) Constructors RequestMetricVM() Initializes a new instance of the RequestMetricVM class. public RequestMetricVM() RequestMetricVM(RequestMetric?) Initializes a new instance of the RequestMetricVM class. public RequestMetricVM(RequestMetric? model) Parameters model RequestMetric The model. Properties DisplayName Gets the display name. public string? DisplayName { get; } Property Value string The display name. MetaData Gets the meta data. public string? MetaData { get; } Property Value string The meta data. Metric Gets the metrics. public decimal Metric { get; } Property Value decimal The metrics."
  },
  "api/Mithril.Apm.Default.Admin.ViewModels.RequestTraceVM.html": {
    "href": "api/Mithril.Apm.Default.Admin.ViewModels.RequestTraceVM.html",
    "title": "Class RequestTraceVM | Mithril API Reference",
    "keywords": "Class RequestTraceVM Namespace Mithril.Apm.Default.Admin.ViewModels Assembly Mithril.Apm.Default.dll Request trace VM public class RequestTraceVM : EntityBaseClass<RequestTrace>, IEntity<RequestTrace>, IEntity Inheritance object EntityBaseClass<RequestTrace> RequestTraceVM Implements IEntity<RequestTrace> IEntity Inherited Members EntityBaseClass<RequestTrace>.Active EntityBaseClass<RequestTrace>.ID object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods GenericExtensions.When<TObject>(TObject, bool, Func<TObject, TObject>) ExpandoObjectExtensions.ConvertToExpando(object?) Constructors RequestTraceVM() Initializes a new instance of the RequestTraceVM class. public RequestTraceVM() RequestTraceVM(RequestTrace?, bool) Initializes a new instance of the RequestTraceVM class. public RequestTraceVM(RequestTrace? model, bool full = false) Parameters model RequestTrace The model. full bool Properties DateCreated Gets the date created. public DateTime DateCreated { get; } Property Value DateTime The date created. MetaData Gets the meta data. public List<RequestMetaDataVM> MetaData { get; } Property Value List<RequestMetaDataVM> The meta data. Metrics Gets the metrics. public List<RequestMetricVM> Metrics { get; } Property Value List<RequestMetricVM> The metrics. TraceIdentifier Gets the trace identifier. public string? TraceIdentifier { get; } Property Value string The trace identifier. Methods SaveAsync(long, IDataService?, IServiceProvider?, ClaimsPrincipal?) Saves the changes asynchronously. public override Task<RequestTrace?> SaveAsync(long id, IDataService? dataService, IServiceProvider? serviceProvider, ClaimsPrincipal? currentUser) Parameters id long The identifier. dataService IDataService The data service. serviceProvider IServiceProvider The service provider. currentUser ClaimsPrincipal The current user. Returns Task<RequestTrace> The async task. See Also EntityBaseClass<TEntity>"
  },
  "api/Mithril.Apm.Default.Admin.ViewModels.html": {
    "href": "api/Mithril.Apm.Default.Admin.ViewModels.html",
    "title": "Namespace Mithril.Apm.Default.Admin.ViewModels | Mithril API Reference",
    "keywords": "Namespace Mithril.Apm.Default.Admin.ViewModels Classes RequestMetaDataVM RequestMetaData VM RequestMetricVM Request metric view model RequestTraceVM Request trace VM"
  },
  "api/Mithril.Apm.Default.Admin.html": {
    "href": "api/Mithril.Apm.Default.Admin.html",
    "title": "Namespace Mithril.Apm.Default.Admin | Mithril API Reference",
    "keywords": "Namespace Mithril.Apm.Default.Admin Classes RequestTraceEditor Request trace editor"
  },
  "api/Mithril.Apm.Default.BackgroundTasks.MetricsReporterBackgroundTask.html": {
    "href": "api/Mithril.Apm.Default.BackgroundTasks.MetricsReporterBackgroundTask.html",
    "title": "Class MetricsReporterBackgroundTask | Mithril API Reference",
    "keywords": "Class MetricsReporterBackgroundTask Namespace Mithril.Apm.Default.BackgroundTasks Assembly Mithril.Apm.Default.dll Metrics reporter background task public class MetricsReporterBackgroundTask : IScheduledTask, IBackgroundTask Inheritance object MetricsReporterBackgroundTask Implements IScheduledTask IBackgroundTask Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods GenericExtensions.When<TObject>(TObject, bool, Func<TObject, TObject>) ExpandoObjectExtensions.ConvertToExpando(object?) Remarks Initializes a new instance of the MetricsReporterBackgroundTask class. Constructors MetricsReporterBackgroundTask(ILogger<MetricsReporterBackgroundTask>?, IMetricsCollectorService?, IDataService?, IOptions<APMOptions>?) Metrics reporter background task public MetricsReporterBackgroundTask(ILogger<MetricsReporterBackgroundTask>? logger, IMetricsCollectorService? metricsCollectorService, IDataService? dataService, IOptions<APMOptions>? options) Parameters logger ILogger<MetricsReporterBackgroundTask> The logger. metricsCollectorService IMetricsCollectorService The metrics collector service. dataService IDataService The data service. options IOptions<APMOptions> The options. Remarks Initializes a new instance of the MetricsReporterBackgroundTask class. See Also IScheduledTask Properties Frequencies Gets the frequencies that the task is run at. public IFrequency[] Frequencies { get; } Property Value IFrequency[] The frequencies the task is run at. LastRunTime Gets the last run time. public DateTime LastRunTime { get; set; } Property Value DateTime The last run time. Name Gets the name. public string Name { get; } Property Value string The name. Methods ExecuteAsync() Executes this instance. public Task ExecuteAsync() Returns Task Metrics reporter background task See Also IScheduledTask"
  },
  "api/Mithril.Apm.Default.BackgroundTasks.html": {
    "href": "api/Mithril.Apm.Default.BackgroundTasks.html",
    "title": "Namespace Mithril.Apm.Default.BackgroundTasks | Mithril API Reference",
    "keywords": "Namespace Mithril.Apm.Default.BackgroundTasks Classes MetricsReporterBackgroundTask Metrics reporter background task"
  },
  "api/Mithril.Apm.Default.DefaultApmModule.html": {
    "href": "api/Mithril.Apm.Default.DefaultApmModule.html",
    "title": "Class DefaultApmModule | Mithril API Reference",
    "keywords": "Class DefaultApmModule Namespace Mithril.Apm.Default Assembly Mithril.Apm.Default.dll Default APM Module public class DefaultApmModule : ModuleBaseClass<DefaultApmModule>, IEquatable<DefaultApmModule>, IModule Inheritance object ModuleBaseClass<DefaultApmModule> DefaultApmModule Implements IEquatable<DefaultApmModule> IModule Inherited Members ModuleBaseClass<DefaultApmModule>.Category ModuleBaseClass<DefaultApmModule>.ContentPath ModuleBaseClass<DefaultApmModule>.ID ModuleBaseClass<DefaultApmModule>.LastModified ModuleBaseClass<DefaultApmModule>.Name ModuleBaseClass<DefaultApmModule>.Order ModuleBaseClass<DefaultApmModule>.Tags ModuleBaseClass<DefaultApmModule>.Version ModuleBaseClass<DefaultApmModule>.ConfigureHostSettings(IHostBuilder, IConfiguration, IHostEnvironment) ModuleBaseClass<DefaultApmModule>.ConfigureLoggingSettings(ILoggingBuilder, IConfiguration, IHostEnvironment) ModuleBaseClass<DefaultApmModule>.ConfigureMVC(IMvcBuilder, IConfiguration, IHostEnvironment) ModuleBaseClass<DefaultApmModule>.ConfigureRoutes(IEndpointRouteBuilder, IConfiguration, IHostEnvironment) ModuleBaseClass<DefaultApmModule>.ConfigureWebHostSettings(IWebHostBuilder, IConfiguration, IHostEnvironment) ModuleBaseClass<DefaultApmModule>.Equals(object) ModuleBaseClass<DefaultApmModule>.Equals(DefaultApmModule) ModuleBaseClass<DefaultApmModule>.GetHashCode() ModuleBaseClass<DefaultApmModule>.OnStarted() ModuleBaseClass<DefaultApmModule>.OnStopped() ModuleBaseClass<DefaultApmModule>.OnStopping() object.Equals(object, object) object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods GenericExtensions.When<TObject>(TObject, bool, Func<TObject, TObject>) ExpandoObjectExtensions.ConvertToExpando(object?) Properties Features Gets or sets the features. public override IFeature[] Features { get; protected set; } Property Value IFeature[] The features. Methods ConfigureApplication(IApplicationBuilder?, IConfiguration?, IHostEnvironment?) Configures the application. public override IApplicationBuilder? ConfigureApplication(IApplicationBuilder? app, IConfiguration? configuration, IHostEnvironment? environment) Parameters app IApplicationBuilder The application. configuration IConfiguration The configuration. environment IHostEnvironment The environment. Returns IApplicationBuilder Application builder ConfigureServices(IServiceCollection?, IConfiguration?, IHostEnvironment?) Configures the services for the module. public override IServiceCollection? ConfigureServices(IServiceCollection? services, IConfiguration? configuration, IHostEnvironment? environment) Parameters services IServiceCollection The services collection. configuration IConfiguration The configuration. environment IHostEnvironment The environment. Returns IServiceCollection Services InitializeDataAsync(IDataService?, IServiceProvider?) Initializes the data. public override Task InitializeDataAsync(IDataService? dataService, IServiceProvider? services) Parameters dataService IDataService The data service. services IServiceProvider The services for the application. Returns Task The async task. See Also ModuleBaseClass<TModule>"
  },
  "api/Mithril.Apm.Default.Middleware.ApmMiddleware.html": {
    "href": "api/Mithril.Apm.Default.Middleware.ApmMiddleware.html",
    "title": "Class ApmMiddleware | Mithril API Reference",
    "keywords": "Class ApmMiddleware Namespace Mithril.Apm.Default.Middleware Assembly Mithril.Apm.Default.dll APM collection middleware public class ApmMiddleware : IMiddleware Inheritance object ApmMiddleware Implements IMiddleware Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods GenericExtensions.When<TObject>(TObject, bool, Func<TObject, TObject>) ExpandoObjectExtensions.ConvertToExpando(object?) Remarks Initializes a new instance of the ApmMiddleware class. Constructors ApmMiddleware(IMetricsCollectorService?) APM collection middleware public ApmMiddleware(IMetricsCollectorService? metricsCollectorService) Parameters metricsCollectorService IMetricsCollectorService The metrics collector service. Remarks Initializes a new instance of the ApmMiddleware class. See Also IMiddleware Methods InvokeAsync(HttpContext, RequestDelegate) Request handling method. public Task InvokeAsync(HttpContext context, RequestDelegate next) Parameters context HttpContext The HttpContext for the current request. next RequestDelegate The delegate representing the remaining middleware in the request pipeline. Returns Task A Task that represents the execution of this middleware. See Also IMiddleware"
  },
  "api/Mithril.Apm.Default.Middleware.html": {
    "href": "api/Mithril.Apm.Default.Middleware.html",
    "title": "Namespace Mithril.Apm.Default.Middleware | Mithril API Reference",
    "keywords": "Namespace Mithril.Apm.Default.Middleware Classes ApmMiddleware APM collection middleware"
  },
  "api/Mithril.Apm.Default.Models.Mappings.RequestMetaDataMapping.html": {
    "href": "api/Mithril.Apm.Default.Models.Mappings.RequestMetaDataMapping.html",
    "title": "Class RequestMetaDataMapping | Mithril API Reference",
    "keywords": "Class RequestMetaDataMapping Namespace Mithril.Apm.Default.Models.Mappings Assembly Mithril.Apm.Default.dll Request MetaData mapping public class RequestMetaDataMapping : MappingBaseClass<RequestMetaData, DefaultDatabase>, IMapping<RequestMetaData>, IMapping Inheritance object MappingBaseClass<RequestMetaData, DefaultDatabase> RequestMetaDataMapping Implements IMapping<RequestMetaData> IMapping Inherited Members MappingBaseClass<RequestMetaData, DefaultDatabase>.AddAutoKey() MappingBaseClass<RequestMetaData, DefaultDatabase>.ContainsProperty(string) MappingBaseClass<RequestMetaData, DefaultDatabase>.Copy(IMapping) MappingBaseClass<RequestMetaData, DefaultDatabase>.CopyProperty(IIDProperty) MappingBaseClass<RequestMetaData, DefaultDatabase>.CopyProperty(IProperty) MappingBaseClass<RequestMetaData, DefaultDatabase>.CopyProperty(IMapProperty) MappingBaseClass<RequestMetaData, DefaultDatabase>.CopyProperty(IManyToOneProperty) MappingBaseClass<RequestMetaData, DefaultDatabase>.CopyProperty(IManyToManyProperty) MappingBaseClass<RequestMetaData, DefaultDatabase>.Equals(object) MappingBaseClass<RequestMetaData, DefaultDatabase>.GetColumnName(string) MappingBaseClass<RequestMetaData, DefaultDatabase>.GetHashCode() MappingBaseClass<RequestMetaData, DefaultDatabase>.ID<TDataType>(Expression<Func<RequestMetaData, TDataType>>) MappingBaseClass<RequestMetaData, DefaultDatabase>.ManyToMany<TDataType>(Expression<Func<RequestMetaData, IList<TDataType>>>) MappingBaseClass<RequestMetaData, DefaultDatabase>.ManyToOne<TDataType>(Expression<Func<RequestMetaData, IList<TDataType>>>) MappingBaseClass<RequestMetaData, DefaultDatabase>.ManyToOne<TDataType>(Expression<Func<RequestMetaData, TDataType>>) MappingBaseClass<RequestMetaData, DefaultDatabase>.Map<TDataType>(Expression<Func<RequestMetaData, TDataType>>) MappingBaseClass<RequestMetaData, DefaultDatabase>.Reduce(ILogger) MappingBaseClass<RequestMetaData, DefaultDatabase>.Reduce(IMapping, ILogger) MappingBaseClass<RequestMetaData, DefaultDatabase>.Reference<TDataType>(Expression<Func<RequestMetaData, TDataType>>) MappingBaseClass<RequestMetaData, DefaultDatabase>.SetQuery(QueryType, string, CommandType, params IParameter[]) MappingBaseClass<RequestMetaData, DefaultDatabase>.Setup() MappingBaseClass<RequestMetaData, DefaultDatabase>.ToString() MappingBaseClass<RequestMetaData, DefaultDatabase>.AutoIDProperties MappingBaseClass<RequestMetaData, DefaultDatabase>.DatabaseConfigType MappingBaseClass<RequestMetaData, DefaultDatabase>.IDProperties MappingBaseClass<RequestMetaData, DefaultDatabase>.ManyToManyProperties MappingBaseClass<RequestMetaData, DefaultDatabase>.ManyToOneProperties MappingBaseClass<RequestMetaData, DefaultDatabase>.MapProperties MappingBaseClass<RequestMetaData, DefaultDatabase>.Merge MappingBaseClass<RequestMetaData, DefaultDatabase>.ObjectType MappingBaseClass<RequestMetaData, DefaultDatabase>.Order MappingBaseClass<RequestMetaData, DefaultDatabase>.Prefix MappingBaseClass<RequestMetaData, DefaultDatabase>.Queries MappingBaseClass<RequestMetaData, DefaultDatabase>.ReferenceProperties MappingBaseClass<RequestMetaData, DefaultDatabase>.SchemaName MappingBaseClass<RequestMetaData, DefaultDatabase>.Suffix MappingBaseClass<RequestMetaData, DefaultDatabase>.TableName object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods GenericExtensions.When<TObject>(TObject, bool, Func<TObject, TObject>) ExpandoObjectExtensions.ConvertToExpando(object?) Constructors RequestMetaDataMapping() Initializes a new instance of the RequestMetaDataMapping class. public RequestMetaDataMapping() See Also MappingBaseClass<TClassType, TDatabaseType>"
  },
  "api/Mithril.Apm.Default.Models.Mappings.RequestMetricMapping.html": {
    "href": "api/Mithril.Apm.Default.Models.Mappings.RequestMetricMapping.html",
    "title": "Class RequestMetricMapping | Mithril API Reference",
    "keywords": "Class RequestMetricMapping Namespace Mithril.Apm.Default.Models.Mappings Assembly Mithril.Apm.Default.dll Request Metric mapping public class RequestMetricMapping : MappingBaseClass<RequestMetric, DefaultDatabase>, IMapping<RequestMetric>, IMapping Inheritance object MappingBaseClass<RequestMetric, DefaultDatabase> RequestMetricMapping Implements IMapping<RequestMetric> IMapping Inherited Members MappingBaseClass<RequestMetric, DefaultDatabase>.AddAutoKey() MappingBaseClass<RequestMetric, DefaultDatabase>.ContainsProperty(string) MappingBaseClass<RequestMetric, DefaultDatabase>.Copy(IMapping) MappingBaseClass<RequestMetric, DefaultDatabase>.CopyProperty(IIDProperty) MappingBaseClass<RequestMetric, DefaultDatabase>.CopyProperty(IProperty) MappingBaseClass<RequestMetric, DefaultDatabase>.CopyProperty(IMapProperty) MappingBaseClass<RequestMetric, DefaultDatabase>.CopyProperty(IManyToOneProperty) MappingBaseClass<RequestMetric, DefaultDatabase>.CopyProperty(IManyToManyProperty) MappingBaseClass<RequestMetric, DefaultDatabase>.Equals(object) MappingBaseClass<RequestMetric, DefaultDatabase>.GetColumnName(string) MappingBaseClass<RequestMetric, DefaultDatabase>.GetHashCode() MappingBaseClass<RequestMetric, DefaultDatabase>.ID<TDataType>(Expression<Func<RequestMetric, TDataType>>) MappingBaseClass<RequestMetric, DefaultDatabase>.ManyToMany<TDataType>(Expression<Func<RequestMetric, IList<TDataType>>>) MappingBaseClass<RequestMetric, DefaultDatabase>.ManyToOne<TDataType>(Expression<Func<RequestMetric, IList<TDataType>>>) MappingBaseClass<RequestMetric, DefaultDatabase>.ManyToOne<TDataType>(Expression<Func<RequestMetric, TDataType>>) MappingBaseClass<RequestMetric, DefaultDatabase>.Map<TDataType>(Expression<Func<RequestMetric, TDataType>>) MappingBaseClass<RequestMetric, DefaultDatabase>.Reduce(ILogger) MappingBaseClass<RequestMetric, DefaultDatabase>.Reduce(IMapping, ILogger) MappingBaseClass<RequestMetric, DefaultDatabase>.Reference<TDataType>(Expression<Func<RequestMetric, TDataType>>) MappingBaseClass<RequestMetric, DefaultDatabase>.SetQuery(QueryType, string, CommandType, params IParameter[]) MappingBaseClass<RequestMetric, DefaultDatabase>.Setup() MappingBaseClass<RequestMetric, DefaultDatabase>.ToString() MappingBaseClass<RequestMetric, DefaultDatabase>.AutoIDProperties MappingBaseClass<RequestMetric, DefaultDatabase>.DatabaseConfigType MappingBaseClass<RequestMetric, DefaultDatabase>.IDProperties MappingBaseClass<RequestMetric, DefaultDatabase>.ManyToManyProperties MappingBaseClass<RequestMetric, DefaultDatabase>.ManyToOneProperties MappingBaseClass<RequestMetric, DefaultDatabase>.MapProperties MappingBaseClass<RequestMetric, DefaultDatabase>.Merge MappingBaseClass<RequestMetric, DefaultDatabase>.ObjectType MappingBaseClass<RequestMetric, DefaultDatabase>.Order MappingBaseClass<RequestMetric, DefaultDatabase>.Prefix MappingBaseClass<RequestMetric, DefaultDatabase>.Queries MappingBaseClass<RequestMetric, DefaultDatabase>.ReferenceProperties MappingBaseClass<RequestMetric, DefaultDatabase>.SchemaName MappingBaseClass<RequestMetric, DefaultDatabase>.Suffix MappingBaseClass<RequestMetric, DefaultDatabase>.TableName object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods GenericExtensions.When<TObject>(TObject, bool, Func<TObject, TObject>) ExpandoObjectExtensions.ConvertToExpando(object?) Constructors RequestMetricMapping() Initializes a new instance of the RequestMetricMapping class. public RequestMetricMapping() See Also MappingBaseClass<TClassType, TDatabaseType>"
  },
  "api/Mithril.Apm.Default.Models.Mappings.RequestTraceMapping.html": {
    "href": "api/Mithril.Apm.Default.Models.Mappings.RequestTraceMapping.html",
    "title": "Class RequestTraceMapping | Mithril API Reference",
    "keywords": "Class RequestTraceMapping Namespace Mithril.Apm.Default.Models.Mappings Assembly Mithril.Apm.Default.dll Request trace mapping public class RequestTraceMapping : MappingBaseClass<RequestTrace, DefaultDatabase>, IMapping<RequestTrace>, IMapping Inheritance object MappingBaseClass<RequestTrace, DefaultDatabase> RequestTraceMapping Implements IMapping<RequestTrace> IMapping Inherited Members MappingBaseClass<RequestTrace, DefaultDatabase>.AddAutoKey() MappingBaseClass<RequestTrace, DefaultDatabase>.ContainsProperty(string) MappingBaseClass<RequestTrace, DefaultDatabase>.Copy(IMapping) MappingBaseClass<RequestTrace, DefaultDatabase>.CopyProperty(IIDProperty) MappingBaseClass<RequestTrace, DefaultDatabase>.CopyProperty(IProperty) MappingBaseClass<RequestTrace, DefaultDatabase>.CopyProperty(IMapProperty) MappingBaseClass<RequestTrace, DefaultDatabase>.CopyProperty(IManyToOneProperty) MappingBaseClass<RequestTrace, DefaultDatabase>.CopyProperty(IManyToManyProperty) MappingBaseClass<RequestTrace, DefaultDatabase>.Equals(object) MappingBaseClass<RequestTrace, DefaultDatabase>.GetColumnName(string) MappingBaseClass<RequestTrace, DefaultDatabase>.GetHashCode() MappingBaseClass<RequestTrace, DefaultDatabase>.ID<TDataType>(Expression<Func<RequestTrace, TDataType>>) MappingBaseClass<RequestTrace, DefaultDatabase>.ManyToMany<TDataType>(Expression<Func<RequestTrace, IList<TDataType>>>) MappingBaseClass<RequestTrace, DefaultDatabase>.ManyToOne<TDataType>(Expression<Func<RequestTrace, IList<TDataType>>>) MappingBaseClass<RequestTrace, DefaultDatabase>.ManyToOne<TDataType>(Expression<Func<RequestTrace, TDataType>>) MappingBaseClass<RequestTrace, DefaultDatabase>.Map<TDataType>(Expression<Func<RequestTrace, TDataType>>) MappingBaseClass<RequestTrace, DefaultDatabase>.Reduce(ILogger) MappingBaseClass<RequestTrace, DefaultDatabase>.Reduce(IMapping, ILogger) MappingBaseClass<RequestTrace, DefaultDatabase>.Reference<TDataType>(Expression<Func<RequestTrace, TDataType>>) MappingBaseClass<RequestTrace, DefaultDatabase>.SetQuery(QueryType, string, CommandType, params IParameter[]) MappingBaseClass<RequestTrace, DefaultDatabase>.Setup() MappingBaseClass<RequestTrace, DefaultDatabase>.ToString() MappingBaseClass<RequestTrace, DefaultDatabase>.AutoIDProperties MappingBaseClass<RequestTrace, DefaultDatabase>.DatabaseConfigType MappingBaseClass<RequestTrace, DefaultDatabase>.IDProperties MappingBaseClass<RequestTrace, DefaultDatabase>.ManyToManyProperties MappingBaseClass<RequestTrace, DefaultDatabase>.ManyToOneProperties MappingBaseClass<RequestTrace, DefaultDatabase>.MapProperties MappingBaseClass<RequestTrace, DefaultDatabase>.Merge MappingBaseClass<RequestTrace, DefaultDatabase>.ObjectType MappingBaseClass<RequestTrace, DefaultDatabase>.Order MappingBaseClass<RequestTrace, DefaultDatabase>.Prefix MappingBaseClass<RequestTrace, DefaultDatabase>.Queries MappingBaseClass<RequestTrace, DefaultDatabase>.ReferenceProperties MappingBaseClass<RequestTrace, DefaultDatabase>.SchemaName MappingBaseClass<RequestTrace, DefaultDatabase>.Suffix MappingBaseClass<RequestTrace, DefaultDatabase>.TableName object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods GenericExtensions.When<TObject>(TObject, bool, Func<TObject, TObject>) ExpandoObjectExtensions.ConvertToExpando(object?) Constructors RequestTraceMapping() Initializes a new instance of the RequestTraceMapping class. public RequestTraceMapping() See Also MappingBaseClass<TClassType, TDatabaseType>"
  },
  "api/Mithril.Apm.Default.Models.Mappings.html": {
    "href": "api/Mithril.Apm.Default.Models.Mappings.html",
    "title": "Namespace Mithril.Apm.Default.Models.Mappings | Mithril API Reference",
    "keywords": "Namespace Mithril.Apm.Default.Models.Mappings Classes RequestMetaDataMapping Request MetaData mapping RequestMetricMapping Request Metric mapping RequestTraceMapping Request trace mapping"
  },
  "api/Mithril.Apm.Default.Models.RequestMetaData.html": {
    "href": "api/Mithril.Apm.Default.Models.RequestMetaData.html",
    "title": "Class RequestMetaData | Mithril API Reference",
    "keywords": "Class RequestMetaData Namespace Mithril.Apm.Default.Models Assembly Mithril.Apm.Default.dll Request MetaData public class RequestMetaData : ModelBase<RequestMetaData>, IModel<RequestMetaData>, IModel, IEquatable<IModel>, IEquatable<IModel<RequestMetaData>>, IComparable, IComparable<RequestMetaData>, IEquatable<ModelBase<RequestMetaData>> Inheritance object ModelBase<RequestMetaData> RequestMetaData Implements IModel<RequestMetaData> IModel IEquatable<IModel> IEquatable<IModel<RequestMetaData>> IComparable IComparable<RequestMetaData> IEquatable<ModelBase<RequestMetaData>> Inherited Members ModelBase<RequestMetaData>.Active ModelBase<RequestMetaData>.Creator ModelBase<RequestMetaData>.DateCreated ModelBase<RequestMetaData>.DateModified ModelBase<RequestMetaData>.ID ModelBase<RequestMetaData>.Modifier ModelBase<RequestMetaData>.TenantID ModelBase<RequestMetaData>.All(IDataService) ModelBase<RequestMetaData>.AllActive(IDataService) ModelBase<RequestMetaData>.AllInactive(IDataService) ModelBase<RequestMetaData>.Load(long, IDataService) ModelBase<RequestMetaData>.Query(IDataService) ModelBase<RequestMetaData>.CanBeModifiedBy(ClaimsPrincipal) ModelBase<RequestMetaData>.CanBeViewedBy(ClaimsPrincipal) ModelBase<RequestMetaData>.CompareTo(object) ModelBase<RequestMetaData>.DeleteAsync(IDataService, ClaimsPrincipal, bool) ModelBase<RequestMetaData>.Equals(IModel) ModelBase<RequestMetaData>.Equals(IModel<RequestMetaData>) ModelBase<RequestMetaData>.Equals(ModelBase<RequestMetaData>) ModelBase<RequestMetaData>.SaveAsync(IDataService, ClaimsPrincipal) ModelBase<RequestMetaData>.SetupObject(IDataService, ClaimsPrincipal) ModelBase<RequestMetaData>.SetupObject(IDataService, IUser) ModelBase<RequestMetaData>.SetupObjectAndReturn(IDataService, ClaimsPrincipal) object.Equals(object, object) object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Extension Methods GenericExtensions.When<TObject>(TObject, bool, Func<TObject, TObject>) ExpandoObjectExtensions.ConvertToExpando(object?) Constructors RequestMetaData() Initializes a new instance of the RequestMetaData class. public RequestMetaData() RequestMetaData(string, string) Initializes a new instance of the RequestMetaData class. public RequestMetaData(string displayName, string metaData) Parameters displayName string The display name. metaData string The meta data. Exceptions ArgumentNullException displayName or metaData Properties DisplayName Gets or sets the display name. [Required] [MaxLength(100)] public string? DisplayName { get; set; } Property Value string The display name. MetaData Gets or sets the meta data. [Required] [MaxLength] public string? MetaData { get; set; } Property Value string The meta data. Methods CompareTo(RequestMetaData?) Compares the object to another object public override int CompareTo(RequestMetaData? other) Parameters other RequestMetaData Object to compare to Returns int 0 if they are equal, -1 if this is smaller, 1 if it is larger Equals(RequestMetaData) Indicates whether the current object is equal to another object of the same type. public bool Equals(RequestMetaData other) Parameters other RequestMetaData An object to compare with this object. Returns bool true if the current object is equal to the other parameter; otherwise, false. Equals(object?) Determines whether the specified object, is equal to this instance. public override bool Equals(object? obj) Parameters obj object The object to compare with this instance. Returns bool true if the specified object is equal to this instance; otherwise, false. GetHashCode() Returns a hash code for this instance. public override int GetHashCode() Returns int A hash code for this instance, suitable for use in hashing algorithms and data structures like a hash table. ToString() Returns a string that represents this instance. public override string ToString() Returns string A string that represents this instance. Operators operator ==(RequestMetaData, RequestMetaData) Implements the operator ==. public static bool operator ==(RequestMetaData first, RequestMetaData second) Parameters first RequestMetaData The first. second RequestMetaData The second. Returns bool The result of the operator. operator >(RequestMetaData, RequestMetaData) Implements the operator >. public static bool operator >(RequestMetaData left, RequestMetaData right) Parameters left RequestMetaData The left. right RequestMetaData The right. Returns bool The result of the operator. operator >=(RequestMetaData, RequestMetaData) Implements the operator >=. public static bool operator >=(RequestMetaData left, RequestMetaData right) Parameters left RequestMetaData The left. right RequestMetaData The right. Returns bool The result of the operator. operator !=(RequestMetaData, RequestMetaData) Implements the operator !=. public static bool operator !=(RequestMetaData left, RequestMetaData right) Parameters left RequestMetaData The left. right RequestMetaData The right. Returns bool The result of the operator. operator <(RequestMetaData, RequestMetaData) Implements the operator <. public static bool operator <(RequestMetaData left, RequestMetaData right) Parameters left RequestMetaData The left. right RequestMetaData The right. Returns bool The result of the operator. operator <=(RequestMetaData, RequestMetaData) Implements the operator <=. public static bool operator <=(RequestMetaData left, RequestMetaData right) Parameters left RequestMetaData The left. right RequestMetaData The right. Returns bool The result of the operator. See Also ModelBase<TClass>"
  },
  "api/Mithril.Apm.Default.Models.RequestMetric.html": {
    "href": "api/Mithril.Apm.Default.Models.RequestMetric.html",
    "title": "Class RequestMetric | Mithril API Reference",
    "keywords": "Class RequestMetric Namespace Mithril.Apm.Default.Models Assembly Mithril.Apm.Default.dll Request Metrics public class RequestMetric : ModelBase<RequestMetric>, IModel<RequestMetric>, IModel, IEquatable<IModel>, IEquatable<IModel<RequestMetric>>, IComparable, IComparable<RequestMetric>, IEquatable<ModelBase<RequestMetric>> Inheritance object ModelBase<RequestMetric> RequestMetric Implements IModel<RequestMetric> IModel IEquatable<IModel> IEquatable<IModel<RequestMetric>> IComparable IComparable<RequestMetric> IEquatable<ModelBase<RequestMetric>> Inherited Members ModelBase<RequestMetric>.Active ModelBase<RequestMetric>.Creator ModelBase<RequestMetric>.DateCreated ModelBase<RequestMetric>.DateModified ModelBase<RequestMetric>.ID ModelBase<RequestMetric>.Modifier ModelBase<RequestMetric>.TenantID ModelBase<RequestMetric>.All(IDataService) ModelBase<RequestMetric>.AllActive(IDataService) ModelBase<RequestMetric>.AllInactive(IDataService) ModelBase<RequestMetric>.Load(long, IDataService) ModelBase<RequestMetric>.Query(IDataService) ModelBase<RequestMetric>.CanBeModifiedBy(ClaimsPrincipal) ModelBase<RequestMetric>.CanBeViewedBy(ClaimsPrincipal) ModelBase<RequestMetric>.CompareTo(object) ModelBase<RequestMetric>.DeleteAsync(IDataService, ClaimsPrincipal, bool) ModelBase<RequestMetric>.Equals(IModel) ModelBase<RequestMetric>.Equals(IModel<RequestMetric>) ModelBase<RequestMetric>.Equals(ModelBase<RequestMetric>) ModelBase<RequestMetric>.SaveAsync(IDataService, ClaimsPrincipal) ModelBase<RequestMetric>.SetupObject(IDataService, ClaimsPrincipal) ModelBase<RequestMetric>.SetupObject(IDataService, IUser) ModelBase<RequestMetric>.SetupObjectAndReturn(IDataService, ClaimsPrincipal) object.Equals(object, object) object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Extension Methods GenericExtensions.When<TObject>(TObject, bool, Func<TObject, TObject>) ExpandoObjectExtensions.ConvertToExpando(object?) Constructors RequestMetric() Initializes a new instance of the RequestMetric class. public RequestMetric() RequestMetric(string, string, decimal) Initializes a new instance of the RequestMetric class. public RequestMetric(string displayName, string metaData, decimal metric) Parameters displayName string The display name. metaData string The meta data. metric decimal The metric. Exceptions ArgumentNullException displayName Properties DisplayName Gets or sets the display name. [Required] [MaxLength(100)] public string? DisplayName { get; set; } Property Value string The display name. MetaData Gets or sets the meta data. [MaxLength] public string? MetaData { get; set; } Property Value string The meta data. Metric Gets or sets the metric. public decimal Metric { get; set; } Property Value decimal The metric. Methods CompareTo(RequestMetric?) Compares the object to another object public override int CompareTo(RequestMetric? other) Parameters other RequestMetric Object to compare to Returns int 0 if they are equal, -1 if this is smaller, 1 if it is larger Equals(RequestMetric) Indicates whether the current object is equal to another object of the same type. public bool Equals(RequestMetric other) Parameters other RequestMetric An object to compare with this object. Returns bool true if the current object is equal to the other parameter; otherwise, false. Equals(object?) Determines whether the specified object, is equal to this instance. public override bool Equals(object? obj) Parameters obj object The object to compare with this instance. Returns bool true if the specified object is equal to this instance; otherwise, false. GetHashCode() Returns a hash code for this instance. public override int GetHashCode() Returns int A hash code for this instance, suitable for use in hashing algorithms and data structures like a hash table. ToString() Returns a string that represents this instance. public override string ToString() Returns string A string that represents this instance. Operators operator ==(RequestMetric, RequestMetric) Implements the operator ==. public static bool operator ==(RequestMetric first, RequestMetric second) Parameters first RequestMetric The first. second RequestMetric The second. Returns bool The result of the operator. operator >(RequestMetric, RequestMetric) Implements the operator >. public static bool operator >(RequestMetric left, RequestMetric right) Parameters left RequestMetric The left. right RequestMetric The right. Returns bool The result of the operator. operator >=(RequestMetric, RequestMetric) Implements the operator >=. public static bool operator >=(RequestMetric left, RequestMetric right) Parameters left RequestMetric The left. right RequestMetric The right. Returns bool The result of the operator. operator !=(RequestMetric, RequestMetric) Implements the operator !=. public static bool operator !=(RequestMetric left, RequestMetric right) Parameters left RequestMetric The left. right RequestMetric The right. Returns bool The result of the operator. operator <(RequestMetric, RequestMetric) Implements the operator <. public static bool operator <(RequestMetric left, RequestMetric right) Parameters left RequestMetric The left. right RequestMetric The right. Returns bool The result of the operator. operator <=(RequestMetric, RequestMetric) Implements the operator <=. public static bool operator <=(RequestMetric left, RequestMetric right) Parameters left RequestMetric The left. right RequestMetric The right. Returns bool The result of the operator. See Also ModelBase<TClass>"
  },
  "api/Mithril.Apm.Default.Models.RequestTrace.html": {
    "href": "api/Mithril.Apm.Default.Models.RequestTrace.html",
    "title": "Class RequestTrace | Mithril API Reference",
    "keywords": "Class RequestTrace Namespace Mithril.Apm.Default.Models Assembly Mithril.Apm.Default.dll Request trace public class RequestTrace : ModelBase<RequestTrace>, IModel<RequestTrace>, IModel, IEquatable<IModel>, IEquatable<IModel<RequestTrace>>, IComparable, IComparable<RequestTrace>, IEquatable<ModelBase<RequestTrace>> Inheritance object ModelBase<RequestTrace> RequestTrace Implements IModel<RequestTrace> IModel IEquatable<IModel> IEquatable<IModel<RequestTrace>> IComparable IComparable<RequestTrace> IEquatable<ModelBase<RequestTrace>> Inherited Members ModelBase<RequestTrace>.Active ModelBase<RequestTrace>.Creator ModelBase<RequestTrace>.DateCreated ModelBase<RequestTrace>.DateModified ModelBase<RequestTrace>.ID ModelBase<RequestTrace>.Modifier ModelBase<RequestTrace>.TenantID ModelBase<RequestTrace>.All(IDataService) ModelBase<RequestTrace>.AllActive(IDataService) ModelBase<RequestTrace>.AllInactive(IDataService) ModelBase<RequestTrace>.Load(long, IDataService) ModelBase<RequestTrace>.Query(IDataService) ModelBase<RequestTrace>.CanBeModifiedBy(ClaimsPrincipal) ModelBase<RequestTrace>.CanBeViewedBy(ClaimsPrincipal) ModelBase<RequestTrace>.CompareTo(object) ModelBase<RequestTrace>.DeleteAsync(IDataService, ClaimsPrincipal, bool) ModelBase<RequestTrace>.Equals(IModel) ModelBase<RequestTrace>.Equals(IModel<RequestTrace>) ModelBase<RequestTrace>.Equals(ModelBase<RequestTrace>) ModelBase<RequestTrace>.SaveAsync(IDataService, ClaimsPrincipal) ModelBase<RequestTrace>.SetupObject(IDataService, ClaimsPrincipal) ModelBase<RequestTrace>.SetupObject(IDataService, IUser) ModelBase<RequestTrace>.SetupObjectAndReturn(IDataService, ClaimsPrincipal) object.Equals(object, object) object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Extension Methods GenericExtensions.When<TObject>(TObject, bool, Func<TObject, TObject>) ExpandoObjectExtensions.ConvertToExpando(object?) Constructors RequestTrace() Initializes a new instance of the RequestTrace class. public RequestTrace() RequestTrace(string) Initializes a new instance of the RequestTrace class. public RequestTrace(string traceIdentifier) Parameters traceIdentifier string The trace identifier. Exceptions ArgumentNullException traceIdentifier Properties MetaData Gets or sets the meta data. public virtual IList<RequestMetaData> MetaData { get; set; } Property Value IList<RequestMetaData> The meta data. Metrics Gets or sets the metrics. public virtual IList<RequestMetric> Metrics { get; set; } Property Value IList<RequestMetric> The metrics. TraceIdentifier Gets or sets the trace identifier. [Required] [MaxLength(100)] public string? TraceIdentifier { get; set; } Property Value string The trace identifier. Methods AddMetaData(string, string) Adds the meta data. public void AddMetaData(string displayName, string metaData) Parameters displayName string The display name. metaData string The meta data. AddMetrics(string, string, decimal) Adds the metrics. public void AddMetrics(string displayName, string metaData, decimal metric) Parameters displayName string The display name. metaData string The meta data. metric decimal The metric. CompareTo(RequestTrace?) Compares the object to another object public override int CompareTo(RequestTrace? other) Parameters other RequestTrace Object to compare to Returns int 0 if they are equal, -1 if this is smaller, 1 if it is larger Equals(RequestTrace) Indicates whether the current object is equal to another object of the same type. public bool Equals(RequestTrace other) Parameters other RequestTrace An object to compare with this object. Returns bool true if the current object is equal to the other parameter; otherwise, false. Equals(object?) Determines whether the specified object, is equal to this instance. public override bool Equals(object? obj) Parameters obj object The object to compare with this instance. Returns bool true if the specified object is equal to this instance; otherwise, false. GetHashCode() Returns a hash code for this instance. public override int GetHashCode() Returns int A hash code for this instance, suitable for use in hashing algorithms and data structures like a hash table. ToString() Returns a string that represents this instance. public override string ToString() Returns string A string that represents this instance. Operators operator ==(RequestTrace, RequestTrace) Implements the operator ==. public static bool operator ==(RequestTrace first, RequestTrace second) Parameters first RequestTrace The first. second RequestTrace The second. Returns bool The result of the operator. operator >(RequestTrace, RequestTrace) Implements the operator >. public static bool operator >(RequestTrace left, RequestTrace right) Parameters left RequestTrace The left. right RequestTrace The right. Returns bool The result of the operator. operator >=(RequestTrace, RequestTrace) Implements the operator >=. public static bool operator >=(RequestTrace left, RequestTrace right) Parameters left RequestTrace The left. right RequestTrace The right. Returns bool The result of the operator. operator !=(RequestTrace, RequestTrace) Implements the operator !=. public static bool operator !=(RequestTrace left, RequestTrace right) Parameters left RequestTrace The left. right RequestTrace The right. Returns bool The result of the operator. operator <(RequestTrace, RequestTrace) Implements the operator <. public static bool operator <(RequestTrace left, RequestTrace right) Parameters left RequestTrace The left. right RequestTrace The right. Returns bool The result of the operator. operator <=(RequestTrace, RequestTrace) Implements the operator <=. public static bool operator <=(RequestTrace left, RequestTrace right) Parameters left RequestTrace The left. right RequestTrace The right. Returns bool The result of the operator. See Also ModelBase<TClass>"
  },
  "api/Mithril.Apm.Default.Models.html": {
    "href": "api/Mithril.Apm.Default.Models.html",
    "title": "Namespace Mithril.Apm.Default.Models | Mithril API Reference",
    "keywords": "Namespace Mithril.Apm.Default.Models Classes RequestMetaData Request MetaData RequestMetric Request Metrics RequestTrace Request trace"
  },
  "api/Mithril.Apm.Default.Queries.RequestTraceQuery.html": {
    "href": "api/Mithril.Apm.Default.Queries.RequestTraceQuery.html",
    "title": "Class RequestTraceQuery | Mithril API Reference",
    "keywords": "Class RequestTraceQuery Namespace Mithril.Apm.Default.Queries Assembly Mithril.Apm.Default.dll Request trace query [ApiAuthorize(\"Admin Only\")] public class RequestTraceQuery : QueryBaseClass<IEnumerable<RequestTraceVM>>, IQuery<IEnumerable<RequestTraceVM>>, IQuery Inheritance object QueryBaseClass<IEnumerable<RequestTraceVM>> RequestTraceQuery Implements IQuery<IEnumerable<RequestTraceVM>> IQuery Inherited Members QueryBaseClass<IEnumerable<RequestTraceVM>>.DeprecationReason QueryBaseClass<IEnumerable<RequestTraceVM>>.Description QueryBaseClass<IEnumerable<RequestTraceVM>>.ReturnType QueryBaseClass<IEnumerable<RequestTraceVM>>.Version QueryBaseClass<IEnumerable<RequestTraceVM>>.FeatureManager QueryBaseClass<IEnumerable<RequestTraceVM>>.Logger QueryBaseClass<IEnumerable<RequestTraceVM>>.IsFeatureEnabled() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods GenericExtensions.When<TObject>(TObject, bool, Func<TObject, TObject>) ExpandoObjectExtensions.ConvertToExpando(object?) Remarks Initializes a new instance of the RequestTraceQuery class. Constructors RequestTraceQuery(ILogger<RequestTraceQuery>?, IFeatureManager?, IDataService?) Request trace query public RequestTraceQuery(ILogger<RequestTraceQuery>? logger, IFeatureManager? featureManager, IDataService? dataService) Parameters logger ILogger<RequestTraceQuery> The logger. featureManager IFeatureManager The feature manager. dataService IDataService The data service. Remarks Initializes a new instance of the RequestTraceQuery class. Properties Arguments The arguments public override IArgument[] Arguments { get; } Property Value IArgument[] Request trace query DataService Gets the data service. public IDataService? DataService { get; } Property Value IDataService The data service. Features Gets the features associated with this command. public override IFeature[] Features { get; } Property Value IFeature[] The features associated with this command. Name Gets the name. public override string Name { get; } Property Value string The name. Methods ResolveAsync(ClaimsPrincipal?, Arguments) Resolves the asynchronous. public override Task<IEnumerable<RequestTraceVM>?> ResolveAsync(ClaimsPrincipal? arg, Arguments arguments) Parameters arg ClaimsPrincipal The argument. arguments Arguments The arguments. Returns Task<IEnumerable<RequestTraceVM>>"
  },
  "api/Mithril.Apm.Default.Queries.ViewModels.RequestMetaDataVM.html": {
    "href": "api/Mithril.Apm.Default.Queries.ViewModels.RequestMetaDataVM.html",
    "title": "Class RequestMetaDataVM | Mithril API Reference",
    "keywords": "Class RequestMetaDataVM Namespace Mithril.Apm.Default.Queries.ViewModels Assembly Mithril.Apm.Default.dll RequestMetaData VM public class RequestMetaDataVM Inheritance object RequestMetaDataVM Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods GenericExtensions.When<TObject>(TObject, bool, Func<TObject, TObject>) ExpandoObjectExtensions.ConvertToExpando(object?) Constructors RequestMetaDataVM(RequestMetaData?) Initializes a new instance of the RequestMetaDataVM class. public RequestMetaDataVM(RequestMetaData? model) Parameters model RequestMetaData The model. Properties DisplayName Gets the display name. public string? DisplayName { get; } Property Value string The display name. MetaData Gets the meta data. public string? MetaData { get; } Property Value string The meta data."
  },
  "api/Mithril.Apm.Default.Queries.ViewModels.RequestMetricVM.html": {
    "href": "api/Mithril.Apm.Default.Queries.ViewModels.RequestMetricVM.html",
    "title": "Class RequestMetricVM | Mithril API Reference",
    "keywords": "Class RequestMetricVM Namespace Mithril.Apm.Default.Queries.ViewModels Assembly Mithril.Apm.Default.dll RequestMetric VM public class RequestMetricVM Inheritance object RequestMetricVM Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods GenericExtensions.When<TObject>(TObject, bool, Func<TObject, TObject>) ExpandoObjectExtensions.ConvertToExpando(object?) Constructors RequestMetricVM(RequestMetric?) Initializes a new instance of the RequestMetricVM class. public RequestMetricVM(RequestMetric? model) Parameters model RequestMetric The model. Properties DisplayName Gets the display name. public string? DisplayName { get; } Property Value string The display name. MetaData Gets the meta data. public string? MetaData { get; } Property Value string The meta data. Metric Gets the metrics. public decimal Metric { get; } Property Value decimal The metrics."
  },
  "api/Mithril.Apm.Default.Queries.ViewModels.RequestTraceVM.html": {
    "href": "api/Mithril.Apm.Default.Queries.ViewModels.RequestTraceVM.html",
    "title": "Class RequestTraceVM | Mithril API Reference",
    "keywords": "Class RequestTraceVM Namespace Mithril.Apm.Default.Queries.ViewModels Assembly Mithril.Apm.Default.dll RequestTrace VM public class RequestTraceVM Inheritance object RequestTraceVM Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods GenericExtensions.When<TObject>(TObject, bool, Func<TObject, TObject>) ExpandoObjectExtensions.ConvertToExpando(object?) Constructors RequestTraceVM(RequestTrace?) Initializes a new instance of the RequestTraceVM class. public RequestTraceVM(RequestTrace? model) Parameters model RequestTrace The model. Properties DateCreated Gets the date created. public DateTime DateCreated { get; } Property Value DateTime The date created. MetaData Gets the meta data. public List<RequestMetaDataVM> MetaData { get; } Property Value List<RequestMetaDataVM> The meta data. Metrics Gets the metrics. public List<RequestMetricVM> Metrics { get; } Property Value List<RequestMetricVM> The metrics. TraceIdentifier Gets the trace identifier. public string? TraceIdentifier { get; } Property Value string The trace identifier."
  },
  "api/Mithril.Apm.Default.Queries.ViewModels.html": {
    "href": "api/Mithril.Apm.Default.Queries.ViewModels.html",
    "title": "Namespace Mithril.Apm.Default.Queries.ViewModels | Mithril API Reference",
    "keywords": "Namespace Mithril.Apm.Default.Queries.ViewModels Classes RequestMetaDataVM RequestMetaData VM RequestMetricVM RequestMetric VM RequestTraceVM RequestTrace VM"
  },
  "api/Mithril.Apm.Default.Queries.html": {
    "href": "api/Mithril.Apm.Default.Queries.html",
    "title": "Namespace Mithril.Apm.Default.Queries | Mithril API Reference",
    "keywords": "Namespace Mithril.Apm.Default.Queries Classes RequestTraceQuery Request trace query"
  },
  "api/Mithril.Apm.Default.Reporter.MetricsReporter.html": {
    "href": "api/Mithril.Apm.Default.Reporter.MetricsReporter.html",
    "title": "Class MetricsReporter | Mithril API Reference",
    "keywords": "Class MetricsReporter Namespace Mithril.Apm.Default.Reporter Assembly Mithril.Apm.Default.dll Metrics reporter public class MetricsReporter : IMetricsReporter Inheritance object MetricsReporter Implements IMetricsReporter Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods GenericExtensions.When<TObject>(TObject, bool, Func<TObject, TObject>) ExpandoObjectExtensions.ConvertToExpando(object?) Remarks Initializes a new instance of the MetricsReporter class. Constructors MetricsReporter(IDataService?) Metrics reporter public MetricsReporter(IDataService? dataService) Parameters dataService IDataService The data service. Remarks Initializes a new instance of the MetricsReporter class. See Also IMetricsReporter Methods Batch(Dictionary<string, TraceInformation>) Batches the specified data for reporting. public void Batch(Dictionary<string, TraceInformation> data) Parameters data Dictionary<string, TraceInformation> The data. See Also IMetricsReporter"
  },
  "api/Mithril.Apm.Default.Reporter.html": {
    "href": "api/Mithril.Apm.Default.Reporter.html",
    "title": "Namespace Mithril.Apm.Default.Reporter | Mithril API Reference",
    "keywords": "Namespace Mithril.Apm.Default.Reporter Classes MetricsReporter Metrics reporter"
  },
  "api/Mithril.Apm.Default.Services.MetricsCollectorService.html": {
    "href": "api/Mithril.Apm.Default.Services.MetricsCollectorService.html",
    "title": "Class MetricsCollectorService | Mithril API Reference",
    "keywords": "Class MetricsCollectorService Namespace Mithril.Apm.Default.Services Assembly Mithril.Apm.Default.dll Metrics collector service public class MetricsCollectorService : IMetricsCollectorService, IObserver<MetricsEntry>, IObserver<MetaDataEntry>, IDisposable Inheritance object MetricsCollectorService Implements IMetricsCollectorService IObserver<MetricsEntry> IObserver<MetaDataEntry> IDisposable Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods GenericExtensions.When<TObject>(TObject, bool, Func<TObject, TObject>) ExpandoObjectExtensions.ConvertToExpando(object?) Constructors MetricsCollectorService(IFeatureManager?, IEnumerable<IMetricsCollector>, IEnumerable<IMetricsReporter>, IEnumerable<IMetaDataCollector>, IEnumerable<IEventListener>, ILogger<MetricsCollectorService>?) Initializes a new instance of the MetricsCollectorService class. public MetricsCollectorService(IFeatureManager? featureManager, IEnumerable<IMetricsCollector> sources, IEnumerable<IMetricsReporter> metricsReporters, IEnumerable<IMetaDataCollector> traceDataCollectors, IEnumerable<IEventListener> eventListeners, ILogger<MetricsCollectorService>? logger) Parameters featureManager IFeatureManager The feature manager. sources IEnumerable<IMetricsCollector> The sources. metricsReporters IEnumerable<IMetricsReporter> The metrics reporters. traceDataCollectors IEnumerable<IMetaDataCollector> The trace data collectors. eventListeners IEnumerable<IEventListener> The event listeners. logger ILogger<MetricsCollectorService> The logger. Methods BatchCollectedMetrics() Reports the collected metrics to the registered reporters. public IMetricsCollectorService BatchCollectedMetrics() Returns IMetricsCollectorService This. Dispose() Releases unmanaged and - optionally - managed resources. public void Dispose() Dispose(bool) Releases unmanaged and - optionally - managed resources. protected virtual void Dispose(bool disposing) Parameters disposing bool true to release both managed and unmanaged resources; false to release only unmanaged resources. ~MetricsCollectorService() Finalizes an instance of the MetricsCollectorService class. protected ~MetricsCollectorService() GetMetaDataCollector(string) Gets the trace data collector. public IMetaDataCollector? GetMetaDataCollector(string name) Parameters name string The name. Returns IMetaDataCollector The trace data collector specified. GetMetricsCollector(string) Gets the source specified. public IMetricsCollector? GetMetricsCollector(string name) Parameters name string The name. Returns IMetricsCollector The metric source object specified. OnCompleted() Notifies the observer that the provider has finished sending push-based notifications. public void OnCompleted() OnError(Exception) Notifies the observer that the provider has experienced an error condition. public void OnError(Exception error) Parameters error Exception An object that provides additional information about the error. OnNext(MetaDataEntry) Provides the observer with new data. public void OnNext(MetaDataEntry value) Parameters value MetaDataEntry The current notification information. OnNext(MetricsEntry) Provides the observer with new data. public void OnNext(MetricsEntry value) Parameters value MetricsEntry The current notification information. See Also IMetricsCollectorService"
  },
  "api/Mithril.Apm.Default.Services.html": {
    "href": "api/Mithril.Apm.Default.Services.html",
    "title": "Namespace Mithril.Apm.Default.Services | Mithril API Reference",
    "keywords": "Namespace Mithril.Apm.Default.Services Classes MetricsCollectorService Metrics collector service"
  },
  "api/Mithril.Apm.Default.html": {
    "href": "api/Mithril.Apm.Default.html",
    "title": "Namespace Mithril.Apm.Default | Mithril API Reference",
    "keywords": "Namespace Mithril.Apm.Default Classes DefaultApmModule Default APM Module"
  },
  "api/Mithril.Background.Abstractions.Frequencies.RunEvery.html": {
    "href": "api/Mithril.Background.Abstractions.Frequencies.RunEvery.html",
    "title": "Class RunEvery | Mithril API Reference",
    "keywords": "Class RunEvery Namespace Mithril.Background.Abstractions.Frequencies Assembly Mithril.Background.Abstractions.dll Run every X amount of time based on TimeSpan public class RunEvery : IFrequency Inheritance object RunEvery Implements IFrequency Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods GenericExtensions.When<TObject>(TObject, bool, Func<TObject, TObject>) ExpandoObjectExtensions.ConvertToExpando(object?) Remarks Initializes a new instance of the RunEvery class. Constructors RunEvery(TimeSpan) Run every X amount of time based on TimeSpan public RunEvery(TimeSpan timeSpan) Parameters timeSpan TimeSpan The time span. Remarks Initializes a new instance of the RunEvery class. See Also IFrequency Methods CanRun(DateTime, DateTime) Determines whether this instance can run based on the specified last run time. public bool CanRun(DateTime lastRunTime, DateTime currentTime) Parameters lastRunTime DateTime The last run time. currentTime DateTime The current time. Returns bool true if this instance can run the specified last run time; otherwise, false. See Also IFrequency"
  },
  "api/Mithril.Background.Abstractions.Frequencies.RunOnce.html": {
    "href": "api/Mithril.Background.Abstractions.Frequencies.RunOnce.html",
    "title": "Class RunOnce | Mithril API Reference",
    "keywords": "Class RunOnce Namespace Mithril.Background.Abstractions.Frequencies Assembly Mithril.Background.Abstractions.dll Run once public class RunOnce : IFrequency Inheritance object RunOnce Implements IFrequency Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods GenericExtensions.When<TObject>(TObject, bool, Func<TObject, TObject>) ExpandoObjectExtensions.ConvertToExpando(object?) Methods CanRun(DateTime, DateTime) Determines whether this instance can run based on the specified last run time. public bool CanRun(DateTime lastRunTime, DateTime currentTime) Parameters lastRunTime DateTime The last run time. currentTime DateTime The current time. Returns bool true if this instance can run the specified last run time; otherwise, false. See Also IFrequency"
  },
  "api/Mithril.Background.Abstractions.Frequencies.html": {
    "href": "api/Mithril.Background.Abstractions.Frequencies.html",
    "title": "Namespace Mithril.Background.Abstractions.Frequencies | Mithril API Reference",
    "keywords": "Namespace Mithril.Background.Abstractions.Frequencies Classes RunEvery Run every X amount of time based on TimeSpan RunOnce Run once"
  },
  "api/Mithril.Background.Abstractions.Interfaces.IBackgroundTask.html": {
    "href": "api/Mithril.Background.Abstractions.Interfaces.IBackgroundTask.html",
    "title": "Interface IBackgroundTask | Mithril API Reference",
    "keywords": "Interface IBackgroundTask Namespace Mithril.Background.Abstractions.Interfaces Assembly Mithril.Background.Abstractions.dll Background task public interface IBackgroundTask Extension Methods GenericExtensions.When<TObject>(TObject, bool, Func<TObject, TObject>) ExpandoObjectExtensions.ConvertToExpando(object?) Properties Name Gets the name. string Name { get; } Property Value string The name. Methods ExecuteAsync() Executes this instance. Task ExecuteAsync() Returns Task Async task."
  },
  "api/Mithril.Background.Abstractions.Interfaces.IFrequency.html": {
    "href": "api/Mithril.Background.Abstractions.Interfaces.IFrequency.html",
    "title": "Interface IFrequency | Mithril API Reference",
    "keywords": "Interface IFrequency Namespace Mithril.Background.Abstractions.Interfaces Assembly Mithril.Background.Abstractions.dll Frequency interface public interface IFrequency Extension Methods GenericExtensions.When<TObject>(TObject, bool, Func<TObject, TObject>) ExpandoObjectExtensions.ConvertToExpando(object?) Methods CanRun(DateTime, DateTime) Determines whether this instance can run based on the specified last run time. bool CanRun(DateTime lastRunTime, DateTime currentTime) Parameters lastRunTime DateTime The last run time. currentTime DateTime The current time. Returns bool true if this instance can run the specified last run time; otherwise, false."
  },
  "api/Mithril.Background.Abstractions.Interfaces.IScheduledTask.html": {
    "href": "api/Mithril.Background.Abstractions.Interfaces.IScheduledTask.html",
    "title": "Interface IScheduledTask | Mithril API Reference",
    "keywords": "Interface IScheduledTask Namespace Mithril.Background.Abstractions.Interfaces Assembly Mithril.Background.Abstractions.dll Scheduled background task public interface IScheduledTask : IBackgroundTask Inherited Members IBackgroundTask.Name IBackgroundTask.ExecuteAsync() Extension Methods GenericExtensions.When<TObject>(TObject, bool, Func<TObject, TObject>) ExpandoObjectExtensions.ConvertToExpando(object?) Properties Frequencies Gets the frequencies that the task is run at. IFrequency[] Frequencies { get; } Property Value IFrequency[] The frequencies the task is run at. LastRunTime Gets the last run time. DateTime LastRunTime { get; set; } Property Value DateTime The last run time. See Also IBackgroundTask"
  },
  "api/Mithril.Background.Abstractions.Interfaces.html": {
    "href": "api/Mithril.Background.Abstractions.Interfaces.html",
    "title": "Namespace Mithril.Background.Abstractions.Interfaces | Mithril API Reference",
    "keywords": "Namespace Mithril.Background.Abstractions.Interfaces Interfaces IBackgroundTask Background task IFrequency Frequency interface IScheduledTask Scheduled background task"
  },
  "api/Mithril.Background.Abstractions.Services.BackgroundTaskServiceBaseClass.html": {
    "href": "api/Mithril.Background.Abstractions.Services.BackgroundTaskServiceBaseClass.html",
    "title": "Class BackgroundTaskServiceBaseClass | Mithril API Reference",
    "keywords": "Class BackgroundTaskServiceBaseClass Namespace Mithril.Background.Abstractions.Services Assembly Mithril.Background.Abstractions.dll Background task service base class public abstract class BackgroundTaskServiceBaseClass : IBackgroundTaskService, IDisposable Inheritance object BackgroundTaskServiceBaseClass Implements IBackgroundTaskService IDisposable Derived BackgroundTaskService Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods GenericExtensions.When<TObject>(TObject, bool, Func<TObject, TObject>) ExpandoObjectExtensions.ConvertToExpando(object?) Constructors BackgroundTaskServiceBaseClass(IEnumerable<IScheduledTask>) Initializes a new instance of the BackgroundTaskServiceBaseClass class. protected BackgroundTaskServiceBaseClass(IEnumerable<IScheduledTask> scheduledTasks) Parameters scheduledTasks IEnumerable<IScheduledTask> The scheduled tasks. Properties ScheduledTaskTimer Gets the scheduled task timer. protected Timer? ScheduledTaskTimer { get; } Property Value Timer The scheduled task timer. ScheduledTasks Gets the scheduled tasks. protected IEnumerable<IScheduledTask> ScheduledTasks { get; } Property Value IEnumerable<IScheduledTask> The scheduled tasks. Tasks Gets or sets the tasks. protected Queue<IBackgroundTask> Tasks { get; } Property Value Queue<IBackgroundTask> The tasks. Methods Dispose() Performs application-defined tasks associated with freeing, releasing, or resetting unmanaged resources. public void Dispose() Dispose(bool) Releases unmanaged and - optionally - managed resources. protected virtual void Dispose(bool managed) Parameters managed bool true to release both managed and unmanaged resources; false to release only unmanaged resources. Enqueue(params IBackgroundTask[]) Enqueues the specified task. public IBackgroundTaskService Enqueue(params IBackgroundTask[] tasks) Parameters tasks IBackgroundTask[] Returns IBackgroundTaskService This. ExecuteAsync() Executes any queued background tasks. public abstract Task ExecuteAsync() Returns Task Async task See Also IBackgroundTaskService"
  },
  "api/Mithril.Background.Abstractions.Services.IBackgroundTaskService.html": {
    "href": "api/Mithril.Background.Abstractions.Services.IBackgroundTaskService.html",
    "title": "Interface IBackgroundTaskService | Mithril API Reference",
    "keywords": "Interface IBackgroundTaskService Namespace Mithril.Background.Abstractions.Services Assembly Mithril.Background.Abstractions.dll Background processing service public interface IBackgroundTaskService : IDisposable Inherited Members IDisposable.Dispose() Extension Methods GenericExtensions.When<TObject>(TObject, bool, Func<TObject, TObject>) ExpandoObjectExtensions.ConvertToExpando(object?) Methods Enqueue(params IBackgroundTask[]) Enqueues the specified task. IBackgroundTaskService Enqueue(params IBackgroundTask[] tasks) Parameters tasks IBackgroundTask[] The tasks. Returns IBackgroundTaskService This. ExecuteAsync() Executes any queued background tasks. Task ExecuteAsync() Returns Task Async task"
  },
  "api/Mithril.Background.Abstractions.Services.html": {
    "href": "api/Mithril.Background.Abstractions.Services.html",
    "title": "Namespace Mithril.Background.Abstractions.Services | Mithril API Reference",
    "keywords": "Namespace Mithril.Background.Abstractions.Services Classes BackgroundTaskServiceBaseClass Background task service base class Interfaces IBackgroundTaskService Background processing service"
  },
  "api/Mithril.Background.Default.BackgroundModule.html": {
    "href": "api/Mithril.Background.Default.BackgroundModule.html",
    "title": "Class BackgroundModule | Mithril API Reference",
    "keywords": "Class BackgroundModule Namespace Mithril.Background.Default Assembly Mithril.Background.Default.dll Background module public class BackgroundModule : ModuleBaseClass<BackgroundModule>, IEquatable<BackgroundModule>, IModule Inheritance object ModuleBaseClass<BackgroundModule> BackgroundModule Implements IEquatable<BackgroundModule> IModule Inherited Members ModuleBaseClass<BackgroundModule>.Category ModuleBaseClass<BackgroundModule>.ContentPath ModuleBaseClass<BackgroundModule>.Features ModuleBaseClass<BackgroundModule>.ID ModuleBaseClass<BackgroundModule>.LastModified ModuleBaseClass<BackgroundModule>.Name ModuleBaseClass<BackgroundModule>.Order ModuleBaseClass<BackgroundModule>.Tags ModuleBaseClass<BackgroundModule>.Version ModuleBaseClass<BackgroundModule>.ConfigureApplication(IApplicationBuilder, IConfiguration, IHostEnvironment) ModuleBaseClass<BackgroundModule>.ConfigureHostSettings(IHostBuilder, IConfiguration, IHostEnvironment) ModuleBaseClass<BackgroundModule>.ConfigureLoggingSettings(ILoggingBuilder, IConfiguration, IHostEnvironment) ModuleBaseClass<BackgroundModule>.ConfigureMVC(IMvcBuilder, IConfiguration, IHostEnvironment) ModuleBaseClass<BackgroundModule>.ConfigureRoutes(IEndpointRouteBuilder, IConfiguration, IHostEnvironment) ModuleBaseClass<BackgroundModule>.ConfigureWebHostSettings(IWebHostBuilder, IConfiguration, IHostEnvironment) ModuleBaseClass<BackgroundModule>.Equals(object) ModuleBaseClass<BackgroundModule>.Equals(BackgroundModule) ModuleBaseClass<BackgroundModule>.GetHashCode() ModuleBaseClass<BackgroundModule>.InitializeDataAsync(IDataService, IServiceProvider) ModuleBaseClass<BackgroundModule>.OnStarted() ModuleBaseClass<BackgroundModule>.OnStopped() ModuleBaseClass<BackgroundModule>.OnStopping() object.Equals(object, object) object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods GenericExtensions.When<TObject>(TObject, bool, Func<TObject, TObject>) ExpandoObjectExtensions.ConvertToExpando(object?) Constructors BackgroundModule() Initializes a new instance of the BackgroundModule class. public BackgroundModule() Methods ConfigureServices(IServiceCollection?, IConfiguration?, IHostEnvironment?) Configures the services for the module. public override IServiceCollection? ConfigureServices(IServiceCollection? services, IConfiguration? configuration, IHostEnvironment? environment) Parameters services IServiceCollection The services collection. configuration IConfiguration The configuration. environment IHostEnvironment The environment. Returns IServiceCollection Background module See Also ModuleBaseClass<TModule>"
  },
  "api/Mithril.Background.Default.HostedServices.BackgroundTasksHostedService.html": {
    "href": "api/Mithril.Background.Default.HostedServices.BackgroundTasksHostedService.html",
    "title": "Class BackgroundTasksHostedService | Mithril API Reference",
    "keywords": "Class BackgroundTasksHostedService Namespace Mithril.Background.Default.HostedServices Assembly Mithril.Background.Default.dll Background task hosted service public class BackgroundTasksHostedService : HostedServiceBaseClass<BackgroundTasksHostedService>, IHostedService, IDisposable Inheritance object HostedServiceBaseClass<BackgroundTasksHostedService> BackgroundTasksHostedService Implements IHostedService IDisposable Inherited Members HostedServiceBaseClass<BackgroundTasksHostedService>.Description HostedServiceBaseClass<BackgroundTasksHostedService>.Logger HostedServiceBaseClass<BackgroundTasksHostedService>.Dispose() HostedServiceBaseClass<BackgroundTasksHostedService>.StartAsync(CancellationToken) HostedServiceBaseClass<BackgroundTasksHostedService>.StopAsync(CancellationToken) HostedServiceBaseClass<BackgroundTasksHostedService>.Dispose(bool) object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods GenericExtensions.When<TObject>(TObject, bool, Func<TObject, TObject>) ExpandoObjectExtensions.ConvertToExpando(object?) Remarks Initializes a new instance of the BackgroundTasksHostedService class. Constructors BackgroundTasksHostedService(ILogger<BackgroundTasksHostedService>?, IBackgroundTaskService?) Background task hosted service public BackgroundTasksHostedService(ILogger<BackgroundTasksHostedService>? logger, IBackgroundTaskService? backgroundTaskService) Parameters logger ILogger<BackgroundTasksHostedService> The logger. backgroundTaskService IBackgroundTaskService The background task service. Remarks Initializes a new instance of the BackgroundTasksHostedService class. See Also HostedServiceBaseClass<THostService> Methods DoWorkAsync() Called to run the service. protected override Task DoWorkAsync() Returns Task The async task. See Also HostedServiceBaseClass<THostService>"
  },
  "api/Mithril.Background.Default.HostedServices.html": {
    "href": "api/Mithril.Background.Default.HostedServices.html",
    "title": "Namespace Mithril.Background.Default.HostedServices | Mithril API Reference",
    "keywords": "Namespace Mithril.Background.Default.HostedServices Classes BackgroundTasksHostedService Background task hosted service"
  },
  "api/Mithril.Background.Default.Services.BackgroundTaskService.html": {
    "href": "api/Mithril.Background.Default.Services.BackgroundTaskService.html",
    "title": "Class BackgroundTaskService | Mithril API Reference",
    "keywords": "Class BackgroundTaskService Namespace Mithril.Background.Default.Services Assembly Mithril.Background.Default.dll Background task service public class BackgroundTaskService : BackgroundTaskServiceBaseClass, IBackgroundTaskService, IDisposable Inheritance object BackgroundTaskServiceBaseClass BackgroundTaskService Implements IBackgroundTaskService IDisposable Inherited Members BackgroundTaskServiceBaseClass.ScheduledTasks BackgroundTaskServiceBaseClass.ScheduledTaskTimer BackgroundTaskServiceBaseClass.Tasks BackgroundTaskServiceBaseClass.Dispose() BackgroundTaskServiceBaseClass.Enqueue(params IBackgroundTask[]) BackgroundTaskServiceBaseClass.Dispose(bool) object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods GenericExtensions.When<TObject>(TObject, bool, Func<TObject, TObject>) ExpandoObjectExtensions.ConvertToExpando(object?) Remarks Initializes a new instance of the BackgroundTaskService class. Constructors BackgroundTaskService(IEnumerable<IScheduledTask>?, ILogger<BackgroundTaskService>?) Background task service public BackgroundTaskService(IEnumerable<IScheduledTask>? scheduledTasks, ILogger<BackgroundTaskService>? logger) Parameters scheduledTasks IEnumerable<IScheduledTask> The scheduled tasks. logger ILogger<BackgroundTaskService> The logger. Remarks Initializes a new instance of the BackgroundTaskService class. See Also BackgroundTaskServiceBaseClass Methods ExecuteAsync() Executes any queued background tasks. public override Task ExecuteAsync() Returns Task Background task service See Also BackgroundTaskServiceBaseClass"
  },
  "api/Mithril.Background.Default.Services.html": {
    "href": "api/Mithril.Background.Default.Services.html",
    "title": "Namespace Mithril.Background.Default.Services | Mithril API Reference",
    "keywords": "Namespace Mithril.Background.Default.Services Classes BackgroundTaskService Background task service"
  },
  "api/Mithril.Background.Default.html": {
    "href": "api/Mithril.Background.Default.html",
    "title": "Namespace Mithril.Background.Default | Mithril API Reference",
    "keywords": "Namespace Mithril.Background.Default Classes BackgroundModule Background module"
  },
  "api/Mithril.Caching.InMemory.BackgroundTasks.MemoryCompactionScheduledTask.html": {
    "href": "api/Mithril.Caching.InMemory.BackgroundTasks.MemoryCompactionScheduledTask.html",
    "title": "Class MemoryCompactionScheduledTask | Mithril API Reference",
    "keywords": "Class MemoryCompactionScheduledTask Namespace Mithril.Caching.InMemory.BackgroundTasks Assembly Mithril.Caching.InMemory.dll Memory compaction scheduled task public class MemoryCompactionScheduledTask : IScheduledTask, IBackgroundTask Inheritance object MemoryCompactionScheduledTask Implements IScheduledTask IBackgroundTask Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods GenericExtensions.When<TObject>(TObject, bool, Func<TObject, TObject>) ExpandoObjectExtensions.ConvertToExpando(object?) Remarks Initializes a new instance of the MemoryCompactionScheduledTask class. Constructors MemoryCompactionScheduledTask(Cache?) Memory compaction scheduled task public MemoryCompactionScheduledTask(Cache? memoryCache) Parameters memoryCache Cache The memory cache. Remarks Initializes a new instance of the MemoryCompactionScheduledTask class. See Also IScheduledTask Properties Frequencies Gets the frequencies that the task is run at. public IFrequency[] Frequencies { get; } Property Value IFrequency[] The frequencies the task is run at. LastRunTime Gets the last run time. public DateTime LastRunTime { get; set; } Property Value DateTime The last run time. Name Gets the name. public string Name { get; } Property Value string The name. Methods ExecuteAsync() Executes this instance. public Task ExecuteAsync() Returns Task Async task. See Also IScheduledTask"
  },
  "api/Mithril.Caching.InMemory.BackgroundTasks.html": {
    "href": "api/Mithril.Caching.InMemory.BackgroundTasks.html",
    "title": "Namespace Mithril.Caching.InMemory.BackgroundTasks | Mithril API Reference",
    "keywords": "Namespace Mithril.Caching.InMemory.BackgroundTasks Classes MemoryCompactionScheduledTask Memory compaction scheduled task"
  },
  "api/Mithril.Caching.InMemory.Commands.ClearCacheCommandHandler.html": {
    "href": "api/Mithril.Caching.InMemory.Commands.ClearCacheCommandHandler.html",
    "title": "Class ClearCacheCommandHandler | Mithril API Reference",
    "keywords": "Class ClearCacheCommandHandler Namespace Mithril.Caching.InMemory.Commands Assembly Mithril.Caching.InMemory.dll Clear cache command handler [ApiAuthorize(\"Admin Only\")] public class ClearCacheCommandHandler : ICommandHandler<ClearCacheCommandVM>, ICommandHandler Inheritance object ClearCacheCommandHandler Implements ICommandHandler<ClearCacheCommandVM> ICommandHandler Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods GenericExtensions.When<TObject>(TObject, bool, Func<TObject, TObject>) ExpandoObjectExtensions.ConvertToExpando(object?) Remarks Initializes a new instance of the ClearCacheCommandHandler class. Constructors ClearCacheCommandHandler(Cache?, ILogger<ClearCacheCommandHandler>?) Clear cache command handler public ClearCacheCommandHandler(Cache? memoryCache, ILogger<ClearCacheCommandHandler>? logger) Parameters memoryCache Cache The memory cache. logger ILogger<ClearCacheCommandHandler> The logger. Remarks Initializes a new instance of the ClearCacheCommandHandler class. See Also CommandHandlerBaseClass<TCommand, TViewModel> Properties CommandName Gets the command type accepted. public string CommandName { get; } Property Value string The command type accepted. ContentTypeAccepts Gets the content type accepted by command handler. public string[] ContentTypeAccepts { get; } Property Value string[] The content type accepted by command handler. Features Gets the features associated with this command. public IFeature[] Features { get; } Property Value IFeature[] The features associated with this command. Tags Gets the tags (Used by OpenAPI, etc). public string[] Tags { get; } Property Value string[] The tags (Used by OpenAPI, etc). Version Gets the version (not guaranteed to be used in all query providers, but defaults to \"v1\"). public string? Version { get; } Property Value string The version. ViewModelType Gets the type of the view model it accepts. public Type ViewModelType { get; } Property Value Type The type of the view model it accepts. Methods CanHandle(ICommand) Determines whether this instance can handle the specified command. public bool CanHandle(ICommand command) Parameters command ICommand The command. Returns bool true if this instance can handle the specified command; otherwise, false. CreateAsync(ClearCacheCommandVM?, ClaimsPrincipal) Creates the specified value. public ValueTask<CommandCreationResult?> CreateAsync(ClearCacheCommandVM? value, ClaimsPrincipal user) Parameters value ClearCacheCommandVM The value. user ClaimsPrincipal The user. Returns ValueTask<CommandCreationResult> A command value converted from the view model. HandleCommandAsync(params ICommand[]) Handles the Command. public Task<IEvent[]> HandleCommandAsync(params ICommand[] arg) Parameters arg ICommand[] The argument. Returns Task<IEvent[]> Any events that are spawned by the command. See Also CommandHandlerBaseClass<TCommand, TViewModel>"
  },
  "api/Mithril.Caching.InMemory.Commands.ViewModels.ClearCacheCommandVM.html": {
    "href": "api/Mithril.Caching.InMemory.Commands.ViewModels.ClearCacheCommandVM.html",
    "title": "Class ClearCacheCommandVM | Mithril API Reference",
    "keywords": "Class ClearCacheCommandVM Namespace Mithril.Caching.InMemory.Commands.ViewModels Assembly Mithril.Caching.InMemory.dll Clear cache command. Requires admin access. public class ClearCacheCommandVM Inheritance object ClearCacheCommandVM Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods GenericExtensions.When<TObject>(TObject, bool, Func<TObject, TObject>) ExpandoObjectExtensions.ConvertToExpando(object?) Properties CacheName The name of the cache to clear (built in caches include \"Default\" for basic information and \"Inflatable\" for database queries). public string? CacheName { get; set; } Property Value string The name of the cache (built in caches include \"Default\" for basic information and \"Inflatable\" for database queries)."
  },
  "api/Mithril.Caching.InMemory.Commands.ViewModels.html": {
    "href": "api/Mithril.Caching.InMemory.Commands.ViewModels.html",
    "title": "Namespace Mithril.Caching.InMemory.Commands.ViewModels | Mithril API Reference",
    "keywords": "Namespace Mithril.Caching.InMemory.Commands.ViewModels Classes ClearCacheCommandVM Clear cache command. Requires admin access."
  },
  "api/Mithril.Caching.InMemory.Commands.html": {
    "href": "api/Mithril.Caching.InMemory.Commands.html",
    "title": "Namespace Mithril.Caching.InMemory.Commands | Mithril API Reference",
    "keywords": "Namespace Mithril.Caching.InMemory.Commands Classes ClearCacheCommandHandler Clear cache command handler"
  },
  "api/Mithril.Caching.InMemory.InMemoryCachingModule.html": {
    "href": "api/Mithril.Caching.InMemory.InMemoryCachingModule.html",
    "title": "Class InMemoryCachingModule | Mithril API Reference",
    "keywords": "Class InMemoryCachingModule Namespace Mithril.Caching.InMemory Assembly Mithril.Caching.InMemory.dll In-Memory caching module public class InMemoryCachingModule : ModuleBaseClass<InMemoryCachingModule>, IEquatable<InMemoryCachingModule>, IModule Inheritance object ModuleBaseClass<InMemoryCachingModule> InMemoryCachingModule Implements IEquatable<InMemoryCachingModule> IModule Inherited Members ModuleBaseClass<InMemoryCachingModule>.Category ModuleBaseClass<InMemoryCachingModule>.ContentPath ModuleBaseClass<InMemoryCachingModule>.Features ModuleBaseClass<InMemoryCachingModule>.ID ModuleBaseClass<InMemoryCachingModule>.LastModified ModuleBaseClass<InMemoryCachingModule>.Name ModuleBaseClass<InMemoryCachingModule>.Tags ModuleBaseClass<InMemoryCachingModule>.Version ModuleBaseClass<InMemoryCachingModule>.ConfigureApplication(IApplicationBuilder, IConfiguration, IHostEnvironment) ModuleBaseClass<InMemoryCachingModule>.ConfigureHostSettings(IHostBuilder, IConfiguration, IHostEnvironment) ModuleBaseClass<InMemoryCachingModule>.ConfigureLoggingSettings(ILoggingBuilder, IConfiguration, IHostEnvironment) ModuleBaseClass<InMemoryCachingModule>.ConfigureMVC(IMvcBuilder, IConfiguration, IHostEnvironment) ModuleBaseClass<InMemoryCachingModule>.ConfigureRoutes(IEndpointRouteBuilder, IConfiguration, IHostEnvironment) ModuleBaseClass<InMemoryCachingModule>.ConfigureWebHostSettings(IWebHostBuilder, IConfiguration, IHostEnvironment) ModuleBaseClass<InMemoryCachingModule>.Equals(object) ModuleBaseClass<InMemoryCachingModule>.Equals(InMemoryCachingModule) ModuleBaseClass<InMemoryCachingModule>.GetHashCode() ModuleBaseClass<InMemoryCachingModule>.InitializeDataAsync(IDataService, IServiceProvider) ModuleBaseClass<InMemoryCachingModule>.OnStarted() ModuleBaseClass<InMemoryCachingModule>.OnStopped() ModuleBaseClass<InMemoryCachingModule>.OnStopping() object.Equals(object, object) object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods GenericExtensions.When<TObject>(TObject, bool, Func<TObject, TObject>) ExpandoObjectExtensions.ConvertToExpando(object?) Constructors InMemoryCachingModule() Initializes a new instance of the InMemoryCachingModule class. public InMemoryCachingModule() Properties Order Gets the order that they are initialized in. public override int Order { get; protected set; } Property Value int The order that they are initialized in. Methods ConfigureServices(IServiceCollection?, IConfiguration?, IHostEnvironment?) Configures the services for the module. public override IServiceCollection? ConfigureServices(IServiceCollection? services, IConfiguration? configuration, IHostEnvironment? environment) Parameters services IServiceCollection The services collection. configuration IConfiguration The configuration. environment IHostEnvironment The environment. Returns IServiceCollection In-Memory caching module See Also ModuleBaseClass<TModule>"
  },
  "api/Mithril.Caching.InMemory.html": {
    "href": "api/Mithril.Caching.InMemory.html",
    "title": "Namespace Mithril.Caching.InMemory | Mithril API Reference",
    "keywords": "Namespace Mithril.Caching.InMemory Classes InMemoryCachingModule In-Memory caching module"
  },
  "api/Mithril.Communication.Abstractions.Attachment.html": {
    "href": "api/Mithril.Communication.Abstractions.Attachment.html",
    "title": "Class Attachment | Mithril API Reference",
    "keywords": "Class Attachment Namespace Mithril.Communication.Abstractions Assembly Mithril.Communication.Abstractions.dll Message file attachments public class Attachment : ModelBase<Attachment>, IModel<Attachment>, IModel, IEquatable<IModel>, IEquatable<IModel<Attachment>>, IComparable, IComparable<Attachment>, IEquatable<ModelBase<Attachment>> Inheritance object ModelBase<Attachment> Attachment Implements IModel<Attachment> IModel IEquatable<IModel> IEquatable<IModel<Attachment>> IComparable IComparable<Attachment> IEquatable<ModelBase<Attachment>> Inherited Members ModelBase<Attachment>.Active ModelBase<Attachment>.Creator ModelBase<Attachment>.DateCreated ModelBase<Attachment>.DateModified ModelBase<Attachment>.ID ModelBase<Attachment>.Modifier ModelBase<Attachment>.TenantID ModelBase<Attachment>.All(IDataService) ModelBase<Attachment>.AllActive(IDataService) ModelBase<Attachment>.AllInactive(IDataService) ModelBase<Attachment>.Load(long, IDataService) ModelBase<Attachment>.Query(IDataService) ModelBase<Attachment>.CanBeModifiedBy(ClaimsPrincipal) ModelBase<Attachment>.CanBeViewedBy(ClaimsPrincipal) ModelBase<Attachment>.CompareTo(object) ModelBase<Attachment>.DeleteAsync(IDataService, ClaimsPrincipal, bool) ModelBase<Attachment>.Equals(IModel) ModelBase<Attachment>.Equals(IModel<Attachment>) ModelBase<Attachment>.Equals(ModelBase<Attachment>) ModelBase<Attachment>.SaveAsync(IDataService, ClaimsPrincipal) ModelBase<Attachment>.SetupObject(IDataService, ClaimsPrincipal) ModelBase<Attachment>.SetupObject(IDataService, IUser) ModelBase<Attachment>.SetupObjectAndReturn(IDataService, ClaimsPrincipal) object.Equals(object, object) object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Extension Methods GenericExtensions.When<TObject>(TObject, bool, Func<TObject, TObject>) ExpandoObjectExtensions.ConvertToExpando(object?) Properties Content Gets the content. public byte[] Content { get; } Property Value byte[] The content. FileHash Gets or sets the file hash. [MaxLength(512)] [Required] public string? FileHash { get; set; } Property Value string The file hash. FileName Gets or sets the name of the file. [MaxLength(128)] public string? FileName { get; set; } Property Value string The name of the file. Location Gets or sets the location on disk. [MaxLength(1028)] public string? Location { get; set; } Property Value string The location on disk. MimeType Gets or sets the type of the MIME. [MaxLength(64)] public string? MimeType { get; set; } Property Value string The type of the MIME. Size Gets or sets the size. public long Size { get; set; } Property Value long The size. Methods CompareTo(Attachment?) Compares the object to another object public override int CompareTo(Attachment? other) Parameters other Attachment Object to compare to Returns int 0 if they are equal, -1 if this is smaller, 1 if it is larger Equals(Attachment) Indicates whether the current object is equal to another object of the same type. public bool Equals(Attachment other) Parameters other Attachment An object to compare with this object. Returns bool true if the current object is equal to the other parameter; otherwise, false. Equals(object?) Determines whether the specified object, is equal to this instance. public override bool Equals(object? obj) Parameters obj object The object to compare with this instance. Returns bool true if the specified object is equal to this instance; otherwise, false. GetHashCode() Returns a hash code for this instance. public override int GetHashCode() Returns int A hash code for this instance, suitable for use in hashing algorithms and data structures like a hash table. ToString() Returns a string that represents this instance. public override string ToString() Returns string A string that represents this instance. Operators operator ==(Attachment, Attachment) Implements the operator ==. public static bool operator ==(Attachment first, Attachment second) Parameters first Attachment The first. second Attachment The second. Returns bool The result of the operator. operator >(Attachment, Attachment) Implements the operator >. public static bool operator >(Attachment left, Attachment right) Parameters left Attachment The left. right Attachment The right. Returns bool The result of the operator. operator >=(Attachment, Attachment) Implements the operator >=. public static bool operator >=(Attachment left, Attachment right) Parameters left Attachment The left. right Attachment The right. Returns bool The result of the operator. operator !=(Attachment, Attachment) Implements the operator !=. public static bool operator !=(Attachment left, Attachment right) Parameters left Attachment The left. right Attachment The right. Returns bool The result of the operator. operator <(Attachment, Attachment) Implements the operator <. public static bool operator <(Attachment left, Attachment right) Parameters left Attachment The left. right Attachment The right. Returns bool The result of the operator. operator <=(Attachment, Attachment) Implements the operator <=. public static bool operator <=(Attachment left, Attachment right) Parameters left Attachment The left. right Attachment The right. Returns bool The result of the operator. See Also ModelBase<TClass>"
  },
  "api/Mithril.Communication.Abstractions.BaseClasses.ChannelBaseClass-2.html": {
    "href": "api/Mithril.Communication.Abstractions.BaseClasses.ChannelBaseClass-2.html",
    "title": "Class ChannelBaseClass<TChannel, TMessage> | Mithril API Reference",
    "keywords": "Class ChannelBaseClass<TChannel, TMessage> Namespace Mithril.Communication.Abstractions.BaseClasses Assembly Mithril.Communication.Abstractions.dll Communication channel base class public abstract class ChannelBaseClass<TChannel, TMessage> : IChannel where TChannel : IChannel where TMessage : IMessage, new() Type Parameters TChannel The type of the channel. TMessage The type of the message. Inheritance object ChannelBaseClass<TChannel, TMessage> Implements IChannel Derived EmailChannel Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods GenericExtensions.When<TObject>(TObject, bool, Func<TObject, TObject>) ExpandoObjectExtensions.ConvertToExpando(object?) Constructors ChannelBaseClass(ILogger<TChannel>?, IFeatureManager?) Initializes a new instance of the ChannelBaseClass<TChannel, TMessage> class. protected ChannelBaseClass(ILogger<TChannel>? logger, IFeatureManager? featureManager) Parameters logger ILogger<TChannel> The logger. featureManager IFeatureManager The feature manager. Properties FeatureManager Gets the feature manager. protected IFeatureManager? FeatureManager { get; } Property Value IFeatureManager The feature manager. Logger Gets the logger. protected ILogger<TChannel>? Logger { get; } Property Value ILogger<TChannel> The logger. Name Gets the name. public abstract string Name { get; } Property Value string The name. Methods CanHandle(IMessage?) Determines whether this instance can handle the specified message. public bool CanHandle(IMessage? message) Parameters message IMessage The message. Returns bool true if this instance can handle the specified message; otherwise, false. CreateMessage() Creates a message object. public virtual IMessage CreateMessage() Returns IMessage The message related to the channel. SendMessageAsync(IMessage?) Sends the message asynchronously. public abstract Task<MessageResult> SendMessageAsync(IMessage? message) Parameters message IMessage The message. Returns Task<MessageResult> The message result See Also IChannel"
  },
  "api/Mithril.Communication.Abstractions.BaseClasses.html": {
    "href": "api/Mithril.Communication.Abstractions.BaseClasses.html",
    "title": "Namespace Mithril.Communication.Abstractions.BaseClasses | Mithril API Reference",
    "keywords": "Namespace Mithril.Communication.Abstractions.BaseClasses Classes ChannelBaseClass<TChannel, TMessage> Communication channel base class"
  },
  "api/Mithril.Communication.Abstractions.Commands.SendMessageCommand.html": {
    "href": "api/Mithril.Communication.Abstractions.Commands.SendMessageCommand.html",
    "title": "Class SendMessageCommand | Mithril API Reference",
    "keywords": "Class SendMessageCommand Namespace Mithril.Communication.Abstractions.Commands Assembly Mithril.Communication.Abstractions.dll Send message command public class SendMessageCommand : CommandBaseClass<SendMessageCommand>, IModel<SendMessageCommand>, IEquatable<IModel<SendMessageCommand>>, IComparable, IComparable<SendMessageCommand>, IEquatable<ModelBase<SendMessageCommand>>, ICommand, IEquatable<ICommand>, IModel, IEquatable<IModel>, IEquatable<CommandBaseClass<SendMessageCommand>> Inheritance object ModelBase<SendMessageCommand> CommandBaseClass<SendMessageCommand> SendMessageCommand Implements IModel<SendMessageCommand> IEquatable<IModel<SendMessageCommand>> IComparable IComparable<SendMessageCommand> IEquatable<ModelBase<SendMessageCommand>> ICommand IEquatable<ICommand> IModel IEquatable<IModel> IEquatable<CommandBaseClass<SendMessageCommand>> Inherited Members CommandBaseClass<SendMessageCommand>.Name CommandBaseClass<SendMessageCommand>.CompareTo(CommandBaseClass<SendMessageCommand>) CommandBaseClass<SendMessageCommand>.Equals(CommandBaseClass<SendMessageCommand>) CommandBaseClass<SendMessageCommand>.Equals(ICommand) CommandBaseClass<SendMessageCommand>.ToString() ModelBase<SendMessageCommand>.Active ModelBase<SendMessageCommand>.Creator ModelBase<SendMessageCommand>.DateCreated ModelBase<SendMessageCommand>.DateModified ModelBase<SendMessageCommand>.ID ModelBase<SendMessageCommand>.Modifier ModelBase<SendMessageCommand>.TenantID ModelBase<SendMessageCommand>.All(IDataService) ModelBase<SendMessageCommand>.AllActive(IDataService) ModelBase<SendMessageCommand>.AllInactive(IDataService) ModelBase<SendMessageCommand>.Load(long, IDataService) ModelBase<SendMessageCommand>.Query(IDataService) ModelBase<SendMessageCommand>.CanBeModifiedBy(ClaimsPrincipal) ModelBase<SendMessageCommand>.CanBeViewedBy(ClaimsPrincipal) ModelBase<SendMessageCommand>.CompareTo(object) ModelBase<SendMessageCommand>.DeleteAsync(IDataService, ClaimsPrincipal, bool) ModelBase<SendMessageCommand>.Equals(IModel) ModelBase<SendMessageCommand>.Equals(IModel<SendMessageCommand>) ModelBase<SendMessageCommand>.Equals(ModelBase<SendMessageCommand>) ModelBase<SendMessageCommand>.SaveAsync(IDataService, ClaimsPrincipal) ModelBase<SendMessageCommand>.SetupObject(IDataService, ClaimsPrincipal) ModelBase<SendMessageCommand>.SetupObject(IDataService, IUser) ModelBase<SendMessageCommand>.SetupObjectAndReturn(IDataService, ClaimsPrincipal) object.Equals(object, object) object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Extension Methods GenericExtensions.When<TObject>(TObject, bool, Func<TObject, TObject>) ExpandoObjectExtensions.ConvertToExpando(object?) Constructors SendMessageCommand() Initializes a new instance of the SendMessageCommand class. public SendMessageCommand() SendMessageCommand(IMessage?) Initializes a new instance of the SendMessageCommand class. public SendMessageCommand(IMessage? message) Parameters message IMessage The message. Properties Message Gets the message. public virtual IMessage? Message { get; set; } Property Value IMessage The message. Methods CompareTo(SendMessageCommand?) Compares the object to another object public override int CompareTo(SendMessageCommand? other) Parameters other SendMessageCommand Object to compare to Returns int 0 if they are equal, -1 if this is smaller, 1 if it is larger Equals(SendMessageCommand) Indicates whether the current object is equal to another object of the same type. public bool Equals(SendMessageCommand other) Parameters other SendMessageCommand An object to compare with this object. Returns bool true if the current object is equal to the other parameter; otherwise, false. Equals(object?) Determines whether the specified object, is equal to this instance. public override bool Equals(object? obj) Parameters obj object The object to compare with this instance. Returns bool true if the specified object is equal to this instance; otherwise, false. GetHashCode() Returns a hash code for this instance. public override int GetHashCode() Returns int A hash code for this instance, suitable for use in hashing algorithms and data structures like a hash table. Operators operator ==(SendMessageCommand, SendMessageCommand) Implements the operator ==. public static bool operator ==(SendMessageCommand first, SendMessageCommand second) Parameters first SendMessageCommand The first. second SendMessageCommand The second. Returns bool The result of the operator. operator >(SendMessageCommand, SendMessageCommand) Implements the operator >. public static bool operator >(SendMessageCommand left, SendMessageCommand right) Parameters left SendMessageCommand The left. right SendMessageCommand The right. Returns bool The result of the operator. operator >=(SendMessageCommand, SendMessageCommand) Implements the operator >=. public static bool operator >=(SendMessageCommand left, SendMessageCommand right) Parameters left SendMessageCommand The left. right SendMessageCommand The right. Returns bool The result of the operator. operator !=(SendMessageCommand, SendMessageCommand) Implements the operator !=. public static bool operator !=(SendMessageCommand left, SendMessageCommand right) Parameters left SendMessageCommand The left. right SendMessageCommand The right. Returns bool The result of the operator. operator <(SendMessageCommand, SendMessageCommand) Implements the operator <. public static bool operator <(SendMessageCommand left, SendMessageCommand right) Parameters left SendMessageCommand The left. right SendMessageCommand The right. Returns bool The result of the operator. operator <=(SendMessageCommand, SendMessageCommand) Implements the operator <=. public static bool operator <=(SendMessageCommand left, SendMessageCommand right) Parameters left SendMessageCommand The left. right SendMessageCommand The right. Returns bool The result of the operator. See Also CommandBaseClass<TCommand>"
  },
  "api/Mithril.Communication.Abstractions.Commands.html": {
    "href": "api/Mithril.Communication.Abstractions.Commands.html",
    "title": "Namespace Mithril.Communication.Abstractions.Commands | Mithril API Reference",
    "keywords": "Namespace Mithril.Communication.Abstractions.Commands Classes SendMessageCommand Send message command"
  },
  "api/Mithril.Communication.Abstractions.Events.MessageSentEvent.html": {
    "href": "api/Mithril.Communication.Abstractions.Events.MessageSentEvent.html",
    "title": "Class MessageSentEvent | Mithril API Reference",
    "keywords": "Class MessageSentEvent Namespace Mithril.Communication.Abstractions.Events Assembly Mithril.Communication.Abstractions.dll Message sent event public class MessageSentEvent : EventBaseClass<MessageSentEvent>, IModel<MessageSentEvent>, IEquatable<IModel<MessageSentEvent>>, IComparable, IComparable<MessageSentEvent>, IEquatable<ModelBase<MessageSentEvent>>, IEvent, IEquatable<IEvent>, IModel, IEquatable<IModel>, IEquatable<EventBaseClass<MessageSentEvent>> Inheritance object ModelBase<MessageSentEvent> EventBaseClass<MessageSentEvent> MessageSentEvent Implements IModel<MessageSentEvent> IEquatable<IModel<MessageSentEvent>> IComparable IComparable<MessageSentEvent> IEquatable<ModelBase<MessageSentEvent>> IEvent IEquatable<IEvent> IModel IEquatable<IModel> IEquatable<EventBaseClass<MessageSentEvent>> Inherited Members EventBaseClass<MessageSentEvent>.Name EventBaseClass<MessageSentEvent>.RetryCount EventBaseClass<MessageSentEvent>.State EventBaseClass<MessageSentEvent>.CanRun() EventBaseClass<MessageSentEvent>.CompareTo(EventBaseClass<MessageSentEvent>) EventBaseClass<MessageSentEvent>.Equals(EventBaseClass<MessageSentEvent>) EventBaseClass<MessageSentEvent>.Equals(IEvent) EventBaseClass<MessageSentEvent>.ToString() ModelBase<MessageSentEvent>.Active ModelBase<MessageSentEvent>.Creator ModelBase<MessageSentEvent>.DateCreated ModelBase<MessageSentEvent>.DateModified ModelBase<MessageSentEvent>.ID ModelBase<MessageSentEvent>.Modifier ModelBase<MessageSentEvent>.TenantID ModelBase<MessageSentEvent>.All(IDataService) ModelBase<MessageSentEvent>.AllActive(IDataService) ModelBase<MessageSentEvent>.AllInactive(IDataService) ModelBase<MessageSentEvent>.Load(long, IDataService) ModelBase<MessageSentEvent>.Query(IDataService) ModelBase<MessageSentEvent>.CanBeModifiedBy(ClaimsPrincipal) ModelBase<MessageSentEvent>.CanBeViewedBy(ClaimsPrincipal) ModelBase<MessageSentEvent>.CompareTo(object) ModelBase<MessageSentEvent>.DeleteAsync(IDataService, ClaimsPrincipal, bool) ModelBase<MessageSentEvent>.Equals(IModel) ModelBase<MessageSentEvent>.Equals(IModel<MessageSentEvent>) ModelBase<MessageSentEvent>.Equals(ModelBase<MessageSentEvent>) ModelBase<MessageSentEvent>.SaveAsync(IDataService, ClaimsPrincipal) ModelBase<MessageSentEvent>.SetupObject(IDataService, ClaimsPrincipal) ModelBase<MessageSentEvent>.SetupObject(IDataService, IUser) ModelBase<MessageSentEvent>.SetupObjectAndReturn(IDataService, ClaimsPrincipal) object.Equals(object, object) object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Extension Methods GenericExtensions.When<TObject>(TObject, bool, Func<TObject, TObject>) ExpandoObjectExtensions.ConvertToExpando(object?) Constructors MessageSentEvent() Initializes a new instance of the MessageSentEvent class. public MessageSentEvent() MessageSentEvent(IMessage?, string?) Initializes a new instance of the MessageSentEvent class. public MessageSentEvent(IMessage? message, string? status) Parameters message IMessage The message. status string The status. Properties Message Gets or sets the message. public virtual IMessage? Message { get; set; } Property Value IMessage The message. Status Gets or sets the status. [MaxLength(128)] public string? Status { get; set; } Property Value string The status. Methods CompareTo(MessageSentEvent?) Compares the object to another object public override int CompareTo(MessageSentEvent? other) Parameters other MessageSentEvent Object to compare to Returns int 0 if they are equal, -1 if this is smaller, 1 if it is larger Equals(MessageSentEvent) Indicates whether the current object is equal to another object of the same type. public bool Equals(MessageSentEvent other) Parameters other MessageSentEvent An object to compare with this object. Returns bool true if the current object is equal to the other parameter; otherwise, false. Equals(object?) Determines whether the specified object, is equal to this instance. public override bool Equals(object? obj) Parameters obj object The object to compare with this instance. Returns bool true if the specified object is equal to this instance; otherwise, false. GetData() Gets the data within the event. public override ExpandoObject GetData() Returns ExpandoObject The data from the event. GetHashCode() Returns a hash code for this instance. public override int GetHashCode() Returns int A hash code for this instance, suitable for use in hashing algorithms and data structures like a hash table. GetSchema() Gets the schema. public override string GetSchema() Returns string The data schema. Operators operator ==(MessageSentEvent, MessageSentEvent) Implements the operator ==. public static bool operator ==(MessageSentEvent first, MessageSentEvent second) Parameters first MessageSentEvent The first. second MessageSentEvent The second. Returns bool The result of the operator. operator >(MessageSentEvent, MessageSentEvent) Implements the operator >. public static bool operator >(MessageSentEvent left, MessageSentEvent right) Parameters left MessageSentEvent The left. right MessageSentEvent The right. Returns bool The result of the operator. operator >=(MessageSentEvent, MessageSentEvent) Implements the operator >=. public static bool operator >=(MessageSentEvent left, MessageSentEvent right) Parameters left MessageSentEvent The left. right MessageSentEvent The right. Returns bool The result of the operator. operator !=(MessageSentEvent, MessageSentEvent) Implements the operator !=. public static bool operator !=(MessageSentEvent left, MessageSentEvent right) Parameters left MessageSentEvent The left. right MessageSentEvent The right. Returns bool The result of the operator. operator <(MessageSentEvent, MessageSentEvent) Implements the operator <. public static bool operator <(MessageSentEvent left, MessageSentEvent right) Parameters left MessageSentEvent The left. right MessageSentEvent The right. Returns bool The result of the operator. operator <=(MessageSentEvent, MessageSentEvent) Implements the operator <=. public static bool operator <=(MessageSentEvent left, MessageSentEvent right) Parameters left MessageSentEvent The left. right MessageSentEvent The right. Returns bool The result of the operator. See Also EventBaseClass<TEvent>"
  },
  "api/Mithril.Communication.Abstractions.Events.html": {
    "href": "api/Mithril.Communication.Abstractions.Events.html",
    "title": "Namespace Mithril.Communication.Abstractions.Events | Mithril API Reference",
    "keywords": "Namespace Mithril.Communication.Abstractions.Events Classes MessageSentEvent Message sent event"
  },
  "api/Mithril.Communication.Abstractions.Interfaces.IChannel.html": {
    "href": "api/Mithril.Communication.Abstractions.Interfaces.IChannel.html",
    "title": "Interface IChannel | Mithril API Reference",
    "keywords": "Interface IChannel Namespace Mithril.Communication.Abstractions.Interfaces Assembly Mithril.Communication.Abstractions.dll Communication channel public interface IChannel Extension Methods GenericExtensions.When<TObject>(TObject, bool, Func<TObject, TObject>) ExpandoObjectExtensions.ConvertToExpando(object?) Properties Name Gets the name. string Name { get; } Property Value string The name. Methods CanHandle(IMessage?) Determines whether this instance can handle the specified message. bool CanHandle(IMessage? message) Parameters message IMessage The message. Returns bool true if this instance can handle the specified message; otherwise, false. CreateMessage() Creates a message object. IMessage CreateMessage() Returns IMessage The message related to the channel. SendMessageAsync(IMessage?) Sends the message asynchronously. Task<MessageResult> SendMessageAsync(IMessage? message) Parameters message IMessage The message. Returns Task<MessageResult> The message result"
  },
  "api/Mithril.Communication.Abstractions.Interfaces.IMessage.html": {
    "href": "api/Mithril.Communication.Abstractions.Interfaces.IMessage.html",
    "title": "Interface IMessage | Mithril API Reference",
    "keywords": "Interface IMessage Namespace Mithril.Communication.Abstractions.Interfaces Assembly Mithril.Communication.Abstractions.dll Message interface public interface IMessage : IModel, IEquatable<IModel> Inherited Members IModel.Active IModel.Creator IModel.DateCreated IModel.DateModified IModel.ID IModel.Modifier IModel.TenantID IModel.CanBeModifiedBy(ClaimsPrincipal) IModel.CanBeViewedBy(ClaimsPrincipal) IModel.DeleteAsync(IDataService, ClaimsPrincipal, bool) IModel.SaveAsync(IDataService, ClaimsPrincipal) IModel.SetupObject(IDataService, ClaimsPrincipal) IModel.SetupObject(IDataService, IUser) IEquatable<IModel>.Equals(IModel) Extension Methods GenericExtensions.When<TObject>(TObject, bool, Func<TObject, TObject>) ExpandoObjectExtensions.ConvertToExpando(object?) Properties Application Gets or sets the application the message originated from. [MaxLength(64)] string? Application { get; set; } Property Value string The application the message originated from. Attachments Gets or sets the attachments. IList<Attachment?> Attachments { get; set; } Property Value IList<Attachment> The attachments. BCC Gets or sets the BCC. [MaxLength] string? BCC { get; set; } Property Value string The BCC. Body Gets or sets the body. [MaxLength] string? Body { get; set; } Property Value string The body. CC Gets or sets the cc. [MaxLength] string? CC { get; set; } Property Value string The cc. From Gets or sets from. [Required] [MinLength(1)] [MaxLength(128)] string? From { get; set; } Property Value string From. Subject Gets or sets the subject. [Required] [MinLength(1)] [MaxLength(256)] string? Subject { get; set; } Property Value string The subject. Template Gets or sets the template. [MaxLength(128)] string? Template { get; set; } Property Value string The template. TemplateData Gets or sets the template data (JSON). [MaxLength] string? TemplateData { get; set; } Property Value string The template data in JSON format. TemplateFields Gets or sets the template data. ExpandoObject? TemplateFields { get; } Property Value ExpandoObject The template data. To Gets or sets to. [Required] [MinLength(1)] [MaxLength] string? To { get; set; } Property Value string To."
  },
  "api/Mithril.Communication.Abstractions.Interfaces.IMessageTemplate.html": {
    "href": "api/Mithril.Communication.Abstractions.Interfaces.IMessageTemplate.html",
    "title": "Interface IMessageTemplate | Mithril API Reference",
    "keywords": "Interface IMessageTemplate Namespace Mithril.Communication.Abstractions.Interfaces Assembly Mithril.Communication.Abstractions.dll Message template public interface IMessageTemplate : IModel, IEquatable<IModel> Inherited Members IModel.Active IModel.Creator IModel.DateCreated IModel.DateModified IModel.ID IModel.Modifier IModel.TenantID IModel.CanBeModifiedBy(ClaimsPrincipal) IModel.CanBeViewedBy(ClaimsPrincipal) IModel.DeleteAsync(IDataService, ClaimsPrincipal, bool) IModel.SaveAsync(IDataService, ClaimsPrincipal) IModel.SetupObject(IDataService, ClaimsPrincipal) IModel.SetupObject(IDataService, IUser) IEquatable<IModel>.Equals(IModel) Extension Methods GenericExtensions.When<TObject>(TObject, bool, Func<TObject, TObject>) ExpandoObjectExtensions.ConvertToExpando(object?) Properties DisplayName Gets or sets the display name. string? DisplayName { get; set; } Property Value string The display name. Methods GetContent(IHostEnvironment?) Gets the content. string GetContent(IHostEnvironment? hostingEnvironment) Parameters hostingEnvironment IHostEnvironment The hosting environment. Returns string The content SetContent(IHostEnvironment?, string) Sets the content. IMessageTemplate SetContent(IHostEnvironment? hostingEnvironment, string content) Parameters hostingEnvironment IHostEnvironment The hosting environment. content string The content. Returns IMessageTemplate Message template"
  },
  "api/Mithril.Communication.Abstractions.Interfaces.html": {
    "href": "api/Mithril.Communication.Abstractions.Interfaces.html",
    "title": "Namespace Mithril.Communication.Abstractions.Interfaces | Mithril API Reference",
    "keywords": "Namespace Mithril.Communication.Abstractions.Interfaces Interfaces IChannel Communication channel IMessage Message interface IMessageTemplate Message template"
  },
  "api/Mithril.Communication.Abstractions.Mappings.AttachmentMapping.html": {
    "href": "api/Mithril.Communication.Abstractions.Mappings.AttachmentMapping.html",
    "title": "Class AttachmentMapping | Mithril API Reference",
    "keywords": "Class AttachmentMapping Namespace Mithril.Communication.Abstractions.Mappings Assembly Mithril.Communication.Abstractions.dll Attachment mapping public class AttachmentMapping : MappingBaseClass<Attachment, DefaultDatabase>, IMapping<Attachment>, IMapping Inheritance object MappingBaseClass<Attachment, DefaultDatabase> AttachmentMapping Implements IMapping<Attachment> IMapping Inherited Members MappingBaseClass<Attachment, DefaultDatabase>.AddAutoKey() MappingBaseClass<Attachment, DefaultDatabase>.ContainsProperty(string) MappingBaseClass<Attachment, DefaultDatabase>.Copy(IMapping) MappingBaseClass<Attachment, DefaultDatabase>.CopyProperty(IIDProperty) MappingBaseClass<Attachment, DefaultDatabase>.CopyProperty(IProperty) MappingBaseClass<Attachment, DefaultDatabase>.CopyProperty(IMapProperty) MappingBaseClass<Attachment, DefaultDatabase>.CopyProperty(IManyToOneProperty) MappingBaseClass<Attachment, DefaultDatabase>.CopyProperty(IManyToManyProperty) MappingBaseClass<Attachment, DefaultDatabase>.Equals(object) MappingBaseClass<Attachment, DefaultDatabase>.GetColumnName(string) MappingBaseClass<Attachment, DefaultDatabase>.GetHashCode() MappingBaseClass<Attachment, DefaultDatabase>.ID<TDataType>(Expression<Func<Attachment, TDataType>>) MappingBaseClass<Attachment, DefaultDatabase>.ManyToMany<TDataType>(Expression<Func<Attachment, IList<TDataType>>>) MappingBaseClass<Attachment, DefaultDatabase>.ManyToOne<TDataType>(Expression<Func<Attachment, IList<TDataType>>>) MappingBaseClass<Attachment, DefaultDatabase>.ManyToOne<TDataType>(Expression<Func<Attachment, TDataType>>) MappingBaseClass<Attachment, DefaultDatabase>.Map<TDataType>(Expression<Func<Attachment, TDataType>>) MappingBaseClass<Attachment, DefaultDatabase>.Reduce(ILogger) MappingBaseClass<Attachment, DefaultDatabase>.Reduce(IMapping, ILogger) MappingBaseClass<Attachment, DefaultDatabase>.Reference<TDataType>(Expression<Func<Attachment, TDataType>>) MappingBaseClass<Attachment, DefaultDatabase>.SetQuery(QueryType, string, CommandType, params IParameter[]) MappingBaseClass<Attachment, DefaultDatabase>.Setup() MappingBaseClass<Attachment, DefaultDatabase>.ToString() MappingBaseClass<Attachment, DefaultDatabase>.AutoIDProperties MappingBaseClass<Attachment, DefaultDatabase>.DatabaseConfigType MappingBaseClass<Attachment, DefaultDatabase>.IDProperties MappingBaseClass<Attachment, DefaultDatabase>.ManyToManyProperties MappingBaseClass<Attachment, DefaultDatabase>.ManyToOneProperties MappingBaseClass<Attachment, DefaultDatabase>.MapProperties MappingBaseClass<Attachment, DefaultDatabase>.Merge MappingBaseClass<Attachment, DefaultDatabase>.ObjectType MappingBaseClass<Attachment, DefaultDatabase>.Order MappingBaseClass<Attachment, DefaultDatabase>.Prefix MappingBaseClass<Attachment, DefaultDatabase>.Queries MappingBaseClass<Attachment, DefaultDatabase>.ReferenceProperties MappingBaseClass<Attachment, DefaultDatabase>.SchemaName MappingBaseClass<Attachment, DefaultDatabase>.Suffix MappingBaseClass<Attachment, DefaultDatabase>.TableName object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods GenericExtensions.When<TObject>(TObject, bool, Func<TObject, TObject>) ExpandoObjectExtensions.ConvertToExpando(object?) Constructors AttachmentMapping() Initializes a new instance of the AttachmentMapping class. public AttachmentMapping() See Also MappingBaseClass<TClassType, TDatabaseType>"
  },
  "api/Mithril.Communication.Abstractions.Mappings.IMessageMapping.html": {
    "href": "api/Mithril.Communication.Abstractions.Mappings.IMessageMapping.html",
    "title": "Class IMessageMapping | Mithril API Reference",
    "keywords": "Class IMessageMapping Namespace Mithril.Communication.Abstractions.Mappings Assembly Mithril.Communication.Abstractions.dll Message interface mapping public class IMessageMapping : MappingBaseClass<IMessage, DefaultDatabase>, IMapping<IMessage>, IMapping Inheritance object MappingBaseClass<IMessage, DefaultDatabase> IMessageMapping Implements IMapping<IMessage> IMapping Inherited Members MappingBaseClass<IMessage, DefaultDatabase>.AddAutoKey() MappingBaseClass<IMessage, DefaultDatabase>.ContainsProperty(string) MappingBaseClass<IMessage, DefaultDatabase>.Copy(IMapping) MappingBaseClass<IMessage, DefaultDatabase>.CopyProperty(IIDProperty) MappingBaseClass<IMessage, DefaultDatabase>.CopyProperty(IProperty) MappingBaseClass<IMessage, DefaultDatabase>.CopyProperty(IMapProperty) MappingBaseClass<IMessage, DefaultDatabase>.CopyProperty(IManyToOneProperty) MappingBaseClass<IMessage, DefaultDatabase>.CopyProperty(IManyToManyProperty) MappingBaseClass<IMessage, DefaultDatabase>.Equals(object) MappingBaseClass<IMessage, DefaultDatabase>.GetColumnName(string) MappingBaseClass<IMessage, DefaultDatabase>.GetHashCode() MappingBaseClass<IMessage, DefaultDatabase>.ID<TDataType>(Expression<Func<IMessage, TDataType>>) MappingBaseClass<IMessage, DefaultDatabase>.ManyToMany<TDataType>(Expression<Func<IMessage, IList<TDataType>>>) MappingBaseClass<IMessage, DefaultDatabase>.ManyToOne<TDataType>(Expression<Func<IMessage, IList<TDataType>>>) MappingBaseClass<IMessage, DefaultDatabase>.ManyToOne<TDataType>(Expression<Func<IMessage, TDataType>>) MappingBaseClass<IMessage, DefaultDatabase>.Map<TDataType>(Expression<Func<IMessage, TDataType>>) MappingBaseClass<IMessage, DefaultDatabase>.Reduce(ILogger) MappingBaseClass<IMessage, DefaultDatabase>.Reduce(IMapping, ILogger) MappingBaseClass<IMessage, DefaultDatabase>.Reference<TDataType>(Expression<Func<IMessage, TDataType>>) MappingBaseClass<IMessage, DefaultDatabase>.SetQuery(QueryType, string, CommandType, params IParameter[]) MappingBaseClass<IMessage, DefaultDatabase>.Setup() MappingBaseClass<IMessage, DefaultDatabase>.ToString() MappingBaseClass<IMessage, DefaultDatabase>.AutoIDProperties MappingBaseClass<IMessage, DefaultDatabase>.DatabaseConfigType MappingBaseClass<IMessage, DefaultDatabase>.IDProperties MappingBaseClass<IMessage, DefaultDatabase>.ManyToManyProperties MappingBaseClass<IMessage, DefaultDatabase>.ManyToOneProperties MappingBaseClass<IMessage, DefaultDatabase>.MapProperties MappingBaseClass<IMessage, DefaultDatabase>.Merge MappingBaseClass<IMessage, DefaultDatabase>.ObjectType MappingBaseClass<IMessage, DefaultDatabase>.Order MappingBaseClass<IMessage, DefaultDatabase>.Prefix MappingBaseClass<IMessage, DefaultDatabase>.Queries MappingBaseClass<IMessage, DefaultDatabase>.ReferenceProperties MappingBaseClass<IMessage, DefaultDatabase>.SchemaName MappingBaseClass<IMessage, DefaultDatabase>.Suffix MappingBaseClass<IMessage, DefaultDatabase>.TableName object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods GenericExtensions.When<TObject>(TObject, bool, Func<TObject, TObject>) ExpandoObjectExtensions.ConvertToExpando(object?) Constructors IMessageMapping() Initializes a new instance of the IMessageMapping class. public IMessageMapping() See Also MappingBaseClass<TClassType, TDatabaseType>"
  },
  "api/Mithril.Communication.Abstractions.Mappings.MessageSentEventMapping.html": {
    "href": "api/Mithril.Communication.Abstractions.Mappings.MessageSentEventMapping.html",
    "title": "Class MessageSentEventMapping | Mithril API Reference",
    "keywords": "Class MessageSentEventMapping Namespace Mithril.Communication.Abstractions.Mappings Assembly Mithril.Communication.Abstractions.dll Message sent event mapping public class MessageSentEventMapping : MappingBaseClass<MessageSentEvent, DefaultDatabase>, IMapping<MessageSentEvent>, IMapping Inheritance object MappingBaseClass<MessageSentEvent, DefaultDatabase> MessageSentEventMapping Implements IMapping<MessageSentEvent> IMapping Inherited Members MappingBaseClass<MessageSentEvent, DefaultDatabase>.AddAutoKey() MappingBaseClass<MessageSentEvent, DefaultDatabase>.ContainsProperty(string) MappingBaseClass<MessageSentEvent, DefaultDatabase>.Copy(IMapping) MappingBaseClass<MessageSentEvent, DefaultDatabase>.CopyProperty(IIDProperty) MappingBaseClass<MessageSentEvent, DefaultDatabase>.CopyProperty(IProperty) MappingBaseClass<MessageSentEvent, DefaultDatabase>.CopyProperty(IMapProperty) MappingBaseClass<MessageSentEvent, DefaultDatabase>.CopyProperty(IManyToOneProperty) MappingBaseClass<MessageSentEvent, DefaultDatabase>.CopyProperty(IManyToManyProperty) MappingBaseClass<MessageSentEvent, DefaultDatabase>.Equals(object) MappingBaseClass<MessageSentEvent, DefaultDatabase>.GetColumnName(string) MappingBaseClass<MessageSentEvent, DefaultDatabase>.GetHashCode() MappingBaseClass<MessageSentEvent, DefaultDatabase>.ID<TDataType>(Expression<Func<MessageSentEvent, TDataType>>) MappingBaseClass<MessageSentEvent, DefaultDatabase>.ManyToMany<TDataType>(Expression<Func<MessageSentEvent, IList<TDataType>>>) MappingBaseClass<MessageSentEvent, DefaultDatabase>.ManyToOne<TDataType>(Expression<Func<MessageSentEvent, IList<TDataType>>>) MappingBaseClass<MessageSentEvent, DefaultDatabase>.ManyToOne<TDataType>(Expression<Func<MessageSentEvent, TDataType>>) MappingBaseClass<MessageSentEvent, DefaultDatabase>.Map<TDataType>(Expression<Func<MessageSentEvent, TDataType>>) MappingBaseClass<MessageSentEvent, DefaultDatabase>.Reduce(ILogger) MappingBaseClass<MessageSentEvent, DefaultDatabase>.Reduce(IMapping, ILogger) MappingBaseClass<MessageSentEvent, DefaultDatabase>.Reference<TDataType>(Expression<Func<MessageSentEvent, TDataType>>) MappingBaseClass<MessageSentEvent, DefaultDatabase>.SetQuery(QueryType, string, CommandType, params IParameter[]) MappingBaseClass<MessageSentEvent, DefaultDatabase>.Setup() MappingBaseClass<MessageSentEvent, DefaultDatabase>.ToString() MappingBaseClass<MessageSentEvent, DefaultDatabase>.AutoIDProperties MappingBaseClass<MessageSentEvent, DefaultDatabase>.DatabaseConfigType MappingBaseClass<MessageSentEvent, DefaultDatabase>.IDProperties MappingBaseClass<MessageSentEvent, DefaultDatabase>.ManyToManyProperties MappingBaseClass<MessageSentEvent, DefaultDatabase>.ManyToOneProperties MappingBaseClass<MessageSentEvent, DefaultDatabase>.MapProperties MappingBaseClass<MessageSentEvent, DefaultDatabase>.Merge MappingBaseClass<MessageSentEvent, DefaultDatabase>.ObjectType MappingBaseClass<MessageSentEvent, DefaultDatabase>.Order MappingBaseClass<MessageSentEvent, DefaultDatabase>.Prefix MappingBaseClass<MessageSentEvent, DefaultDatabase>.Queries MappingBaseClass<MessageSentEvent, DefaultDatabase>.ReferenceProperties MappingBaseClass<MessageSentEvent, DefaultDatabase>.SchemaName MappingBaseClass<MessageSentEvent, DefaultDatabase>.Suffix MappingBaseClass<MessageSentEvent, DefaultDatabase>.TableName object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods GenericExtensions.When<TObject>(TObject, bool, Func<TObject, TObject>) ExpandoObjectExtensions.ConvertToExpando(object?) Constructors MessageSentEventMapping() Initializes a new instance of the MessageSentEventMapping class. public MessageSentEventMapping() See Also MappingBaseClass<TClassType, TDatabaseType>"
  },
  "api/Mithril.Communication.Abstractions.Mappings.SendMessageCommandMapping.html": {
    "href": "api/Mithril.Communication.Abstractions.Mappings.SendMessageCommandMapping.html",
    "title": "Class SendMessageCommandMapping | Mithril API Reference",
    "keywords": "Class SendMessageCommandMapping Namespace Mithril.Communication.Abstractions.Mappings Assembly Mithril.Communication.Abstractions.dll Send message command mapping public class SendMessageCommandMapping : MappingBaseClass<SendMessageCommand, DefaultDatabase>, IMapping<SendMessageCommand>, IMapping Inheritance object MappingBaseClass<SendMessageCommand, DefaultDatabase> SendMessageCommandMapping Implements IMapping<SendMessageCommand> IMapping Inherited Members MappingBaseClass<SendMessageCommand, DefaultDatabase>.AddAutoKey() MappingBaseClass<SendMessageCommand, DefaultDatabase>.ContainsProperty(string) MappingBaseClass<SendMessageCommand, DefaultDatabase>.Copy(IMapping) MappingBaseClass<SendMessageCommand, DefaultDatabase>.CopyProperty(IIDProperty) MappingBaseClass<SendMessageCommand, DefaultDatabase>.CopyProperty(IProperty) MappingBaseClass<SendMessageCommand, DefaultDatabase>.CopyProperty(IMapProperty) MappingBaseClass<SendMessageCommand, DefaultDatabase>.CopyProperty(IManyToOneProperty) MappingBaseClass<SendMessageCommand, DefaultDatabase>.CopyProperty(IManyToManyProperty) MappingBaseClass<SendMessageCommand, DefaultDatabase>.Equals(object) MappingBaseClass<SendMessageCommand, DefaultDatabase>.GetColumnName(string) MappingBaseClass<SendMessageCommand, DefaultDatabase>.GetHashCode() MappingBaseClass<SendMessageCommand, DefaultDatabase>.ID<TDataType>(Expression<Func<SendMessageCommand, TDataType>>) MappingBaseClass<SendMessageCommand, DefaultDatabase>.ManyToMany<TDataType>(Expression<Func<SendMessageCommand, IList<TDataType>>>) MappingBaseClass<SendMessageCommand, DefaultDatabase>.ManyToOne<TDataType>(Expression<Func<SendMessageCommand, IList<TDataType>>>) MappingBaseClass<SendMessageCommand, DefaultDatabase>.ManyToOne<TDataType>(Expression<Func<SendMessageCommand, TDataType>>) MappingBaseClass<SendMessageCommand, DefaultDatabase>.Map<TDataType>(Expression<Func<SendMessageCommand, TDataType>>) MappingBaseClass<SendMessageCommand, DefaultDatabase>.Reduce(ILogger) MappingBaseClass<SendMessageCommand, DefaultDatabase>.Reduce(IMapping, ILogger) MappingBaseClass<SendMessageCommand, DefaultDatabase>.Reference<TDataType>(Expression<Func<SendMessageCommand, TDataType>>) MappingBaseClass<SendMessageCommand, DefaultDatabase>.SetQuery(QueryType, string, CommandType, params IParameter[]) MappingBaseClass<SendMessageCommand, DefaultDatabase>.Setup() MappingBaseClass<SendMessageCommand, DefaultDatabase>.ToString() MappingBaseClass<SendMessageCommand, DefaultDatabase>.AutoIDProperties MappingBaseClass<SendMessageCommand, DefaultDatabase>.DatabaseConfigType MappingBaseClass<SendMessageCommand, DefaultDatabase>.IDProperties MappingBaseClass<SendMessageCommand, DefaultDatabase>.ManyToManyProperties MappingBaseClass<SendMessageCommand, DefaultDatabase>.ManyToOneProperties MappingBaseClass<SendMessageCommand, DefaultDatabase>.MapProperties MappingBaseClass<SendMessageCommand, DefaultDatabase>.Merge MappingBaseClass<SendMessageCommand, DefaultDatabase>.ObjectType MappingBaseClass<SendMessageCommand, DefaultDatabase>.Order MappingBaseClass<SendMessageCommand, DefaultDatabase>.Prefix MappingBaseClass<SendMessageCommand, DefaultDatabase>.Queries MappingBaseClass<SendMessageCommand, DefaultDatabase>.ReferenceProperties MappingBaseClass<SendMessageCommand, DefaultDatabase>.SchemaName MappingBaseClass<SendMessageCommand, DefaultDatabase>.Suffix MappingBaseClass<SendMessageCommand, DefaultDatabase>.TableName object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods GenericExtensions.When<TObject>(TObject, bool, Func<TObject, TObject>) ExpandoObjectExtensions.ConvertToExpando(object?) Constructors SendMessageCommandMapping() Initializes a new instance of the SendMessageCommandMapping class. public SendMessageCommandMapping() See Also MappingBaseClass<TClassType, TDatabaseType>"
  },
  "api/Mithril.Communication.Abstractions.Mappings.html": {
    "href": "api/Mithril.Communication.Abstractions.Mappings.html",
    "title": "Namespace Mithril.Communication.Abstractions.Mappings | Mithril API Reference",
    "keywords": "Namespace Mithril.Communication.Abstractions.Mappings Classes AttachmentMapping Attachment mapping IMessageMapping Message interface mapping MessageSentEventMapping Message sent event mapping SendMessageCommandMapping Send message command mapping"
  },
  "api/Mithril.Communication.Abstractions.MessageResult.html": {
    "href": "api/Mithril.Communication.Abstractions.MessageResult.html",
    "title": "Class MessageResult | Mithril API Reference",
    "keywords": "Class MessageResult Namespace Mithril.Communication.Abstractions Assembly Mithril.Communication.Abstractions.dll Message result public record MessageResult : GenericResult, IEquatable<GenericResult>, IEquatable<MessageResult> Inheritance object GenericResult MessageResult Implements IEquatable<GenericResult> IEquatable<MessageResult> Inherited Members GenericResult.Message GenericResult.Exception GenericResult.IsErrorState object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods GenericExtensions.When<TObject>(TObject, bool, Func<TObject, TObject>) ExpandoObjectExtensions.ConvertToExpando(object?) Constructors MessageResult(string, Exception?) Message result public MessageResult(string Message, Exception? Exception = null) Parameters Message string Message Exception Exception Exception See Also GenericResult IEquatable<T> IEquatable<T> See Also GenericResult IEquatable<T> IEquatable<T>"
  },
  "api/Mithril.Communication.Abstractions.Services.ICommunicationService.html": {
    "href": "api/Mithril.Communication.Abstractions.Services.ICommunicationService.html",
    "title": "Interface ICommunicationService | Mithril API Reference",
    "keywords": "Interface ICommunicationService Namespace Mithril.Communication.Abstractions.Services Assembly Mithril.Communication.Abstractions.dll Communication service public interface ICommunicationService Extension Methods GenericExtensions.When<TObject>(TObject, bool, Func<TObject, TObject>) ExpandoObjectExtensions.ConvertToExpando(object?) Methods CreateMessage(string) Creates a message based on the channel specified. IMessage? CreateMessage(string channel) Parameters channel string The channel. Returns IMessage The message object. LoadOrCreateTemplateAsync(string, ClaimsPrincipal?) Loads or creates a template asynchronously. Task<IMessageTemplate> LoadOrCreateTemplateAsync(string displayName, ClaimsPrincipal? user) Parameters displayName string The display name. user ClaimsPrincipal The user. Returns Task<IMessageTemplate> The message template. SendMessageAsync(IMessage?, ClaimsPrincipal?) Sends the message asynchronously. Task<MessageResult> SendMessageAsync(IMessage? message, ClaimsPrincipal? user) Parameters message IMessage The message. user ClaimsPrincipal The user. Returns Task<MessageResult> The message result."
  },
  "api/Mithril.Communication.Abstractions.Services.html": {
    "href": "api/Mithril.Communication.Abstractions.Services.html",
    "title": "Namespace Mithril.Communication.Abstractions.Services | Mithril API Reference",
    "keywords": "Namespace Mithril.Communication.Abstractions.Services Interfaces ICommunicationService Communication service"
  },
  "api/Mithril.Communication.Abstractions.html": {
    "href": "api/Mithril.Communication.Abstractions.html",
    "title": "Namespace Mithril.Communication.Abstractions | Mithril API Reference",
    "keywords": "Namespace Mithril.Communication.Abstractions Classes Attachment Message file attachments MessageResult Message result"
  },
  "api/Mithril.Communication.Admin.MessageTemplateEditor.html": {
    "href": "api/Mithril.Communication.Admin.MessageTemplateEditor.html",
    "title": "Class MessageTemplateEditor | Mithril API Reference",
    "keywords": "Class MessageTemplateEditor Namespace Mithril.Communication.Admin Assembly Mithril.Communication.dll Message template editor public class MessageTemplateEditor : EntityEditorBaseClass<MessageTemplateVM, MessageTemplate>, IEntityEditor, IEditor Inheritance object EntityEditorBaseClass<MessageTemplateVM> EntityEditorBaseClass<MessageTemplateVM, MessageTemplate> MessageTemplateEditor Implements IEntityEditor IEditor Inherited Members EntityEditorBaseClass<MessageTemplateVM, MessageTemplate>.ActivateAsync(long, ClaimsPrincipal) EntityEditorBaseClass<MessageTemplateVM, MessageTemplate>.CanView(ClaimsPrincipal) EntityEditorBaseClass<MessageTemplateVM, MessageTemplate>.DeleteEntityAsync(long, ClaimsPrincipal) EntityEditorBaseClass<MessageTemplateVM, MessageTemplate>.Load(long, ExpandoObject, ClaimsPrincipal) EntityEditorBaseClass<MessageTemplateVM, MessageTemplate>.LoadPageAsync(int, int, string, bool, string, ClaimsPrincipal) EntityEditorBaseClass<MessageTemplateVM, MessageTemplate>.SaveEntityAsync(long, ExpandoObject, ClaimsPrincipal) EntityEditorBaseClass<MessageTemplateVM, MessageTemplate>.TotalActiveAsync(ClaimsPrincipal) EntityEditorBaseClass<MessageTemplateVM, MessageTemplate>.Convert(MessageTemplate, bool) EntityEditorBaseClass<MessageTemplateVM, MessageTemplate>.FilterQueryBySearchQuery(IQueryable<MessageTemplate>, string) EntityEditorBaseClass<MessageTemplateVM, MessageTemplate>.LoadModel(long) EntityEditorBaseClass<MessageTemplateVM, MessageTemplate>.MakeActiveAsync(MessageTemplate) EntityEditorBaseClass<MessageTemplateVM, MessageTemplate>.MakeInactiveAsync(MessageTemplate) EntityEditorBaseClass<MessageTemplateVM>.Category EntityEditorBaseClass<MessageTemplateVM>.ComponentDefinition EntityEditorBaseClass<MessageTemplateVM>.Description EntityEditorBaseClass<MessageTemplateVM>.EntityType EntityEditorBaseClass<MessageTemplateVM>.Name EntityEditorBaseClass<MessageTemplateVM>.DataService EntityEditorBaseClass<MessageTemplateVM>.ServiceProvider EntityEditorBaseClass<MessageTemplateVM>.ActivateAsync(long, ClaimsPrincipal) EntityEditorBaseClass<MessageTemplateVM>.CanView(ClaimsPrincipal) EntityEditorBaseClass<MessageTemplateVM>.DeleteEntityAsync(long, ClaimsPrincipal) EntityEditorBaseClass<MessageTemplateVM>.Load(long, ExpandoObject, ClaimsPrincipal) EntityEditorBaseClass<MessageTemplateVM>.LoadPageAsync(int, int, string, bool, string, ClaimsPrincipal) EntityEditorBaseClass<MessageTemplateVM>.SaveEntityAsync(long, ExpandoObject, ClaimsPrincipal) EntityEditorBaseClass<MessageTemplateVM>.TotalActiveAsync(ClaimsPrincipal) object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods GenericExtensions.When<TObject>(TObject, bool, Func<TObject, TObject>) ExpandoObjectExtensions.ConvertToExpando(object?) Remarks Initializes a new instance of the MessageTemplateEditor class. Constructors MessageTemplateEditor(IHostEnvironment?, IDataService?, IEntityMetadataService?, IServiceProvider?, string?) Message template editor public MessageTemplateEditor(IHostEnvironment? hostEnvironment, IDataService? dataService, IEntityMetadataService? entityMetadataService, IServiceProvider? serviceProvider, string? dataType = null) Parameters hostEnvironment IHostEnvironment The host environment. dataService IDataService The data service. entityMetadataService IEntityMetadataService The entity metadata service. serviceProvider IServiceProvider The service provider. dataType string Type of the data. Remarks Initializes a new instance of the MessageTemplateEditor class. See Also EntityEditorBaseClass<TEntity, TModel> Properties Icon Gets the icon. public override string Icon { get; } Property Value string The icon. Methods Convert(MessageTemplate, bool) Converts the model into the appropriate view model. protected override IEntity Convert(MessageTemplate model, bool full = true) Parameters model MessageTemplate The model. full bool if set to true [full]. Returns IEntity The view model FilterQueryBySearchQuery(IQueryable<MessageTemplate>?, string) Filters the query by search term. protected override IQueryable<MessageTemplate>? FilterQueryBySearchQuery(IQueryable<MessageTemplate>? query, string searchQuery) Parameters query IQueryable<MessageTemplate> The query. searchQuery string The search query. Returns IQueryable<MessageTemplate> The resulting query. See Also EntityEditorBaseClass<TEntity, TModel>"
  },
  "api/Mithril.Communication.Admin.ViewModels.MessageTemplateVM.html": {
    "href": "api/Mithril.Communication.Admin.ViewModels.MessageTemplateVM.html",
    "title": "Class MessageTemplateVM | Mithril API Reference",
    "keywords": "Class MessageTemplateVM Namespace Mithril.Communication.Admin.ViewModels Assembly Mithril.Communication.dll Message template VM public class MessageTemplateVM : EntityBaseClass<MessageTemplate>, IEntity<MessageTemplate>, IEntity Inheritance object EntityBaseClass<MessageTemplate> MessageTemplateVM Implements IEntity<MessageTemplate> IEntity Inherited Members EntityBaseClass<MessageTemplate>.Active EntityBaseClass<MessageTemplate>.ID object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods GenericExtensions.When<TObject>(TObject, bool, Func<TObject, TObject>) ExpandoObjectExtensions.ConvertToExpando(object?) Constructors MessageTemplateVM() Initializes a new instance of the MessageTemplateVM class. public MessageTemplateVM() MessageTemplateVM(MessageTemplate?, IHostEnvironment?, bool) Initializes a new instance of the MessageTemplateVM class. public MessageTemplateVM(MessageTemplate? model, IHostEnvironment? hostEnvironment, bool full) Parameters model MessageTemplate The model. hostEnvironment IHostEnvironment The host environment. full bool if set to true [full]. Properties Content Gets or sets the content. [Order(2)] public string? Content { get; set; } Property Value string The content. DisplayName Gets or sets the display name. [Order(1)] [Required] [MaxLength(128)] public string? DisplayName { get; set; } Property Value string The display name. Methods SaveAsync(long, IDataService?, IServiceProvider?, ClaimsPrincipal?) Saves the changes asynchronously. public override Task<MessageTemplate?> SaveAsync(long id, IDataService? dataService, IServiceProvider? serviceProvider, ClaimsPrincipal? currentUser) Parameters id long The identifier. dataService IDataService The data service. serviceProvider IServiceProvider The service provider. currentUser ClaimsPrincipal The current user. Returns Task<MessageTemplate> The async task. See Also EntityBaseClass<TEntity>"
  },
  "api/Mithril.Communication.Admin.ViewModels.html": {
    "href": "api/Mithril.Communication.Admin.ViewModels.html",
    "title": "Namespace Mithril.Communication.Admin.ViewModels | Mithril API Reference",
    "keywords": "Namespace Mithril.Communication.Admin.ViewModels Classes MessageTemplateVM Message template VM"
  },
  "api/Mithril.Communication.Admin.html": {
    "href": "api/Mithril.Communication.Admin.html",
    "title": "Namespace Mithril.Communication.Admin | Mithril API Reference",
    "keywords": "Namespace Mithril.Communication.Admin Classes MessageTemplateEditor Message template editor"
  },
  "api/Mithril.Communication.Commands.MessageSentDefaultEventHandler.html": {
    "href": "api/Mithril.Communication.Commands.MessageSentDefaultEventHandler.html",
    "title": "Class MessageSentDefaultEventHandler | Mithril API Reference",
    "keywords": "Class MessageSentDefaultEventHandler Namespace Mithril.Communication.Commands Assembly Mithril.Communication.dll Message sent default event handler (does nothing) public class MessageSentDefaultEventHandler : EventHandlerBaseClass<MessageSentDefaultEventHandler, MessageSentEvent>, IEventHandler Inheritance object EventHandlerBaseClass<MessageSentDefaultEventHandler, MessageSentEvent> MessageSentDefaultEventHandler Implements IEventHandler Inherited Members EventHandlerBaseClass<MessageSentDefaultEventHandler, MessageSentEvent>.Features EventHandlerBaseClass<MessageSentDefaultEventHandler, MessageSentEvent>.Name EventHandlerBaseClass<MessageSentDefaultEventHandler, MessageSentEvent>.FeatureManager EventHandlerBaseClass<MessageSentDefaultEventHandler, MessageSentEvent>.Logger EventHandlerBaseClass<MessageSentDefaultEventHandler, MessageSentEvent>.Accepts(IEvent) EventHandlerBaseClass<MessageSentDefaultEventHandler, MessageSentEvent>.Handle(IEvent) EventHandlerBaseClass<MessageSentDefaultEventHandler, MessageSentEvent>.Handle(MessageSentEvent) EventHandlerBaseClass<MessageSentDefaultEventHandler, MessageSentEvent>.IsFeatureEnabled() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods GenericExtensions.When<TObject>(TObject, bool, Func<TObject, TObject>) ExpandoObjectExtensions.ConvertToExpando(object?) Remarks Initializes a new instance of the MessageSentDefaultEventHandler class. Constructors MessageSentDefaultEventHandler(ILogger<MessageSentDefaultEventHandler>?, IFeatureManager?) Message sent default event handler (does nothing) public MessageSentDefaultEventHandler(ILogger<MessageSentDefaultEventHandler>? logger, IFeatureManager? featureManager) Parameters logger ILogger<MessageSentDefaultEventHandler> featureManager IFeatureManager Remarks Initializes a new instance of the MessageSentDefaultEventHandler class. See Also EventHandlerBaseClass<THandler, TEvent> Methods Handle(MessageSentEvent) Handles the specified argument. protected override EventResult Handle(MessageSentEvent arg) Parameters arg MessageSentEvent The argument. Returns EventResult The result from processing the event. See Also EventHandlerBaseClass<THandler, TEvent>"
  },
  "api/Mithril.Communication.Commands.SendMessageCommandHandler.html": {
    "href": "api/Mithril.Communication.Commands.SendMessageCommandHandler.html",
    "title": "Class SendMessageCommandHandler | Mithril API Reference",
    "keywords": "Class SendMessageCommandHandler Namespace Mithril.Communication.Commands Assembly Mithril.Communication.dll Send message command handler public class SendMessageCommandHandler : CommandHandlerBaseClass<SendMessageCommand, SendMessageCommandVM>, ICommandHandler<SendMessageCommandVM>, ICommandHandler Inheritance object CommandHandlerBaseClass<SendMessageCommand, SendMessageCommandVM> SendMessageCommandHandler Implements ICommandHandler<SendMessageCommandVM> ICommandHandler Inherited Members CommandHandlerBaseClass<SendMessageCommand, SendMessageCommandVM>.CommandName CommandHandlerBaseClass<SendMessageCommand, SendMessageCommandVM>.ContentTypeAccepts CommandHandlerBaseClass<SendMessageCommand, SendMessageCommandVM>.Features CommandHandlerBaseClass<SendMessageCommand, SendMessageCommandVM>.Tags CommandHandlerBaseClass<SendMessageCommand, SendMessageCommandVM>.Version CommandHandlerBaseClass<SendMessageCommand, SendMessageCommandVM>.ViewModelType CommandHandlerBaseClass<SendMessageCommand, SendMessageCommandVM>.FeatureManager CommandHandlerBaseClass<SendMessageCommand, SendMessageCommandVM>.Logger CommandHandlerBaseClass<SendMessageCommand, SendMessageCommandVM>.CanHandle(ICommand) CommandHandlerBaseClass<SendMessageCommand, SendMessageCommandVM>.CreateAsync(SendMessageCommandVM, ClaimsPrincipal) CommandHandlerBaseClass<SendMessageCommand, SendMessageCommandVM>.HandleCommandAsync(params ICommand[]) CommandHandlerBaseClass<SendMessageCommand, SendMessageCommandVM>.HandleCommandAsync(SendMessageCommand[]) CommandHandlerBaseClass<SendMessageCommand, SendMessageCommandVM>.IsFeatureEnabled() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods GenericExtensions.When<TObject>(TObject, bool, Func<TObject, TObject>) ExpandoObjectExtensions.ConvertToExpando(object?) Remarks Initializes a new instance of the SendMessageCommandHandler class. Constructors SendMessageCommandHandler(ILogger<SendMessageCommandHandler>?, IFeatureManager?, ICommunicationService?, IDataService?, IOptions<MithrilConfig>?, IEnumerable<IChannel>) Send message command handler public SendMessageCommandHandler(ILogger<SendMessageCommandHandler>? logger, IFeatureManager? featureManager, ICommunicationService? communicationService, IDataService? dataService, IOptions<MithrilConfig>? mithrilConfig, IEnumerable<IChannel> channels) Parameters logger ILogger<SendMessageCommandHandler> The logger. featureManager IFeatureManager The feature manager. communicationService ICommunicationService The communication service. dataService IDataService The data service. mithrilConfig IOptions<MithrilConfig> The mithril configuration. channels IEnumerable<IChannel> The channels. Remarks Initializes a new instance of the SendMessageCommandHandler class. See Also CommandHandlerBaseClass<TCommand, TViewModel> Properties CommandName Gets the command type accepted. public override string CommandName { get; } Property Value string The command type accepted. Tags Gets the tags (Used by OpenAPI, etc). public override string[] Tags { get; } Property Value string[] The tags (Used by OpenAPI, etc). Methods CreateAsync(SendMessageCommandVM?, ClaimsPrincipal) Creates the specified value. public override ValueTask<CommandCreationResult?> CreateAsync(SendMessageCommandVM? value, ClaimsPrincipal user) Parameters value SendMessageCommandVM The value. user ClaimsPrincipal The user. Returns ValueTask<CommandCreationResult> A command value converted from the ExpandoObject. HandleCommandAsync(SendMessageCommand?[]?) Handles the command. protected override Task<IEvent[]> HandleCommandAsync(SendMessageCommand?[]? args) Parameters args SendMessageCommand[] The arguments. Returns Task<IEvent[]> The events generated by the command. See Also CommandHandlerBaseClass<TCommand, TViewModel>"
  },
  "api/Mithril.Communication.Commands.ViewModels.AttachmentVM.html": {
    "href": "api/Mithril.Communication.Commands.ViewModels.AttachmentVM.html",
    "title": "Class AttachmentVM | Mithril API Reference",
    "keywords": "Class AttachmentVM Namespace Mithril.Communication.Commands.ViewModels Assembly Mithril.Communication.dll Attachment VM public class AttachmentVM Inheritance object AttachmentVM Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods GenericExtensions.When<TObject>(TObject, bool, Func<TObject, TObject>) ExpandoObjectExtensions.ConvertToExpando(object?) Properties FileName Gets or sets the name of the file. [MaxLength(128)] public string? FileName { get; set; } Property Value string The name of the file. Location Gets or sets the location on disk. [MaxLength(1028)] public string? Location { get; set; } Property Value string The location on disk."
  },
  "api/Mithril.Communication.Commands.ViewModels.SendMessageCommandVM.html": {
    "href": "api/Mithril.Communication.Commands.ViewModels.SendMessageCommandVM.html",
    "title": "Class SendMessageCommandVM | Mithril API Reference",
    "keywords": "Class SendMessageCommandVM Namespace Mithril.Communication.Commands.ViewModels Assembly Mithril.Communication.dll Send message command VM public class SendMessageCommandVM Inheritance object SendMessageCommandVM Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods GenericExtensions.When<TObject>(TObject, bool, Func<TObject, TObject>) ExpandoObjectExtensions.ConvertToExpando(object?) Properties Attachments Gets or sets the attachments. public List<AttachmentVM> Attachments { get; set; } Property Value List<AttachmentVM> The attachments. BCC Gets or sets the BCC. public string? BCC { get; set; } Property Value string The BCC. Body Gets or sets the body. public string? Body { get; set; } Property Value string The body. CC Gets or sets the cc. public string? CC { get; set; } Property Value string The cc. Channel Gets or sets the channel. [Required] [MinLength(1)] [MaxLength(128)] public string? Channel { get; set; } Property Value string The channel. From Gets or sets from. [Required] [MinLength(1)] [MaxLength(128)] public string? From { get; set; } Property Value string From. Subject Gets or sets the subject. [Required] [MinLength(1)] [MaxLength(256)] public string? Subject { get; set; } Property Value string The subject. Template Gets or sets the template. public string? Template { get; set; } Property Value string The template. To Gets or sets to. public string? To { get; set; } Property Value string To."
  },
  "api/Mithril.Communication.Commands.ViewModels.html": {
    "href": "api/Mithril.Communication.Commands.ViewModels.html",
    "title": "Namespace Mithril.Communication.Commands.ViewModels | Mithril API Reference",
    "keywords": "Namespace Mithril.Communication.Commands.ViewModels Classes AttachmentVM Attachment VM SendMessageCommandVM Send message command VM"
  },
  "api/Mithril.Communication.Commands.html": {
    "href": "api/Mithril.Communication.Commands.html",
    "title": "Namespace Mithril.Communication.Commands | Mithril API Reference",
    "keywords": "Namespace Mithril.Communication.Commands Classes MessageSentDefaultEventHandler Message sent default event handler (does nothing) SendMessageCommandHandler Send message command handler"
  },
  "api/Mithril.Communication.CommunicationModule.html": {
    "href": "api/Mithril.Communication.CommunicationModule.html",
    "title": "Class CommunicationModule | Mithril API Reference",
    "keywords": "Class CommunicationModule Namespace Mithril.Communication Assembly Mithril.Communication.dll Communication module public class CommunicationModule : ModuleBaseClass<CommunicationModule>, IEquatable<CommunicationModule>, IModule Inheritance object ModuleBaseClass<CommunicationModule> CommunicationModule Implements IEquatable<CommunicationModule> IModule Inherited Members ModuleBaseClass<CommunicationModule>.Category ModuleBaseClass<CommunicationModule>.ContentPath ModuleBaseClass<CommunicationModule>.Features ModuleBaseClass<CommunicationModule>.ID ModuleBaseClass<CommunicationModule>.LastModified ModuleBaseClass<CommunicationModule>.Name ModuleBaseClass<CommunicationModule>.Order ModuleBaseClass<CommunicationModule>.Tags ModuleBaseClass<CommunicationModule>.Version ModuleBaseClass<CommunicationModule>.ConfigureApplication(IApplicationBuilder, IConfiguration, IHostEnvironment) ModuleBaseClass<CommunicationModule>.ConfigureHostSettings(IHostBuilder, IConfiguration, IHostEnvironment) ModuleBaseClass<CommunicationModule>.ConfigureLoggingSettings(ILoggingBuilder, IConfiguration, IHostEnvironment) ModuleBaseClass<CommunicationModule>.ConfigureMVC(IMvcBuilder, IConfiguration, IHostEnvironment) ModuleBaseClass<CommunicationModule>.ConfigureRoutes(IEndpointRouteBuilder, IConfiguration, IHostEnvironment) ModuleBaseClass<CommunicationModule>.ConfigureWebHostSettings(IWebHostBuilder, IConfiguration, IHostEnvironment) ModuleBaseClass<CommunicationModule>.Equals(object) ModuleBaseClass<CommunicationModule>.Equals(CommunicationModule) ModuleBaseClass<CommunicationModule>.GetHashCode() ModuleBaseClass<CommunicationModule>.InitializeDataAsync(IDataService, IServiceProvider) ModuleBaseClass<CommunicationModule>.OnStarted() ModuleBaseClass<CommunicationModule>.OnStopped() ModuleBaseClass<CommunicationModule>.OnStopping() object.Equals(object, object) object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods GenericExtensions.When<TObject>(TObject, bool, Func<TObject, TObject>) ExpandoObjectExtensions.ConvertToExpando(object?) Methods ConfigureServices(IServiceCollection?, IConfiguration?, IHostEnvironment?) Configures the services for the module. public override IServiceCollection? ConfigureServices(IServiceCollection? services, IConfiguration? configuration, IHostEnvironment? environment) Parameters services IServiceCollection The services collection. configuration IConfiguration The configuration. environment IHostEnvironment The environment. Returns IServiceCollection Communication module See Also ModuleBaseClass<TModule>"
  },
  "api/Mithril.Communication.Email.Channel.EmailChannel.html": {
    "href": "api/Mithril.Communication.Email.Channel.EmailChannel.html",
    "title": "Class EmailChannel | Mithril API Reference",
    "keywords": "Class EmailChannel Namespace Mithril.Communication.Email.Channel Assembly Mithril.Communication.Email.dll Email channel for communication public class EmailChannel : ChannelBaseClass<EmailChannel, EmailMessage>, IChannel Inheritance object ChannelBaseClass<EmailChannel, EmailMessage> EmailChannel Implements IChannel Inherited Members ChannelBaseClass<EmailChannel, EmailMessage>.Name ChannelBaseClass<EmailChannel, EmailMessage>.FeatureManager ChannelBaseClass<EmailChannel, EmailMessage>.Logger ChannelBaseClass<EmailChannel, EmailMessage>.CanHandle(IMessage) ChannelBaseClass<EmailChannel, EmailMessage>.CreateMessage() ChannelBaseClass<EmailChannel, EmailMessage>.SendMessageAsync(IMessage) object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods GenericExtensions.When<TObject>(TObject, bool, Func<TObject, TObject>) ExpandoObjectExtensions.ConvertToExpando(object?) Remarks Initializes a new instance of the EmailChannel class. Constructors EmailChannel(ILogger<EmailChannel>?, IFeatureManager?, IDataService?, IViewRendererService?) Email channel for communication public EmailChannel(ILogger<EmailChannel>? logger, IFeatureManager? featureManager, IDataService? dataService, IViewRendererService? viewRendererService) Parameters logger ILogger<EmailChannel> The logger. featureManager IFeatureManager The feature manager. dataService IDataService The data service. viewRendererService IViewRendererService The view renderer service. Remarks Initializes a new instance of the EmailChannel class. See Also ChannelBaseClass<TChannel, TMessage> Properties Name Gets the name. public override string Name { get; } Property Value string The name. Methods SendMessageAsync(IMessage?) Sends the message asynchronously. public override Task<MessageResult> SendMessageAsync(IMessage? message) Parameters message IMessage The message. Returns Task<MessageResult> The message result See Also ChannelBaseClass<TChannel, TMessage>"
  },
  "api/Mithril.Communication.Email.Channel.html": {
    "href": "api/Mithril.Communication.Email.Channel.html",
    "title": "Namespace Mithril.Communication.Email.Channel | Mithril API Reference",
    "keywords": "Namespace Mithril.Communication.Email.Channel Classes EmailChannel Email channel for communication"
  },
  "api/Mithril.Communication.Email.EmailModule.html": {
    "href": "api/Mithril.Communication.Email.EmailModule.html",
    "title": "Class EmailModule | Mithril API Reference",
    "keywords": "Class EmailModule Namespace Mithril.Communication.Email Assembly Mithril.Communication.Email.dll Email module public class EmailModule : ModuleBaseClass<EmailModule>, IEquatable<EmailModule>, IModule Inheritance object ModuleBaseClass<EmailModule> EmailModule Implements IEquatable<EmailModule> IModule Inherited Members ModuleBaseClass<EmailModule>.Category ModuleBaseClass<EmailModule>.ContentPath ModuleBaseClass<EmailModule>.Features ModuleBaseClass<EmailModule>.ID ModuleBaseClass<EmailModule>.LastModified ModuleBaseClass<EmailModule>.Name ModuleBaseClass<EmailModule>.Order ModuleBaseClass<EmailModule>.Tags ModuleBaseClass<EmailModule>.Version ModuleBaseClass<EmailModule>.ConfigureApplication(IApplicationBuilder, IConfiguration, IHostEnvironment) ModuleBaseClass<EmailModule>.ConfigureHostSettings(IHostBuilder, IConfiguration, IHostEnvironment) ModuleBaseClass<EmailModule>.ConfigureLoggingSettings(ILoggingBuilder, IConfiguration, IHostEnvironment) ModuleBaseClass<EmailModule>.ConfigureMVC(IMvcBuilder, IConfiguration, IHostEnvironment) ModuleBaseClass<EmailModule>.ConfigureRoutes(IEndpointRouteBuilder, IConfiguration, IHostEnvironment) ModuleBaseClass<EmailModule>.ConfigureWebHostSettings(IWebHostBuilder, IConfiguration, IHostEnvironment) ModuleBaseClass<EmailModule>.Equals(object) ModuleBaseClass<EmailModule>.Equals(EmailModule) ModuleBaseClass<EmailModule>.GetHashCode() ModuleBaseClass<EmailModule>.OnStarted() ModuleBaseClass<EmailModule>.OnStopped() ModuleBaseClass<EmailModule>.OnStopping() object.Equals(object, object) object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods GenericExtensions.When<TObject>(TObject, bool, Func<TObject, TObject>) ExpandoObjectExtensions.ConvertToExpando(object?) Methods ConfigureServices(IServiceCollection?, IConfiguration?, IHostEnvironment?) Configures the services for the module. public override IServiceCollection? ConfigureServices(IServiceCollection? services, IConfiguration? configuration, IHostEnvironment? environment) Parameters services IServiceCollection The services collection. configuration IConfiguration The configuration. environment IHostEnvironment The environment. Returns IServiceCollection Services InitializeDataAsync(IDataService?, IServiceProvider?) Initializes the data. public override Task InitializeDataAsync(IDataService? dataService, IServiceProvider? services) Parameters dataService IDataService Data service services IServiceProvider The services for the application. Returns Task The async task. See Also ModuleBaseClass<TModule>"
  },
  "api/Mithril.Communication.Email.Features.EmailFeature.html": {
    "href": "api/Mithril.Communication.Email.Features.EmailFeature.html",
    "title": "Class EmailFeature | Mithril API Reference",
    "keywords": "Class EmailFeature Namespace Mithril.Communication.Email.Features Assembly Mithril.Communication.Email.dll Email feature. public class EmailFeature : FeatureBaseClass<EmailFeature>, IFeature, IEquatable<EmailFeature> Inheritance object FeatureBaseClass<EmailFeature> EmailFeature Implements IFeature IEquatable<EmailFeature> Inherited Members FeatureBaseClass<EmailFeature>.Instance FeatureBaseClass<EmailFeature>.Equals(object) FeatureBaseClass<EmailFeature>.Equals(EmailFeature) FeatureBaseClass<EmailFeature>.GetHashCode() object.Equals(object, object) object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods GenericExtensions.When<TObject>(TObject, bool, Func<TObject, TObject>) ExpandoObjectExtensions.ConvertToExpando(object?) Properties Category The group (by category) that the feature belongs. If not provided, defaults to 'Uncategorized'. public override string Category { get; } Property Value string The category. Description Gets or sets the description. public override string Description { get; } Property Value string The description. Name Human-readable name of the feature. If not provided, the identifier will be used. public override string Name { get; } Property Value string The name. See Also FeatureBaseClass<TFeature>"
  },
  "api/Mithril.Communication.Email.Features.html": {
    "href": "api/Mithril.Communication.Email.Features.html",
    "title": "Namespace Mithril.Communication.Email.Features | Mithril API Reference",
    "keywords": "Namespace Mithril.Communication.Email.Features Classes EmailFeature Email feature."
  },
  "api/Mithril.Communication.Email.HealthChecks.SMTPHealthCheck.html": {
    "href": "api/Mithril.Communication.Email.HealthChecks.SMTPHealthCheck.html",
    "title": "Class SMTPHealthCheck | Mithril API Reference",
    "keywords": "Class SMTPHealthCheck Namespace Mithril.Communication.Email.HealthChecks Assembly Mithril.Communication.Email.dll SMTP health check public class SMTPHealthCheck : IHealthCheck Inheritance object SMTPHealthCheck Implements IHealthCheck Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods GenericExtensions.When<TObject>(TObject, bool, Func<TObject, TObject>) ExpandoObjectExtensions.ConvertToExpando(object?) Properties DataService Gets the data service. public static IDataService? DataService { get; set; } Property Value IDataService The data service. FeatureManager Gets the feature manager. public static IFeatureManager? FeatureManager { get; set; } Property Value IFeatureManager The feature manager. Methods CheckHealthAsync(HealthCheckContext, CancellationToken) Runs the health check, returning the status of the component being checked. public Task<HealthCheckResult> CheckHealthAsync(HealthCheckContext context, CancellationToken cancellationToken = default) Parameters context HealthCheckContext A context object associated with the current execution. cancellationToken CancellationToken A CancellationToken that can be used to cancel the health check. Returns Task<HealthCheckResult> A Task<TResult> that completes when the health check has finished, yielding the status of the component being checked. See Also IHealthCheck"
  },
  "api/Mithril.Communication.Email.HealthChecks.html": {
    "href": "api/Mithril.Communication.Email.HealthChecks.html",
    "title": "Namespace Mithril.Communication.Email.HealthChecks | Mithril API Reference",
    "keywords": "Namespace Mithril.Communication.Email.HealthChecks Classes SMTPHealthCheck SMTP health check"
  },
  "api/Mithril.Communication.Email.Models.EmailMessage.html": {
    "href": "api/Mithril.Communication.Email.Models.EmailMessage.html",
    "title": "Class EmailMessage | Mithril API Reference",
    "keywords": "Class EmailMessage Namespace Mithril.Communication.Email.Models Assembly Mithril.Communication.Email.dll Email message public class EmailMessage : ModelBase<EmailMessage>, IModel<EmailMessage>, IEquatable<IModel<EmailMessage>>, IComparable, IComparable<EmailMessage>, IEquatable<ModelBase<EmailMessage>>, IMessage, IModel, IEquatable<IModel> Inheritance object ModelBase<EmailMessage> EmailMessage Implements IModel<EmailMessage> IEquatable<IModel<EmailMessage>> IComparable IComparable<EmailMessage> IEquatable<ModelBase<EmailMessage>> IMessage IModel IEquatable<IModel> Inherited Members ModelBase<EmailMessage>.Active ModelBase<EmailMessage>.Creator ModelBase<EmailMessage>.DateCreated ModelBase<EmailMessage>.DateModified ModelBase<EmailMessage>.ID ModelBase<EmailMessage>.Modifier ModelBase<EmailMessage>.TenantID ModelBase<EmailMessage>.All(IDataService) ModelBase<EmailMessage>.AllActive(IDataService) ModelBase<EmailMessage>.AllInactive(IDataService) ModelBase<EmailMessage>.Load(long, IDataService) ModelBase<EmailMessage>.Query(IDataService) ModelBase<EmailMessage>.CanBeModifiedBy(ClaimsPrincipal) ModelBase<EmailMessage>.CanBeViewedBy(ClaimsPrincipal) ModelBase<EmailMessage>.CompareTo(object) ModelBase<EmailMessage>.DeleteAsync(IDataService, ClaimsPrincipal, bool) ModelBase<EmailMessage>.Equals(IModel) ModelBase<EmailMessage>.Equals(IModel<EmailMessage>) ModelBase<EmailMessage>.Equals(ModelBase<EmailMessage>) ModelBase<EmailMessage>.SaveAsync(IDataService, ClaimsPrincipal) ModelBase<EmailMessage>.SetupObject(IDataService, ClaimsPrincipal) ModelBase<EmailMessage>.SetupObject(IDataService, IUser) ModelBase<EmailMessage>.SetupObjectAndReturn(IDataService, ClaimsPrincipal) object.Equals(object, object) object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Extension Methods GenericExtensions.When<TObject>(TObject, bool, Func<TObject, TObject>) ExpandoObjectExtensions.ConvertToExpando(object?) Properties Application Gets or sets the application the message originated from. [MaxLength(64)] public string? Application { get; set; } Property Value string The application the message originated from. Attachments Gets or sets the attachments. public virtual IList<Attachment?> Attachments { get; set; } Property Value IList<Attachment> The attachments. BCC Gets or sets the BCC. [MaxLength] public string? BCC { get; set; } Property Value string The BCC. Body Gets or sets the body. [MaxLength] public string? Body { get; set; } Property Value string The body. CC Gets or sets the cc. [MaxLength] public string? CC { get; set; } Property Value string The cc. From Gets or sets from. [Required] [MinLength(1)] [MaxLength(128)] public string? From { get; set; } Property Value string From. Subject Gets or sets the subject. [Required] [MinLength(1)] [MaxLength(256)] public string? Subject { get; set; } Property Value string The subject. Template Gets or sets the template. [MaxLength(128)] public string? Template { get; set; } Property Value string The template. TemplateData Gets or sets the template data (JSON). [MaxLength] public string? TemplateData { get; set; } Property Value string The template data in JSON format. TemplateFields Gets or sets the template data. public ExpandoObject? TemplateFields { get; } Property Value ExpandoObject The template data. To Gets or sets to. [Required] [MinLength(1)] [MaxLength] public string? To { get; set; } Property Value string To. Methods CompareTo(EmailMessage?) Compares the object to another object public override int CompareTo(EmailMessage? other) Parameters other EmailMessage Object to compare to Returns int 0 if they are equal, -1 if this is smaller, 1 if it is larger Equals(EmailMessage) Indicates whether the current object is equal to another object of the same type. public bool Equals(EmailMessage other) Parameters other EmailMessage An object to compare with this object. Returns bool true if the current object is equal to the other parameter; otherwise, false. Equals(object?) Determines whether the specified object, is equal to this instance. public override bool Equals(object? obj) Parameters obj object The object to compare with this instance. Returns bool true if the specified object is equal to this instance; otherwise, false. GetHashCode() Returns a hash code for this instance. public override int GetHashCode() Returns int A hash code for this instance, suitable for use in hashing algorithms and data structures like a hash table. ToString() Returns a string that represents this instance. public override string ToString() Returns string A string that represents this instance. Operators operator ==(EmailMessage, EmailMessage) Implements the operator ==. public static bool operator ==(EmailMessage first, EmailMessage second) Parameters first EmailMessage The first. second EmailMessage The second. Returns bool The result of the operator. operator >(EmailMessage, EmailMessage) Implements the operator >. public static bool operator >(EmailMessage left, EmailMessage right) Parameters left EmailMessage The left. right EmailMessage The right. Returns bool The result of the operator. operator >=(EmailMessage, EmailMessage) Implements the operator >=. public static bool operator >=(EmailMessage left, EmailMessage right) Parameters left EmailMessage The left. right EmailMessage The right. Returns bool The result of the operator. operator !=(EmailMessage, EmailMessage) Implements the operator !=. public static bool operator !=(EmailMessage left, EmailMessage right) Parameters left EmailMessage The left. right EmailMessage The right. Returns bool The result of the operator. operator <(EmailMessage, EmailMessage) Implements the operator <. public static bool operator <(EmailMessage left, EmailMessage right) Parameters left EmailMessage The left. right EmailMessage The right. Returns bool The result of the operator. operator <=(EmailMessage, EmailMessage) Implements the operator <=. public static bool operator <=(EmailMessage left, EmailMessage right) Parameters left EmailMessage The left. right EmailMessage The right. Returns bool The result of the operator. See Also ModelBase<TClass>"
  },
  "api/Mithril.Communication.Email.Models.EmailSettings.html": {
    "href": "api/Mithril.Communication.Email.Models.EmailSettings.html",
    "title": "Class EmailSettings | Mithril API Reference",
    "keywords": "Class EmailSettings Namespace Mithril.Communication.Email.Models Assembly Mithril.Communication.Email.dll Email settings public class EmailSettings : SettingsBase<EmailSettings>, IModel<EmailSettings>, IModel, IEquatable<IModel>, IEquatable<IModel<EmailSettings>>, IComparable, IComparable<EmailSettings>, IEquatable<ModelBase<EmailSettings>>, IEquatable<SettingsBase<EmailSettings>> Inheritance object ModelBase<EmailSettings> SettingsBase<EmailSettings> EmailSettings Implements IModel<EmailSettings> IModel IEquatable<IModel> IEquatable<IModel<EmailSettings>> IComparable IComparable<EmailSettings> IEquatable<ModelBase<EmailSettings>> IEquatable<SettingsBase<EmailSettings>> Inherited Members SettingsBase<EmailSettings>.LoadOrCreateAsync(IDataService, ClaimsPrincipal) SettingsBase<EmailSettings>.Equals(ITypedModel) SettingsBase<EmailSettings>.Equals(SettingsBase<EmailSettings>) ModelBase<EmailSettings>.Active ModelBase<EmailSettings>.Creator ModelBase<EmailSettings>.DateCreated ModelBase<EmailSettings>.DateModified ModelBase<EmailSettings>.ID ModelBase<EmailSettings>.Modifier ModelBase<EmailSettings>.TenantID ModelBase<EmailSettings>.All(IDataService) ModelBase<EmailSettings>.AllActive(IDataService) ModelBase<EmailSettings>.AllInactive(IDataService) ModelBase<EmailSettings>.Load(long, IDataService) ModelBase<EmailSettings>.Query(IDataService) ModelBase<EmailSettings>.CanBeModifiedBy(ClaimsPrincipal) ModelBase<EmailSettings>.CanBeViewedBy(ClaimsPrincipal) ModelBase<EmailSettings>.CompareTo(object) ModelBase<EmailSettings>.DeleteAsync(IDataService, ClaimsPrincipal, bool) ModelBase<EmailSettings>.Equals(IModel) ModelBase<EmailSettings>.Equals(IModel<EmailSettings>) ModelBase<EmailSettings>.Equals(ModelBase<EmailSettings>) ModelBase<EmailSettings>.SaveAsync(IDataService, ClaimsPrincipal) ModelBase<EmailSettings>.SetupObject(IDataService, ClaimsPrincipal) ModelBase<EmailSettings>.SetupObject(IDataService, IUser) ModelBase<EmailSettings>.SetupObjectAndReturn(IDataService, ClaimsPrincipal) object.Equals(object, object) object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Extension Methods GenericExtensions.When<TObject>(TObject, bool, Func<TObject, TObject>) ExpandoObjectExtensions.ConvertToExpando(object?) Constructors EmailSettings() Initializes a new instance of the EmailSettings class. public EmailSettings() Properties LocalDomain Gets or sets the local domain. [MaxLength(256)] public string? LocalDomain { get; set; } Property Value string The local domain. Password Gets or sets the password. public string? Password { get; set; } Property Value string The password. Port Gets or sets the port. public int Port { get; set; } Property Value int The port. Server Gets or sets the server. [Required] [MaxLength(256)] [MinLength(1)] public string? Server { get; set; } Property Value string The server. SystemAddress Gets or sets the system address. [Required] [MaxLength(256)] [MinLength(1)] public string? SystemAddress { get; set; } Property Value string The system address. UseSSL Gets or sets a value indicating whether [use SSL]. public bool UseSSL { get; set; } Property Value bool true if [use SSL]; otherwise, false. UserName Gets or sets the name of the user. [MaxLength(128)] public string? UserName { get; set; } Property Value string The name of the user. Methods CompareTo(EmailSettings?) Compares the object to another object public override int CompareTo(EmailSettings? other) Parameters other EmailSettings Object to compare to Returns int 0 if they are equal, -1 if this is smaller, 1 if it is larger Equals(EmailSettings) Indicates whether the current object is equal to another object of the same type. public bool Equals(EmailSettings other) Parameters other EmailSettings An object to compare with this object. Returns bool true if the current object is equal to the other parameter; otherwise, false. Equals(object?) Determines whether the specified object, is equal to this instance. public override bool Equals(object? obj) Parameters obj object The object to compare with this instance. Returns bool true if the specified object is equal to this instance; otherwise, false. GetHashCode() Returns a hash code for this instance. public override int GetHashCode() Returns int A hash code for this instance, suitable for use in hashing algorithms and data structures like a hash table. ToString() Returns a string that represents this instance. public override string ToString() Returns string A string that represents this instance. Operators operator ==(EmailSettings, EmailSettings) Implements the operator ==. public static bool operator ==(EmailSettings first, EmailSettings second) Parameters first EmailSettings The first. second EmailSettings The second. Returns bool The result of the operator. operator >(EmailSettings, EmailSettings) Implements the operator >. public static bool operator >(EmailSettings left, EmailSettings right) Parameters left EmailSettings The left. right EmailSettings The right. Returns bool The result of the operator. operator >=(EmailSettings, EmailSettings) Implements the operator >=. public static bool operator >=(EmailSettings left, EmailSettings right) Parameters left EmailSettings The left. right EmailSettings The right. Returns bool The result of the operator. operator !=(EmailSettings, EmailSettings) Implements the operator !=. public static bool operator !=(EmailSettings left, EmailSettings right) Parameters left EmailSettings The left. right EmailSettings The right. Returns bool The result of the operator. operator <(EmailSettings, EmailSettings) Implements the operator <. public static bool operator <(EmailSettings left, EmailSettings right) Parameters left EmailSettings The left. right EmailSettings The right. Returns bool The result of the operator. operator <=(EmailSettings, EmailSettings) Implements the operator <=. public static bool operator <=(EmailSettings left, EmailSettings right) Parameters left EmailSettings The left. right EmailSettings The right. Returns bool The result of the operator. See Also SettingsBase<TClass>"
  },
  "api/Mithril.Communication.Email.Models.Mappings.EmailMessageMapping.html": {
    "href": "api/Mithril.Communication.Email.Models.Mappings.EmailMessageMapping.html",
    "title": "Class EmailMessageMapping | Mithril API Reference",
    "keywords": "Class EmailMessageMapping Namespace Mithril.Communication.Email.Models.Mappings Assembly Mithril.Communication.Email.dll Email message mapping public class EmailMessageMapping : MappingBaseClass<EmailMessage, DefaultDatabase>, IMapping<EmailMessage>, IMapping Inheritance object MappingBaseClass<EmailMessage, DefaultDatabase> EmailMessageMapping Implements IMapping<EmailMessage> IMapping Inherited Members MappingBaseClass<EmailMessage, DefaultDatabase>.AddAutoKey() MappingBaseClass<EmailMessage, DefaultDatabase>.ContainsProperty(string) MappingBaseClass<EmailMessage, DefaultDatabase>.Copy(IMapping) MappingBaseClass<EmailMessage, DefaultDatabase>.CopyProperty(IIDProperty) MappingBaseClass<EmailMessage, DefaultDatabase>.CopyProperty(IProperty) MappingBaseClass<EmailMessage, DefaultDatabase>.CopyProperty(IMapProperty) MappingBaseClass<EmailMessage, DefaultDatabase>.CopyProperty(IManyToOneProperty) MappingBaseClass<EmailMessage, DefaultDatabase>.CopyProperty(IManyToManyProperty) MappingBaseClass<EmailMessage, DefaultDatabase>.Equals(object) MappingBaseClass<EmailMessage, DefaultDatabase>.GetColumnName(string) MappingBaseClass<EmailMessage, DefaultDatabase>.GetHashCode() MappingBaseClass<EmailMessage, DefaultDatabase>.ID<TDataType>(Expression<Func<EmailMessage, TDataType>>) MappingBaseClass<EmailMessage, DefaultDatabase>.ManyToMany<TDataType>(Expression<Func<EmailMessage, IList<TDataType>>>) MappingBaseClass<EmailMessage, DefaultDatabase>.ManyToOne<TDataType>(Expression<Func<EmailMessage, IList<TDataType>>>) MappingBaseClass<EmailMessage, DefaultDatabase>.ManyToOne<TDataType>(Expression<Func<EmailMessage, TDataType>>) MappingBaseClass<EmailMessage, DefaultDatabase>.Map<TDataType>(Expression<Func<EmailMessage, TDataType>>) MappingBaseClass<EmailMessage, DefaultDatabase>.Reduce(ILogger) MappingBaseClass<EmailMessage, DefaultDatabase>.Reduce(IMapping, ILogger) MappingBaseClass<EmailMessage, DefaultDatabase>.Reference<TDataType>(Expression<Func<EmailMessage, TDataType>>) MappingBaseClass<EmailMessage, DefaultDatabase>.SetQuery(QueryType, string, CommandType, params IParameter[]) MappingBaseClass<EmailMessage, DefaultDatabase>.Setup() MappingBaseClass<EmailMessage, DefaultDatabase>.ToString() MappingBaseClass<EmailMessage, DefaultDatabase>.AutoIDProperties MappingBaseClass<EmailMessage, DefaultDatabase>.DatabaseConfigType MappingBaseClass<EmailMessage, DefaultDatabase>.IDProperties MappingBaseClass<EmailMessage, DefaultDatabase>.ManyToManyProperties MappingBaseClass<EmailMessage, DefaultDatabase>.ManyToOneProperties MappingBaseClass<EmailMessage, DefaultDatabase>.MapProperties MappingBaseClass<EmailMessage, DefaultDatabase>.Merge MappingBaseClass<EmailMessage, DefaultDatabase>.ObjectType MappingBaseClass<EmailMessage, DefaultDatabase>.Order MappingBaseClass<EmailMessage, DefaultDatabase>.Prefix MappingBaseClass<EmailMessage, DefaultDatabase>.Queries MappingBaseClass<EmailMessage, DefaultDatabase>.ReferenceProperties MappingBaseClass<EmailMessage, DefaultDatabase>.SchemaName MappingBaseClass<EmailMessage, DefaultDatabase>.Suffix MappingBaseClass<EmailMessage, DefaultDatabase>.TableName object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods GenericExtensions.When<TObject>(TObject, bool, Func<TObject, TObject>) ExpandoObjectExtensions.ConvertToExpando(object?) Constructors EmailMessageMapping() Initializes a new instance of the EmailMessageMapping class. public EmailMessageMapping() See Also MappingBaseClass<TClassType, TDatabaseType>"
  },
  "api/Mithril.Communication.Email.Models.Mappings.EmailSettingsMapping.html": {
    "href": "api/Mithril.Communication.Email.Models.Mappings.EmailSettingsMapping.html",
    "title": "Class EmailSettingsMapping | Mithril API Reference",
    "keywords": "Class EmailSettingsMapping Namespace Mithril.Communication.Email.Models.Mappings Assembly Mithril.Communication.Email.dll Email settings mapping public class EmailSettingsMapping : MappingBaseClass<EmailSettings, DefaultDatabase>, IMapping<EmailSettings>, IMapping Inheritance object MappingBaseClass<EmailSettings, DefaultDatabase> EmailSettingsMapping Implements IMapping<EmailSettings> IMapping Inherited Members MappingBaseClass<EmailSettings, DefaultDatabase>.AddAutoKey() MappingBaseClass<EmailSettings, DefaultDatabase>.ContainsProperty(string) MappingBaseClass<EmailSettings, DefaultDatabase>.Copy(IMapping) MappingBaseClass<EmailSettings, DefaultDatabase>.CopyProperty(IIDProperty) MappingBaseClass<EmailSettings, DefaultDatabase>.CopyProperty(IProperty) MappingBaseClass<EmailSettings, DefaultDatabase>.CopyProperty(IMapProperty) MappingBaseClass<EmailSettings, DefaultDatabase>.CopyProperty(IManyToOneProperty) MappingBaseClass<EmailSettings, DefaultDatabase>.CopyProperty(IManyToManyProperty) MappingBaseClass<EmailSettings, DefaultDatabase>.Equals(object) MappingBaseClass<EmailSettings, DefaultDatabase>.GetColumnName(string) MappingBaseClass<EmailSettings, DefaultDatabase>.GetHashCode() MappingBaseClass<EmailSettings, DefaultDatabase>.ID<TDataType>(Expression<Func<EmailSettings, TDataType>>) MappingBaseClass<EmailSettings, DefaultDatabase>.ManyToMany<TDataType>(Expression<Func<EmailSettings, IList<TDataType>>>) MappingBaseClass<EmailSettings, DefaultDatabase>.ManyToOne<TDataType>(Expression<Func<EmailSettings, IList<TDataType>>>) MappingBaseClass<EmailSettings, DefaultDatabase>.ManyToOne<TDataType>(Expression<Func<EmailSettings, TDataType>>) MappingBaseClass<EmailSettings, DefaultDatabase>.Map<TDataType>(Expression<Func<EmailSettings, TDataType>>) MappingBaseClass<EmailSettings, DefaultDatabase>.Reduce(ILogger) MappingBaseClass<EmailSettings, DefaultDatabase>.Reduce(IMapping, ILogger) MappingBaseClass<EmailSettings, DefaultDatabase>.Reference<TDataType>(Expression<Func<EmailSettings, TDataType>>) MappingBaseClass<EmailSettings, DefaultDatabase>.SetQuery(QueryType, string, CommandType, params IParameter[]) MappingBaseClass<EmailSettings, DefaultDatabase>.Setup() MappingBaseClass<EmailSettings, DefaultDatabase>.ToString() MappingBaseClass<EmailSettings, DefaultDatabase>.AutoIDProperties MappingBaseClass<EmailSettings, DefaultDatabase>.DatabaseConfigType MappingBaseClass<EmailSettings, DefaultDatabase>.IDProperties MappingBaseClass<EmailSettings, DefaultDatabase>.ManyToManyProperties MappingBaseClass<EmailSettings, DefaultDatabase>.ManyToOneProperties MappingBaseClass<EmailSettings, DefaultDatabase>.MapProperties MappingBaseClass<EmailSettings, DefaultDatabase>.Merge MappingBaseClass<EmailSettings, DefaultDatabase>.ObjectType MappingBaseClass<EmailSettings, DefaultDatabase>.Order MappingBaseClass<EmailSettings, DefaultDatabase>.Prefix MappingBaseClass<EmailSettings, DefaultDatabase>.Queries MappingBaseClass<EmailSettings, DefaultDatabase>.ReferenceProperties MappingBaseClass<EmailSettings, DefaultDatabase>.SchemaName MappingBaseClass<EmailSettings, DefaultDatabase>.Suffix MappingBaseClass<EmailSettings, DefaultDatabase>.TableName object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods GenericExtensions.When<TObject>(TObject, bool, Func<TObject, TObject>) ExpandoObjectExtensions.ConvertToExpando(object?) Constructors EmailSettingsMapping() Initializes a new instance of the EmailSettingsMapping class. public EmailSettingsMapping() See Also MappingBaseClass<TClassType, TDatabaseType>"
  },
  "api/Mithril.Communication.Email.Models.Mappings.html": {
    "href": "api/Mithril.Communication.Email.Models.Mappings.html",
    "title": "Namespace Mithril.Communication.Email.Models.Mappings | Mithril API Reference",
    "keywords": "Namespace Mithril.Communication.Email.Models.Mappings Classes EmailMessageMapping Email message mapping EmailSettingsMapping Email settings mapping"
  },
  "api/Mithril.Communication.Email.Models.html": {
    "href": "api/Mithril.Communication.Email.Models.html",
    "title": "Namespace Mithril.Communication.Email.Models | Mithril API Reference",
    "keywords": "Namespace Mithril.Communication.Email.Models Classes EmailMessage Email message EmailSettings Email settings"
  },
  "api/Mithril.Communication.Email.Utils.EmailSender.html": {
    "href": "api/Mithril.Communication.Email.Utils.EmailSender.html",
    "title": "Class EmailSender | Mithril API Reference",
    "keywords": "Class EmailSender Namespace Mithril.Communication.Email.Utils Assembly Mithril.Communication.Email.dll Email sender public class EmailSender : Email Inheritance object Email EmailSender Inherited Members Email.Attachments Email.Bcc Email.Body Email.Cc Email.From Email.IgnoreServerCertificateIssues Email.LocalDomain Email.Password Email.Port Email.Priority Email.Server Email.Subject Email.To Email.UserName Email.UseSSL object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods GenericExtensions.When<TObject>(TObject, bool, Func<TObject, TObject>) ExpandoObjectExtensions.ConvertToExpando(object?) Constructors EmailSender(IFeatureManager?, IDataService?) Constructor public EmailSender(IFeatureManager? featureManager, IDataService? dataService) Parameters featureManager IFeatureManager The feature manager. dataService IDataService The data service. Properties CanSend Gets a value indicating whether this instance can send. public bool CanSend { get; } Property Value bool true if this instance can send; otherwise, false. Methods Send() Logs and sends the email. public void Send() SendAsync() Logs and sends the email. public Task SendAsync() Returns Task The resulting Task See Also Email"
  },
  "api/Mithril.Communication.Email.Utils.html": {
    "href": "api/Mithril.Communication.Email.Utils.html",
    "title": "Namespace Mithril.Communication.Email.Utils | Mithril API Reference",
    "keywords": "Namespace Mithril.Communication.Email.Utils Classes EmailSender Email sender"
  },
  "api/Mithril.Communication.Email.html": {
    "href": "api/Mithril.Communication.Email.html",
    "title": "Namespace Mithril.Communication.Email | Mithril API Reference",
    "keywords": "Namespace Mithril.Communication.Email Classes EmailModule Email module"
  },
  "api/Mithril.Communication.Models.Mappings.MessageTemplateMapping.html": {
    "href": "api/Mithril.Communication.Models.Mappings.MessageTemplateMapping.html",
    "title": "Class MessageTemplateMapping | Mithril API Reference",
    "keywords": "Class MessageTemplateMapping Namespace Mithril.Communication.Models.Mappings Assembly Mithril.Communication.dll Message template mapping public class MessageTemplateMapping : MappingBaseClass<MessageTemplate, DefaultDatabase>, IMapping<MessageTemplate>, IMapping Inheritance object MappingBaseClass<MessageTemplate, DefaultDatabase> MessageTemplateMapping Implements IMapping<MessageTemplate> IMapping Inherited Members MappingBaseClass<MessageTemplate, DefaultDatabase>.AddAutoKey() MappingBaseClass<MessageTemplate, DefaultDatabase>.ContainsProperty(string) MappingBaseClass<MessageTemplate, DefaultDatabase>.Copy(IMapping) MappingBaseClass<MessageTemplate, DefaultDatabase>.CopyProperty(IIDProperty) MappingBaseClass<MessageTemplate, DefaultDatabase>.CopyProperty(IProperty) MappingBaseClass<MessageTemplate, DefaultDatabase>.CopyProperty(IMapProperty) MappingBaseClass<MessageTemplate, DefaultDatabase>.CopyProperty(IManyToOneProperty) MappingBaseClass<MessageTemplate, DefaultDatabase>.CopyProperty(IManyToManyProperty) MappingBaseClass<MessageTemplate, DefaultDatabase>.Equals(object) MappingBaseClass<MessageTemplate, DefaultDatabase>.GetColumnName(string) MappingBaseClass<MessageTemplate, DefaultDatabase>.GetHashCode() MappingBaseClass<MessageTemplate, DefaultDatabase>.ID<TDataType>(Expression<Func<MessageTemplate, TDataType>>) MappingBaseClass<MessageTemplate, DefaultDatabase>.ManyToMany<TDataType>(Expression<Func<MessageTemplate, IList<TDataType>>>) MappingBaseClass<MessageTemplate, DefaultDatabase>.ManyToOne<TDataType>(Expression<Func<MessageTemplate, IList<TDataType>>>) MappingBaseClass<MessageTemplate, DefaultDatabase>.ManyToOne<TDataType>(Expression<Func<MessageTemplate, TDataType>>) MappingBaseClass<MessageTemplate, DefaultDatabase>.Map<TDataType>(Expression<Func<MessageTemplate, TDataType>>) MappingBaseClass<MessageTemplate, DefaultDatabase>.Reduce(ILogger) MappingBaseClass<MessageTemplate, DefaultDatabase>.Reduce(IMapping, ILogger) MappingBaseClass<MessageTemplate, DefaultDatabase>.Reference<TDataType>(Expression<Func<MessageTemplate, TDataType>>) MappingBaseClass<MessageTemplate, DefaultDatabase>.SetQuery(QueryType, string, CommandType, params IParameter[]) MappingBaseClass<MessageTemplate, DefaultDatabase>.Setup() MappingBaseClass<MessageTemplate, DefaultDatabase>.ToString() MappingBaseClass<MessageTemplate, DefaultDatabase>.AutoIDProperties MappingBaseClass<MessageTemplate, DefaultDatabase>.DatabaseConfigType MappingBaseClass<MessageTemplate, DefaultDatabase>.IDProperties MappingBaseClass<MessageTemplate, DefaultDatabase>.ManyToManyProperties MappingBaseClass<MessageTemplate, DefaultDatabase>.ManyToOneProperties MappingBaseClass<MessageTemplate, DefaultDatabase>.MapProperties MappingBaseClass<MessageTemplate, DefaultDatabase>.Merge MappingBaseClass<MessageTemplate, DefaultDatabase>.ObjectType MappingBaseClass<MessageTemplate, DefaultDatabase>.Order MappingBaseClass<MessageTemplate, DefaultDatabase>.Prefix MappingBaseClass<MessageTemplate, DefaultDatabase>.Queries MappingBaseClass<MessageTemplate, DefaultDatabase>.ReferenceProperties MappingBaseClass<MessageTemplate, DefaultDatabase>.SchemaName MappingBaseClass<MessageTemplate, DefaultDatabase>.Suffix MappingBaseClass<MessageTemplate, DefaultDatabase>.TableName object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods GenericExtensions.When<TObject>(TObject, bool, Func<TObject, TObject>) ExpandoObjectExtensions.ConvertToExpando(object?) Constructors MessageTemplateMapping() Initializes a new instance of the MessageTemplateMapping class. public MessageTemplateMapping() See Also MappingBaseClass<TClassType, TDatabaseType>"
  },
  "api/Mithril.Communication.Models.Mappings.html": {
    "href": "api/Mithril.Communication.Models.Mappings.html",
    "title": "Namespace Mithril.Communication.Models.Mappings | Mithril API Reference",
    "keywords": "Namespace Mithril.Communication.Models.Mappings Classes MessageTemplateMapping Message template mapping"
  },
  "api/Mithril.Communication.Models.MessageTemplate.html": {
    "href": "api/Mithril.Communication.Models.MessageTemplate.html",
    "title": "Class MessageTemplate | Mithril API Reference",
    "keywords": "Class MessageTemplate Namespace Mithril.Communication.Models Assembly Mithril.Communication.dll Message template public class MessageTemplate : ModelBase<MessageTemplate>, IModel<MessageTemplate>, IEquatable<IModel<MessageTemplate>>, IComparable, IComparable<MessageTemplate>, IEquatable<ModelBase<MessageTemplate>>, IMessageTemplate, IModel, IEquatable<IModel> Inheritance object ModelBase<MessageTemplate> MessageTemplate Implements IModel<MessageTemplate> IEquatable<IModel<MessageTemplate>> IComparable IComparable<MessageTemplate> IEquatable<ModelBase<MessageTemplate>> IMessageTemplate IModel IEquatable<IModel> Inherited Members ModelBase<MessageTemplate>.Active ModelBase<MessageTemplate>.Creator ModelBase<MessageTemplate>.DateCreated ModelBase<MessageTemplate>.DateModified ModelBase<MessageTemplate>.ID ModelBase<MessageTemplate>.Modifier ModelBase<MessageTemplate>.TenantID ModelBase<MessageTemplate>.All(IDataService) ModelBase<MessageTemplate>.AllActive(IDataService) ModelBase<MessageTemplate>.AllInactive(IDataService) ModelBase<MessageTemplate>.Load(long, IDataService) ModelBase<MessageTemplate>.Query(IDataService) ModelBase<MessageTemplate>.CanBeModifiedBy(ClaimsPrincipal) ModelBase<MessageTemplate>.CanBeViewedBy(ClaimsPrincipal) ModelBase<MessageTemplate>.CompareTo(object) ModelBase<MessageTemplate>.DeleteAsync(IDataService, ClaimsPrincipal, bool) ModelBase<MessageTemplate>.Equals(IModel) ModelBase<MessageTemplate>.Equals(IModel<MessageTemplate>) ModelBase<MessageTemplate>.Equals(ModelBase<MessageTemplate>) ModelBase<MessageTemplate>.SaveAsync(IDataService, ClaimsPrincipal) ModelBase<MessageTemplate>.SetupObject(IDataService, ClaimsPrincipal) ModelBase<MessageTemplate>.SetupObject(IDataService, IUser) ModelBase<MessageTemplate>.SetupObjectAndReturn(IDataService, ClaimsPrincipal) object.Equals(object, object) object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Extension Methods GenericExtensions.When<TObject>(TObject, bool, Func<TObject, TObject>) ExpandoObjectExtensions.ConvertToExpando(object?) Constructors MessageTemplate() Initializes a new instance of the MessageTemplate class. public MessageTemplate() MessageTemplate(string) Initializes a new instance of the MessageTemplate class. public MessageTemplate(string displayName) Parameters displayName string The display name. Exceptions ArgumentNullException displayName ArgumentException displayName Properties DisplayName Gets or sets the display name. [Required] [MinLength(1)] [MaxLength(128)] public string? DisplayName { get; set; } Property Value string The display name. Methods CompareTo(MessageTemplate?) Compares the object to another object public override int CompareTo(MessageTemplate? other) Parameters other MessageTemplate Object to compare to Returns int 0 if they are equal, -1 if this is smaller, 1 if it is larger Equals(MessageTemplate) Indicates whether the current object is equal to another object of the same type. public bool Equals(MessageTemplate other) Parameters other MessageTemplate An object to compare with this object. Returns bool true if the current object is equal to the other parameter; otherwise, false. Equals(object?) Determines whether the specified object, is equal to this instance. public override bool Equals(object? obj) Parameters obj object The object to compare with this instance. Returns bool true if the specified object is equal to this instance; otherwise, false. GetContent(IHostEnvironment?) Gets the content. public string GetContent(IHostEnvironment? hostingEnvironment) Parameters hostingEnvironment IHostEnvironment The hosting environment. Returns string The content GetHashCode() Returns a hash code for this instance. public override int GetHashCode() Returns int A hash code for this instance, suitable for use in hashing algorithms and data structures like a hash table. Load(string, IDataService?) Loads the message template based on the name specified. public static MessageTemplate? Load(string displayName, IDataService? dataService) Parameters displayName string The display name. dataService IDataService The data service. Returns MessageTemplate The message template. LoadOrCreateAsync(string, IDataService?, ClaimsPrincipal?) Loads a specific message template or creates it. public static Task<IMessageTemplate> LoadOrCreateAsync(string displayName, IDataService? dataService, ClaimsPrincipal? user) Parameters displayName string The display name. dataService IDataService The data service. user ClaimsPrincipal The user. Returns Task<IMessageTemplate> The message template specified. SetContent(IHostEnvironment?, string?) Sets the content. public IMessageTemplate SetContent(IHostEnvironment? hostingEnvironment, string? content) Parameters hostingEnvironment IHostEnvironment The hosting environment. content string The content. Returns IMessageTemplate Message template ToString() Returns a string that represents this instance. public override string ToString() Returns string A string that represents this instance. Operators operator ==(MessageTemplate, MessageTemplate) Implements the operator ==. public static bool operator ==(MessageTemplate first, MessageTemplate second) Parameters first MessageTemplate The first. second MessageTemplate The second. Returns bool The result of the operator. operator >(MessageTemplate, MessageTemplate) Implements the operator >. public static bool operator >(MessageTemplate left, MessageTemplate right) Parameters left MessageTemplate The left. right MessageTemplate The right. Returns bool The result of the operator. operator >=(MessageTemplate, MessageTemplate) Implements the operator >=. public static bool operator >=(MessageTemplate left, MessageTemplate right) Parameters left MessageTemplate The left. right MessageTemplate The right. Returns bool The result of the operator. operator !=(MessageTemplate, MessageTemplate) Implements the operator !=. public static bool operator !=(MessageTemplate left, MessageTemplate right) Parameters left MessageTemplate The left. right MessageTemplate The right. Returns bool The result of the operator. operator <(MessageTemplate, MessageTemplate) Implements the operator <. public static bool operator <(MessageTemplate left, MessageTemplate right) Parameters left MessageTemplate The left. right MessageTemplate The right. Returns bool The result of the operator. operator <=(MessageTemplate, MessageTemplate) Implements the operator <=. public static bool operator <=(MessageTemplate left, MessageTemplate right) Parameters left MessageTemplate The left. right MessageTemplate The right. Returns bool The result of the operator. See Also ModelBase<TClass>"
  },
  "api/Mithril.Communication.Models.html": {
    "href": "api/Mithril.Communication.Models.html",
    "title": "Namespace Mithril.Communication.Models | Mithril API Reference",
    "keywords": "Namespace Mithril.Communication.Models Classes MessageTemplate Message template"
  },
  "api/Mithril.Communication.Services.CommunicationService.html": {
    "href": "api/Mithril.Communication.Services.CommunicationService.html",
    "title": "Class CommunicationService | Mithril API Reference",
    "keywords": "Class CommunicationService Namespace Mithril.Communication.Services Assembly Mithril.Communication.dll Communication service public class CommunicationService : ICommunicationService Inheritance object CommunicationService Implements ICommunicationService Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods GenericExtensions.When<TObject>(TObject, bool, Func<TObject, TObject>) ExpandoObjectExtensions.ConvertToExpando(object?) Remarks Initializes a new instance of the CommunicationService class. Constructors CommunicationService(IEnumerable<IChannel>, IDataService?) Communication service public CommunicationService(IEnumerable<IChannel> channels, IDataService? dataService) Parameters channels IEnumerable<IChannel> The channels. dataService IDataService The data service. Remarks Initializes a new instance of the CommunicationService class. See Also ICommunicationService Methods CreateMessage(string) Creates a message based on the channel specified. public IMessage? CreateMessage(string channel) Parameters channel string The channel. Returns IMessage The message object. LoadOrCreateTemplateAsync(string, ClaimsPrincipal?) Loads or creates a template asynchronously. public Task<IMessageTemplate> LoadOrCreateTemplateAsync(string displayName, ClaimsPrincipal? user) Parameters displayName string The display name. user ClaimsPrincipal The user. Returns Task<IMessageTemplate> The message template. SendMessageAsync(IMessage?, ClaimsPrincipal?) Sends the message asynchronously. public Task<MessageResult> SendMessageAsync(IMessage? message, ClaimsPrincipal? user) Parameters message IMessage The message. user ClaimsPrincipal The user. Returns Task<MessageResult> The async task. See Also ICommunicationService"
  },
  "api/Mithril.Communication.Services.html": {
    "href": "api/Mithril.Communication.Services.html",
    "title": "Namespace Mithril.Communication.Services | Mithril API Reference",
    "keywords": "Namespace Mithril.Communication.Services Classes CommunicationService Communication service"
  },
  "api/Mithril.Communication.html": {
    "href": "api/Mithril.Communication.html",
    "title": "Namespace Mithril.Communication | Mithril API Reference",
    "keywords": "Namespace Mithril.Communication Classes CommunicationModule Communication module"
  },
  "api/Mithril.Content.Abstractions.BaseClasses.ComponentDefinitionBaseClass-1.html": {
    "href": "api/Mithril.Content.Abstractions.BaseClasses.ComponentDefinitionBaseClass-1.html",
    "title": "Class ComponentDefinitionBaseClass<TClass> | Mithril API Reference",
    "keywords": "Class ComponentDefinitionBaseClass<TClass> Namespace Mithril.Content.Abstractions.BaseClasses Assembly Mithril.Content.Abstractions.dll Component definition base class public abstract class ComponentDefinitionBaseClass<TClass> : IComponentDefinition Type Parameters TClass The type of the class. Inheritance object ComponentDefinitionBaseClass<TClass> Implements IComponentDefinition Derived DataEditorComponent<TEntity> SettingsEditorComponent<TEntity> Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods GenericExtensions.When<TObject>(TObject, bool, Func<TObject, TObject>) ExpandoObjectExtensions.ConvertToExpando(object?) Constructors ComponentDefinitionBaseClass() Initializes a new instance of the ComponentDefinitionBaseClass<TClass> class. protected ComponentDefinitionBaseClass() Properties DefaultClass Gets the default class. public virtual string DefaultClass { get; } Property Value string The default class. DefaultProperties Gets the default properties. public abstract Dictionary<string, string> DefaultProperties { get; } Property Value Dictionary<string, string> The default properties. Name Gets the name. public string Name { get; } Property Value string The name. Schema Gets the schema. public ExpandoObject? Schema { get; } Property Value ExpandoObject The schema. ScriptFile Gets the script file. public virtual string ScriptFile { get; } Property Value string The script file. See Also IComponentDefinition"
  },
  "api/Mithril.Content.Abstractions.BaseClasses.html": {
    "href": "api/Mithril.Content.Abstractions.BaseClasses.html",
    "title": "Namespace Mithril.Content.Abstractions.BaseClasses | Mithril API Reference",
    "keywords": "Namespace Mithril.Content.Abstractions.BaseClasses Classes ComponentDefinitionBaseClass<TClass> Component definition base class"
  },
  "api/Mithril.Content.Abstractions.Interfaces.IComponentDefinition.html": {
    "href": "api/Mithril.Content.Abstractions.Interfaces.IComponentDefinition.html",
    "title": "Interface IComponentDefinition | Mithril API Reference",
    "keywords": "Interface IComponentDefinition Namespace Mithril.Content.Abstractions.Interfaces Assembly Mithril.Content.Abstractions.dll Component definition interface public interface IComponentDefinition Extension Methods GenericExtensions.When<TObject>(TObject, bool, Func<TObject, TObject>) ExpandoObjectExtensions.ConvertToExpando(object?) Properties DefaultProperties Gets the default properties. Dictionary<string, string> DefaultProperties { get; } Property Value Dictionary<string, string> The default properties. Name Gets the name. string Name { get; } Property Value string The name. Schema Gets the schema. ExpandoObject? Schema { get; } Property Value ExpandoObject The schema. ScriptFile Gets the script file. string ScriptFile { get; } Property Value string The script file."
  },
  "api/Mithril.Content.Abstractions.Interfaces.html": {
    "href": "api/Mithril.Content.Abstractions.Interfaces.html",
    "title": "Namespace Mithril.Content.Abstractions.Interfaces | Mithril API Reference",
    "keywords": "Namespace Mithril.Content.Abstractions.Interfaces Interfaces IComponentDefinition Component definition interface"
  },
  "api/Mithril.Content.Abstractions.Services.IComponentService.html": {
    "href": "api/Mithril.Content.Abstractions.Services.IComponentService.html",
    "title": "Interface IComponentService | Mithril API Reference",
    "keywords": "Interface IComponentService Namespace Mithril.Content.Abstractions.Services Assembly Mithril.Content.Abstractions.dll Component service public interface IComponentService Extension Methods GenericExtensions.When<TObject>(TObject, bool, Func<TObject, TObject>) ExpandoObjectExtensions.ConvertToExpando(object?) Properties Components Gets the components. IEnumerable<IComponentDefinition> Components { get; } Property Value IEnumerable<IComponentDefinition> The components. Methods GetComponent(string) Gets the component renderer. IComponentDefinition? GetComponent(string componentType) Parameters componentType string Type of the component. Returns IComponentDefinition The component renderer"
  },
  "api/Mithril.Content.Abstractions.Services.html": {
    "href": "api/Mithril.Content.Abstractions.Services.html",
    "title": "Namespace Mithril.Content.Abstractions.Services | Mithril API Reference",
    "keywords": "Namespace Mithril.Content.Abstractions.Services Interfaces IComponentService Component service"
  },
  "api/Mithril.Content.ContentModule.html": {
    "href": "api/Mithril.Content.ContentModule.html",
    "title": "Class ContentModule | Mithril API Reference",
    "keywords": "Class ContentModule Namespace Mithril.Content Assembly Mithril.Content.dll Content module public class ContentModule : ModuleBaseClass<ContentModule>, IEquatable<ContentModule>, IModule Inheritance object ModuleBaseClass<ContentModule> ContentModule Implements IEquatable<ContentModule> IModule Inherited Members ModuleBaseClass<ContentModule>.Category ModuleBaseClass<ContentModule>.ContentPath ModuleBaseClass<ContentModule>.Features ModuleBaseClass<ContentModule>.ID ModuleBaseClass<ContentModule>.LastModified ModuleBaseClass<ContentModule>.Name ModuleBaseClass<ContentModule>.Order ModuleBaseClass<ContentModule>.Tags ModuleBaseClass<ContentModule>.Version ModuleBaseClass<ContentModule>.ConfigureApplication(IApplicationBuilder, IConfiguration, IHostEnvironment) ModuleBaseClass<ContentModule>.ConfigureHostSettings(IHostBuilder, IConfiguration, IHostEnvironment) ModuleBaseClass<ContentModule>.ConfigureLoggingSettings(ILoggingBuilder, IConfiguration, IHostEnvironment) ModuleBaseClass<ContentModule>.ConfigureMVC(IMvcBuilder, IConfiguration, IHostEnvironment) ModuleBaseClass<ContentModule>.ConfigureRoutes(IEndpointRouteBuilder, IConfiguration, IHostEnvironment) ModuleBaseClass<ContentModule>.ConfigureWebHostSettings(IWebHostBuilder, IConfiguration, IHostEnvironment) ModuleBaseClass<ContentModule>.Equals(object) ModuleBaseClass<ContentModule>.Equals(ContentModule) ModuleBaseClass<ContentModule>.GetHashCode() ModuleBaseClass<ContentModule>.InitializeDataAsync(IDataService, IServiceProvider) ModuleBaseClass<ContentModule>.OnStarted() ModuleBaseClass<ContentModule>.OnStopped() ModuleBaseClass<ContentModule>.OnStopping() object.Equals(object, object) object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods GenericExtensions.When<TObject>(TObject, bool, Func<TObject, TObject>) ExpandoObjectExtensions.ConvertToExpando(object?) Methods ConfigureServices(IServiceCollection?, IConfiguration?, IHostEnvironment?) Configures the services for the module. public override IServiceCollection? ConfigureServices(IServiceCollection? services, IConfiguration? configuration, IHostEnvironment? environment) Parameters services IServiceCollection The services collection. configuration IConfiguration The configuration. environment IHostEnvironment The environment. Returns IServiceCollection Services See Also ModuleBaseClass<TModule>"
  },
  "api/Mithril.Content.Forms.Class1.html": {
    "href": "api/Mithril.Content.Forms.Class1.html",
    "title": "Class Class1 | Mithril API Reference",
    "keywords": "Class Class1 Namespace Mithril.Content.Forms Assembly Mithril.Content.Forms.dll Class 1 public class Class1 Inheritance object Class1 Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods GenericExtensions.When<TObject>(TObject, bool, Func<TObject, TObject>) ExpandoObjectExtensions.ConvertToExpando(object?)"
  },
  "api/Mithril.Content.Forms.html": {
    "href": "api/Mithril.Content.Forms.html",
    "title": "Namespace Mithril.Content.Forms | Mithril API Reference",
    "keywords": "Namespace Mithril.Content.Forms Classes Class1 Class 1"
  },
  "api/Mithril.Content.Services.ComponentService.html": {
    "href": "api/Mithril.Content.Services.ComponentService.html",
    "title": "Class ComponentService | Mithril API Reference",
    "keywords": "Class ComponentService Namespace Mithril.Content.Services Assembly Mithril.Content.dll Component service public class ComponentService : IComponentService Inheritance object ComponentService Implements IComponentService Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods GenericExtensions.When<TObject>(TObject, bool, Func<TObject, TObject>) ExpandoObjectExtensions.ConvertToExpando(object?) Remarks Initializes a new instance of the ComponentService class. Constructors ComponentService(IEnumerable<IComponentDefinition>) Component service public ComponentService(IEnumerable<IComponentDefinition> componentDefinitions) Parameters componentDefinitions IEnumerable<IComponentDefinition> The component definitions. Remarks Initializes a new instance of the ComponentService class. See Also IComponentService Properties Components Gets the components. public IEnumerable<IComponentDefinition> Components { get; } Property Value IEnumerable<IComponentDefinition> The components. Methods GetComponent(string) Gets the component renderer. public IComponentDefinition? GetComponent(string componentType) Parameters componentType string Type of the component. Returns IComponentDefinition The component renderer See Also IComponentService"
  },
  "api/Mithril.Content.Services.html": {
    "href": "api/Mithril.Content.Services.html",
    "title": "Namespace Mithril.Content.Services | Mithril API Reference",
    "keywords": "Namespace Mithril.Content.Services Classes ComponentService Component service"
  },
  "api/Mithril.Content.html": {
    "href": "api/Mithril.Content.html",
    "title": "Namespace Mithril.Content | Mithril API Reference",
    "keywords": "Namespace Mithril.Content Classes ContentModule Content module"
  },
  "api/Mithril.Controllers.HomeController.html": {
    "href": "api/Mithril.Controllers.HomeController.html",
    "title": "Class HomeController | Mithril API Reference",
    "keywords": "Class HomeController Namespace Mithril.Controllers Assembly Mithril.dll Home controller public class HomeController : Controller, IActionFilter, IAsyncActionFilter, IFilterMetadata, IDisposable Inheritance object ControllerBase Controller HomeController Implements IActionFilter IAsyncActionFilter IFilterMetadata IDisposable Inherited Members Controller.View() Controller.View(string) Controller.View(object) Controller.View(string, object) Controller.PartialView() Controller.PartialView(string) Controller.PartialView(object) Controller.PartialView(string, object) Controller.ViewComponent(string) Controller.ViewComponent(Type) Controller.ViewComponent(string, object) Controller.ViewComponent(Type, object) Controller.Json(object) Controller.Json(object, object) Controller.OnActionExecuting(ActionExecutingContext) Controller.OnActionExecuted(ActionExecutedContext) Controller.OnActionExecutionAsync(ActionExecutingContext, ActionExecutionDelegate) Controller.Dispose() Controller.Dispose(bool) Controller.ViewData Controller.TempData Controller.ViewBag ControllerBase.StatusCode(int) ControllerBase.StatusCode(int, object) ControllerBase.Content(string) ControllerBase.Content(string, string) ControllerBase.Content(string, string, Encoding) ControllerBase.Content(string, MediaTypeHeaderValue) ControllerBase.NoContent() ControllerBase.Ok() ControllerBase.Ok(object) ControllerBase.Redirect(string) ControllerBase.RedirectPermanent(string) ControllerBase.RedirectPreserveMethod(string) ControllerBase.RedirectPermanentPreserveMethod(string) ControllerBase.LocalRedirect(string) ControllerBase.LocalRedirectPermanent(string) ControllerBase.LocalRedirectPreserveMethod(string) ControllerBase.LocalRedirectPermanentPreserveMethod(string) ControllerBase.RedirectToAction() ControllerBase.RedirectToAction(string) ControllerBase.RedirectToAction(string, object) ControllerBase.RedirectToAction(string, string) ControllerBase.RedirectToAction(string, string, object) ControllerBase.RedirectToAction(string, string, string) ControllerBase.RedirectToAction(string, string, object, string) ControllerBase.RedirectToActionPreserveMethod(string, string, object, string) ControllerBase.RedirectToActionPermanent(string) ControllerBase.RedirectToActionPermanent(string, object) ControllerBase.RedirectToActionPermanent(string, string) ControllerBase.RedirectToActionPermanent(string, string, string) ControllerBase.RedirectToActionPermanent(string, string, object) ControllerBase.RedirectToActionPermanent(string, string, object, string) ControllerBase.RedirectToActionPermanentPreserveMethod(string, string, object, string) ControllerBase.RedirectToRoute(string) ControllerBase.RedirectToRoute(object) ControllerBase.RedirectToRoute(string, object) ControllerBase.RedirectToRoute(string, string) ControllerBase.RedirectToRoute(string, object, string) ControllerBase.RedirectToRoutePreserveMethod(string, object, string) ControllerBase.RedirectToRoutePermanent(string) ControllerBase.RedirectToRoutePermanent(object) ControllerBase.RedirectToRoutePermanent(string, object) ControllerBase.RedirectToRoutePermanent(string, string) ControllerBase.RedirectToRoutePermanent(string, object, string) ControllerBase.RedirectToRoutePermanentPreserveMethod(string, object, string) ControllerBase.RedirectToPage(string) ControllerBase.RedirectToPage(string, object) ControllerBase.RedirectToPage(string, string) ControllerBase.RedirectToPage(string, string, object) ControllerBase.RedirectToPage(string, string, string) ControllerBase.RedirectToPage(string, string, object, string) ControllerBase.RedirectToPagePermanent(string) ControllerBase.RedirectToPagePermanent(string, object) ControllerBase.RedirectToPagePermanent(string, string) ControllerBase.RedirectToPagePermanent(string, string, string) ControllerBase.RedirectToPagePermanent(string, string, object, string) ControllerBase.RedirectToPagePreserveMethod(string, string, object, string) ControllerBase.RedirectToPagePermanentPreserveMethod(string, string, object, string) ControllerBase.File(byte[], string) ControllerBase.File(byte[], string, bool) ControllerBase.File(byte[], string, string) ControllerBase.File(byte[], string, string, bool) ControllerBase.File(byte[], string, DateTimeOffset?, EntityTagHeaderValue) ControllerBase.File(byte[], string, DateTimeOffset?, EntityTagHeaderValue, bool) ControllerBase.File(byte[], string, string, DateTimeOffset?, EntityTagHeaderValue) ControllerBase.File(byte[], string, string, DateTimeOffset?, EntityTagHeaderValue, bool) ControllerBase.File(Stream, string) ControllerBase.File(Stream, string, bool) ControllerBase.File(Stream, string, string) ControllerBase.File(Stream, string, string, bool) ControllerBase.File(Stream, string, DateTimeOffset?, EntityTagHeaderValue) ControllerBase.File(Stream, string, DateTimeOffset?, EntityTagHeaderValue, bool) ControllerBase.File(Stream, string, string, DateTimeOffset?, EntityTagHeaderValue) ControllerBase.File(Stream, string, string, DateTimeOffset?, EntityTagHeaderValue, bool) ControllerBase.File(string, string) ControllerBase.File(string, string, bool) ControllerBase.File(string, string, string) ControllerBase.File(string, string, string, bool) ControllerBase.File(string, string, DateTimeOffset?, EntityTagHeaderValue) ControllerBase.File(string, string, DateTimeOffset?, EntityTagHeaderValue, bool) ControllerBase.File(string, string, string, DateTimeOffset?, EntityTagHeaderValue) ControllerBase.File(string, string, string, DateTimeOffset?, EntityTagHeaderValue, bool) ControllerBase.PhysicalFile(string, string) ControllerBase.PhysicalFile(string, string, bool) ControllerBase.PhysicalFile(string, string, string) ControllerBase.PhysicalFile(string, string, string, bool) ControllerBase.PhysicalFile(string, string, DateTimeOffset?, EntityTagHeaderValue) ControllerBase.PhysicalFile(string, string, DateTimeOffset?, EntityTagHeaderValue, bool) ControllerBase.PhysicalFile(string, string, string, DateTimeOffset?, EntityTagHeaderValue) ControllerBase.PhysicalFile(string, string, string, DateTimeOffset?, EntityTagHeaderValue, bool) ControllerBase.Unauthorized() ControllerBase.Unauthorized(object) ControllerBase.NotFound() ControllerBase.NotFound(object) ControllerBase.BadRequest() ControllerBase.BadRequest(object) ControllerBase.BadRequest(ModelStateDictionary) ControllerBase.UnprocessableEntity() ControllerBase.UnprocessableEntity(object) ControllerBase.UnprocessableEntity(ModelStateDictionary) ControllerBase.Conflict() ControllerBase.Conflict(object) ControllerBase.Conflict(ModelStateDictionary) ControllerBase.Problem(string, string, int?, string, string) ControllerBase.ValidationProblem(ValidationProblemDetails) ControllerBase.ValidationProblem(ModelStateDictionary) ControllerBase.ValidationProblem() ControllerBase.ValidationProblem(string, string, int?, string, string, ModelStateDictionary) ControllerBase.Created() ControllerBase.Created(string, object) ControllerBase.Created(Uri, object) ControllerBase.CreatedAtAction(string, object) ControllerBase.CreatedAtAction(string, object, object) ControllerBase.CreatedAtAction(string, string, object, object) ControllerBase.CreatedAtRoute(string, object) ControllerBase.CreatedAtRoute(object, object) ControllerBase.CreatedAtRoute(string, object, object) ControllerBase.Accepted() ControllerBase.Accepted(object) ControllerBase.Accepted(Uri) ControllerBase.Accepted(string) ControllerBase.Accepted(string, object) ControllerBase.Accepted(Uri, object) ControllerBase.AcceptedAtAction(string) ControllerBase.AcceptedAtAction(string, string) ControllerBase.AcceptedAtAction(string, object) ControllerBase.AcceptedAtAction(string, string, object) ControllerBase.AcceptedAtAction(string, object, object) ControllerBase.AcceptedAtAction(string, string, object, object) ControllerBase.AcceptedAtRoute(object) ControllerBase.AcceptedAtRoute(string) ControllerBase.AcceptedAtRoute(string, object) ControllerBase.AcceptedAtRoute(object, object) ControllerBase.AcceptedAtRoute(string, object, object) ControllerBase.Challenge() ControllerBase.Challenge(params string[]) ControllerBase.Challenge(AuthenticationProperties) ControllerBase.Challenge(AuthenticationProperties, params string[]) ControllerBase.Forbid() ControllerBase.Forbid(params string[]) ControllerBase.Forbid(AuthenticationProperties) ControllerBase.Forbid(AuthenticationProperties, params string[]) ControllerBase.SignIn(ClaimsPrincipal) ControllerBase.SignIn(ClaimsPrincipal, string) ControllerBase.SignIn(ClaimsPrincipal, AuthenticationProperties) ControllerBase.SignIn(ClaimsPrincipal, AuthenticationProperties, string) ControllerBase.SignOut() ControllerBase.SignOut(AuthenticationProperties) ControllerBase.SignOut(params string[]) ControllerBase.SignOut(AuthenticationProperties, params string[]) ControllerBase.TryUpdateModelAsync<TModel>(TModel) ControllerBase.TryUpdateModelAsync<TModel>(TModel, string) ControllerBase.TryUpdateModelAsync<TModel>(TModel, string, IValueProvider) ControllerBase.TryUpdateModelAsync<TModel>(TModel, string, params Expression<Func<TModel, object>>[]) ControllerBase.TryUpdateModelAsync<TModel>(TModel, string, Func<ModelMetadata, bool>) ControllerBase.TryUpdateModelAsync<TModel>(TModel, string, IValueProvider, params Expression<Func<TModel, object>>[]) ControllerBase.TryUpdateModelAsync<TModel>(TModel, string, IValueProvider, Func<ModelMetadata, bool>) ControllerBase.TryUpdateModelAsync(object, Type, string) ControllerBase.TryUpdateModelAsync(object, Type, string, IValueProvider, Func<ModelMetadata, bool>) ControllerBase.TryValidateModel(object) ControllerBase.TryValidateModel(object, string) ControllerBase.HttpContext ControllerBase.Request ControllerBase.Response ControllerBase.RouteData ControllerBase.ModelState ControllerBase.ControllerContext ControllerBase.MetadataProvider ControllerBase.ModelBinderFactory ControllerBase.Url ControllerBase.ObjectValidator ControllerBase.ProblemDetailsFactory ControllerBase.User ControllerBase.Empty object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods GenericExtensions.When<TObject>(TObject, bool, Func<TObject, TObject>) ExpandoObjectExtensions.ConvertToExpando(object?) Remarks Initializes a new instance of the HomeController class. Constructors HomeController(ILogger<HomeController>, ISecurityService, ICommunicationService) Home controller public HomeController(ILogger<HomeController> logger, ISecurityService securityService, ICommunicationService communicationService) Parameters logger ILogger<HomeController> The logger. securityService ISecurityService The security service. communicationService ICommunicationService The communication service. Remarks Initializes a new instance of the HomeController class. See Also Controller Methods EmailTest() Email test. public Task<IActionResult> EmailTest() Returns Task<IActionResult> Error() Errors this instance. [ResponseCache(Duration = 0, Location = ResponseCacheLocation.None, NoStore = true)] public IActionResult Error() Returns IActionResult Index() Indexes this instance. public IActionResult Index() Returns IActionResult Index(IFormCollection) Indexes the specified form. [HttpPost] public IActionResult Index(IFormCollection form) Parameters form IFormCollection The form. Returns IActionResult Privacy() Privacies this instance. [Authorize(Policy = \"Test\")] [FeatureGate(new object[] { MyFeatureFlags.ExampleFlag })] [IPFilter(\"AdminSection\")] public IActionResult Privacy() Returns IActionResult See Also Controller"
  },
  "api/Mithril.Controllers.MyFeatureFlags.html": {
    "href": "api/Mithril.Controllers.MyFeatureFlags.html",
    "title": "Enum MyFeatureFlags | Mithril API Reference",
    "keywords": "Enum MyFeatureFlags Namespace Mithril.Controllers Assembly Mithril.dll Example feature flags controlled by config public enum MyFeatureFlags Extension Methods GenericExtensions.When<TObject>(TObject, bool, Func<TObject, TObject>) ExpandoObjectExtensions.ConvertToExpando(object?) Fields ExampleFlag = 0 The example flag"
  },
  "api/Mithril.Controllers.html": {
    "href": "api/Mithril.Controllers.html",
    "title": "Namespace Mithril.Controllers | Mithril API Reference",
    "keywords": "Namespace Mithril.Controllers Classes HomeController Home controller Enums MyFeatureFlags Example feature flags controlled by config"
  },
  "api/Mithril.Core.Abstractions.BaseClasses.GenericResult.html": {
    "href": "api/Mithril.Core.Abstractions.BaseClasses.GenericResult.html",
    "title": "Class GenericResult | Mithril API Reference",
    "keywords": "Class GenericResult Namespace Mithril.Core.Abstractions.BaseClasses Assembly Mithril.Core.Abstractions.dll Generic result public abstract record GenericResult : IEquatable<GenericResult> Inheritance object GenericResult Implements IEquatable<GenericResult> Derived CommandCreationResult EventResult MessageResult Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods GenericExtensions.When<TObject>(TObject, bool, Func<TObject, TObject>) ExpandoObjectExtensions.ConvertToExpando(object?) Constructors GenericResult(string, Exception?) Generic result protected GenericResult(string Message, Exception? Exception = null) Parameters Message string Message Exception Exception Exception See Also IEquatable<T> Properties Exception Exception public Exception? Exception { get; init; } Property Value Exception Generic result IsErrorState Gets a value indicating whether this instance is error state. public virtual bool IsErrorState { get; } Property Value bool true if this instance is error state; otherwise, false. Message Message public string Message { get; init; } Property Value string Generic result See Also IEquatable<T>"
  },
  "api/Mithril.Core.Abstractions.BaseClasses.HostedServiceBaseClass-1.html": {
    "href": "api/Mithril.Core.Abstractions.BaseClasses.HostedServiceBaseClass-1.html",
    "title": "Class HostedServiceBaseClass<THostService> | Mithril API Reference",
    "keywords": "Class HostedServiceBaseClass<THostService> Namespace Mithril.Core.Abstractions.BaseClasses Assembly Mithril.Core.Abstractions.dll Hosted service base class public abstract class HostedServiceBaseClass<THostService> : IHostedService, IDisposable where THostService : HostedServiceBaseClass<THostService> Type Parameters THostService Host service type Inheritance object HostedServiceBaseClass<THostService> Implements IHostedService IDisposable Derived BackgroundTasksHostedService Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods GenericExtensions.When<TObject>(TObject, bool, Func<TObject, TObject>) ExpandoObjectExtensions.ConvertToExpando(object?) Constructors HostedServiceBaseClass(ILogger<THostService>?, double) Initializes a new instance of HostedServiceBaseClass protected HostedServiceBaseClass(ILogger<THostService>? logger, double frequency) Parameters logger ILogger<THostService> Logger frequency double Frequency that it runs at. Properties Description Gets the description for the hosted service. Used for logging. protected virtual string? Description { get; } Property Value string Hosted service base class Logger Gets the logger. protected ILogger<THostService>? Logger { get; } Property Value ILogger<THostService> The logger. Methods Dispose() Performs application-defined tasks associated with freeing, releasing, or resetting unmanaged resources. public void Dispose() Dispose(bool) Releases unmanaged and - optionally - managed resources. protected virtual void Dispose(bool managed) Parameters managed bool true to release both managed and unmanaged resources; false to release only unmanaged resources. DoWorkAsync() Called to run the service. protected abstract Task DoWorkAsync() Returns Task The async task. StartAsync(CancellationToken) Triggered when the application host is ready to start the service. public Task StartAsync(CancellationToken cancellationToken) Parameters cancellationToken CancellationToken Indicates that the start process has been aborted. Returns Task The async task. StopAsync(CancellationToken) Triggered when the application host is performing a graceful shutdown. public Task StopAsync(CancellationToken cancellationToken) Parameters cancellationToken CancellationToken Indicates that the shutdown process should no longer be graceful. Returns Task The async task."
  },
  "api/Mithril.Core.Abstractions.BaseClasses.html": {
    "href": "api/Mithril.Core.Abstractions.BaseClasses.html",
    "title": "Namespace Mithril.Core.Abstractions.BaseClasses | Mithril API Reference",
    "keywords": "Namespace Mithril.Core.Abstractions.BaseClasses Classes GenericResult Generic result HostedServiceBaseClass<THostService> Hosted service base class"
  },
  "api/Mithril.Core.Abstractions.Configuration.Compression.html": {
    "href": "api/Mithril.Core.Abstractions.Configuration.Compression.html",
    "title": "Class Compression | Mithril API Reference",
    "keywords": "Class Compression Namespace Mithril.Core.Abstractions.Configuration Assembly Mithril.Core.Abstractions.dll Compression settings public class Compression Inheritance object Compression Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods GenericExtensions.When<TObject>(TObject, bool, Func<TObject, TObject>) ExpandoObjectExtensions.ConvertToExpando(object?) Properties AllowHttps Gets or sets a value indicating whether [allow HTTPS]. public bool AllowHttps { get; set; } Property Value bool true if [allow HTTPS]; otherwise, false. DynamicCompression Gets or sets a value indicating whether [dynamic compression]. public bool DynamicCompression { get; set; } Property Value bool true if [dynamic compression]; otherwise, false."
  },
  "api/Mithril.Core.Abstractions.Configuration.Mime.html": {
    "href": "api/Mithril.Core.Abstractions.Configuration.Mime.html",
    "title": "Class Mime | Mithril API Reference",
    "keywords": "Class Mime Namespace Mithril.Core.Abstractions.Configuration Assembly Mithril.Core.Abstractions.dll Mime type data holder public class Mime Inheritance object Mime Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods GenericExtensions.When<TObject>(TObject, bool, Func<TObject, TObject>) ExpandoObjectExtensions.ConvertToExpando(object?) Properties Extension Gets or sets the extension. public string? Extension { get; set; } Property Value string The extension. MimeType Gets or sets the type of the MIME. public string? MimeType { get; set; } Property Value string The type of the MIME."
  },
  "api/Mithril.Core.Abstractions.Configuration.MithrilConfig.html": {
    "href": "api/Mithril.Core.Abstractions.Configuration.MithrilConfig.html",
    "title": "Class MithrilConfig | Mithril API Reference",
    "keywords": "Class MithrilConfig Namespace Mithril.Core.Abstractions.Configuration Assembly Mithril.Core.Abstractions.dll Mithril config public class MithrilConfig Inheritance object MithrilConfig Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods GenericExtensions.When<TObject>(TObject, bool, Func<TObject, TObject>) ExpandoObjectExtensions.ConvertToExpando(object?) Properties ApplicationDescription Gets or sets the application description. public string? ApplicationDescription { get; set; } Property Value string The application description. ApplicationName Gets or sets the name of the application. public string? ApplicationName { get; set; } Property Value string The name of the application. Compression Gets or sets the compression. public Compression? Compression { get; set; } Property Value Compression The compression. MimeTypes Gets or sets the file mappings. public List<Mime>? MimeTypes { get; set; } Property Value List<Mime> The file mappings. Security Gets or sets the security. public Security? Security { get; set; } Property Value Security The security. StaticFiles Gets or sets the static files. public StaticFiles? StaticFiles { get; set; } Property Value StaticFiles The static files."
  },
  "api/Mithril.Core.Abstractions.Configuration.Security.html": {
    "href": "api/Mithril.Core.Abstractions.Configuration.Security.html",
    "title": "Class Security | Mithril API Reference",
    "keywords": "Class Security Namespace Mithril.Core.Abstractions.Configuration Assembly Mithril.Core.Abstractions.dll Security options public class Security Inheritance object Security Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods GenericExtensions.When<TObject>(TObject, bool, Func<TObject, TObject>) ExpandoObjectExtensions.ConvertToExpando(object?) Properties ContentSecurityPolicy Gets or sets the content security policy. public string? ContentSecurityPolicy { get; set; } Property Value string The content security policy. DefaultCorsPolicy Gets or sets the default cors origins (if empty, CORS is not enabled by default). public string? DefaultCorsPolicy { get; set; } Property Value string The default cors origins (if empty, CORS is not enabled by default). RequireHttps Gets or sets the require HTTPS. public bool RequireHttps { get; set; } Property Value bool The require HTTPS. XFrameOptions Gets or sets the x-frame options. public string? XFrameOptions { get; set; } Property Value string The x-frame options."
  },
  "api/Mithril.Core.Abstractions.Configuration.StaticFiles.html": {
    "href": "api/Mithril.Core.Abstractions.Configuration.StaticFiles.html",
    "title": "Class StaticFiles | Mithril API Reference",
    "keywords": "Class StaticFiles Namespace Mithril.Core.Abstractions.Configuration Assembly Mithril.Core.Abstractions.dll Static files public class StaticFiles Inheritance object StaticFiles Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods GenericExtensions.When<TObject>(TObject, bool, Func<TObject, TObject>) ExpandoObjectExtensions.ConvertToExpando(object?) Properties CacheControlMaxAge Gets or sets the maximum age. public long CacheControlMaxAge { get; set; } Property Value long The maximum age."
  },
  "api/Mithril.Core.Abstractions.Configuration.html": {
    "href": "api/Mithril.Core.Abstractions.Configuration.html",
    "title": "Namespace Mithril.Core.Abstractions.Configuration | Mithril API Reference",
    "keywords": "Namespace Mithril.Core.Abstractions.Configuration Classes Compression Compression settings Mime Mime type data holder MithrilConfig Mithril config Security Security options StaticFiles Static files"
  },
  "api/Mithril.Core.Abstractions.Extensions.ExpandoObjectExtensions.html": {
    "href": "api/Mithril.Core.Abstractions.Extensions.ExpandoObjectExtensions.html",
    "title": "Class ExpandoObjectExtensions | Mithril API Reference",
    "keywords": "Class ExpandoObjectExtensions Namespace Mithril.Core.Abstractions.Extensions Assembly Mithril.Core.Abstractions.dll ExpandoObject extension methods public static class ExpandoObjectExtensions Inheritance object ExpandoObjectExtensions Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Methods ConvertExpando<TEntity>(ExpandoObject?) Converts the ExpandoObject to the type specified. public static TEntity? ConvertExpando<TEntity>(this ExpandoObject? value) Parameters value ExpandoObject The value. Returns TEntity The view model equivalent. Type Parameters TEntity The type of the entity. ConvertToExpando(IDictionary<string, object?>?) Converts to expando. public static ExpandoObject? ConvertToExpando(this IDictionary<string, object?>? value) Parameters value IDictionary<string, object> The value. Returns ExpandoObject The resulting object ConvertToExpando(object?) Converts the object to an expando. public static ExpandoObject? ConvertToExpando(this object? value) Parameters value object The value. Returns ExpandoObject The resulting object"
  },
  "api/Mithril.Core.Abstractions.Extensions.IConfigurationExtensions.html": {
    "href": "api/Mithril.Core.Abstractions.Extensions.IConfigurationExtensions.html",
    "title": "Class IConfigurationExtensions | Mithril API Reference",
    "keywords": "Class IConfigurationExtensions Namespace Mithril.Core.Abstractions.Extensions Assembly Mithril.Core.Abstractions.dll Configuration extensions public static class IConfigurationExtensions Inheritance object IConfigurationExtensions Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Methods GetConfig<TOptions>(IConfiguration?, string) Gets the configuration section requested. public static TOptions? GetConfig<TOptions>(this IConfiguration? configuration, string section) where TOptions : class Parameters configuration IConfiguration The configuration. section string The section. Returns TOptions The config specified. Type Parameters TOptions The type of the options. GetSystemConfig(IConfiguration?) Gets the system configuration. public static MithrilConfig? GetSystemConfig(this IConfiguration? configuration) Parameters configuration IConfiguration The configuration. Returns MithrilConfig The system configuration."
  },
  "api/Mithril.Core.Abstractions.Extensions.IFeatureManagerExtensions.html": {
    "href": "api/Mithril.Core.Abstractions.Extensions.IFeatureManagerExtensions.html",
    "title": "Class IFeatureManagerExtensions | Mithril API Reference",
    "keywords": "Class IFeatureManagerExtensions Namespace Mithril.Core.Abstractions.Extensions Assembly Mithril.Core.Abstractions.dll Feature manager extension public static class IFeatureManagerExtensions Inheritance object IFeatureManagerExtensions Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Methods AreFeaturesEnabled(IFeatureManager?, params IFeature[]) Determines if the features are enabled. public static bool AreFeaturesEnabled(this IFeatureManager? featureManager, params IFeature[] features) Parameters featureManager IFeatureManager The feature manager. features IFeature[] The features. Returns bool True if they are, false otherwise."
  },
  "api/Mithril.Core.Abstractions.Extensions.IServiceProviderExtensions.html": {
    "href": "api/Mithril.Core.Abstractions.Extensions.IServiceProviderExtensions.html",
    "title": "Class IServiceProviderExtensions | Mithril API Reference",
    "keywords": "Class IServiceProviderExtensions Namespace Mithril.Core.Abstractions.Extensions Assembly Mithril.Core.Abstractions.dll Service provider extensions public static class IServiceProviderExtensions Inheritance object IServiceProviderExtensions Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Methods Exists<TClass>(IServiceProvider?) Determines if the service has been registered. public static bool Exists<TClass>(this IServiceProvider? services) where TClass : class Parameters services IServiceProvider The service provider. Returns bool True if it exists, false otherwise. Type Parameters TClass The type of the class."
  },
  "api/Mithril.Core.Abstractions.Extensions.StringExtensions.html": {
    "href": "api/Mithril.Core.Abstractions.Extensions.StringExtensions.html",
    "title": "Class StringExtensions | Mithril API Reference",
    "keywords": "Class StringExtensions Namespace Mithril.Core.Abstractions.Extensions Assembly Mithril.Core.Abstractions.dll String extension methods public static class StringExtensions Inheritance object StringExtensions Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Methods ToPascalCase(string?) Converts the string to pascal case. public static string ToPascalCase(this string? value) Parameters value string The value. Returns string The value in pascal case."
  },
  "api/Mithril.Core.Abstractions.Extensions.html": {
    "href": "api/Mithril.Core.Abstractions.Extensions.html",
    "title": "Namespace Mithril.Core.Abstractions.Extensions | Mithril API Reference",
    "keywords": "Namespace Mithril.Core.Abstractions.Extensions Classes ExpandoObjectExtensions ExpandoObject extension methods IConfigurationExtensions Configuration extensions IFeatureManagerExtensions Feature manager extension IServiceProviderExtensions Service provider extensions StringExtensions String extension methods"
  },
  "api/Mithril.Core.Abstractions.Modules.BaseClasses.FeatureBaseClass-1.html": {
    "href": "api/Mithril.Core.Abstractions.Modules.BaseClasses.FeatureBaseClass-1.html",
    "title": "Class FeatureBaseClass<TFeature> | Mithril API Reference",
    "keywords": "Class FeatureBaseClass<TFeature> Namespace Mithril.Core.Abstractions.Modules.BaseClasses Assembly Mithril.Core.Abstractions.dll Feature base class public abstract class FeatureBaseClass<TFeature> : IFeature, IEquatable<TFeature> where TFeature : FeatureBaseClass<TFeature>, new() Type Parameters TFeature The type of the feature. Inheritance object FeatureBaseClass<TFeature> Implements IFeature IEquatable<TFeature> Derived APMFeature EmailFeature ContentFeature GenericFeature IndexingFeature MediaFeature WorkflowFeature LoggingFeature NavigationFeature Inherited Members object.Equals(object, object) object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods GenericExtensions.When<TObject>(TObject, bool, Func<TObject, TObject>) ExpandoObjectExtensions.ConvertToExpando(object?) Constructors FeatureBaseClass() Initializes a new instance of the FeatureBaseClass<TFeature> class. protected FeatureBaseClass() Properties Category The group (by category) that the feature belongs. public abstract string Category { get; } Property Value string The category. Description Gets or sets the description. public abstract string Description { get; } Property Value string The description. Instance Gets an instance of the feature. public static TFeature Instance { get; } Property Value TFeature The feature instance. Name Human-readable name of the feature. public abstract string Name { get; } Property Value string The name. Methods Equals(object?) Determines whether the specified object, is equal to this instance. public override bool Equals(object? obj) Parameters obj object The object to compare with this instance. Returns bool true if the specified object is equal to this instance; otherwise, false. Equals(TFeature?) Indicates whether the current object is equal to another object of the same type. public bool Equals(TFeature? other) Parameters other TFeature An object to compare with this object. Returns bool true if the current object is equal to the other parameter; otherwise, false. GetHashCode() Returns a hash code for this instance. public override int GetHashCode() Returns int A hash code for this instance, suitable for use in hashing algorithms and data structures like a hash table. Operators operator ==(FeatureBaseClass<TFeature>?, FeatureBaseClass<TFeature>?) Implements the operator ==. public static bool operator ==(FeatureBaseClass<TFeature>? class1, FeatureBaseClass<TFeature>? class2) Parameters class1 FeatureBaseClass<TFeature> The class1. class2 FeatureBaseClass<TFeature> The class2. Returns bool The result of the operator. operator !=(FeatureBaseClass<TFeature>?, FeatureBaseClass<TFeature>?) Implements the operator !=. public static bool operator !=(FeatureBaseClass<TFeature>? class1, FeatureBaseClass<TFeature>? class2) Parameters class1 FeatureBaseClass<TFeature> The class1. class2 FeatureBaseClass<TFeature> The class2. Returns bool The result of the operator. See Also IFeature IEquatable<T> IEquatable<T> IFeature"
  },
  "api/Mithril.Core.Abstractions.Modules.BaseClasses.ModuleBaseClass-1.html": {
    "href": "api/Mithril.Core.Abstractions.Modules.BaseClasses.ModuleBaseClass-1.html",
    "title": "Class ModuleBaseClass<TModule> | Mithril API Reference",
    "keywords": "Class ModuleBaseClass<TModule> Namespace Mithril.Core.Abstractions.Modules.BaseClasses Assembly Mithril.Core.Abstractions.dll Module base class public abstract class ModuleBaseClass<TModule> : IEquatable<TModule>, IModule where TModule : ModuleBaseClass<TModule>, new() Type Parameters TModule The type of the module. Inheritance object ModuleBaseClass<TModule> Implements IEquatable<TModule> IModule Derived APIModule CommandModule GraphQLModule SwaggerModule AdminModule DefaultApmModule BackgroundModule InMemoryCachingModule CommunicationModule EmailModule ContentModule MithrilModule DataModule FeatureModule FileSystemModule HealthCheckModule LoggingModule SerilogModule TestModule MvcModule NavigationModule RoutingModule AuthenticationModule WindowsAuthenticationModule DefaultThemeModule ThemesModule Inherited Members object.Equals(object, object) object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods GenericExtensions.When<TObject>(TObject, bool, Func<TObject, TObject>) ExpandoObjectExtensions.ConvertToExpando(object?) Constructors ModuleBaseClass() Initializes a new instance of the ModuleBaseClass<TModule> class. protected ModuleBaseClass() ModuleBaseClass(string?, string?, params string[]) Initializes a new instance of the ModuleBaseClass<TModule> class. protected ModuleBaseClass(string? name, string? category, params string[] tags) Parameters name string The name. category string The category. tags string[] The tags. Properties Category Gets the type. public string Category { get; protected set; } Property Value string The type. ContentPath The content path public string ContentPath { get; protected set; } Property Value string The content path. Features Gets the features. public virtual IFeature[] Features { get; protected set; } Property Value IFeature[] The features. ID Gets the identifier. public string ID { get; protected set; } Property Value string The identifier. LastModified Gets the last modified. public DateTime LastModified { get; } Property Value DateTime The last modified. Name Gets the name. public string Name { get; protected set; } Property Value string The name. Order Gets the order that they are initialized in. public virtual int Order { get; protected set; } Property Value int The order that they are initialized in. Tags Gets the tags. public string[] Tags { get; protected set; } Property Value string[] The tags. Version Gets the version. public string Version { get; } Property Value string The version. Methods ConfigureApplication(IApplicationBuilder?, IConfiguration?, IHostEnvironment?) Configures the application. public virtual IApplicationBuilder? ConfigureApplication(IApplicationBuilder? app, IConfiguration? configuration, IHostEnvironment? environment) Parameters app IApplicationBuilder The application. configuration IConfiguration The configuration. environment IHostEnvironment The environment. Returns IApplicationBuilder Application builder ConfigureHostSettings(IHostBuilder?, IConfiguration?, IHostEnvironment?) Configures the host settings. public virtual IHostBuilder? ConfigureHostSettings(IHostBuilder? host, IConfiguration? configuration, IHostEnvironment? environment) Parameters host IHostBuilder The host. configuration IConfiguration The configuration. environment IHostEnvironment The environment. Returns IHostBuilder Host builder ConfigureLoggingSettings(ILoggingBuilder?, IConfiguration?, IHostEnvironment?) Configures the logging settings. public virtual ILoggingBuilder? ConfigureLoggingSettings(ILoggingBuilder? logging, IConfiguration? configuration, IHostEnvironment? environment) Parameters logging ILoggingBuilder The logging. configuration IConfiguration The configuration. environment IHostEnvironment The environment. Returns ILoggingBuilder Logging builder ConfigureMVC(IMvcBuilder?, IConfiguration?, IHostEnvironment?) Configures the MVC. public virtual IMvcBuilder? ConfigureMVC(IMvcBuilder? mvcBuilder, IConfiguration? configuration, IHostEnvironment? environment) Parameters mvcBuilder IMvcBuilder The MVC builder. configuration IConfiguration The configuration. environment IHostEnvironment The environment. Returns IMvcBuilder MVC Builder ConfigureRoutes(IEndpointRouteBuilder?, IConfiguration?, IHostEnvironment?) Configures the routes. public virtual IEndpointRouteBuilder? ConfigureRoutes(IEndpointRouteBuilder? endpoints, IConfiguration? configuration, IHostEnvironment? environment) Parameters endpoints IEndpointRouteBuilder The endpoints. configuration IConfiguration The configuration. environment IHostEnvironment The environment. Returns IEndpointRouteBuilder Endpoint route builder ConfigureServices(IServiceCollection?, IConfiguration?, IHostEnvironment?) Configures the services for the module. public virtual IServiceCollection? ConfigureServices(IServiceCollection? services, IConfiguration? configuration, IHostEnvironment? environment) Parameters services IServiceCollection The services collection. configuration IConfiguration The configuration. environment IHostEnvironment The environment. Returns IServiceCollection Services ConfigureWebHostSettings(IWebHostBuilder?, IConfiguration?, IHostEnvironment?) Configures the web host settings. public virtual IWebHostBuilder? ConfigureWebHostSettings(IWebHostBuilder? webHost, IConfiguration? configuration, IHostEnvironment? environment) Parameters webHost IWebHostBuilder The web host. configuration IConfiguration The configuration. environment IHostEnvironment The environment. Returns IWebHostBuilder Web host builder. Equals(object?) Determines whether the specified object, is equal to this instance. public override bool Equals(object? obj) Parameters obj object The object to compare with this instance. Returns bool true if the specified object is equal to this instance; otherwise, false. Equals(TModule?) Indicates whether the current object is equal to another object of the same type. public bool Equals(TModule? other) Parameters other TModule An object to compare with this object. Returns bool true if the current object is equal to the other parameter; otherwise, false. GetHashCode() Returns a hash code for this instance. public override int GetHashCode() Returns int A hash code for this instance, suitable for use in hashing algorithms and data structures like a hash table. InitializeDataAsync(IDataService?, IServiceProvider?) Initializes the data. public virtual Task InitializeDataAsync(IDataService? dataService, IServiceProvider? services) Parameters dataService IDataService The data service. services IServiceProvider The services for the application. Returns Task The async task. OnStarted() Called when the application is [started]. public virtual void OnStarted() OnStopped() Called when the application is [stopped]. public virtual void OnStopped() OnStopping() Called when the application is [stopping]. public virtual void OnStopping() Operators operator ==(ModuleBaseClass<TModule>?, ModuleBaseClass<TModule>?) Implements the operator ==. public static bool operator ==(ModuleBaseClass<TModule>? class1, ModuleBaseClass<TModule>? class2) Parameters class1 ModuleBaseClass<TModule> The class1. class2 ModuleBaseClass<TModule> The class2. Returns bool The result of the operator. operator !=(ModuleBaseClass<TModule>?, ModuleBaseClass<TModule>?) Implements the operator !=. public static bool operator !=(ModuleBaseClass<TModule>? class1, ModuleBaseClass<TModule>? class2) Parameters class1 ModuleBaseClass<TModule> The class1. class2 ModuleBaseClass<TModule> The class2. Returns bool The result of the operator. See Also IModule IEquatable<T> IEquatable<T> IModule"
  },
  "api/Mithril.Core.Abstractions.Modules.BaseClasses.html": {
    "href": "api/Mithril.Core.Abstractions.Modules.BaseClasses.html",
    "title": "Namespace Mithril.Core.Abstractions.Modules.BaseClasses | Mithril API Reference",
    "keywords": "Namespace Mithril.Core.Abstractions.Modules.BaseClasses Classes FeatureBaseClass<TFeature> Feature base class ModuleBaseClass<TModule> Module base class"
  },
  "api/Mithril.Core.Abstractions.Modules.Features.ContentFeature.html": {
    "href": "api/Mithril.Core.Abstractions.Modules.Features.ContentFeature.html",
    "title": "Class ContentFeature | Mithril API Reference",
    "keywords": "Class ContentFeature Namespace Mithril.Core.Abstractions.Modules.Features Assembly Mithril.Core.Abstractions.dll Content feature public class ContentFeature : FeatureBaseClass<ContentFeature>, IFeature, IEquatable<ContentFeature> Inheritance object FeatureBaseClass<ContentFeature> ContentFeature Implements IFeature IEquatable<ContentFeature> Inherited Members FeatureBaseClass<ContentFeature>.Instance FeatureBaseClass<ContentFeature>.Equals(object) FeatureBaseClass<ContentFeature>.Equals(ContentFeature) FeatureBaseClass<ContentFeature>.GetHashCode() object.Equals(object, object) object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods GenericExtensions.When<TObject>(TObject, bool, Func<TObject, TObject>) ExpandoObjectExtensions.ConvertToExpando(object?) Properties Category The group (by category) that the feature belongs. If not provided, defaults to 'Uncategorized'. public override string Category { get; } Property Value string The category. Description Gets or sets the description. public override string Description { get; } Property Value string The description. Name Human-readable name of the feature. If not provided, the identifier will be used. public override string Name { get; } Property Value string The name. See Also FeatureBaseClass<TFeature>"
  },
  "api/Mithril.Core.Abstractions.Modules.Features.GenericFeature.html": {
    "href": "api/Mithril.Core.Abstractions.Modules.Features.GenericFeature.html",
    "title": "Class GenericFeature | Mithril API Reference",
    "keywords": "Class GenericFeature Namespace Mithril.Core.Abstractions.Modules.Features Assembly Mithril.Core.Abstractions.dll Generic feature (can be used for adhoc situations but should be done so sparingly) public class GenericFeature : FeatureBaseClass<GenericFeature>, IFeature, IEquatable<GenericFeature> Inheritance object FeatureBaseClass<GenericFeature> GenericFeature Implements IFeature IEquatable<GenericFeature> Inherited Members FeatureBaseClass<GenericFeature>.Instance FeatureBaseClass<GenericFeature>.Equals(object) FeatureBaseClass<GenericFeature>.Equals(GenericFeature) FeatureBaseClass<GenericFeature>.GetHashCode() object.Equals(object, object) object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods GenericExtensions.When<TObject>(TObject, bool, Func<TObject, TObject>) ExpandoObjectExtensions.ConvertToExpando(object?) Remarks Initializes a new instance of the GenericFeature class. Constructors GenericFeature() Initializes a new instance of the GenericFeature class. public GenericFeature() GenericFeature(string, string, string) Generic feature (can be used for adhoc situations but should be done so sparingly) public GenericFeature(string name, string category, string description) Parameters name string The name. category string The category. description string The description. Remarks Initializes a new instance of the GenericFeature class. See Also FeatureBaseClass<TFeature> Properties Category The group (by category) that the feature belongs. If not provided, defaults to 'Uncategorized'. public override string Category { get; } Property Value string The category. Description Gets or sets the description. public override string Description { get; } Property Value string The description. Name Human-readable name of the feature. If not provided, the identifier will be used. public override string Name { get; } Property Value string The name. See Also FeatureBaseClass<TFeature>"
  },
  "api/Mithril.Core.Abstractions.Modules.Features.IndexingFeature.html": {
    "href": "api/Mithril.Core.Abstractions.Modules.Features.IndexingFeature.html",
    "title": "Class IndexingFeature | Mithril API Reference",
    "keywords": "Class IndexingFeature Namespace Mithril.Core.Abstractions.Modules.Features Assembly Mithril.Core.Abstractions.dll Indexing feature public class IndexingFeature : FeatureBaseClass<IndexingFeature>, IFeature, IEquatable<IndexingFeature> Inheritance object FeatureBaseClass<IndexingFeature> IndexingFeature Implements IFeature IEquatable<IndexingFeature> Inherited Members FeatureBaseClass<IndexingFeature>.Instance FeatureBaseClass<IndexingFeature>.Equals(object) FeatureBaseClass<IndexingFeature>.Equals(IndexingFeature) FeatureBaseClass<IndexingFeature>.GetHashCode() object.Equals(object, object) object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods GenericExtensions.When<TObject>(TObject, bool, Func<TObject, TObject>) ExpandoObjectExtensions.ConvertToExpando(object?) Properties Category The group (by category) that the feature belongs. If not provided, defaults to 'Uncategorized'. public override string Category { get; } Property Value string The category. Description Gets or sets the description. public override string Description { get; } Property Value string The description. Name Human-readable name of the feature. If not provided, the identifier will be used. public override string Name { get; } Property Value string The name. See Also FeatureBaseClass<TFeature>"
  },
  "api/Mithril.Core.Abstractions.Modules.Features.MediaFeature.html": {
    "href": "api/Mithril.Core.Abstractions.Modules.Features.MediaFeature.html",
    "title": "Class MediaFeature | Mithril API Reference",
    "keywords": "Class MediaFeature Namespace Mithril.Core.Abstractions.Modules.Features Assembly Mithril.Core.Abstractions.dll Media feature public class MediaFeature : FeatureBaseClass<MediaFeature>, IFeature, IEquatable<MediaFeature> Inheritance object FeatureBaseClass<MediaFeature> MediaFeature Implements IFeature IEquatable<MediaFeature> Inherited Members FeatureBaseClass<MediaFeature>.Instance FeatureBaseClass<MediaFeature>.Equals(object) FeatureBaseClass<MediaFeature>.Equals(MediaFeature) FeatureBaseClass<MediaFeature>.GetHashCode() object.Equals(object, object) object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods GenericExtensions.When<TObject>(TObject, bool, Func<TObject, TObject>) ExpandoObjectExtensions.ConvertToExpando(object?) Properties Category The group (by category) that the feature belongs. If not provided, defaults to 'Uncategorized'. public override string Category { get; } Property Value string The category. Description Gets or sets the description. public override string Description { get; } Property Value string The description. Name Human-readable name of the feature. If not provided, the identifier will be used. public override string Name { get; } Property Value string The name. See Also FeatureBaseClass<TFeature>"
  },
  "api/Mithril.Core.Abstractions.Modules.Features.WorkflowFeature.html": {
    "href": "api/Mithril.Core.Abstractions.Modules.Features.WorkflowFeature.html",
    "title": "Class WorkflowFeature | Mithril API Reference",
    "keywords": "Class WorkflowFeature Namespace Mithril.Core.Abstractions.Modules.Features Assembly Mithril.Core.Abstractions.dll Workflow feature public class WorkflowFeature : FeatureBaseClass<WorkflowFeature>, IFeature, IEquatable<WorkflowFeature> Inheritance object FeatureBaseClass<WorkflowFeature> WorkflowFeature Implements IFeature IEquatable<WorkflowFeature> Inherited Members FeatureBaseClass<WorkflowFeature>.Instance FeatureBaseClass<WorkflowFeature>.Equals(object) FeatureBaseClass<WorkflowFeature>.Equals(WorkflowFeature) FeatureBaseClass<WorkflowFeature>.GetHashCode() object.Equals(object, object) object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods GenericExtensions.When<TObject>(TObject, bool, Func<TObject, TObject>) ExpandoObjectExtensions.ConvertToExpando(object?) Properties Category The group (by category) that the feature belongs. If not provided, defaults to 'Uncategorized'. public override string Category { get; } Property Value string The category. Description Gets or sets the description. public override string Description { get; } Property Value string The description. Name Human-readable name of the feature. If not provided, the identifier will be used. public override string Name { get; } Property Value string The name. See Also FeatureBaseClass<TFeature>"
  },
  "api/Mithril.Core.Abstractions.Modules.Features.html": {
    "href": "api/Mithril.Core.Abstractions.Modules.Features.html",
    "title": "Namespace Mithril.Core.Abstractions.Modules.Features | Mithril API Reference",
    "keywords": "Namespace Mithril.Core.Abstractions.Modules.Features Classes ContentFeature Content feature GenericFeature Generic feature (can be used for adhoc situations but should be done so sparingly) IndexingFeature Indexing feature MediaFeature Media feature WorkflowFeature Workflow feature"
  },
  "api/Mithril.Core.Abstractions.Modules.Interfaces.IFeature.html": {
    "href": "api/Mithril.Core.Abstractions.Modules.Interfaces.IFeature.html",
    "title": "Interface IFeature | Mithril API Reference",
    "keywords": "Interface IFeature Namespace Mithril.Core.Abstractions.Modules.Interfaces Assembly Mithril.Core.Abstractions.dll Feature interface. Defines information about the feature. public interface IFeature Extension Methods GenericExtensions.When<TObject>(TObject, bool, Func<TObject, TObject>) ExpandoObjectExtensions.ConvertToExpando(object?) Properties Category The group (by category) that the feature belongs. If not provided, defaults to 'Uncategorized'. string Category { get; } Property Value string The category. Description Gets or sets the description. string Description { get; } Property Value string The description. Name Human-readable name of the feature. If not provided, the identifier will be used. string Name { get; } Property Value string The name."
  },
  "api/Mithril.Core.Abstractions.Modules.Interfaces.IModule.html": {
    "href": "api/Mithril.Core.Abstractions.Modules.Interfaces.IModule.html",
    "title": "Interface IModule | Mithril API Reference",
    "keywords": "Interface IModule Namespace Mithril.Core.Abstractions.Modules.Interfaces Assembly Mithril.Core.Abstractions.dll Module interface. Defines a module and initializes it. public interface IModule Extension Methods GenericExtensions.When<TObject>(TObject, bool, Func<TObject, TObject>) ExpandoObjectExtensions.ConvertToExpando(object?) Properties Category Gets the type. string Category { get; } Property Value string The type. ContentPath The content path string ContentPath { get; } Property Value string The content path. Features Gets the features. IFeature[] Features { get; } Property Value IFeature[] The features. ID Gets the identifier. string ID { get; } Property Value string The identifier. LastModified Gets the last modified. DateTime LastModified { get; } Property Value DateTime The last modified. Name Gets the name. string Name { get; } Property Value string The name. Order Gets the order. int Order { get; } Property Value int The order. Tags Gets the tags. string[] Tags { get; } Property Value string[] The tags. Version Gets the version. string Version { get; } Property Value string The version. Methods ConfigureApplication(IApplicationBuilder?, IConfiguration?, IHostEnvironment?) Configures the application. IApplicationBuilder? ConfigureApplication(IApplicationBuilder? app, IConfiguration? configuration, IHostEnvironment? environment) Parameters app IApplicationBuilder The application. configuration IConfiguration The configuration. environment IHostEnvironment The environment. Returns IApplicationBuilder Application builder ConfigureHostSettings(IHostBuilder?, IConfiguration?, IHostEnvironment?) Configures the host settings. IHostBuilder? ConfigureHostSettings(IHostBuilder? host, IConfiguration? configuration, IHostEnvironment? environment) Parameters host IHostBuilder The host. configuration IConfiguration The configuration. environment IHostEnvironment The environment. Returns IHostBuilder Host builder ConfigureLoggingSettings(ILoggingBuilder?, IConfiguration?, IHostEnvironment?) Configures the logging settings. ILoggingBuilder? ConfigureLoggingSettings(ILoggingBuilder? logging, IConfiguration? configuration, IHostEnvironment? environment) Parameters logging ILoggingBuilder The logging. configuration IConfiguration The configuration. environment IHostEnvironment The environment. Returns ILoggingBuilder Logging builder ConfigureMVC(IMvcBuilder?, IConfiguration?, IHostEnvironment?) Configures the MVC. IMvcBuilder? ConfigureMVC(IMvcBuilder? mvcBuilder, IConfiguration? configuration, IHostEnvironment? environment) Parameters mvcBuilder IMvcBuilder The MVC builder. configuration IConfiguration The configuration. environment IHostEnvironment The environment. Returns IMvcBuilder MVC Builder ConfigureRoutes(IEndpointRouteBuilder?, IConfiguration?, IHostEnvironment?) Configures the routes. IEndpointRouteBuilder? ConfigureRoutes(IEndpointRouteBuilder? endpoints, IConfiguration? configuration, IHostEnvironment? environment) Parameters endpoints IEndpointRouteBuilder The endpoints. configuration IConfiguration The configuration. environment IHostEnvironment The environment. Returns IEndpointRouteBuilder Endpoint route builder ConfigureServices(IServiceCollection?, IConfiguration?, IHostEnvironment?) Configures the services for the module. IServiceCollection? ConfigureServices(IServiceCollection? services, IConfiguration? configuration, IHostEnvironment? environment) Parameters services IServiceCollection The services collection. configuration IConfiguration The configuration. environment IHostEnvironment The environment. Returns IServiceCollection Services ConfigureWebHostSettings(IWebHostBuilder?, IConfiguration?, IHostEnvironment?) Configures the web host settings. IWebHostBuilder? ConfigureWebHostSettings(IWebHostBuilder? webHost, IConfiguration? configuration, IHostEnvironment? environment) Parameters webHost IWebHostBuilder The web host. configuration IConfiguration The configuration. environment IHostEnvironment The environment. Returns IWebHostBuilder Web host builder. InitializeDataAsync(IDataService?, IServiceProvider?) Initializes the data. Task InitializeDataAsync(IDataService? dataService, IServiceProvider? services) Parameters dataService IDataService The data service. services IServiceProvider The services for the application. Returns Task The async task. OnStarted() Called when the application is [started]. void OnStarted() OnStopped() Called when the application is [stopped]. void OnStopped() OnStopping() Called when the application is [stopping]. void OnStopping()"
  },
  "api/Mithril.Core.Abstractions.Modules.Interfaces.html": {
    "href": "api/Mithril.Core.Abstractions.Modules.Interfaces.html",
    "title": "Namespace Mithril.Core.Abstractions.Modules.Interfaces | Mithril API Reference",
    "keywords": "Namespace Mithril.Core.Abstractions.Modules.Interfaces Interfaces IFeature Feature interface. Defines information about the feature. IModule Module interface. Defines a module and initializes it."
  },
  "api/Mithril.Core.Abstractions.Mvc.Attributes.AddHeaderAttribute.html": {
    "href": "api/Mithril.Core.Abstractions.Mvc.Attributes.AddHeaderAttribute.html",
    "title": "Class AddHeaderAttribute | Mithril API Reference",
    "keywords": "Class AddHeaderAttribute Namespace Mithril.Core.Abstractions.Mvc.Attributes Assembly Mithril.Core.Abstractions.dll Add Header Attribute public sealed class AddHeaderAttribute : ActionFilterAttribute, IActionFilter, IAsyncActionFilter, IResultFilter, IAsyncResultFilter, IOrderedFilter, IFilterMetadata Inheritance object Attribute ActionFilterAttribute AddHeaderAttribute Implements IActionFilter IAsyncActionFilter IResultFilter IAsyncResultFilter IOrderedFilter IFilterMetadata Inherited Members ActionFilterAttribute.OnActionExecuted(ActionExecutedContext) ActionFilterAttribute.OnActionExecutionAsync(ActionExecutingContext, ActionExecutionDelegate) ActionFilterAttribute.OnResultExecuting(ResultExecutingContext) ActionFilterAttribute.OnResultExecuted(ResultExecutedContext) ActionFilterAttribute.OnResultExecutionAsync(ResultExecutingContext, ResultExecutionDelegate) ActionFilterAttribute.Order Attribute.Equals(object) Attribute.GetCustomAttribute(Assembly, Type) Attribute.GetCustomAttribute(Assembly, Type, bool) Attribute.GetCustomAttribute(MemberInfo, Type) Attribute.GetCustomAttribute(MemberInfo, Type, bool) Attribute.GetCustomAttribute(Module, Type) Attribute.GetCustomAttribute(Module, Type, bool) Attribute.GetCustomAttribute(ParameterInfo, Type) Attribute.GetCustomAttribute(ParameterInfo, Type, bool) Attribute.GetCustomAttributes(Assembly) Attribute.GetCustomAttributes(Assembly, bool) Attribute.GetCustomAttributes(Assembly, Type) Attribute.GetCustomAttributes(Assembly, Type, bool) Attribute.GetCustomAttributes(MemberInfo) Attribute.GetCustomAttributes(MemberInfo, bool) Attribute.GetCustomAttributes(MemberInfo, Type) Attribute.GetCustomAttributes(MemberInfo, Type, bool) Attribute.GetCustomAttributes(Module) Attribute.GetCustomAttributes(Module, bool) Attribute.GetCustomAttributes(Module, Type) Attribute.GetCustomAttributes(Module, Type, bool) Attribute.GetCustomAttributes(ParameterInfo) Attribute.GetCustomAttributes(ParameterInfo, bool) Attribute.GetCustomAttributes(ParameterInfo, Type) Attribute.GetCustomAttributes(ParameterInfo, Type, bool) Attribute.GetHashCode() Attribute.IsDefaultAttribute() Attribute.IsDefined(Assembly, Type) Attribute.IsDefined(Assembly, Type, bool) Attribute.IsDefined(MemberInfo, Type) Attribute.IsDefined(MemberInfo, Type, bool) Attribute.IsDefined(Module, Type) Attribute.IsDefined(Module, Type, bool) Attribute.IsDefined(ParameterInfo, Type) Attribute.IsDefined(ParameterInfo, Type, bool) Attribute.Match(object) Attribute.TypeId object.Equals(object, object) object.GetType() object.ReferenceEquals(object, object) object.ToString() Extension Methods GenericExtensions.When<TObject>(TObject, bool, Func<TObject, TObject>) ExpandoObjectExtensions.ConvertToExpando(object?) Constructors AddHeaderAttribute(string, string) Initializes a new instance of the AddHeaderAttribute class. public AddHeaderAttribute(string key, string value) Parameters key string The key. value string The value. AddHeaderAttribute(string, string[]) Initializes a new instance of the AddHeaderAttribute class. public AddHeaderAttribute(string key, string[] values) Parameters key string The key. values string[] The values. Methods OnActionExecuting(ActionExecutingContext) On Action Executing. public override void OnActionExecuting(ActionExecutingContext context) Parameters context ActionExecutingContext Context See Also ActionFilterAttribute"
  },
  "api/Mithril.Core.Abstractions.Mvc.Attributes.IPFilterAttribute.html": {
    "href": "api/Mithril.Core.Abstractions.Mvc.Attributes.IPFilterAttribute.html",
    "title": "Class IPFilterAttribute | Mithril API Reference",
    "keywords": "Class IPFilterAttribute Namespace Mithril.Core.Abstractions.Mvc.Attributes Assembly Mithril.Core.Abstractions.dll IP Filter attribute [AttributeUsage(AttributeTargets.Class|AttributeTargets.Method)] public class IPFilterAttribute : ActionFilterAttribute, IActionFilter, IAsyncActionFilter, IResultFilter, IAsyncResultFilter, IOrderedFilter, IFilterMetadata Inheritance object Attribute ActionFilterAttribute IPFilterAttribute Implements IActionFilter IAsyncActionFilter IResultFilter IAsyncResultFilter IOrderedFilter IFilterMetadata Inherited Members ActionFilterAttribute.OnActionExecuted(ActionExecutedContext) ActionFilterAttribute.OnActionExecutionAsync(ActionExecutingContext, ActionExecutionDelegate) ActionFilterAttribute.OnResultExecuting(ResultExecutingContext) ActionFilterAttribute.OnResultExecuted(ResultExecutedContext) ActionFilterAttribute.OnResultExecutionAsync(ResultExecutingContext, ResultExecutionDelegate) ActionFilterAttribute.Order Attribute.Equals(object) Attribute.GetCustomAttribute(Assembly, Type) Attribute.GetCustomAttribute(Assembly, Type, bool) Attribute.GetCustomAttribute(MemberInfo, Type) Attribute.GetCustomAttribute(MemberInfo, Type, bool) Attribute.GetCustomAttribute(Module, Type) Attribute.GetCustomAttribute(Module, Type, bool) Attribute.GetCustomAttribute(ParameterInfo, Type) Attribute.GetCustomAttribute(ParameterInfo, Type, bool) Attribute.GetCustomAttributes(Assembly) Attribute.GetCustomAttributes(Assembly, bool) Attribute.GetCustomAttributes(Assembly, Type) Attribute.GetCustomAttributes(Assembly, Type, bool) Attribute.GetCustomAttributes(MemberInfo) Attribute.GetCustomAttributes(MemberInfo, bool) Attribute.GetCustomAttributes(MemberInfo, Type) Attribute.GetCustomAttributes(MemberInfo, Type, bool) Attribute.GetCustomAttributes(Module) Attribute.GetCustomAttributes(Module, bool) Attribute.GetCustomAttributes(Module, Type) Attribute.GetCustomAttributes(Module, Type, bool) Attribute.GetCustomAttributes(ParameterInfo) Attribute.GetCustomAttributes(ParameterInfo, bool) Attribute.GetCustomAttributes(ParameterInfo, Type) Attribute.GetCustomAttributes(ParameterInfo, Type, bool) Attribute.GetHashCode() Attribute.IsDefaultAttribute() Attribute.IsDefined(Assembly, Type) Attribute.IsDefined(Assembly, Type, bool) Attribute.IsDefined(MemberInfo, Type) Attribute.IsDefined(MemberInfo, Type, bool) Attribute.IsDefined(Module, Type) Attribute.IsDefined(Module, Type, bool) Attribute.IsDefined(ParameterInfo, Type) Attribute.IsDefined(ParameterInfo, Type, bool) Attribute.Match(object) Attribute.TypeId object.Equals(object, object) object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods GenericExtensions.When<TObject>(TObject, bool, Func<TObject, TObject>) ExpandoObjectExtensions.ConvertToExpando(object?) Remarks Initializes a new instance of the IPFilterAttribute class. Constructors IPFilterAttribute(string) IP Filter attribute public IPFilterAttribute(string policyName) Parameters policyName string Name of the policy. Remarks Initializes a new instance of the IPFilterAttribute class. See Also Attribute Methods OnActionExecuting(ActionExecutingContext) Called before the action executes, after model binding is complete. public override void OnActionExecuting(ActionExecutingContext context) Parameters context ActionExecutingContext The ActionExecutingContext. See Also Attribute"
  },
  "api/Mithril.Core.Abstractions.Mvc.Attributes.html": {
    "href": "api/Mithril.Core.Abstractions.Mvc.Attributes.html",
    "title": "Namespace Mithril.Core.Abstractions.Mvc.Attributes | Mithril API Reference",
    "keywords": "Namespace Mithril.Core.Abstractions.Mvc.Attributes Classes AddHeaderAttribute Add Header Attribute IPFilterAttribute IP Filter attribute"
  },
  "api/Mithril.Core.Abstractions.Mvc.Context.HttpContext.html": {
    "href": "api/Mithril.Core.Abstractions.Mvc.Context.HttpContext.html",
    "title": "Class HttpContext | Mithril API Reference",
    "keywords": "Class HttpContext Namespace Mithril.Core.Abstractions.Mvc.Context Assembly Mithril.Core.Abstractions.dll Static http context public static class HttpContext Inheritance object HttpContext Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Properties Current Gets the current. public static HttpContext? Current { get; } Property Value HttpContext The current. Methods Configure(IHttpContextAccessor?) Configures the specified context accessor. public static void Configure(IHttpContextAccessor? contextAccessor) Parameters contextAccessor IHttpContextAccessor The context accessor."
  },
  "api/Mithril.Core.Abstractions.Mvc.Context.html": {
    "href": "api/Mithril.Core.Abstractions.Mvc.Context.html",
    "title": "Namespace Mithril.Core.Abstractions.Mvc.Context | Mithril API Reference",
    "keywords": "Namespace Mithril.Core.Abstractions.Mvc.Context Classes HttpContext Static http context"
  },
  "api/Mithril.Core.Abstractions.Services.IIPFilterService.html": {
    "href": "api/Mithril.Core.Abstractions.Services.IIPFilterService.html",
    "title": "Interface IIPFilterService | Mithril API Reference",
    "keywords": "Interface IIPFilterService Namespace Mithril.Core.Abstractions.Services Assembly Mithril.Core.Abstractions.dll IP filter service public interface IIPFilterService Extension Methods GenericExtensions.When<TObject>(TObject, bool, Func<TObject, TObject>) ExpandoObjectExtensions.ConvertToExpando(object?) Methods CheckIPAllowed(HttpContext, string) Checks if the ip associated with the request is allowed. bool CheckIPAllowed(HttpContext context, string policyName) Parameters context HttpContext The context. policyName string Name of the policy. Returns bool True if it is, false otherwise."
  },
  "api/Mithril.Core.Abstractions.Services.Options.IPFilterOptions.html": {
    "href": "api/Mithril.Core.Abstractions.Services.Options.IPFilterOptions.html",
    "title": "Class IPFilterOptions | Mithril API Reference",
    "keywords": "Class IPFilterOptions Namespace Mithril.Core.Abstractions.Services.Options Assembly Mithril.Core.Abstractions.dll IP filter options public class IPFilterOptions Inheritance object IPFilterOptions Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods GenericExtensions.When<TObject>(TObject, bool, Func<TObject, TObject>) ExpandoObjectExtensions.ConvertToExpando(object?) Methods AddDefaultPolicy() Adds the default policy. public IPFilterPolicy? AddDefaultPolicy() Returns IPFilterPolicy The default policy. AddPolicy(string) Adds a policy with the name, or if it already exists returns it. public IPFilterPolicy? AddPolicy(string name) Parameters name string The name. Returns IPFilterPolicy The IP filter policy specified. TryGetPolicy(string, out IPFilterPolicy?) Tries to get the policy specified. public bool TryGetPolicy(string policyName, out IPFilterPolicy? policy) Parameters policyName string Name of the policy. policy IPFilterPolicy The policy. Returns bool True if it is found, false otherwise."
  },
  "api/Mithril.Core.Abstractions.Services.Options.IPFilterPolicy.html": {
    "href": "api/Mithril.Core.Abstractions.Services.Options.IPFilterPolicy.html",
    "title": "Class IPFilterPolicy | Mithril API Reference",
    "keywords": "Class IPFilterPolicy Namespace Mithril.Core.Abstractions.Services.Options Assembly Mithril.Core.Abstractions.dll IP Filter policy public class IPFilterPolicy Inheritance object IPFilterPolicy Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods GenericExtensions.When<TObject>(TObject, bool, Func<TObject, TObject>) ExpandoObjectExtensions.ConvertToExpando(object?) Remarks Initializes a new instance of the IPFilterPolicy class. Constructors IPFilterPolicy(string?) IP Filter policy public IPFilterPolicy(string? name) Parameters name string The name. Remarks Initializes a new instance of the IPFilterPolicy class. Properties BlackList Gets or sets the black list. public string? BlackList { get; } Property Value string The black list. Name Gets or sets the name. public string Name { get; } Property Value string The name. WhiteList Gets or sets the white list. public string? WhiteList { get; } Property Value string The white list. Methods IsAllowed(string) Determines whether the specified ip address is allowed. public bool IsAllowed(string ipAddress) Parameters ipAddress string The ip address. Returns bool true if the specified ip address is allowed; otherwise, false. SetBlackList(string?) Sets the black list for this policy. public IPFilterPolicy SetBlackList(string? blackList) Parameters blackList string The black list. Returns IPFilterPolicy This. SetWhiteList(string?) Sets the white list for this policy. public IPFilterPolicy SetWhiteList(string? whiteList) Parameters whiteList string The white list. Returns IPFilterPolicy This."
  },
  "api/Mithril.Core.Abstractions.Services.Options.html": {
    "href": "api/Mithril.Core.Abstractions.Services.Options.html",
    "title": "Namespace Mithril.Core.Abstractions.Services.Options | Mithril API Reference",
    "keywords": "Namespace Mithril.Core.Abstractions.Services.Options Classes IPFilterOptions IP filter options IPFilterPolicy IP Filter policy"
  },
  "api/Mithril.Core.Abstractions.Services.html": {
    "href": "api/Mithril.Core.Abstractions.Services.html",
    "title": "Namespace Mithril.Core.Abstractions.Services | Mithril API Reference",
    "keywords": "Namespace Mithril.Core.Abstractions.Services Interfaces IIPFilterService IP filter service"
  },
  "api/Mithril.Core.Application.html": {
    "href": "api/Mithril.Core.Application.html",
    "title": "Class Application | Mithril API Reference",
    "keywords": "Class Application Namespace Mithril.Core Assembly Mithril.Core.dll Application info holder. public class Application Inheritance object Application Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods GenericExtensions.When<TObject>(TObject, bool, Func<TObject, TObject>) ExpandoObjectExtensions.ConvertToExpando(object?) Remarks Initializes a new instance of the Application class. Constructors Application(IConfiguration?, IHostEnvironment?) Application info holder. public Application(IConfiguration? configuration, IHostEnvironment? env) Parameters configuration IConfiguration The configuration. env IHostEnvironment The host environment Remarks Initializes a new instance of the Application class. Properties Configuration Gets the configuration. public IConfiguration? Configuration { get; } Property Value IConfiguration The configuration. Environment Gets the environment. public IHostEnvironment? Environment { get; } Property Value IHostEnvironment The environment. Modules Gets the modules. public IModule[] Modules { get; } Property Value IModule[] The modules. Name Gets the name. public string Name { get; } Property Value string The name. Methods ConfigureApplication(WebApplication?) Allows configuration of MVC related items. public WebApplication? ConfigureApplication(WebApplication? app) Parameters app WebApplication The application. Returns WebApplication The application object. ConfigureHostSettings(IHostBuilder?) Configures the host settings. public void ConfigureHostSettings(IHostBuilder? host) Parameters host IHostBuilder The host. ConfigureLoggingSettings(ILoggingBuilder?) Configures the logging settings. public void ConfigureLoggingSettings(ILoggingBuilder? logging) Parameters logging ILoggingBuilder The logging. ConfigureMVC(IServiceCollection) Configures the MVC. public IServiceCollection? ConfigureMVC(IServiceCollection services) Parameters services IServiceCollection The services. Returns IServiceCollection The services ConfigureServices(IServiceCollection?) Configures the services for MVC. public IServiceCollection? ConfigureServices(IServiceCollection? services) Parameters services IServiceCollection The services collection. Returns IServiceCollection The service collection ConfigureWebHostSettings(IWebHostBuilder?) Configures the web host settings. public void ConfigureWebHostSettings(IWebHostBuilder? webHost) Parameters webHost IWebHostBuilder The web host. InitializeData(IServiceProvider?) Initializes any data associated with the modules. public void InitializeData(IServiceProvider? services) Parameters services IServiceProvider The services."
  },
  "api/Mithril.Core.Extensions.GenericExtensions.html": {
    "href": "api/Mithril.Core.Extensions.GenericExtensions.html",
    "title": "Class GenericExtensions | Mithril API Reference",
    "keywords": "Class GenericExtensions Namespace Mithril.Core.Extensions Assembly Mithril.Core.dll Generic Extensions public static class GenericExtensions Inheritance object GenericExtensions Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Methods When<TObject>(TObject, bool, Func<TObject, TObject>) Whens the predicate is true, run the method. public static TObject When<TObject>(this TObject obj, bool predicate, Func<TObject, TObject> method) Parameters obj TObject The object. predicate bool if set to true [predicate]. method Func<TObject, TObject> The method to run if true. Returns TObject The builder. Type Parameters TObject The type of the object."
  },
  "api/Mithril.Core.Extensions.IEndpointRouteBuilderExtensions.html": {
    "href": "api/Mithril.Core.Extensions.IEndpointRouteBuilderExtensions.html",
    "title": "Class IEndpointRouteBuilderExtensions | Mithril API Reference",
    "keywords": "Class IEndpointRouteBuilderExtensions Namespace Mithril.Core.Extensions Assembly Mithril.Core.dll IEndpointRouteBuilder extensions public static class IEndpointRouteBuilderExtensions Inheritance object IEndpointRouteBuilderExtensions Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Methods IsSetup(IEndpointRouteBuilder?) Determines whether this instance is setup. public static bool IsSetup(this IEndpointRouteBuilder? endpointRouteBuilder) Parameters endpointRouteBuilder IEndpointRouteBuilder The endpoint route builder. Returns bool true if the specified endpoint route builder is setup; otherwise, false."
  },
  "api/Mithril.Core.Extensions.IMvcBuilderExtensions.html": {
    "href": "api/Mithril.Core.Extensions.IMvcBuilderExtensions.html",
    "title": "Class IMvcBuilderExtensions | Mithril API Reference",
    "keywords": "Class IMvcBuilderExtensions Namespace Mithril.Core.Extensions Assembly Mithril.Core.dll IMvcBuilder extensions public static class IMvcBuilderExtensions Inheritance object IMvcBuilderExtensions Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Methods AddCspMediaType(IMvcBuilder?) Adds the CSP media type. public static IMvcBuilder? AddCspMediaType(this IMvcBuilder? mvcBuilder) Parameters mvcBuilder IMvcBuilder The MVC builder. Returns IMvcBuilder The MVC builder"
  },
  "api/Mithril.Core.Extensions.StaticHttpContextExtensions.html": {
    "href": "api/Mithril.Core.Extensions.StaticHttpContextExtensions.html",
    "title": "Class StaticHttpContextExtensions | Mithril API Reference",
    "keywords": "Class StaticHttpContextExtensions Namespace Mithril.Core.Extensions Assembly Mithril.Core.dll Static HTTP context extensions. public static class StaticHttpContextExtensions Inheritance object StaticHttpContextExtensions Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Methods AddStaticHttpContextAccessor(IServiceCollection?) Adds the HTTP context accessor. public static IServiceCollection? AddStaticHttpContextAccessor(this IServiceCollection? services) Parameters services IServiceCollection The services. Returns IServiceCollection Static HTTP context extensions. UseStaticHttpContext(IApplicationBuilder?) Uses the static HTTP context. public static IApplicationBuilder? UseStaticHttpContext(this IApplicationBuilder? app) Parameters app IApplicationBuilder The application. Returns IApplicationBuilder The app builder"
  },
  "api/Mithril.Core.Extensions.WebApplicationBuilderExtensions.html": {
    "href": "api/Mithril.Core.Extensions.WebApplicationBuilderExtensions.html",
    "title": "Class WebApplicationBuilderExtensions | Mithril API Reference",
    "keywords": "Class WebApplicationBuilderExtensions Namespace Mithril.Core.Extensions Assembly Mithril.Core.dll Web application builder extensions public static class WebApplicationBuilderExtensions Inheritance object WebApplicationBuilderExtensions Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Methods SetupMithril(WebApplicationBuilder?) Sets up mithril framework and gets the system ready for use. public static WebApplication? SetupMithril(this WebApplicationBuilder? webApplicationBuilder) Parameters webApplicationBuilder WebApplicationBuilder The web application builder. Returns WebApplication The web application."
  },
  "api/Mithril.Core.Extensions.html": {
    "href": "api/Mithril.Core.Extensions.html",
    "title": "Namespace Mithril.Core.Extensions | Mithril API Reference",
    "keywords": "Namespace Mithril.Core.Extensions Classes GenericExtensions Generic Extensions IEndpointRouteBuilderExtensions IEndpointRouteBuilder extensions IMvcBuilderExtensions IMvcBuilder extensions StaticHttpContextExtensions Static HTTP context extensions. WebApplicationBuilderExtensions Web application builder extensions"
  },
  "api/Mithril.Core.Middleware.CSPMiddleware.html": {
    "href": "api/Mithril.Core.Middleware.CSPMiddleware.html",
    "title": "Class CSPMiddleware | Mithril API Reference",
    "keywords": "Class CSPMiddleware Namespace Mithril.Core.Middleware Assembly Mithril.Core.dll CSP Middleware public class CSPMiddleware Inheritance object CSPMiddleware Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods GenericExtensions.When<TObject>(TObject, bool, Func<TObject, TObject>) ExpandoObjectExtensions.ConvertToExpando(object?) Remarks Initializes a new instance of the CSPMiddleware class. Constructors CSPMiddleware(RequestDelegate?, IOptions<MithrilConfig>?) CSP Middleware public CSPMiddleware(RequestDelegate? next, IOptions<MithrilConfig>? configuration) Parameters next RequestDelegate The next. configuration IOptions<MithrilConfig> The configuration. Remarks Initializes a new instance of the CSPMiddleware class. Methods InvokeAsync(HttpContext) Invokes the specified context. public Task InvokeAsync(HttpContext context) Parameters context HttpContext The context. Returns Task Async task"
  },
  "api/Mithril.Core.Middleware.IPFilterMiddleware.html": {
    "href": "api/Mithril.Core.Middleware.IPFilterMiddleware.html",
    "title": "Class IPFilterMiddleware | Mithril API Reference",
    "keywords": "Class IPFilterMiddleware Namespace Mithril.Core.Middleware Assembly Mithril.Core.dll IP Filter Middleware public class IPFilterMiddleware Inheritance object IPFilterMiddleware Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods GenericExtensions.When<TObject>(TObject, bool, Func<TObject, TObject>) ExpandoObjectExtensions.ConvertToExpando(object?) Remarks Initializes a new instance of the IPFilterMiddleware class. Constructors IPFilterMiddleware(RequestDelegate?, IIPFilterService?, ILogger<IPFilterMiddleware>?) IP Filter Middleware public IPFilterMiddleware(RequestDelegate? next, IIPFilterService? iPFilterService, ILogger<IPFilterMiddleware>? logger) Parameters next RequestDelegate The next. iPFilterService IIPFilterService The i p filter service. logger ILogger<IPFilterMiddleware> The logger. Remarks Initializes a new instance of the IPFilterMiddleware class. Methods InvokeAsync(HttpContext) Invokes the specified context. public Task InvokeAsync(HttpContext context) Parameters context HttpContext The context. Returns Task Async task"
  },
  "api/Mithril.Core.Middleware.XFrameOptionsMiddleware.html": {
    "href": "api/Mithril.Core.Middleware.XFrameOptionsMiddleware.html",
    "title": "Class XFrameOptionsMiddleware | Mithril API Reference",
    "keywords": "Class XFrameOptionsMiddleware Namespace Mithril.Core.Middleware Assembly Mithril.Core.dll X-Frame-Options Middleware public class XFrameOptionsMiddleware Inheritance object XFrameOptionsMiddleware Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods GenericExtensions.When<TObject>(TObject, bool, Func<TObject, TObject>) ExpandoObjectExtensions.ConvertToExpando(object?) Remarks Initializes a new instance of the XFrameOptionsMiddleware class. Constructors XFrameOptionsMiddleware(RequestDelegate?, IOptions<MithrilConfig>?) X-Frame-Options Middleware public XFrameOptionsMiddleware(RequestDelegate? next, IOptions<MithrilConfig>? configuration) Parameters next RequestDelegate The next. configuration IOptions<MithrilConfig> The configuration. Remarks Initializes a new instance of the XFrameOptionsMiddleware class. Methods InvokeAsync(HttpContext) Invokes the specified context. public Task InvokeAsync(HttpContext context) Parameters context HttpContext The context. Returns Task Async task"
  },
  "api/Mithril.Core.Middleware.html": {
    "href": "api/Mithril.Core.Middleware.html",
    "title": "Namespace Mithril.Core.Middleware | Mithril API Reference",
    "keywords": "Namespace Mithril.Core.Middleware Classes CSPMiddleware CSP Middleware IPFilterMiddleware IP Filter Middleware XFrameOptionsMiddleware X-Frame-Options Middleware"
  },
  "api/Mithril.Core.Modules.MithrilModule.html": {
    "href": "api/Mithril.Core.Modules.MithrilModule.html",
    "title": "Class MithrilModule | Mithril API Reference",
    "keywords": "Class MithrilModule Namespace Mithril.Core.Modules Assembly Mithril.Core.dll Mithril module public class MithrilModule : ModuleBaseClass<MithrilModule>, IEquatable<MithrilModule>, IModule Inheritance object ModuleBaseClass<MithrilModule> MithrilModule Implements IEquatable<MithrilModule> IModule Inherited Members ModuleBaseClass<MithrilModule>.Category ModuleBaseClass<MithrilModule>.ContentPath ModuleBaseClass<MithrilModule>.ID ModuleBaseClass<MithrilModule>.LastModified ModuleBaseClass<MithrilModule>.Name ModuleBaseClass<MithrilModule>.Tags ModuleBaseClass<MithrilModule>.Version ModuleBaseClass<MithrilModule>.ConfigureHostSettings(IHostBuilder, IConfiguration, IHostEnvironment) ModuleBaseClass<MithrilModule>.ConfigureLoggingSettings(ILoggingBuilder, IConfiguration, IHostEnvironment) ModuleBaseClass<MithrilModule>.ConfigureMVC(IMvcBuilder, IConfiguration, IHostEnvironment) ModuleBaseClass<MithrilModule>.ConfigureWebHostSettings(IWebHostBuilder, IConfiguration, IHostEnvironment) ModuleBaseClass<MithrilModule>.Equals(object) ModuleBaseClass<MithrilModule>.Equals(MithrilModule) ModuleBaseClass<MithrilModule>.GetHashCode() ModuleBaseClass<MithrilModule>.InitializeDataAsync(IDataService, IServiceProvider) ModuleBaseClass<MithrilModule>.OnStarted() ModuleBaseClass<MithrilModule>.OnStopped() ModuleBaseClass<MithrilModule>.OnStopping() object.Equals(object, object) object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods GenericExtensions.When<TObject>(TObject, bool, Func<TObject, TObject>) ExpandoObjectExtensions.ConvertToExpando(object?) Constructors MithrilModule() Initializes a new instance of the MithrilModule class. public MithrilModule() Properties Features Gets the features. public override IFeature[] Features { get; protected set; } Property Value IFeature[] The features. Order Gets the order that they are initialized in. public override int Order { get; protected set; } Property Value int The order that they are initialized in. Methods ConfigureApplication(IApplicationBuilder?, IConfiguration?, IHostEnvironment?) Configures the application. public override IApplicationBuilder? ConfigureApplication(IApplicationBuilder? app, IConfiguration? configuration, IHostEnvironment? environment) Parameters app IApplicationBuilder The application. configuration IConfiguration The configuration. environment IHostEnvironment The environment. Returns IApplicationBuilder Mithril module ConfigureRoutes(IEndpointRouteBuilder?, IConfiguration?, IHostEnvironment?) Configures the routes. public override IEndpointRouteBuilder? ConfigureRoutes(IEndpointRouteBuilder? endpoints, IConfiguration? configuration, IHostEnvironment? environment) Parameters endpoints IEndpointRouteBuilder The endpoints. configuration IConfiguration The configuration. environment IHostEnvironment The environment. Returns IEndpointRouteBuilder Mithril module ConfigureServices(IServiceCollection?, IConfiguration?, IHostEnvironment?) Configures the services for the module. public override IServiceCollection? ConfigureServices(IServiceCollection? services, IConfiguration? configuration, IHostEnvironment? environment) Parameters services IServiceCollection The services collection. configuration IConfiguration The configuration. environment IHostEnvironment The environment. Returns IServiceCollection Mithril module See Also ModuleBaseClass<TModule>"
  },
  "api/Mithril.Core.Modules.html": {
    "href": "api/Mithril.Core.Modules.html",
    "title": "Namespace Mithril.Core.Modules | Mithril API Reference",
    "keywords": "Namespace Mithril.Core.Modules Classes MithrilModule Mithril module"
  },
  "api/Mithril.Core.Services.IPFilterService.html": {
    "href": "api/Mithril.Core.Services.IPFilterService.html",
    "title": "Class IPFilterService | Mithril API Reference",
    "keywords": "Class IPFilterService Namespace Mithril.Core.Services Assembly Mithril.Core.dll IP Filter service public class IPFilterService : IIPFilterService Inheritance object IPFilterService Implements IIPFilterService Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods GenericExtensions.When<TObject>(TObject, bool, Func<TObject, TObject>) ExpandoObjectExtensions.ConvertToExpando(object?) Remarks Initializes a new instance of the IPFilterService class. Constructors IPFilterService(IOptions<IPFilterOptions>?, ILogger<IPFilterService>?) IP Filter service public IPFilterService(IOptions<IPFilterOptions>? options, ILogger<IPFilterService>? logger) Parameters options IOptions<IPFilterOptions> The options. logger ILogger<IPFilterService> The logger. Remarks Initializes a new instance of the IPFilterService class. See Also IIPFilterService Methods CheckIPAllowed(HttpContext, string) Checks if the ip associated with the request is allowed. public bool CheckIPAllowed(HttpContext context, string policyName) Parameters context HttpContext The context. policyName string Name of the policy. Returns bool True if it is, false otherwise. See Also IIPFilterService"
  },
  "api/Mithril.Core.Services.html": {
    "href": "api/Mithril.Core.Services.html",
    "title": "Namespace Mithril.Core.Services | Mithril API Reference",
    "keywords": "Namespace Mithril.Core.Services Classes IPFilterService IP Filter service"
  },
  "api/Mithril.Core.html": {
    "href": "api/Mithril.Core.html",
    "title": "Namespace Mithril.Core | Mithril API Reference",
    "keywords": "Namespace Mithril.Core Classes Application Application info holder."
  },
  "api/Mithril.Data.Abstractions.BaseClasses.LookUpEnumBaseClass-1.html": {
    "href": "api/Mithril.Data.Abstractions.BaseClasses.LookUpEnumBaseClass-1.html",
    "title": "Class LookUpEnumBaseClass<TClass> | Mithril API Reference",
    "keywords": "Class LookUpEnumBaseClass<TClass> Namespace Mithril.Data.Abstractions.BaseClasses Assembly Mithril.Data.Abstractions.dll LookUp \"enum\" base class public abstract class LookUpEnumBaseClass<TClass> : StringEnumBaseClass<TClass> where TClass : LookUpEnumBaseClass<TClass>, new() Type Parameters TClass LookUp \"enum\" base class Inheritance object StringEnumBaseClass<TClass> LookUpEnumBaseClass<TClass> Derived EventStateTypes ContactInfoType UserClaimTypes Inherited Members StringEnumBaseClass<TClass>.ToStringEnumBaseClass(string) StringEnumBaseClass<TClass>.ToString() StringEnumBaseClass<TClass>.Name object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Extension Methods GenericExtensions.When<TObject>(TObject, bool, Func<TObject, TObject>) ExpandoObjectExtensions.ConvertToExpando(object?) Constructors LookUpEnumBaseClass(string, string) Initializes a new instance of the LookUpEnumBaseClass<TClass> class. protected LookUpEnumBaseClass(string name, string icon) Parameters name string The name. icon string The icon. Properties Icon Gets or sets the icon. public string? Icon { get; } Property Value string The icon. NameMapping The name mapping protected static Dictionary<string, TClass> NameMapping { get; set; } Property Value Dictionary<string, TClass> The name mapping. Methods GetEnum(string) Gets the type of the address. public static TClass? GetEnum(string name) Parameters name string The name. Returns TClass The address type specified GetEnums() Gets the enum types. public static IEnumerable<TClass> GetEnums() Returns IEnumerable<TClass> The various enum types. See Also StringEnumBaseClass<TClass>"
  },
  "api/Mithril.Data.Abstractions.BaseClasses.ModelBase-1.html": {
    "href": "api/Mithril.Data.Abstractions.BaseClasses.ModelBase-1.html",
    "title": "Class ModelBase<TClass> | Mithril API Reference",
    "keywords": "Class ModelBase<TClass> Namespace Mithril.Data.Abstractions.BaseClasses Assembly Mithril.Data.Abstractions.dll Model base public abstract class ModelBase<TClass> : IModel<TClass>, IModel, IEquatable<IModel>, IEquatable<IModel<TClass>>, IComparable, IComparable<TClass>, IEquatable<ModelBase<TClass>> where TClass : ModelBase<TClass>, new() Type Parameters TClass The type of the class. Inheritance object ModelBase<TClass> Implements IModel<TClass> IModel IEquatable<IModel> IEquatable<IModel<TClass>> IComparable IComparable<TClass> IEquatable<ModelBase<TClass>> Derived CommandBaseClass<TCommand> EventBaseClass<TEvent> RequestMetaData RequestMetric RequestTrace Attachment EmailMessage MessageTemplate SettingsBase<TClass> TypedModelBase<TClass> LookUp LookUpType Feature Menu MenuItem RouteEntry Permission Tenant User UserClaim Theme Inherited Members object.Equals(object, object) object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods GenericExtensions.When<TObject>(TObject, bool, Func<TObject, TObject>) ExpandoObjectExtensions.ConvertToExpando(object?) Constructors ModelBase() Initializes a new instance of the ModelBase<TClass> class. protected ModelBase() Properties Active Gets or sets a value indicating whether this is active. public bool Active { get; set; } Property Value bool true if active; otherwise, false. Creator Gets or sets the creator. public virtual IUser? Creator { get; set; } Property Value IUser The creator. DateCreated Gets or sets the date created. public DateTime DateCreated { get; set; } Property Value DateTime The date created. DateModified Gets or sets the date modified. public DateTime DateModified { get; set; } Property Value DateTime The date modified. ID Gets or sets the identifier. public long ID { get; set; } Property Value long The identifier. Modifier Gets or sets the modifier. public virtual IUser? Modifier { get; set; } Property Value IUser The modifier. TenantID Gets or sets the tenant associated with the object. public long TenantID { get; set; } Property Value long The tenant associated with the object. Methods All(IDataService?) Gets all entries. public static IEnumerable<TClass> All(IDataService? dataService) Parameters dataService IDataService The data service. Returns IEnumerable<TClass> All entries. AllActive(IDataService?) Gets all active entries. public static IEnumerable<TClass> AllActive(IDataService? dataService) Parameters dataService IDataService The data service. Returns IEnumerable<TClass> The active entries. AllInactive(IDataService?) Gets all inactive entries. public static IEnumerable<TClass> AllInactive(IDataService? dataService) Parameters dataService IDataService The data service. Returns IEnumerable<TClass> The inactive entries. CanBeModifiedBy(ClaimsPrincipal?) Determines whether this instance [can be modified by] the specified user. public virtual bool CanBeModifiedBy(ClaimsPrincipal? user) Parameters user ClaimsPrincipal The user. Returns bool true if this instance [can be modified by] the specified user; otherwise, false. CanBeViewedBy(ClaimsPrincipal?) Determines whether this instance [can be viewed by] the specified user. public virtual bool CanBeViewedBy(ClaimsPrincipal? user) Parameters user ClaimsPrincipal The user. Returns bool true if this instance [can be viewed by] the specified user; otherwise, false. CompareTo(object?) Compares the object to another object public int CompareTo(object? obj) Parameters obj object Object to compare to Returns int 0 if they are equal, -1 if this is smaller, 1 if it is larger CompareTo(TClass?) Compares the object to another object public virtual int CompareTo(TClass? other) Parameters other TClass Object to compare to Returns int 0 if they are equal, -1 if this is smaller, 1 if it is larger DeleteAsync(IDataService?, ClaimsPrincipal?, bool) Deletes this instance. public Task DeleteAsync(IDataService? dataService, ClaimsPrincipal? currentUser, bool softDelete = true) Parameters dataService IDataService The data service. currentUser ClaimsPrincipal The current user. softDelete bool if set to true [soft delete]. Returns Task The async task. Equals(ModelBase<TClass>?) Indicates whether the current object is equal to another object of the same type. public bool Equals(ModelBase<TClass>? other) Parameters other ModelBase<TClass> An object to compare with this object. Returns bool true if the current object is equal to the other parameter; otherwise, false. Equals(IModel?) Indicates whether the current object is equal to another object of the same type. public bool Equals(IModel? other) Parameters other IModel An object to compare with this object. Returns bool true if the current object is equal to the other parameter; otherwise, false. Equals(IModel<TClass>?) Indicates whether the current object is equal to another object of the same type. public bool Equals(IModel<TClass>? other) Parameters other IModel<TClass> An object to compare with this object. Returns bool true if the current object is equal to the other parameter; otherwise, false. Equals(object?) Determines if two items are equal public override bool Equals(object? obj) Parameters obj object The object to compare this to Returns bool true if they are the same, false otherwise GetHashCode() Returns the hash of this item public override int GetHashCode() Returns int the int hash of the item Load(long, IDataService?) Loads the item based on the ID public static TClass? Load(long id, IDataService? dataService) Parameters id long ID of the item to load dataService IDataService The data service. Returns TClass The specified item Query(IDataService?) Queries this instance. public static IQueryable<TClass>? Query(IDataService? context) Parameters context IDataService The context. Returns IQueryable<TClass> The IQueryable SaveAsync(IDataService?, ClaimsPrincipal?) Saves this instance. public Task SaveAsync(IDataService? dataService, ClaimsPrincipal? currentUser) Parameters dataService IDataService The data service. currentUser ClaimsPrincipal The current user. Returns Task This. SetupObject(IDataService?, IUser?) Sets up the object. public virtual void SetupObject(IDataService? dataService, IUser? currentUser) Parameters dataService IDataService The data service. currentUser IUser The current user. SetupObject(IDataService?, ClaimsPrincipal?) Sets up the object. public virtual void SetupObject(IDataService? dataService, ClaimsPrincipal? currentUser) Parameters dataService IDataService The data service. currentUser ClaimsPrincipal The current user. SetupObjectAndReturn(IDataService?, ClaimsPrincipal?) Sets up the object for saving purposes public virtual TClass SetupObjectAndReturn(IDataService? dataService, ClaimsPrincipal? currentUser) Parameters dataService IDataService The data service. currentUser ClaimsPrincipal The current user. Returns TClass This. Operators operator ==(ModelBase<TClass>?, ModelBase<TClass>?) The == operator public static bool operator ==(ModelBase<TClass>? first, ModelBase<TClass>? second) Parameters first ModelBase<TClass> First item second ModelBase<TClass> Second item Returns bool true if the first and second item are the same, false otherwise operator >(ModelBase<TClass>?, ModelBase<TClass>?) The > operator public static bool operator >(ModelBase<TClass>? first, ModelBase<TClass>? second) Parameters first ModelBase<TClass> First item second ModelBase<TClass> Second item Returns bool True if the first item is greater than the second, false otherwise operator >=(ModelBase<TClass>?, ModelBase<TClass>?) Implements the operator >=. public static bool operator >=(ModelBase<TClass>? first, ModelBase<TClass>? second) Parameters first ModelBase<TClass> The first. second ModelBase<TClass> The second. Returns bool The result of the operator. operator !=(ModelBase<TClass>?, ModelBase<TClass>?) != operator public static bool operator !=(ModelBase<TClass>? first, ModelBase<TClass>? second) Parameters first ModelBase<TClass> First item second ModelBase<TClass> Second item Returns bool returns true if they are not equal, false otherwise operator <(ModelBase<TClass>?, ModelBase<TClass>?) The < operator public static bool operator <(ModelBase<TClass>? first, ModelBase<TClass>? second) Parameters first ModelBase<TClass> First item second ModelBase<TClass> Second item Returns bool True if the first item is less than the second, false otherwise operator <=(ModelBase<TClass>?, ModelBase<TClass>?) Implements the operator <=. public static bool operator <=(ModelBase<TClass>? first, ModelBase<TClass>? second) Parameters first ModelBase<TClass> The first. second ModelBase<TClass> The second. Returns bool The result of the operator. See Also IModel IComparable IComparable<T>"
  },
  "api/Mithril.Data.Abstractions.BaseClasses.SettingsBase-1.html": {
    "href": "api/Mithril.Data.Abstractions.BaseClasses.SettingsBase-1.html",
    "title": "Class SettingsBase<TClass> | Mithril API Reference",
    "keywords": "Class SettingsBase<TClass> Namespace Mithril.Data.Abstractions.BaseClasses Assembly Mithril.Data.Abstractions.dll Settings base class public abstract class SettingsBase<TClass> : ModelBase<TClass>, IModel<TClass>, IModel, IEquatable<IModel>, IEquatable<IModel<TClass>>, IComparable, IComparable<TClass>, IEquatable<ModelBase<TClass>>, IEquatable<SettingsBase<TClass>> where TClass : SettingsBase<TClass>, new() Type Parameters TClass The type of the class. Inheritance object ModelBase<TClass> SettingsBase<TClass> Implements IModel<TClass> IModel IEquatable<IModel> IEquatable<IModel<TClass>> IComparable IComparable<TClass> IEquatable<ModelBase<TClass>> IEquatable<SettingsBase<TClass>> Derived EmailSettings Inherited Members ModelBase<TClass>.Active ModelBase<TClass>.Creator ModelBase<TClass>.DateCreated ModelBase<TClass>.DateModified ModelBase<TClass>.ID ModelBase<TClass>.Modifier ModelBase<TClass>.TenantID ModelBase<TClass>.All(IDataService) ModelBase<TClass>.AllActive(IDataService) ModelBase<TClass>.AllInactive(IDataService) ModelBase<TClass>.Load(long, IDataService) ModelBase<TClass>.Query(IDataService) ModelBase<TClass>.CanBeModifiedBy(ClaimsPrincipal) ModelBase<TClass>.CanBeViewedBy(ClaimsPrincipal) ModelBase<TClass>.CompareTo(object) ModelBase<TClass>.DeleteAsync(IDataService, ClaimsPrincipal, bool) ModelBase<TClass>.Equals(IModel) ModelBase<TClass>.Equals(IModel<TClass>) ModelBase<TClass>.Equals(ModelBase<TClass>) ModelBase<TClass>.SaveAsync(IDataService, ClaimsPrincipal) ModelBase<TClass>.SetupObject(IDataService, ClaimsPrincipal) ModelBase<TClass>.SetupObject(IDataService, IUser) ModelBase<TClass>.SetupObjectAndReturn(IDataService, ClaimsPrincipal) object.Equals(object, object) object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods GenericExtensions.When<TObject>(TObject, bool, Func<TObject, TObject>) ExpandoObjectExtensions.ConvertToExpando(object?) Constructors SettingsBase() Initializes a new instance of the SettingsBase<TClass> class. protected SettingsBase() Methods CompareTo(TClass?) Compares to. public override int CompareTo(TClass? other) Parameters other TClass The other. Returns int 0 if they are equal, -1 if this is smaller, 1 if it is larger Equals(SettingsBase<TClass>?) Indicates whether the current object is equal to another object of the same type. public bool Equals(SettingsBase<TClass>? other) Parameters other SettingsBase<TClass> An object to compare with this object. Returns bool true if the current object is equal to the other parameter; otherwise, false. Equals(ITypedModel?) Indicates whether the current object is equal to another object of the same type. public bool Equals(ITypedModel? other) Parameters other ITypedModel An object to compare with this object. Returns bool true if the current object is equal to the other parameter; otherwise, false. Equals(object?) Determines whether the specified object, is equal to this instance. public override bool Equals(object? obj) Parameters obj object The object to compare with this instance. Returns bool true if the specified object is equal to this instance; otherwise, false. GetHashCode() Returns a hash code for this instance. public override int GetHashCode() Returns int A hash code for this instance, suitable for use in hashing algorithms and data structures like a hash table. LoadOrCreateAsync(IDataService?, ClaimsPrincipal?) Loads or creates the settings asynchronously. public static Task<TClass> LoadOrCreateAsync(IDataService? dataService, ClaimsPrincipal? user) Parameters dataService IDataService The data service. user ClaimsPrincipal The user. Returns Task<TClass> The settings Operators operator ==(SettingsBase<TClass>?, SettingsBase<TClass>?) Implements the operator ==. public static bool operator ==(SettingsBase<TClass>? first, SettingsBase<TClass>? second) Parameters first SettingsBase<TClass> The first. second SettingsBase<TClass> The second. Returns bool The result of the operator. operator >(SettingsBase<TClass>?, SettingsBase<TClass>?) Implements the operator >. public static bool operator >(SettingsBase<TClass>? left, SettingsBase<TClass>? right) Parameters left SettingsBase<TClass> The left. right SettingsBase<TClass> The right. Returns bool The result of the operator. operator >=(SettingsBase<TClass>?, SettingsBase<TClass>?) Implements the operator >=. public static bool operator >=(SettingsBase<TClass>? left, SettingsBase<TClass>? right) Parameters left SettingsBase<TClass> The left. right SettingsBase<TClass> The right. Returns bool The result of the operator. operator !=(SettingsBase<TClass>?, SettingsBase<TClass>?) Implements the operator !=. public static bool operator !=(SettingsBase<TClass>? left, SettingsBase<TClass>? right) Parameters left SettingsBase<TClass> The left. right SettingsBase<TClass> The right. Returns bool The result of the operator. operator <(SettingsBase<TClass>?, SettingsBase<TClass>?) Implements the operator <. public static bool operator <(SettingsBase<TClass>? left, SettingsBase<TClass>? right) Parameters left SettingsBase<TClass> The left. right SettingsBase<TClass> The right. Returns bool The result of the operator. operator <=(SettingsBase<TClass>?, SettingsBase<TClass>?) Implements the operator <=. public static bool operator <=(SettingsBase<TClass>? left, SettingsBase<TClass>? right) Parameters left SettingsBase<TClass> The left. right SettingsBase<TClass> The right. Returns bool The result of the operator. See Also ModelBase<TClass>"
  },
  "api/Mithril.Data.Abstractions.BaseClasses.TypedModelBase-1.html": {
    "href": "api/Mithril.Data.Abstractions.BaseClasses.TypedModelBase-1.html",
    "title": "Class TypedModelBase<TClass> | Mithril API Reference",
    "keywords": "Class TypedModelBase<TClass> Namespace Mithril.Data.Abstractions.BaseClasses Assembly Mithril.Data.Abstractions.dll Typed model base public abstract class TypedModelBase<TClass> : ModelBase<TClass>, IModel<TClass>, IEquatable<IModel<TClass>>, IComparable, IComparable<TClass>, IEquatable<ModelBase<TClass>>, ITypedModel, IModel, IEquatable<IModel>, IEquatable<ITypedModel>, IEquatable<TypedModelBase<TClass>> where TClass : TypedModelBase<TClass>, new() Type Parameters TClass The type of the class. Inheritance object ModelBase<TClass> TypedModelBase<TClass> Implements IModel<TClass> IEquatable<IModel<TClass>> IComparable IComparable<TClass> IEquatable<ModelBase<TClass>> ITypedModel IModel IEquatable<IModel> IEquatable<ITypedModel> IEquatable<TypedModelBase<TClass>> Derived ContactInfo Inherited Members ModelBase<TClass>.Active ModelBase<TClass>.Creator ModelBase<TClass>.DateCreated ModelBase<TClass>.DateModified ModelBase<TClass>.ID ModelBase<TClass>.Modifier ModelBase<TClass>.TenantID ModelBase<TClass>.All(IDataService) ModelBase<TClass>.AllActive(IDataService) ModelBase<TClass>.AllInactive(IDataService) ModelBase<TClass>.Load(long, IDataService) ModelBase<TClass>.Query(IDataService) ModelBase<TClass>.CanBeModifiedBy(ClaimsPrincipal) ModelBase<TClass>.CanBeViewedBy(ClaimsPrincipal) ModelBase<TClass>.CompareTo(object) ModelBase<TClass>.DeleteAsync(IDataService, ClaimsPrincipal, bool) ModelBase<TClass>.Equals(IModel) ModelBase<TClass>.Equals(IModel<TClass>) ModelBase<TClass>.Equals(ModelBase<TClass>) ModelBase<TClass>.SaveAsync(IDataService, ClaimsPrincipal) ModelBase<TClass>.SetupObject(IDataService, ClaimsPrincipal) ModelBase<TClass>.SetupObject(IDataService, IUser) ModelBase<TClass>.SetupObjectAndReturn(IDataService, ClaimsPrincipal) object.Equals(object, object) object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods GenericExtensions.When<TObject>(TObject, bool, Func<TObject, TObject>) ExpandoObjectExtensions.ConvertToExpando(object?) Constructors TypedModelBase() Initializes a new instance of the TypedModelBase<TClass> class. protected TypedModelBase() TypedModelBase(ILookUp) Initializes a new instance of the TypedModelBase<TClass> class. protected TypedModelBase(ILookUp type) Parameters type ILookUp The type. TypedModelBase(string?) Initializes a new instance of the TypedModelBase<TClass> class. protected TypedModelBase(string? type) Parameters type string The type. Exceptions ArgumentNullException type ArgumentOutOfRangeException type Properties Type Gets or sets the type. [Required] [MaxLength(64)] public string? Type { get; set; } Property Value string The type. Methods CompareTo(TClass?) Compares to. public override int CompareTo(TClass? other) Parameters other TClass The other. Returns int 0 if they are equal, -1 if this is smaller, 1 if it is larger Equals(TypedModelBase<TClass>?) Indicates whether the current object is equal to another object of the same type. public bool Equals(TypedModelBase<TClass>? other) Parameters other TypedModelBase<TClass> An object to compare with this object. Returns bool true if the current object is equal to the other parameter; otherwise, false. Equals(ITypedModel?) Indicates whether the current object is equal to another object of the same type. public bool Equals(ITypedModel? other) Parameters other ITypedModel An object to compare with this object. Returns bool true if the current object is equal to the other parameter; otherwise, false. Equals(object?) Determines whether the specified object, is equal to this instance. public override bool Equals(object? obj) Parameters obj object The object to compare with this instance. Returns bool true if the specified object is equal to this instance; otherwise, false. GetHashCode() Returns a hash code for this instance. public override int GetHashCode() Returns int A hash code for this instance, suitable for use in hashing algorithms and data structures like a hash table. OfType(params ILookUp?[]?) Determines if the object is of a specific type public bool OfType(params ILookUp?[]? lookUps) Parameters lookUps ILookUp[] The look ups. Returns bool True if it is, false otherwise OfType(params string?[]?) Determines if the object is of a specific type public bool OfType(params string?[]? typeNames) Parameters typeNames string[] Type name Returns bool True if it is, false otherwise Operators operator ==(TypedModelBase<TClass>?, TypedModelBase<TClass>?) Implements the operator ==. public static bool operator ==(TypedModelBase<TClass>? first, TypedModelBase<TClass>? second) Parameters first TypedModelBase<TClass> The first. second TypedModelBase<TClass> The second. Returns bool The result of the operator. operator >(TypedModelBase<TClass>?, TypedModelBase<TClass>?) Implements the operator >. public static bool operator >(TypedModelBase<TClass>? left, TypedModelBase<TClass>? right) Parameters left TypedModelBase<TClass> The left. right TypedModelBase<TClass> The right. Returns bool The result of the operator. operator >=(TypedModelBase<TClass>?, TypedModelBase<TClass>?) Implements the operator >=. public static bool operator >=(TypedModelBase<TClass>? left, TypedModelBase<TClass>? right) Parameters left TypedModelBase<TClass> The left. right TypedModelBase<TClass> The right. Returns bool The result of the operator. operator !=(TypedModelBase<TClass>?, TypedModelBase<TClass>?) Implements the operator !=. public static bool operator !=(TypedModelBase<TClass>? left, TypedModelBase<TClass>? right) Parameters left TypedModelBase<TClass> The left. right TypedModelBase<TClass> The right. Returns bool The result of the operator. operator <(TypedModelBase<TClass>?, TypedModelBase<TClass>?) Implements the operator <. public static bool operator <(TypedModelBase<TClass>? left, TypedModelBase<TClass>? right) Parameters left TypedModelBase<TClass> The left. right TypedModelBase<TClass> The right. Returns bool The result of the operator. operator <=(TypedModelBase<TClass>?, TypedModelBase<TClass>?) Implements the operator <=. public static bool operator <=(TypedModelBase<TClass>? left, TypedModelBase<TClass>? right) Parameters left TypedModelBase<TClass> The left. right TypedModelBase<TClass> The right. Returns bool The result of the operator. See Also ModelBase<TClass>"
  },
  "api/Mithril.Data.Abstractions.BaseClasses.html": {
    "href": "api/Mithril.Data.Abstractions.BaseClasses.html",
    "title": "Namespace Mithril.Data.Abstractions.BaseClasses | Mithril API Reference",
    "keywords": "Namespace Mithril.Data.Abstractions.BaseClasses Classes LookUpEnumBaseClass<TClass> LookUp \"enum\" base class ModelBase<TClass> Model base SettingsBase<TClass> Settings base class TypedModelBase<TClass> Typed model base"
  },
  "api/Mithril.Data.Abstractions.Databases.DefaultDatabase.html": {
    "href": "api/Mithril.Data.Abstractions.Databases.DefaultDatabase.html",
    "title": "Class DefaultDatabase | Mithril API Reference",
    "keywords": "Class DefaultDatabase Namespace Mithril.Data.Abstractions.Databases Assembly Mithril.Data.Abstractions.dll Default database public class DefaultDatabase : IDatabase Inheritance object DefaultDatabase Implements IDatabase Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods GenericExtensions.When<TObject>(TObject, bool, Func<TObject, TObject>) ExpandoObjectExtensions.ConvertToExpando(object?) Properties Name Name associated with the database/connection string public string Name { get; } Property Value string The name. Order Order that this database should be in (if only one database is being used, it is ignored) public int Order { get; } Property Value int The order. Provider Gets the provider. public DbProviderFactory Provider { get; } Property Value DbProviderFactory The provider. SourceOptions Gets the source options. public Options SourceOptions { get; } Property Value Options The source options. See Also IDatabase"
  },
  "api/Mithril.Data.Abstractions.Databases.html": {
    "href": "api/Mithril.Data.Abstractions.Databases.html",
    "title": "Namespace Mithril.Data.Abstractions.Databases | Mithril API Reference",
    "keywords": "Namespace Mithril.Data.Abstractions.Databases Classes DefaultDatabase Default database"
  },
  "api/Mithril.Data.Abstractions.Enums.ContactInfoType.html": {
    "href": "api/Mithril.Data.Abstractions.Enums.ContactInfoType.html",
    "title": "Class ContactInfoType | Mithril API Reference",
    "keywords": "Class ContactInfoType Namespace Mithril.Data.Abstractions.Enums Assembly Mithril.Data.Abstractions.dll ContactInfo types public class ContactInfoType : LookUpEnumBaseClass<ContactInfoType> Inheritance object StringEnumBaseClass<ContactInfoType> LookUpEnumBaseClass<ContactInfoType> ContactInfoType Inherited Members LookUpEnumBaseClass<ContactInfoType>.Icon LookUpEnumBaseClass<ContactInfoType>.NameMapping LookUpEnumBaseClass<ContactInfoType>.GetEnum(string) LookUpEnumBaseClass<ContactInfoType>.GetEnums() StringEnumBaseClass<ContactInfoType>.ToStringEnumBaseClass(string) StringEnumBaseClass<ContactInfoType>.ToString() StringEnumBaseClass<ContactInfoType>.Name object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Extension Methods GenericExtensions.When<TObject>(TObject, bool, Func<TObject, TObject>) ExpandoObjectExtensions.ConvertToExpando(object?) Remarks Initializes a new instance of the ContactInfoType class. Constructors ContactInfoType() Initializes a new instance of the ContactInfoType class. public ContactInfoType() ContactInfoType(string, string) ContactInfo types public ContactInfoType(string name, string icon = \"fa-phone\") Parameters name string The name. icon string The icon. Remarks Initializes a new instance of the ContactInfoType class. See Also LookUpEnumBaseClass<TClass> Properties CellPhone Gets the mobile. public static ContactInfoType CellPhone { get; } Property Value ContactInfoType The mobile. Email Gets the email. public static ContactInfoType Email { get; } Property Value ContactInfoType The email. Extension Gets the extension. public static ContactInfoType Extension { get; } Property Value ContactInfoType The extension. Facebook Gets the facebook. public static ContactInfoType Facebook { get; } Property Value ContactInfoType The facebook. Fax Gets the fax. public static ContactInfoType Fax { get; } Property Value ContactInfoType The fax. GitHub Gets the git hub. public static ContactInfoType GitHub { get; } Property Value ContactInfoType The git hub. LinkedIn Gets the linked in. public static ContactInfoType LinkedIn { get; } Property Value ContactInfoType The linked in. Phone Gets the phone. public static ContactInfoType Phone { get; } Property Value ContactInfoType The phone. Twitter Gets the twitter. public static ContactInfoType Twitter { get; } Property Value ContactInfoType The twitter. WebSite Gets the web site. public static ContactInfoType WebSite { get; } Property Value ContactInfoType The web site. See Also LookUpEnumBaseClass<TClass>"
  },
  "api/Mithril.Data.Abstractions.Enums.LookUpTypeEnum.html": {
    "href": "api/Mithril.Data.Abstractions.Enums.LookUpTypeEnum.html",
    "title": "Class LookUpTypeEnum | Mithril API Reference",
    "keywords": "Class LookUpTypeEnum Namespace Mithril.Data.Abstractions.Enums Assembly Mithril.Data.Abstractions.dll LookUpType enum public class LookUpTypeEnum : StringEnumBaseClass<LookUpTypeEnum> Inheritance object StringEnumBaseClass<LookUpTypeEnum> LookUpTypeEnum Inherited Members StringEnumBaseClass<LookUpTypeEnum>.ToStringEnumBaseClass(string) StringEnumBaseClass<LookUpTypeEnum>.ToString() StringEnumBaseClass<LookUpTypeEnum>.Name object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Extension Methods GenericExtensions.When<TObject>(TObject, bool, Func<TObject, TObject>) ExpandoObjectExtensions.ConvertToExpando(object?) Constructors LookUpTypeEnum() Initializes a new instance of the LookUpTypeEnum class. public LookUpTypeEnum() LookUpTypeEnum(string, string?) Initializes a new instance of the LookUpTypeEnum class. public LookUpTypeEnum(string name, string? description = null) Parameters name string The name. description string The description. Properties ComponentContainerType Gets the type of the component container. public static LookUpTypeEnum ComponentContainerType { get; } Property Value LookUpTypeEnum The type of the component container. ContactInfoType Contact info type public static LookUpTypeEnum ContactInfoType { get; } Property Value LookUpTypeEnum Contact info type Description Gets the description. public string? Description { get; } Property Value string The description. DocumentType Gets the type of the document. public static LookUpTypeEnum DocumentType { get; } Property Value LookUpTypeEnum The type of the document. FeedType Gets the type of the feed. public static LookUpTypeEnum FeedType { get; } Property Value LookUpTypeEnum The type of the feed. FieldType Gets the type of the field. public static LookUpTypeEnum FieldType { get; } Property Value LookUpTypeEnum The type of the field. FormElementType Gets the type of the form element. public static LookUpTypeEnum FormElementType { get; } Property Value LookUpTypeEnum The type of the form element. ParameterType Gets the type of the parameter. public static LookUpTypeEnum ParameterType { get; } Property Value LookUpTypeEnum The type of the parameter. QueryColumnType Gets the type of the query column. public static LookUpTypeEnum QueryColumnType { get; } Property Value LookUpTypeEnum The type of the query column. QueryType Gets the type of the query. public static LookUpTypeEnum QueryType { get; } Property Value LookUpTypeEnum The type of the query. ReportType Gets the type of the report. public static LookUpTypeEnum ReportType { get; } Property Value LookUpTypeEnum The type of the report. Methods GetLookUpTypes() Gets the enum types. public static IEnumerable<LookUpTypeEnum> GetLookUpTypes() Returns IEnumerable<LookUpTypeEnum> The various enum types. See Also StringEnumBaseClass<TClass>"
  },
  "api/Mithril.Data.Abstractions.Enums.UserClaimTypes.html": {
    "href": "api/Mithril.Data.Abstractions.Enums.UserClaimTypes.html",
    "title": "Class UserClaimTypes | Mithril API Reference",
    "keywords": "Class UserClaimTypes Namespace Mithril.Data.Abstractions.Enums Assembly Mithril.Data.Abstractions.dll Claim types that are available public class UserClaimTypes : LookUpEnumBaseClass<UserClaimTypes> Inheritance object StringEnumBaseClass<UserClaimTypes> LookUpEnumBaseClass<UserClaimTypes> UserClaimTypes Inherited Members LookUpEnumBaseClass<UserClaimTypes>.Icon LookUpEnumBaseClass<UserClaimTypes>.NameMapping LookUpEnumBaseClass<UserClaimTypes>.GetEnum(string) LookUpEnumBaseClass<UserClaimTypes>.GetEnums() StringEnumBaseClass<UserClaimTypes>.ToStringEnumBaseClass(string) StringEnumBaseClass<UserClaimTypes>.ToString() StringEnumBaseClass<UserClaimTypes>.Name object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Extension Methods GenericExtensions.When<TObject>(TObject, bool, Func<TObject, TObject>) ExpandoObjectExtensions.ConvertToExpando(object?) Remarks Initializes a new instance of the UserClaimTypes class. Constructors UserClaimTypes() Initializes a new instance of the UserClaimTypes class. public UserClaimTypes() UserClaimTypes(string) Claim types that are available public UserClaimTypes(string name) Parameters name string The name. Remarks Initializes a new instance of the UserClaimTypes class. See Also LookUpEnumBaseClass<TClass> Properties ADGroup Gets the ad group claim type. public static UserClaimTypes ADGroup { get; } Property Value UserClaimTypes The claim corresponding to the AD group. AttorneyLevel Gets the attorney level. public static UserClaimTypes AttorneyLevel { get; } Property Value UserClaimTypes The attorney level. Committee The committee claim type public static UserClaimTypes Committee { get; } Property Value UserClaimTypes The claim corresponding to the committee. Group The group claim type public static UserClaimTypes Group { get; } Property Value UserClaimTypes The claim corresponding to the group. Manager The manager claim type public static UserClaimTypes Manager { get; } Property Value UserClaimTypes The claim corresponding to who the person's manager is. ManagerFor The manager for claim type public static UserClaimTypes ManagerFor { get; } Property Value UserClaimTypes The claim corresponding to who the person is a manager for. Office The office claim type public static UserClaimTypes Office { get; } Property Value UserClaimTypes The claim corresponding to the person's office. Role The role claim type public static UserClaimTypes Role { get; } Property Value UserClaimTypes The claim corresponding to the role. Secretary The secretary claim type public static UserClaimTypes Secretary { get; } Property Value UserClaimTypes The claim corresponding to who the person's secretary is. SecretaryFor The secretary for claim type public static UserClaimTypes SecretaryFor { get; } Property Value UserClaimTypes The claim corresponding to who the person is a secretary for. Section Gets the section. public static UserClaimTypes Section { get; } Property Value UserClaimTypes The section. SectionHead The section head claim type public static UserClaimTypes SectionHead { get; } Property Value UserClaimTypes The claim corresponding to the person's section head. SectionHeadFor The section head for claim type public static UserClaimTypes SectionHeadFor { get; } Property Value UserClaimTypes The claim corresponding to who the person is section head for. StaffType The staff type claim type public static UserClaimTypes StaffType { get; } Property Value UserClaimTypes The claim corresponding to the person's staff type. UserName The user name claim type public static UserClaimTypes UserName { get; } Property Value UserClaimTypes The claim corresponding to the user name. See Also LookUpEnumBaseClass<TClass>"
  },
  "api/Mithril.Data.Abstractions.Enums.html": {
    "href": "api/Mithril.Data.Abstractions.Enums.html",
    "title": "Namespace Mithril.Data.Abstractions.Enums | Mithril API Reference",
    "keywords": "Namespace Mithril.Data.Abstractions.Enums Classes ContactInfoType ContactInfo types LookUpTypeEnum LookUpType enum UserClaimTypes Claim types that are available"
  },
  "api/Mithril.Data.Abstractions.ExtensionMethods.ClaimsPrincipalExtensions.html": {
    "href": "api/Mithril.Data.Abstractions.ExtensionMethods.ClaimsPrincipalExtensions.html",
    "title": "Class ClaimsPrincipalExtensions | Mithril API Reference",
    "keywords": "Class ClaimsPrincipalExtensions Namespace Mithril.Data.Abstractions.ExtensionMethods Assembly Mithril.Data.Abstractions.dll ClaimsPrincipal extensions public static class ClaimsPrincipalExtensions Inheritance object ClaimsPrincipalExtensions Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Methods GetName(ClaimsPrincipal?, bool) Gets the name. public static string GetName(this ClaimsPrincipal? claimsPrincipal, bool removeDomain = false) Parameters claimsPrincipal ClaimsPrincipal The claims principal. removeDomain bool if set to true [remove the domain]. As an example, for windows auth, the bit before the ''. If using email addresses for auth, remove the '@domain.com' bit). Returns string The user's name TryGetTennant(ClaimsPrincipal?, out long) Gets the tennant ID for the user if it exists. public static bool TryGetTennant(this ClaimsPrincipal? claimsPrincipal, out long tennantID) Parameters claimsPrincipal ClaimsPrincipal The claims principal. tennantID long The tennant identifier. Returns bool True if it exists, false otherwise."
  },
  "api/Mithril.Data.Abstractions.ExtensionMethods.html": {
    "href": "api/Mithril.Data.Abstractions.ExtensionMethods.html",
    "title": "Namespace Mithril.Data.Abstractions.ExtensionMethods | Mithril API Reference",
    "keywords": "Namespace Mithril.Data.Abstractions.ExtensionMethods Classes ClaimsPrincipalExtensions ClaimsPrincipal extensions"
  },
  "api/Mithril.Data.Abstractions.Interfaces.IIndexedModel.html": {
    "href": "api/Mithril.Data.Abstractions.Interfaces.IIndexedModel.html",
    "title": "Interface IIndexedModel | Mithril API Reference",
    "keywords": "Interface IIndexedModel Namespace Mithril.Data.Abstractions.Interfaces Assembly Mithril.Data.Abstractions.dll Indexable model interface public interface IIndexedModel : IModel, IEquatable<IModel> Inherited Members IModel.Active IModel.Creator IModel.DateCreated IModel.DateModified IModel.ID IModel.Modifier IModel.TenantID IModel.CanBeModifiedBy(ClaimsPrincipal) IModel.CanBeViewedBy(ClaimsPrincipal) IModel.DeleteAsync(IDataService, ClaimsPrincipal, bool) IModel.SaveAsync(IDataService, ClaimsPrincipal) IModel.SetupObject(IDataService, ClaimsPrincipal) IModel.SetupObject(IDataService, IUser) IEquatable<IModel>.Equals(IModel) Extension Methods GenericExtensions.When<TObject>(TObject, bool, Func<TObject, TObject>) ExpandoObjectExtensions.ConvertToExpando(object?) See Also IModel"
  },
  "api/Mithril.Data.Abstractions.Interfaces.ILookUp.html": {
    "href": "api/Mithril.Data.Abstractions.Interfaces.ILookUp.html",
    "title": "Interface ILookUp | Mithril API Reference",
    "keywords": "Interface ILookUp Namespace Mithril.Data.Abstractions.Interfaces Assembly Mithril.Data.Abstractions.dll LookUp interface public interface ILookUp : IModel, IEquatable<IModel>, IEquatable<ILookUp> Inherited Members IModel.Active IModel.Creator IModel.DateCreated IModel.DateModified IModel.ID IModel.Modifier IModel.TenantID IModel.CanBeModifiedBy(ClaimsPrincipal) IModel.CanBeViewedBy(ClaimsPrincipal) IModel.DeleteAsync(IDataService, ClaimsPrincipal, bool) IModel.SaveAsync(IDataService, ClaimsPrincipal) IModel.SetupObject(IDataService, ClaimsPrincipal) IModel.SetupObject(IDataService, IUser) IEquatable<IModel>.Equals(IModel) IEquatable<ILookUp>.Equals(ILookUp) Extension Methods GenericExtensions.When<TObject>(TObject, bool, Func<TObject, TObject>) ExpandoObjectExtensions.ConvertToExpando(object?) Properties DisplayName Display name [Required] [MinLength(1)] [MaxLength(64)] string? DisplayName { get; set; } Property Value string LookUp interface Icon Gets or sets the icon. [Required] [MinLength(1)] [MaxLength(64)] string? Icon { get; set; } Property Value string The icon. Type Gets or sets the type. ILookUpType? Type { get; set; } Property Value ILookUpType The type. See Also IModel IEquatable<T>"
  },
  "api/Mithril.Data.Abstractions.Interfaces.ILookUpType.html": {
    "href": "api/Mithril.Data.Abstractions.Interfaces.ILookUpType.html",
    "title": "Interface ILookUpType | Mithril API Reference",
    "keywords": "Interface ILookUpType Namespace Mithril.Data.Abstractions.Interfaces Assembly Mithril.Data.Abstractions.dll LookUpType interface public interface ILookUpType : IModel, IEquatable<IModel>, IEquatable<ILookUpType> Inherited Members IModel.Active IModel.Creator IModel.DateCreated IModel.DateModified IModel.ID IModel.Modifier IModel.TenantID IModel.CanBeModifiedBy(ClaimsPrincipal) IModel.CanBeViewedBy(ClaimsPrincipal) IModel.DeleteAsync(IDataService, ClaimsPrincipal, bool) IModel.SaveAsync(IDataService, ClaimsPrincipal) IModel.SetupObject(IDataService, ClaimsPrincipal) IModel.SetupObject(IDataService, IUser) IEquatable<IModel>.Equals(IModel) IEquatable<ILookUpType>.Equals(ILookUpType) Extension Methods GenericExtensions.When<TObject>(TObject, bool, Func<TObject, TObject>) ExpandoObjectExtensions.ConvertToExpando(object?) Properties Description Gets or sets the description. [MaxLength(500)] string? Description { get; set; } Property Value string The description. DisplayName Gets or sets the display name. [Required] [MinLength(1)] [MaxLength(64)] string? DisplayName { get; set; } Property Value string The display name. LookUps Gets or sets the look ups. IList<ILookUp> LookUps { get; set; } Property Value IList<ILookUp> The look ups. See Also IEquatable<T> IModel"
  },
  "api/Mithril.Data.Abstractions.Interfaces.IModel-1.html": {
    "href": "api/Mithril.Data.Abstractions.Interfaces.IModel-1.html",
    "title": "Interface IModel<TClass> | Mithril API Reference",
    "keywords": "Interface IModel<TClass> Namespace Mithril.Data.Abstractions.Interfaces Assembly Mithril.Data.Abstractions.dll IModel interface public interface IModel<TClass> : IModel, IEquatable<IModel>, IEquatable<IModel<TClass>> where TClass : IModel<TClass>, new() Type Parameters TClass The type of the class. Inherited Members IModel.Active IModel.Creator IModel.DateCreated IModel.DateModified IModel.ID IModel.Modifier IModel.TenantID IModel.CanBeModifiedBy(ClaimsPrincipal) IModel.CanBeViewedBy(ClaimsPrincipal) IModel.DeleteAsync(IDataService, ClaimsPrincipal, bool) IModel.SaveAsync(IDataService, ClaimsPrincipal) IModel.SetupObject(IDataService, ClaimsPrincipal) IModel.SetupObject(IDataService, IUser) IEquatable<IModel>.Equals(IModel) IEquatable<IModel<TClass>>.Equals(IModel<TClass>) Extension Methods GenericExtensions.When<TObject>(TObject, bool, Func<TObject, TObject>) ExpandoObjectExtensions.ConvertToExpando(object?) Methods SetupObjectAndReturn(IDataService, ClaimsPrincipal?) Setups the object and returns it. TClass SetupObjectAndReturn(IDataService dataService, ClaimsPrincipal? currentUser) Parameters dataService IDataService The data service. currentUser ClaimsPrincipal The current user. Returns TClass This. See Also IModel"
  },
  "api/Mithril.Data.Abstractions.Interfaces.IModel.html": {
    "href": "api/Mithril.Data.Abstractions.Interfaces.IModel.html",
    "title": "Interface IModel | Mithril API Reference",
    "keywords": "Interface IModel Namespace Mithril.Data.Abstractions.Interfaces Assembly Mithril.Data.Abstractions.dll Model interface public interface IModel : IEquatable<IModel> Inherited Members IEquatable<IModel>.Equals(IModel) Extension Methods GenericExtensions.When<TObject>(TObject, bool, Func<TObject, TObject>) ExpandoObjectExtensions.ConvertToExpando(object?) Properties Active Gets or sets a value indicating whether this IModel is active. bool Active { get; set; } Property Value bool true if active; otherwise, false. Creator Gets or sets the creator. IUser? Creator { get; set; } Property Value IUser The creator. DateCreated Gets or sets the date created. [Between(\"1/1/1900\", \"1/1/2100\", \"\")] DateTime DateCreated { get; set; } Property Value DateTime The date created. DateModified Gets or sets the date modified. [Between(\"1/1/1900\", \"1/1/2100\", \"\")] DateTime DateModified { get; set; } Property Value DateTime The date modified. ID Gets or sets the identifier. long ID { get; set; } Property Value long The identifier. Modifier Gets or sets the modifier. IUser? Modifier { get; set; } Property Value IUser The modifier. TenantID Gets or sets the tenant associated with the object. long TenantID { get; set; } Property Value long The tenant associated with the object. Methods CanBeModifiedBy(ClaimsPrincipal?) Determines whether this instance [can be modified by] the specified user. bool CanBeModifiedBy(ClaimsPrincipal? user) Parameters user ClaimsPrincipal The user. Returns bool true if this instance [can be modified by] the specified user; otherwise, false. CanBeViewedBy(ClaimsPrincipal?) Determines whether this instance [can be viewed by] the specified user. bool CanBeViewedBy(ClaimsPrincipal? user) Parameters user ClaimsPrincipal The user. Returns bool true if this instance [can be viewed by] the specified user; otherwise, false. DeleteAsync(IDataService?, ClaimsPrincipal?, bool) Deletes this instance. Task DeleteAsync(IDataService? dataService, ClaimsPrincipal? currentUser, bool softDelete = true) Parameters dataService IDataService The data service. currentUser ClaimsPrincipal The current user. softDelete bool if set to true [soft delete]. Returns Task SaveAsync(IDataService?, ClaimsPrincipal?) Saves this instance asynchronously. Task SaveAsync(IDataService? dataService, ClaimsPrincipal? currentUser) Parameters dataService IDataService The data service. currentUser ClaimsPrincipal The current user. Returns Task The async task. SetupObject(IDataService?, IUser?) Sets up the object. void SetupObject(IDataService? dataService, IUser? currentUser) Parameters dataService IDataService The data service. currentUser IUser The current user. SetupObject(IDataService?, ClaimsPrincipal?) Sets up the object. void SetupObject(IDataService? dataService, ClaimsPrincipal? currentUser) Parameters dataService IDataService The data service. currentUser ClaimsPrincipal The current user. See Also IEquatable<T>"
  },
  "api/Mithril.Data.Abstractions.Interfaces.ITypedModel.html": {
    "href": "api/Mithril.Data.Abstractions.Interfaces.ITypedModel.html",
    "title": "Interface ITypedModel | Mithril API Reference",
    "keywords": "Interface ITypedModel Namespace Mithril.Data.Abstractions.Interfaces Assembly Mithril.Data.Abstractions.dll Typed model public interface ITypedModel : IModel, IEquatable<IModel>, IEquatable<ITypedModel> Inherited Members IModel.Active IModel.Creator IModel.DateCreated IModel.DateModified IModel.ID IModel.Modifier IModel.TenantID IModel.CanBeModifiedBy(ClaimsPrincipal) IModel.CanBeViewedBy(ClaimsPrincipal) IModel.DeleteAsync(IDataService, ClaimsPrincipal, bool) IModel.SaveAsync(IDataService, ClaimsPrincipal) IModel.SetupObject(IDataService, ClaimsPrincipal) IModel.SetupObject(IDataService, IUser) IEquatable<IModel>.Equals(IModel) IEquatable<ITypedModel>.Equals(ITypedModel) Extension Methods GenericExtensions.When<TObject>(TObject, bool, Func<TObject, TObject>) ExpandoObjectExtensions.ConvertToExpando(object?) Properties Type Gets or sets the type. [Required] [MaxLength(64)] [MinLength(1)] string? Type { get; set; } Property Value string The type. Methods OfType(params string?[]?) Determines if the object is of a specific type bool OfType(params string?[]? typeNames) Parameters typeNames string[] Type name Returns bool True if it is, false otherwise"
  },
  "api/Mithril.Data.Abstractions.Interfaces.IUser.html": {
    "href": "api/Mithril.Data.Abstractions.Interfaces.IUser.html",
    "title": "Interface IUser | Mithril API Reference",
    "keywords": "Interface IUser Namespace Mithril.Data.Abstractions.Interfaces Assembly Mithril.Data.Abstractions.dll User interface public interface IUser : IModel, IEquatable<IModel>, IEquatable<IUser> Inherited Members IModel.Active IModel.Creator IModel.DateCreated IModel.DateModified IModel.ID IModel.Modifier IModel.TenantID IModel.CanBeModifiedBy(ClaimsPrincipal) IModel.CanBeViewedBy(ClaimsPrincipal) IModel.DeleteAsync(IDataService, ClaimsPrincipal, bool) IModel.SaveAsync(IDataService, ClaimsPrincipal) IModel.SetupObject(IDataService, ClaimsPrincipal) IModel.SetupObject(IDataService, IUser) IEquatable<IModel>.Equals(IModel) IEquatable<IUser>.Equals(IUser) Extension Methods GenericExtensions.When<TObject>(TObject, bool, Func<TObject, TObject>) ExpandoObjectExtensions.ConvertToExpando(object?) Properties FullName Gets or sets the full name. string FullName { get; } Property Value string The full name. Initials Gets the initials. string Initials { get; } Property Value string The initials. ShortName Gets the short name. string ShortName { get; } Property Value string The short name. UserName Gets or sets the name of the user. [MaxLength(100)] string? UserName { get; } Property Value string The name of the user. Methods CanAccess(string, string?) Determines whether this instance can access the specified type. bool CanAccess(string type, string? name) Parameters type string The type. name string The name. Returns bool true if this instance can access the specified type; otherwise, false. Equals(ClaimsPrincipal?) Determines if this user object is equal to the user specified. bool Equals(ClaimsPrincipal? user) Parameters user ClaimsPrincipal The user. Returns bool True if they are the same, false otherwise. GetClaims(UserClaimTypes) Gets the claims requested. IEnumerable<IUserClaim> GetClaims(UserClaimTypes type) Parameters type UserClaimTypes The type. Returns IEnumerable<IUserClaim> The claims specified. See Also IModel"
  },
  "api/Mithril.Data.Abstractions.Interfaces.IUserClaim.html": {
    "href": "api/Mithril.Data.Abstractions.Interfaces.IUserClaim.html",
    "title": "Interface IUserClaim | Mithril API Reference",
    "keywords": "Interface IUserClaim Namespace Mithril.Data.Abstractions.Interfaces Assembly Mithril.Data.Abstractions.dll User claim interface public interface IUserClaim : IModel, IEquatable<IModel>, IEquatable<IUserClaim> Inherited Members IModel.Active IModel.Creator IModel.DateCreated IModel.DateModified IModel.ID IModel.Modifier IModel.TenantID IModel.CanBeModifiedBy(ClaimsPrincipal) IModel.CanBeViewedBy(ClaimsPrincipal) IModel.DeleteAsync(IDataService, ClaimsPrincipal, bool) IModel.SaveAsync(IDataService, ClaimsPrincipal) IModel.SetupObject(IDataService, ClaimsPrincipal) IModel.SetupObject(IDataService, IUser) IEquatable<IModel>.Equals(IModel) IEquatable<IUserClaim>.Equals(IUserClaim) Extension Methods GenericExtensions.When<TObject>(TObject, bool, Func<TObject, TObject>) ExpandoObjectExtensions.ConvertToExpando(object?) Properties Type Gets or sets the type. [Required] [MinLength(1)] [MaxLength(128)] string? Type { get; set; } Property Value string The type. Users Gets or sets the users. IList<IUser> Users { get; set; } Property Value IList<IUser> The users. Value Gets or sets the value. [Required] [MinLength(1)] string? Value { get; set; } Property Value string The value. Methods CanAccess(IUser) Determines whether this instance can access the specified user. bool CanAccess(IUser user) Parameters user IUser The user. Returns bool true if this instance can access the specified user; otherwise, false. CanAccess(ClaimsPrincipal) Determines whether this instance can access the specified user. bool CanAccess(ClaimsPrincipal user) Parameters user ClaimsPrincipal The user. Returns bool true if this instance can access the specified user; otherwise, false. CanAccess(string, string?) Determines whether this instance can access the specified type. bool CanAccess(string type, string? value) Parameters type string The type. value string The value. Returns bool true if this instance can access the specified type; otherwise, false. See Also IModel"
  },
  "api/Mithril.Data.Abstractions.Interfaces.html": {
    "href": "api/Mithril.Data.Abstractions.Interfaces.html",
    "title": "Namespace Mithril.Data.Abstractions.Interfaces | Mithril API Reference",
    "keywords": "Namespace Mithril.Data.Abstractions.Interfaces Interfaces IIndexedModel Indexable model interface ILookUp LookUp interface ILookUpType LookUpType interface IModel Model interface IModel<TClass> IModel interface ITypedModel Typed model IUser User interface IUserClaim User claim interface"
  },
  "api/Mithril.Data.Abstractions.Services.IDataService.html": {
    "href": "api/Mithril.Data.Abstractions.Services.IDataService.html",
    "title": "Interface IDataService | Mithril API Reference",
    "keywords": "Interface IDataService Namespace Mithril.Data.Abstractions.Services Assembly Mithril.Data.Abstractions.dll Data service interface public interface IDataService Extension Methods GenericExtensions.When<TObject>(TObject, bool, Func<TObject, TObject>) ExpandoObjectExtensions.ConvertToExpando(object?) Methods DeleteAsync<TData>(ClaimsPrincipal?, params TData[]) Deletes the objects asynchronously. Task<int> DeleteAsync<TData>(ClaimsPrincipal? user, params TData[] data) where TData : class, IModel Parameters user ClaimsPrincipal The user. data TData[] The data. Returns Task<int> The number of objects updated. Type Parameters TData The type of the data. QueryAsync<TData>(string, CommandType, string, params object[]) Runs a query and returns data of the specific type. Task<IEnumerable<TData>> QueryAsync<TData>(string query, CommandType commandType, string connection, params object[] parameters) where TData : class Parameters query string The query. commandType CommandType Type of the command. connection string The connection. parameters object[] The parameters. Returns Task<IEnumerable<TData>> The resulting data. Type Parameters TData The type of the data. QueryDynamicAsync(string, CommandType, string, params object[]) Runs a dynamic query and returns the results. Task<IEnumerable<dynamic>> QueryDynamicAsync(string query, CommandType commandType, string connection, params object[] parameters) Parameters query string The query. commandType CommandType Type of the command. connection string The connection. parameters object[] The parameters. Returns Task<IEnumerable<dynamic>> The data resulting from the query. QueryScalarAsync<TData>(string, CommandType, string, params object[]) Runs a scalar query and returns data of the specific type. Task<TData> QueryScalarAsync<TData>(string query, CommandType commandType, string connection, params object[] parameters) where TData : class Parameters query string The query. commandType CommandType Type of the command. connection string The connection. parameters object[] The parameters. Returns Task<TData> The resulting data. Type Parameters TData The type of the data. Query<TData>() Creates a query used to get information. IQueryable<TData>? Query<TData>() where TData : class Returns IQueryable<TData> The IQueryable object. Type Parameters TData The type of the data. SaveAsync<TData>(ClaimsPrincipal?, params TData?[]) Saves the object asynchronously. Task<int> SaveAsync<TData>(ClaimsPrincipal? user, params TData?[] data) where TData : class, IModel Parameters user ClaimsPrincipal The user. data TData[] The data. Returns Task<int> The number of objects updated. Type Parameters TData The type of the data."
  },
  "api/Mithril.Data.Abstractions.Services.html": {
    "href": "api/Mithril.Data.Abstractions.Services.html",
    "title": "Namespace Mithril.Data.Abstractions.Services | Mithril API Reference",
    "keywords": "Namespace Mithril.Data.Abstractions.Services Interfaces IDataService Data service interface"
  },
  "api/Mithril.Data.Admin.LookUpTypeEditor.html": {
    "href": "api/Mithril.Data.Admin.LookUpTypeEditor.html",
    "title": "Class LookUpTypeEditor | Mithril API Reference",
    "keywords": "Class LookUpTypeEditor Namespace Mithril.Data.Admin Assembly Mithril.Data.dll LookUpType editor class public class LookUpTypeEditor : EntityEditorBaseClass<LookUpTypeVM, LookUpType>, IEntityEditor, IEditor Inheritance object EntityEditorBaseClass<LookUpTypeVM> EntityEditorBaseClass<LookUpTypeVM, LookUpType> LookUpTypeEditor Implements IEntityEditor IEditor Inherited Members EntityEditorBaseClass<LookUpTypeVM, LookUpType>.ActivateAsync(long, ClaimsPrincipal) EntityEditorBaseClass<LookUpTypeVM, LookUpType>.CanView(ClaimsPrincipal) EntityEditorBaseClass<LookUpTypeVM, LookUpType>.DeleteEntityAsync(long, ClaimsPrincipal) EntityEditorBaseClass<LookUpTypeVM, LookUpType>.Load(long, ExpandoObject, ClaimsPrincipal) EntityEditorBaseClass<LookUpTypeVM, LookUpType>.LoadPageAsync(int, int, string, bool, string, ClaimsPrincipal) EntityEditorBaseClass<LookUpTypeVM, LookUpType>.SaveEntityAsync(long, ExpandoObject, ClaimsPrincipal) EntityEditorBaseClass<LookUpTypeVM, LookUpType>.TotalActiveAsync(ClaimsPrincipal) EntityEditorBaseClass<LookUpTypeVM, LookUpType>.Convert(LookUpType, bool) EntityEditorBaseClass<LookUpTypeVM, LookUpType>.FilterQueryBySearchQuery(IQueryable<LookUpType>, string) EntityEditorBaseClass<LookUpTypeVM, LookUpType>.LoadModel(long) EntityEditorBaseClass<LookUpTypeVM, LookUpType>.MakeActiveAsync(LookUpType) EntityEditorBaseClass<LookUpTypeVM, LookUpType>.MakeInactiveAsync(LookUpType) EntityEditorBaseClass<LookUpTypeVM>.Category EntityEditorBaseClass<LookUpTypeVM>.ComponentDefinition EntityEditorBaseClass<LookUpTypeVM>.Description EntityEditorBaseClass<LookUpTypeVM>.EntityType EntityEditorBaseClass<LookUpTypeVM>.Name EntityEditorBaseClass<LookUpTypeVM>.DataService EntityEditorBaseClass<LookUpTypeVM>.ServiceProvider EntityEditorBaseClass<LookUpTypeVM>.ActivateAsync(long, ClaimsPrincipal) EntityEditorBaseClass<LookUpTypeVM>.CanView(ClaimsPrincipal) EntityEditorBaseClass<LookUpTypeVM>.DeleteEntityAsync(long, ClaimsPrincipal) EntityEditorBaseClass<LookUpTypeVM>.Load(long, ExpandoObject, ClaimsPrincipal) EntityEditorBaseClass<LookUpTypeVM>.LoadPageAsync(int, int, string, bool, string, ClaimsPrincipal) EntityEditorBaseClass<LookUpTypeVM>.SaveEntityAsync(long, ExpandoObject, ClaimsPrincipal) EntityEditorBaseClass<LookUpTypeVM>.TotalActiveAsync(ClaimsPrincipal) object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods GenericExtensions.When<TObject>(TObject, bool, Func<TObject, TObject>) ExpandoObjectExtensions.ConvertToExpando(object?) Remarks Initializes a new instance of the LookUpTypeEditor class. Constructors LookUpTypeEditor(IDataService?, IEntityMetadataService?, IServiceProvider?, string?) LookUpType editor class public LookUpTypeEditor(IDataService? dataService, IEntityMetadataService? entityMetadataService, IServiceProvider? serviceProvider, string? dataType = null) Parameters dataService IDataService The data service. entityMetadataService IEntityMetadataService The entity metadata service. serviceProvider IServiceProvider The service provider. dataType string Type of the data. Remarks Initializes a new instance of the LookUpTypeEditor class. See Also EntityEditorBaseClass<TEntity, TModel> Properties Icon Gets the icon. public override string Icon { get; } Property Value string The icon. Methods Convert(LookUpType, bool) Converts the model into the appropriate view model. protected override IEntity Convert(LookUpType model, bool full = true) Parameters model LookUpType The model. full bool if set to true [full]. Returns IEntity The view model FilterQueryBySearchQuery(IQueryable<LookUpType>?, string) Filters the query by search term. protected override IQueryable<LookUpType>? FilterQueryBySearchQuery(IQueryable<LookUpType>? query, string searchQuery) Parameters query IQueryable<LookUpType> The query. searchQuery string The search query. Returns IQueryable<LookUpType> The resulting query. See Also EntityEditorBaseClass<TEntity, TModel>"
  },
  "api/Mithril.Data.Admin.ViewModels.LookUpTypeVM.html": {
    "href": "api/Mithril.Data.Admin.ViewModels.LookUpTypeVM.html",
    "title": "Class LookUpTypeVM | Mithril API Reference",
    "keywords": "Class LookUpTypeVM Namespace Mithril.Data.Admin.ViewModels Assembly Mithril.Data.dll LookUpType view model class public class LookUpTypeVM : EntityBaseClass<LookUpType>, IEntity<LookUpType>, IEntity Inheritance object EntityBaseClass<LookUpType> LookUpTypeVM Implements IEntity<LookUpType> IEntity Inherited Members EntityBaseClass<LookUpType>.Active EntityBaseClass<LookUpType>.ID object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods GenericExtensions.When<TObject>(TObject, bool, Func<TObject, TObject>) ExpandoObjectExtensions.ConvertToExpando(object?) Constructors LookUpTypeVM() Initializes a new instance of the LookUpTypeVM class. public LookUpTypeVM() LookUpTypeVM(LookUpType, bool) Initializes a new instance of the LookUpTypeVM class. public LookUpTypeVM(LookUpType model, bool full) Parameters model LookUpType The model. full bool if set to true [full]. Properties Description Gets or sets the description. [MaxLength(500)] [Order(2)] public string? Description { get; set; } Property Value string The description. DisplayName Gets or sets the display name. [MaxLength(64)] [Order(1)] public string? DisplayName { get; set; } Property Value string The display name. LookUps Gets or sets the look ups. [Order(3)] public List<LookUpVM> LookUps { get; set; } Property Value List<LookUpVM> The look ups. Methods SaveAsync(long, IDataService?, IServiceProvider?, ClaimsPrincipal?) Saves the changes asynchronously. public override Task<LookUpType?> SaveAsync(long id, IDataService? dataService, IServiceProvider? serviceProvider, ClaimsPrincipal? currentUser) Parameters id long The identifier. dataService IDataService The data service. serviceProvider IServiceProvider The service provider. currentUser ClaimsPrincipal The current user. Returns Task<LookUpType> The async task. See Also EntityBaseClass<TEntity>"
  },
  "api/Mithril.Data.Admin.ViewModels.LookUpVM.html": {
    "href": "api/Mithril.Data.Admin.ViewModels.LookUpVM.html",
    "title": "Class LookUpVM | Mithril API Reference",
    "keywords": "Class LookUpVM Namespace Mithril.Data.Admin.ViewModels Assembly Mithril.Data.dll LookUp view model class public class LookUpVM Inheritance object LookUpVM Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods GenericExtensions.When<TObject>(TObject, bool, Func<TObject, TObject>) ExpandoObjectExtensions.ConvertToExpando(object?) Constructors LookUpVM() Initializes a new instance of the LookUpVM class. public LookUpVM() LookUpVM(ILookUp) Initializes a new instance of the LookUpVM class. public LookUpVM(ILookUp lookUp) Parameters lookUp ILookUp The look up. Properties DisplayName Display name [Required] [MinLength(1)] [MaxLength(64)] [Order(2)] public string? DisplayName { get; set; } Property Value string LookUp view model class ID Gets or sets the identifier. [Order(1)] public long ID { get; } Property Value long The identifier. Icon Gets or sets the icon. [Required] [MinLength(1)] [MaxLength(64)] [Order(3)] public string? Icon { get; set; } Property Value string The icon. Methods Save(LookUpType) Saves the changes asynchronously. public void Save(LookUpType lookUpType) Parameters lookUpType LookUpType Type of the look up."
  },
  "api/Mithril.Data.Admin.ViewModels.html": {
    "href": "api/Mithril.Data.Admin.ViewModels.html",
    "title": "Namespace Mithril.Data.Admin.ViewModels | Mithril API Reference",
    "keywords": "Namespace Mithril.Data.Admin.ViewModels Classes LookUpTypeVM LookUpType view model class LookUpVM LookUp view model class"
  },
  "api/Mithril.Data.Admin.html": {
    "href": "api/Mithril.Data.Admin.html",
    "title": "Namespace Mithril.Data.Admin | Mithril API Reference",
    "keywords": "Namespace Mithril.Data.Admin Classes LookUpTypeEditor LookUpType editor class"
  },
  "api/Mithril.Data.Apm.QueryListener.html": {
    "href": "api/Mithril.Data.Apm.QueryListener.html",
    "title": "Class QueryListener | Mithril API Reference",
    "keywords": "Class QueryListener Namespace Mithril.Data.Apm Assembly Mithril.Data.dll Query listener public class QueryListener : EventListener, IDisposable, IEventListener Inheritance object EventListener QueryListener Implements IDisposable IEventListener Inherited Members EventListener.DisableEvents(EventSource) EventListener.EnableEvents(EventSource, EventLevel) EventListener.EnableEvents(EventSource, EventLevel, EventKeywords) EventListener.EnableEvents(EventSource, EventLevel, EventKeywords, IDictionary<string, string>) EventListener.EventSourceIndex(EventSource) EventListener.EventSourceCreated EventListener.EventWritten object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods GenericExtensions.When<TObject>(TObject, bool, Func<TObject, TObject>) ExpandoObjectExtensions.ConvertToExpando(object?) Remarks Initializes a new instance of the QueryListener class. Constructors QueryListener(ILogger<QueryListener>?) Query listener public QueryListener(ILogger<QueryListener>? logger) Parameters logger ILogger<QueryListener> The logger. Remarks Initializes a new instance of the QueryListener class. See Also IEventListener EventListener Properties Name Gets the name. public string Name { get; } Property Value string The name. Methods Dispose() Releases unmanaged and - optionally - managed resources. public override void Dispose() Dispose(bool) Releases unmanaged and - optionally - managed resources. protected virtual void Dispose(bool disposing) Parameters disposing bool true to release both managed and unmanaged resources; false to release only unmanaged resources. ~QueryListener() Finalizes an instance of the QueryListener class. protected ~QueryListener() OnEventSourceCreated(EventSource) Called for all existing event sources when the event listener is created and when a new event source is attached to the listener. protected override void OnEventSourceCreated(EventSource eventSource) Parameters eventSource EventSource The event source. OnEventWritten(EventWrittenEventArgs) Called whenever an event has been written by an event source for which the event listener has enabled events. protected override void OnEventWritten(EventWrittenEventArgs eventData) Parameters eventData EventWrittenEventArgs The event arguments that describe the event. Subscribe(IMetricsCollectorService) Notifies the provider that an observer is to receive notifications. public IEventListener Subscribe(IMetricsCollectorService observer) Parameters observer IMetricsCollectorService The object that is to receive notifications. Returns IEventListener A reference to an interface that allows observers to stop receiving notifications before the provider has finished sending them. See Also IEventListener EventListener"
  },
  "api/Mithril.Data.Apm.QueryMetrics.html": {
    "href": "api/Mithril.Data.Apm.QueryMetrics.html",
    "title": "Class QueryMetrics | Mithril API Reference",
    "keywords": "Class QueryMetrics Namespace Mithril.Data.Apm Assembly Mithril.Data.dll Query metrics data holder public class QueryMetrics Inheritance object QueryMetrics Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods GenericExtensions.When<TObject>(TObject, bool, Func<TObject, TObject>) ExpandoObjectExtensions.ConvertToExpando(object?) Properties CommandText Gets or sets the command text. public string? CommandText { get; set; } Property Value string The command text. DataSource Gets or sets the data source. public string? DataSource { get; set; } Property Value string The data source. Database Gets or sets the database. public string? Database { get; set; } Property Value string The database. ExceptionNumber Gets or sets the exception number. public int ExceptionNumber { get; set; } Property Value int The exception number. ID Gets or sets the identifier. public int ID { get; set; } Property Value int The identifier. StartTime Gets or sets the time taken in ms. public long StartTime { get; set; } Property Value long The time taken in ms."
  },
  "api/Mithril.Data.Apm.html": {
    "href": "api/Mithril.Data.Apm.html",
    "title": "Namespace Mithril.Data.Apm | Mithril API Reference",
    "keywords": "Namespace Mithril.Data.Apm Classes QueryListener Query listener QueryMetrics Query metrics data holder"
  },
  "api/Mithril.Data.DataModule.html": {
    "href": "api/Mithril.Data.DataModule.html",
    "title": "Class DataModule | Mithril API Reference",
    "keywords": "Class DataModule Namespace Mithril.Data Assembly Mithril.Data.dll Data module public class DataModule : ModuleBaseClass<DataModule>, IEquatable<DataModule>, IModule Inheritance object ModuleBaseClass<DataModule> DataModule Implements IEquatable<DataModule> IModule Inherited Members ModuleBaseClass<DataModule>.Category ModuleBaseClass<DataModule>.ContentPath ModuleBaseClass<DataModule>.Features ModuleBaseClass<DataModule>.ID ModuleBaseClass<DataModule>.LastModified ModuleBaseClass<DataModule>.Name ModuleBaseClass<DataModule>.Tags ModuleBaseClass<DataModule>.Version ModuleBaseClass<DataModule>.ConfigureApplication(IApplicationBuilder, IConfiguration, IHostEnvironment) ModuleBaseClass<DataModule>.ConfigureHostSettings(IHostBuilder, IConfiguration, IHostEnvironment) ModuleBaseClass<DataModule>.ConfigureLoggingSettings(ILoggingBuilder, IConfiguration, IHostEnvironment) ModuleBaseClass<DataModule>.ConfigureMVC(IMvcBuilder, IConfiguration, IHostEnvironment) ModuleBaseClass<DataModule>.ConfigureRoutes(IEndpointRouteBuilder, IConfiguration, IHostEnvironment) ModuleBaseClass<DataModule>.ConfigureWebHostSettings(IWebHostBuilder, IConfiguration, IHostEnvironment) ModuleBaseClass<DataModule>.Equals(object) ModuleBaseClass<DataModule>.Equals(DataModule) ModuleBaseClass<DataModule>.GetHashCode() ModuleBaseClass<DataModule>.OnStarted() ModuleBaseClass<DataModule>.OnStopped() ModuleBaseClass<DataModule>.OnStopping() object.Equals(object, object) object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods GenericExtensions.When<TObject>(TObject, bool, Func<TObject, TObject>) ExpandoObjectExtensions.ConvertToExpando(object?) Constructors DataModule() Initializes a new instance of the DataModule class. public DataModule() Properties Order Gets the order that they are initialized in. public override int Order { get; protected set; } Property Value int The order that they are initialized in. Methods ConfigureServices(IServiceCollection?, IConfiguration?, IHostEnvironment?) Configures the services for the module. public override IServiceCollection? ConfigureServices(IServiceCollection? services, IConfiguration? configuration, IHostEnvironment? environment) Parameters services IServiceCollection The services collection. configuration IConfiguration The configuration. environment IHostEnvironment The environment. Returns IServiceCollection Data module InitializeDataAsync(IDataService?, IServiceProvider?) Initializes the data. public override Task InitializeDataAsync(IDataService? dataService, IServiceProvider? services) Parameters dataService IDataService The data service. services IServiceProvider The services for the application. Returns Task The async task. See Also ModuleBaseClass<TModule>"
  },
  "api/Mithril.Data.HealthCheck.SqlConnectionHealthCheck.html": {
    "href": "api/Mithril.Data.HealthCheck.SqlConnectionHealthCheck.html",
    "title": "Class SqlConnectionHealthCheck | Mithril API Reference",
    "keywords": "Class SqlConnectionHealthCheck Namespace Mithril.Data.HealthCheck Assembly Mithril.Data.dll SQL Connection health check public class SqlConnectionHealthCheck : IHealthCheck Inheritance object SqlConnectionHealthCheck Implements IHealthCheck Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods GenericExtensions.When<TObject>(TObject, bool, Func<TObject, TObject>) ExpandoObjectExtensions.ConvertToExpando(object?) Remarks Initializes a new instance of the SqlConnectionHealthCheck class. Constructors SqlConnectionHealthCheck(IConfiguration?) SQL Connection health check public SqlConnectionHealthCheck(IConfiguration? configuration) Parameters configuration IConfiguration The configuration. Remarks Initializes a new instance of the SqlConnectionHealthCheck class. See Also IHealthCheck Methods CheckHealthAsync(HealthCheckContext, CancellationToken) Runs the health check, returning the status of the component being checked. public Task<HealthCheckResult> CheckHealthAsync(HealthCheckContext context, CancellationToken cancellationToken = default) Parameters context HealthCheckContext A context object associated with the current execution. cancellationToken CancellationToken A CancellationToken that can be used to cancel the health check. Returns Task<HealthCheckResult> A Task<TResult> that completes when the health check has finished, yielding the status of the component being checked. See Also IHealthCheck"
  },
  "api/Mithril.Data.HealthCheck.html": {
    "href": "api/Mithril.Data.HealthCheck.html",
    "title": "Namespace Mithril.Data.HealthCheck | Mithril API Reference",
    "keywords": "Namespace Mithril.Data.HealthCheck Classes SqlConnectionHealthCheck SQL Connection health check"
  },
  "api/Mithril.Data.Models.Contact.ContactInfo.html": {
    "href": "api/Mithril.Data.Models.Contact.ContactInfo.html",
    "title": "Class ContactInfo | Mithril API Reference",
    "keywords": "Class ContactInfo Namespace Mithril.Data.Models.Contact Assembly Mithril.Data.dll Contact info public class ContactInfo : TypedModelBase<ContactInfo>, IModel<ContactInfo>, IEquatable<IModel<ContactInfo>>, IComparable, IComparable<ContactInfo>, IEquatable<ModelBase<ContactInfo>>, ITypedModel, IModel, IEquatable<IModel>, IEquatable<ITypedModel>, IEquatable<TypedModelBase<ContactInfo>>, IEquatable<ContactInfo> Inheritance object ModelBase<ContactInfo> TypedModelBase<ContactInfo> ContactInfo Implements IModel<ContactInfo> IEquatable<IModel<ContactInfo>> IComparable IComparable<ContactInfo> IEquatable<ModelBase<ContactInfo>> ITypedModel IModel IEquatable<IModel> IEquatable<ITypedModel> IEquatable<TypedModelBase<ContactInfo>> IEquatable<ContactInfo> Inherited Members TypedModelBase<ContactInfo>.Type TypedModelBase<ContactInfo>.Equals(ITypedModel) TypedModelBase<ContactInfo>.Equals(TypedModelBase<ContactInfo>) TypedModelBase<ContactInfo>.OfType(params string[]) TypedModelBase<ContactInfo>.OfType(params ILookUp[]) ModelBase<ContactInfo>.Active ModelBase<ContactInfo>.Creator ModelBase<ContactInfo>.DateCreated ModelBase<ContactInfo>.DateModified ModelBase<ContactInfo>.ID ModelBase<ContactInfo>.Modifier ModelBase<ContactInfo>.TenantID ModelBase<ContactInfo>.All(IDataService) ModelBase<ContactInfo>.AllActive(IDataService) ModelBase<ContactInfo>.AllInactive(IDataService) ModelBase<ContactInfo>.Load(long, IDataService) ModelBase<ContactInfo>.Query(IDataService) ModelBase<ContactInfo>.CanBeModifiedBy(ClaimsPrincipal) ModelBase<ContactInfo>.CanBeViewedBy(ClaimsPrincipal) ModelBase<ContactInfo>.CompareTo(object) ModelBase<ContactInfo>.DeleteAsync(IDataService, ClaimsPrincipal, bool) ModelBase<ContactInfo>.Equals(IModel) ModelBase<ContactInfo>.Equals(IModel<ContactInfo>) ModelBase<ContactInfo>.Equals(ModelBase<ContactInfo>) ModelBase<ContactInfo>.SaveAsync(IDataService, ClaimsPrincipal) ModelBase<ContactInfo>.SetupObject(IDataService, ClaimsPrincipal) ModelBase<ContactInfo>.SetupObject(IDataService, IUser) ModelBase<ContactInfo>.SetupObjectAndReturn(IDataService, ClaimsPrincipal) object.Equals(object, object) object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Extension Methods GenericExtensions.When<TObject>(TObject, bool, Func<TObject, TObject>) ExpandoObjectExtensions.ConvertToExpando(object?) Constructors ContactInfo() Initializes a new instance of the ContactInfo class. public ContactInfo() ContactInfo(string, ILookUp) Initializes a new instance of the ContactInfo class. public ContactInfo(string info, ILookUp type) Parameters info string The information. type ILookUp The type. Exceptions ArgumentNullException type ArgumentException type ContactInfo(string, string?) Initializes a new instance of the ContactInfo class. public ContactInfo(string info, string? type) Parameters info string The information. type string The type. Exceptions ArgumentNullException info ArgumentException info Properties Info Gets or sets the information. [MaxLength(100)] public string? Info { get; set; } Property Value string The information. Methods CompareTo(ContactInfo?) Compares the object to another object public override int CompareTo(ContactInfo? other) Parameters other ContactInfo Object to compare to Returns int 0 if they are equal, -1 if this is smaller, 1 if it is larger Equals(ContactInfo?) Indicates whether the current object is equal to another object of the same type. public bool Equals(ContactInfo? other) Parameters other ContactInfo An object to compare with this object. Returns bool true if the current object is equal to the other parameter; otherwise, false. Equals(object?) Determines whether the specified object, is equal to this instance. public override bool Equals(object? obj) Parameters obj object The object to compare with this instance. Returns bool true if the specified object is equal to this instance; otherwise, false. GetHashCode() Returns a hash code for this instance. public override int GetHashCode() Returns int A hash code for this instance, suitable for use in hashing algorithms and data structures like a hash table. ToString() Returns a string that represents this instance. public override string ToString() Returns string A string that represents this instance. Operators operator ==(ContactInfo, ContactInfo) Implements the operator ==. public static bool operator ==(ContactInfo first, ContactInfo second) Parameters first ContactInfo The first. second ContactInfo The second. Returns bool The result of the operator. operator >(ContactInfo, ContactInfo) Implements the operator >. public static bool operator >(ContactInfo left, ContactInfo right) Parameters left ContactInfo The left. right ContactInfo The right. Returns bool The result of the operator. operator >=(ContactInfo, ContactInfo) Implements the operator >=. public static bool operator >=(ContactInfo left, ContactInfo right) Parameters left ContactInfo The left. right ContactInfo The right. Returns bool The result of the operator. operator !=(ContactInfo, ContactInfo) Implements the operator !=. public static bool operator !=(ContactInfo left, ContactInfo right) Parameters left ContactInfo The left. right ContactInfo The right. Returns bool The result of the operator. operator <(ContactInfo, ContactInfo) Implements the operator <. public static bool operator <(ContactInfo left, ContactInfo right) Parameters left ContactInfo The left. right ContactInfo The right. Returns bool The result of the operator. operator <=(ContactInfo, ContactInfo) Implements the operator <=. public static bool operator <=(ContactInfo left, ContactInfo right) Parameters left ContactInfo The left. right ContactInfo The right. Returns bool The result of the operator. See Also TypedModelBase<TClass> IEquatable<T>"
  },
  "api/Mithril.Data.Models.Contact.Mappings.ContactInfoMapping.html": {
    "href": "api/Mithril.Data.Models.Contact.Mappings.ContactInfoMapping.html",
    "title": "Class ContactInfoMapping | Mithril API Reference",
    "keywords": "Class ContactInfoMapping Namespace Mithril.Data.Models.Contact.Mappings Assembly Mithril.Data.dll ContactInfo mapping public class ContactInfoMapping : MappingBaseClass<ContactInfo, DefaultDatabase>, IMapping<ContactInfo>, IMapping Inheritance object MappingBaseClass<ContactInfo, DefaultDatabase> ContactInfoMapping Implements IMapping<ContactInfo> IMapping Inherited Members MappingBaseClass<ContactInfo, DefaultDatabase>.AddAutoKey() MappingBaseClass<ContactInfo, DefaultDatabase>.ContainsProperty(string) MappingBaseClass<ContactInfo, DefaultDatabase>.Copy(IMapping) MappingBaseClass<ContactInfo, DefaultDatabase>.CopyProperty(IIDProperty) MappingBaseClass<ContactInfo, DefaultDatabase>.CopyProperty(IProperty) MappingBaseClass<ContactInfo, DefaultDatabase>.CopyProperty(IMapProperty) MappingBaseClass<ContactInfo, DefaultDatabase>.CopyProperty(IManyToOneProperty) MappingBaseClass<ContactInfo, DefaultDatabase>.CopyProperty(IManyToManyProperty) MappingBaseClass<ContactInfo, DefaultDatabase>.Equals(object) MappingBaseClass<ContactInfo, DefaultDatabase>.GetColumnName(string) MappingBaseClass<ContactInfo, DefaultDatabase>.GetHashCode() MappingBaseClass<ContactInfo, DefaultDatabase>.ID<TDataType>(Expression<Func<ContactInfo, TDataType>>) MappingBaseClass<ContactInfo, DefaultDatabase>.ManyToMany<TDataType>(Expression<Func<ContactInfo, IList<TDataType>>>) MappingBaseClass<ContactInfo, DefaultDatabase>.ManyToOne<TDataType>(Expression<Func<ContactInfo, IList<TDataType>>>) MappingBaseClass<ContactInfo, DefaultDatabase>.ManyToOne<TDataType>(Expression<Func<ContactInfo, TDataType>>) MappingBaseClass<ContactInfo, DefaultDatabase>.Map<TDataType>(Expression<Func<ContactInfo, TDataType>>) MappingBaseClass<ContactInfo, DefaultDatabase>.Reduce(ILogger) MappingBaseClass<ContactInfo, DefaultDatabase>.Reduce(IMapping, ILogger) MappingBaseClass<ContactInfo, DefaultDatabase>.Reference<TDataType>(Expression<Func<ContactInfo, TDataType>>) MappingBaseClass<ContactInfo, DefaultDatabase>.SetQuery(QueryType, string, CommandType, params IParameter[]) MappingBaseClass<ContactInfo, DefaultDatabase>.Setup() MappingBaseClass<ContactInfo, DefaultDatabase>.ToString() MappingBaseClass<ContactInfo, DefaultDatabase>.AutoIDProperties MappingBaseClass<ContactInfo, DefaultDatabase>.DatabaseConfigType MappingBaseClass<ContactInfo, DefaultDatabase>.IDProperties MappingBaseClass<ContactInfo, DefaultDatabase>.ManyToManyProperties MappingBaseClass<ContactInfo, DefaultDatabase>.ManyToOneProperties MappingBaseClass<ContactInfo, DefaultDatabase>.MapProperties MappingBaseClass<ContactInfo, DefaultDatabase>.Merge MappingBaseClass<ContactInfo, DefaultDatabase>.ObjectType MappingBaseClass<ContactInfo, DefaultDatabase>.Order MappingBaseClass<ContactInfo, DefaultDatabase>.Prefix MappingBaseClass<ContactInfo, DefaultDatabase>.Queries MappingBaseClass<ContactInfo, DefaultDatabase>.ReferenceProperties MappingBaseClass<ContactInfo, DefaultDatabase>.SchemaName MappingBaseClass<ContactInfo, DefaultDatabase>.Suffix MappingBaseClass<ContactInfo, DefaultDatabase>.TableName object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods GenericExtensions.When<TObject>(TObject, bool, Func<TObject, TObject>) ExpandoObjectExtensions.ConvertToExpando(object?) Constructors ContactInfoMapping() Initializes a new instance of the ContactInfoMapping class. public ContactInfoMapping() See Also MappingBaseClass<TClassType, TDatabaseType>"
  },
  "api/Mithril.Data.Models.Contact.Mappings.html": {
    "href": "api/Mithril.Data.Models.Contact.Mappings.html",
    "title": "Namespace Mithril.Data.Models.Contact.Mappings | Mithril API Reference",
    "keywords": "Namespace Mithril.Data.Models.Contact.Mappings Classes ContactInfoMapping ContactInfo mapping"
  },
  "api/Mithril.Data.Models.Contact.html": {
    "href": "api/Mithril.Data.Models.Contact.html",
    "title": "Namespace Mithril.Data.Models.Contact | Mithril API Reference",
    "keywords": "Namespace Mithril.Data.Models.Contact Classes ContactInfo Contact info"
  },
  "api/Mithril.Data.Models.General.LookUp.html": {
    "href": "api/Mithril.Data.Models.General.LookUp.html",
    "title": "Class LookUp | Mithril API Reference",
    "keywords": "Class LookUp Namespace Mithril.Data.Models.General Assembly Mithril.Data.dll LookUp Class public class LookUp : ModelBase<LookUp>, IModel<LookUp>, IEquatable<IModel<LookUp>>, IComparable, IComparable<LookUp>, IEquatable<ModelBase<LookUp>>, IEquatable<LookUp>, ILookUp, IModel, IEquatable<IModel>, IEquatable<ILookUp> Inheritance object ModelBase<LookUp> LookUp Implements IModel<LookUp> IEquatable<IModel<LookUp>> IComparable IComparable<LookUp> IEquatable<ModelBase<LookUp>> IEquatable<LookUp> ILookUp IModel IEquatable<IModel> IEquatable<ILookUp> Inherited Members ModelBase<LookUp>.Active ModelBase<LookUp>.Creator ModelBase<LookUp>.DateCreated ModelBase<LookUp>.DateModified ModelBase<LookUp>.ID ModelBase<LookUp>.Modifier ModelBase<LookUp>.TenantID ModelBase<LookUp>.All(IDataService) ModelBase<LookUp>.AllActive(IDataService) ModelBase<LookUp>.AllInactive(IDataService) ModelBase<LookUp>.Load(long, IDataService) ModelBase<LookUp>.Query(IDataService) ModelBase<LookUp>.CanBeModifiedBy(ClaimsPrincipal) ModelBase<LookUp>.CanBeViewedBy(ClaimsPrincipal) ModelBase<LookUp>.CompareTo(object) ModelBase<LookUp>.DeleteAsync(IDataService, ClaimsPrincipal, bool) ModelBase<LookUp>.Equals(IModel) ModelBase<LookUp>.Equals(IModel<LookUp>) ModelBase<LookUp>.Equals(ModelBase<LookUp>) ModelBase<LookUp>.SaveAsync(IDataService, ClaimsPrincipal) ModelBase<LookUp>.SetupObject(IDataService, ClaimsPrincipal) ModelBase<LookUp>.SetupObject(IDataService, IUser) ModelBase<LookUp>.SetupObjectAndReturn(IDataService, ClaimsPrincipal) object.Equals(object, object) object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Extension Methods GenericExtensions.When<TObject>(TObject, bool, Func<TObject, TObject>) ExpandoObjectExtensions.ConvertToExpando(object?) Constructors LookUp() Initializes a new instance of the LookUp class. public LookUp() LookUp(string, string, ILookUpType) Initializes a new instance of the LookUp class. public LookUp(string displayName, string icon, ILookUpType type) Parameters displayName string The display name. icon string The icon. type ILookUpType The type. Exceptions ArgumentNullException displayName or icon or type ArgumentException displayName or icon Properties DisplayName Display name [MaxLength(64)] [Required] public string? DisplayName { get; set; } Property Value string LookUp Class Icon Gets or sets the icon. [MaxLength(64)] public string? Icon { get; set; } Property Value string The icon. Type Gets or sets the type. public virtual ILookUpType? Type { get; set; } Property Value ILookUpType The type. Methods CompareTo(LookUp?) Compares the object to another object public override int CompareTo(LookUp? other) Parameters other LookUp Object to compare to Returns int 0 if they are equal, -1 if this is smaller, 1 if it is larger Equals(ILookUp?) Indicates whether the current object is equal to another object of the same type. public bool Equals(ILookUp? other) Parameters other ILookUp An object to compare with this object. Returns bool true if the current object is equal to the other parameter; otherwise, false. Equals(LookUp?) Indicates whether the current object is equal to another object of the same type. public bool Equals(LookUp? other) Parameters other LookUp An object to compare with this object. Returns bool true if the current object is equal to the other parameter; otherwise, false. Equals(object?) Determines whether the specified object, is equal to this instance. public override bool Equals(object? obj) Parameters obj object The object to compare with this instance. Returns bool true if the specified object is equal to this instance; otherwise, false. GetHashCode() Returns a hash code for this instance. public override int GetHashCode() Returns int A hash code for this instance, suitable for use in hashing algorithms and data structures like a hash table. Load(string, LookUpTypeEnum, IDataService?) Loads the specified LookUp based on the display name. public static ILookUp? Load(string displayName, LookUpTypeEnum type, IDataService? context) Parameters displayName string The display name. type LookUpTypeEnum The type. context IDataService The context. Returns ILookUp The lookup specified. LoadOrCreateAsync(string, LookUpTypeEnum, string, IDataService?, ClaimsPrincipal?) Loads the LookUp based on the display name and look up type specified or creates it if it doesn't exist. public static Task<ILookUp> LoadOrCreateAsync(string displayName, LookUpTypeEnum type, string icon, IDataService? dataService, ClaimsPrincipal? user) Parameters displayName string Display name specified type LookUpTypeEnum Lookup type specified icon string The icon. dataService IDataService The data service. user ClaimsPrincipal The user. Returns Task<ILookUp> LookUp associated with the display name ToString() Returns a string that represents this instance. public override string ToString() Returns string A string that represents this instance. Operators operator ==(LookUp?, LookUp?) Implements the operator ==. public static bool operator ==(LookUp? first, LookUp? second) Parameters first LookUp The first. second LookUp The second. Returns bool The result of the operator. operator >(LookUp?, LookUp?) Implements the operator >. public static bool operator >(LookUp? left, LookUp? right) Parameters left LookUp The left. right LookUp The right. Returns bool The result of the operator. operator >=(LookUp?, LookUp?) Implements the operator >=. public static bool operator >=(LookUp? left, LookUp? right) Parameters left LookUp The left. right LookUp The right. Returns bool The result of the operator. operator !=(LookUp?, LookUp?) Implements the operator !=. public static bool operator !=(LookUp? left, LookUp? right) Parameters left LookUp The left. right LookUp The right. Returns bool The result of the operator. operator <(LookUp?, LookUp?) Implements the operator <. public static bool operator <(LookUp? left, LookUp? right) Parameters left LookUp The left. right LookUp The right. Returns bool The result of the operator. operator <=(LookUp?, LookUp?) Implements the operator <=. public static bool operator <=(LookUp? left, LookUp? right) Parameters left LookUp The left. right LookUp The right. Returns bool The result of the operator. See Also ModelBase<TClass>"
  },
  "api/Mithril.Data.Models.General.LookUpType.html": {
    "href": "api/Mithril.Data.Models.General.LookUpType.html",
    "title": "Class LookUpType | Mithril API Reference",
    "keywords": "Class LookUpType Namespace Mithril.Data.Models.General Assembly Mithril.Data.dll LookUpType object public class LookUpType : ModelBase<LookUpType>, IModel<LookUpType>, IEquatable<IModel<LookUpType>>, IComparable, IComparable<LookUpType>, IEquatable<ModelBase<LookUpType>>, IEquatable<LookUpType>, ILookUpType, IModel, IEquatable<IModel>, IEquatable<ILookUpType> Inheritance object ModelBase<LookUpType> LookUpType Implements IModel<LookUpType> IEquatable<IModel<LookUpType>> IComparable IComparable<LookUpType> IEquatable<ModelBase<LookUpType>> IEquatable<LookUpType> ILookUpType IModel IEquatable<IModel> IEquatable<ILookUpType> Inherited Members ModelBase<LookUpType>.Active ModelBase<LookUpType>.Creator ModelBase<LookUpType>.DateCreated ModelBase<LookUpType>.DateModified ModelBase<LookUpType>.ID ModelBase<LookUpType>.Modifier ModelBase<LookUpType>.TenantID ModelBase<LookUpType>.All(IDataService) ModelBase<LookUpType>.AllActive(IDataService) ModelBase<LookUpType>.AllInactive(IDataService) ModelBase<LookUpType>.Load(long, IDataService) ModelBase<LookUpType>.Query(IDataService) ModelBase<LookUpType>.CanBeModifiedBy(ClaimsPrincipal) ModelBase<LookUpType>.CanBeViewedBy(ClaimsPrincipal) ModelBase<LookUpType>.CompareTo(object) ModelBase<LookUpType>.DeleteAsync(IDataService, ClaimsPrincipal, bool) ModelBase<LookUpType>.Equals(IModel) ModelBase<LookUpType>.Equals(IModel<LookUpType>) ModelBase<LookUpType>.Equals(ModelBase<LookUpType>) ModelBase<LookUpType>.SaveAsync(IDataService, ClaimsPrincipal) ModelBase<LookUpType>.SetupObject(IDataService, ClaimsPrincipal) ModelBase<LookUpType>.SetupObject(IDataService, IUser) ModelBase<LookUpType>.SetupObjectAndReturn(IDataService, ClaimsPrincipal) object.Equals(object, object) object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Extension Methods GenericExtensions.When<TObject>(TObject, bool, Func<TObject, TObject>) ExpandoObjectExtensions.ConvertToExpando(object?) Constructors LookUpType() Initializes a new instance of the LookUpType class. public LookUpType() LookUpType(string, string?) Initializes a new instance of the LookUpType class. public LookUpType(string displayName, string? description) Parameters displayName string The display name. description string The description. Exceptions ArgumentNullException displayName ArgumentException displayName or description Properties Description Gets or sets the description. [MaxLength(500)] public string? Description { get; set; } Property Value string The description. DisplayName Gets or sets the display name. [MaxLength(64)] public string? DisplayName { get; set; } Property Value string The display name. LookUps Gets or sets the look ups. public virtual IList<ILookUp> LookUps { get; set; } Property Value IList<ILookUp> The look ups. Methods CompareTo(LookUpType?) Compares the object to another object public override int CompareTo(LookUpType? other) Parameters other LookUpType Object to compare to Returns int 0 if they are equal, -1 if this is smaller, 1 if it is larger Equals(ILookUpType?) Indicates whether the current object is equal to another object of the same type. public bool Equals(ILookUpType? other) Parameters other ILookUpType An object to compare with this object. Returns bool true if the current object is equal to the other parameter; otherwise, false. Equals(LookUpType?) Indicates whether the current object is equal to another object of the same type. public bool Equals(LookUpType? other) Parameters other LookUpType An object to compare with this object. Returns bool true if the current object is equal to the other parameter; otherwise, false. Equals(object?) Determines whether the specified object, is equal to this instance. public override bool Equals(object? obj) Parameters obj object The object to compare with this instance. Returns bool true if the specified object is equal to this instance; otherwise, false. GetHashCode() Returns a hash code for this instance. public override int GetHashCode() Returns int A hash code for this instance, suitable for use in hashing algorithms and data structures like a hash table. Load(LookUpTypeEnum, IDataService?) Loads the specified LookUpType based on the display name. public static LookUpType? Load(LookUpTypeEnum displayName, IDataService? dataService) Parameters displayName LookUpTypeEnum The display name. dataService IDataService The data service. Returns LookUpType The LookUpType specified. LoadOrCreateAsync(LookUpTypeEnum, string, IDataService?, ClaimsPrincipal?) Loads the or create. public static Task<LookUpType> LoadOrCreateAsync(LookUpTypeEnum displayName, string description, IDataService? dataService, ClaimsPrincipal? user) Parameters displayName LookUpTypeEnum The display name. description string The description. dataService IDataService The data service. user ClaimsPrincipal The user. Returns Task<LookUpType> The LookUpType ToString() Returns a string that represents this instance. public override string ToString() Returns string A string that represents this instance. Operators operator ==(LookUpType?, LookUpType?) Implements the operator ==. public static bool operator ==(LookUpType? first, LookUpType? second) Parameters first LookUpType The first. second LookUpType The second. Returns bool The result of the operator. operator >(LookUpType?, LookUpType?) Implements the operator >. public static bool operator >(LookUpType? left, LookUpType? right) Parameters left LookUpType The left. right LookUpType The right. Returns bool The result of the operator. operator >=(LookUpType?, LookUpType?) Implements the operator >=. public static bool operator >=(LookUpType? left, LookUpType? right) Parameters left LookUpType The left. right LookUpType The right. Returns bool The result of the operator. operator !=(LookUpType?, LookUpType?) Implements the operator !=. public static bool operator !=(LookUpType? left, LookUpType? right) Parameters left LookUpType The left. right LookUpType The right. Returns bool The result of the operator. operator <(LookUpType?, LookUpType?) Implements the operator <. public static bool operator <(LookUpType? left, LookUpType? right) Parameters left LookUpType The left. right LookUpType The right. Returns bool The result of the operator. operator <=(LookUpType?, LookUpType?) Implements the operator <=. public static bool operator <=(LookUpType? left, LookUpType? right) Parameters left LookUpType The left. right LookUpType The right. Returns bool The result of the operator. See Also ModelBase<TClass>"
  },
  "api/Mithril.Data.Models.General.Mappings.ILookUpMapping.html": {
    "href": "api/Mithril.Data.Models.General.Mappings.ILookUpMapping.html",
    "title": "Class ILookUpMapping | Mithril API Reference",
    "keywords": "Class ILookUpMapping Namespace Mithril.Data.Models.General.Mappings Assembly Mithril.Data.dll ILookUp mapping public class ILookUpMapping : MappingBaseClass<ILookUp, DefaultDatabase>, IMapping<ILookUp>, IMapping Inheritance object MappingBaseClass<ILookUp, DefaultDatabase> ILookUpMapping Implements IMapping<ILookUp> IMapping Inherited Members MappingBaseClass<ILookUp, DefaultDatabase>.AddAutoKey() MappingBaseClass<ILookUp, DefaultDatabase>.ContainsProperty(string) MappingBaseClass<ILookUp, DefaultDatabase>.Copy(IMapping) MappingBaseClass<ILookUp, DefaultDatabase>.CopyProperty(IIDProperty) MappingBaseClass<ILookUp, DefaultDatabase>.CopyProperty(IProperty) MappingBaseClass<ILookUp, DefaultDatabase>.CopyProperty(IMapProperty) MappingBaseClass<ILookUp, DefaultDatabase>.CopyProperty(IManyToOneProperty) MappingBaseClass<ILookUp, DefaultDatabase>.CopyProperty(IManyToManyProperty) MappingBaseClass<ILookUp, DefaultDatabase>.Equals(object) MappingBaseClass<ILookUp, DefaultDatabase>.GetColumnName(string) MappingBaseClass<ILookUp, DefaultDatabase>.GetHashCode() MappingBaseClass<ILookUp, DefaultDatabase>.ID<TDataType>(Expression<Func<ILookUp, TDataType>>) MappingBaseClass<ILookUp, DefaultDatabase>.ManyToMany<TDataType>(Expression<Func<ILookUp, IList<TDataType>>>) MappingBaseClass<ILookUp, DefaultDatabase>.ManyToOne<TDataType>(Expression<Func<ILookUp, IList<TDataType>>>) MappingBaseClass<ILookUp, DefaultDatabase>.ManyToOne<TDataType>(Expression<Func<ILookUp, TDataType>>) MappingBaseClass<ILookUp, DefaultDatabase>.Map<TDataType>(Expression<Func<ILookUp, TDataType>>) MappingBaseClass<ILookUp, DefaultDatabase>.Reduce(ILogger) MappingBaseClass<ILookUp, DefaultDatabase>.Reduce(IMapping, ILogger) MappingBaseClass<ILookUp, DefaultDatabase>.Reference<TDataType>(Expression<Func<ILookUp, TDataType>>) MappingBaseClass<ILookUp, DefaultDatabase>.SetQuery(QueryType, string, CommandType, params IParameter[]) MappingBaseClass<ILookUp, DefaultDatabase>.Setup() MappingBaseClass<ILookUp, DefaultDatabase>.ToString() MappingBaseClass<ILookUp, DefaultDatabase>.AutoIDProperties MappingBaseClass<ILookUp, DefaultDatabase>.DatabaseConfigType MappingBaseClass<ILookUp, DefaultDatabase>.IDProperties MappingBaseClass<ILookUp, DefaultDatabase>.ManyToManyProperties MappingBaseClass<ILookUp, DefaultDatabase>.ManyToOneProperties MappingBaseClass<ILookUp, DefaultDatabase>.MapProperties MappingBaseClass<ILookUp, DefaultDatabase>.Merge MappingBaseClass<ILookUp, DefaultDatabase>.ObjectType MappingBaseClass<ILookUp, DefaultDatabase>.Order MappingBaseClass<ILookUp, DefaultDatabase>.Prefix MappingBaseClass<ILookUp, DefaultDatabase>.Queries MappingBaseClass<ILookUp, DefaultDatabase>.ReferenceProperties MappingBaseClass<ILookUp, DefaultDatabase>.SchemaName MappingBaseClass<ILookUp, DefaultDatabase>.Suffix MappingBaseClass<ILookUp, DefaultDatabase>.TableName object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods GenericExtensions.When<TObject>(TObject, bool, Func<TObject, TObject>) ExpandoObjectExtensions.ConvertToExpando(object?) Constructors ILookUpMapping() Initializes a new instance of the ILookUpMapping class. public ILookUpMapping() See Also MappingBaseClass<TClassType, TDatabaseType>"
  },
  "api/Mithril.Data.Models.General.Mappings.ILookUpTypeMapping.html": {
    "href": "api/Mithril.Data.Models.General.Mappings.ILookUpTypeMapping.html",
    "title": "Class ILookUpTypeMapping | Mithril API Reference",
    "keywords": "Class ILookUpTypeMapping Namespace Mithril.Data.Models.General.Mappings Assembly Mithril.Data.dll ILookUpType mapping public class ILookUpTypeMapping : MappingBaseClass<ILookUpType, DefaultDatabase>, IMapping<ILookUpType>, IMapping Inheritance object MappingBaseClass<ILookUpType, DefaultDatabase> ILookUpTypeMapping Implements IMapping<ILookUpType> IMapping Inherited Members MappingBaseClass<ILookUpType, DefaultDatabase>.AddAutoKey() MappingBaseClass<ILookUpType, DefaultDatabase>.ContainsProperty(string) MappingBaseClass<ILookUpType, DefaultDatabase>.Copy(IMapping) MappingBaseClass<ILookUpType, DefaultDatabase>.CopyProperty(IIDProperty) MappingBaseClass<ILookUpType, DefaultDatabase>.CopyProperty(IProperty) MappingBaseClass<ILookUpType, DefaultDatabase>.CopyProperty(IMapProperty) MappingBaseClass<ILookUpType, DefaultDatabase>.CopyProperty(IManyToOneProperty) MappingBaseClass<ILookUpType, DefaultDatabase>.CopyProperty(IManyToManyProperty) MappingBaseClass<ILookUpType, DefaultDatabase>.Equals(object) MappingBaseClass<ILookUpType, DefaultDatabase>.GetColumnName(string) MappingBaseClass<ILookUpType, DefaultDatabase>.GetHashCode() MappingBaseClass<ILookUpType, DefaultDatabase>.ID<TDataType>(Expression<Func<ILookUpType, TDataType>>) MappingBaseClass<ILookUpType, DefaultDatabase>.ManyToMany<TDataType>(Expression<Func<ILookUpType, IList<TDataType>>>) MappingBaseClass<ILookUpType, DefaultDatabase>.ManyToOne<TDataType>(Expression<Func<ILookUpType, IList<TDataType>>>) MappingBaseClass<ILookUpType, DefaultDatabase>.ManyToOne<TDataType>(Expression<Func<ILookUpType, TDataType>>) MappingBaseClass<ILookUpType, DefaultDatabase>.Map<TDataType>(Expression<Func<ILookUpType, TDataType>>) MappingBaseClass<ILookUpType, DefaultDatabase>.Reduce(ILogger) MappingBaseClass<ILookUpType, DefaultDatabase>.Reduce(IMapping, ILogger) MappingBaseClass<ILookUpType, DefaultDatabase>.Reference<TDataType>(Expression<Func<ILookUpType, TDataType>>) MappingBaseClass<ILookUpType, DefaultDatabase>.SetQuery(QueryType, string, CommandType, params IParameter[]) MappingBaseClass<ILookUpType, DefaultDatabase>.Setup() MappingBaseClass<ILookUpType, DefaultDatabase>.ToString() MappingBaseClass<ILookUpType, DefaultDatabase>.AutoIDProperties MappingBaseClass<ILookUpType, DefaultDatabase>.DatabaseConfigType MappingBaseClass<ILookUpType, DefaultDatabase>.IDProperties MappingBaseClass<ILookUpType, DefaultDatabase>.ManyToManyProperties MappingBaseClass<ILookUpType, DefaultDatabase>.ManyToOneProperties MappingBaseClass<ILookUpType, DefaultDatabase>.MapProperties MappingBaseClass<ILookUpType, DefaultDatabase>.Merge MappingBaseClass<ILookUpType, DefaultDatabase>.ObjectType MappingBaseClass<ILookUpType, DefaultDatabase>.Order MappingBaseClass<ILookUpType, DefaultDatabase>.Prefix MappingBaseClass<ILookUpType, DefaultDatabase>.Queries MappingBaseClass<ILookUpType, DefaultDatabase>.ReferenceProperties MappingBaseClass<ILookUpType, DefaultDatabase>.SchemaName MappingBaseClass<ILookUpType, DefaultDatabase>.Suffix MappingBaseClass<ILookUpType, DefaultDatabase>.TableName object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods GenericExtensions.When<TObject>(TObject, bool, Func<TObject, TObject>) ExpandoObjectExtensions.ConvertToExpando(object?) Constructors ILookUpTypeMapping() Initializes a new instance of the ILookUpTypeMapping class. public ILookUpTypeMapping() See Also MappingBaseClass<TClassType, TDatabaseType>"
  },
  "api/Mithril.Data.Models.General.Mappings.LookUpMapping.html": {
    "href": "api/Mithril.Data.Models.General.Mappings.LookUpMapping.html",
    "title": "Class LookUpMapping | Mithril API Reference",
    "keywords": "Class LookUpMapping Namespace Mithril.Data.Models.General.Mappings Assembly Mithril.Data.dll LookUp mapping public class LookUpMapping : MappingBaseClass<LookUp, DefaultDatabase>, IMapping<LookUp>, IMapping Inheritance object MappingBaseClass<LookUp, DefaultDatabase> LookUpMapping Implements IMapping<LookUp> IMapping Inherited Members MappingBaseClass<LookUp, DefaultDatabase>.AddAutoKey() MappingBaseClass<LookUp, DefaultDatabase>.ContainsProperty(string) MappingBaseClass<LookUp, DefaultDatabase>.Copy(IMapping) MappingBaseClass<LookUp, DefaultDatabase>.CopyProperty(IIDProperty) MappingBaseClass<LookUp, DefaultDatabase>.CopyProperty(IProperty) MappingBaseClass<LookUp, DefaultDatabase>.CopyProperty(IMapProperty) MappingBaseClass<LookUp, DefaultDatabase>.CopyProperty(IManyToOneProperty) MappingBaseClass<LookUp, DefaultDatabase>.CopyProperty(IManyToManyProperty) MappingBaseClass<LookUp, DefaultDatabase>.Equals(object) MappingBaseClass<LookUp, DefaultDatabase>.GetColumnName(string) MappingBaseClass<LookUp, DefaultDatabase>.GetHashCode() MappingBaseClass<LookUp, DefaultDatabase>.ID<TDataType>(Expression<Func<LookUp, TDataType>>) MappingBaseClass<LookUp, DefaultDatabase>.ManyToMany<TDataType>(Expression<Func<LookUp, IList<TDataType>>>) MappingBaseClass<LookUp, DefaultDatabase>.ManyToOne<TDataType>(Expression<Func<LookUp, IList<TDataType>>>) MappingBaseClass<LookUp, DefaultDatabase>.ManyToOne<TDataType>(Expression<Func<LookUp, TDataType>>) MappingBaseClass<LookUp, DefaultDatabase>.Map<TDataType>(Expression<Func<LookUp, TDataType>>) MappingBaseClass<LookUp, DefaultDatabase>.Reduce(ILogger) MappingBaseClass<LookUp, DefaultDatabase>.Reduce(IMapping, ILogger) MappingBaseClass<LookUp, DefaultDatabase>.Reference<TDataType>(Expression<Func<LookUp, TDataType>>) MappingBaseClass<LookUp, DefaultDatabase>.SetQuery(QueryType, string, CommandType, params IParameter[]) MappingBaseClass<LookUp, DefaultDatabase>.Setup() MappingBaseClass<LookUp, DefaultDatabase>.ToString() MappingBaseClass<LookUp, DefaultDatabase>.AutoIDProperties MappingBaseClass<LookUp, DefaultDatabase>.DatabaseConfigType MappingBaseClass<LookUp, DefaultDatabase>.IDProperties MappingBaseClass<LookUp, DefaultDatabase>.ManyToManyProperties MappingBaseClass<LookUp, DefaultDatabase>.ManyToOneProperties MappingBaseClass<LookUp, DefaultDatabase>.MapProperties MappingBaseClass<LookUp, DefaultDatabase>.Merge MappingBaseClass<LookUp, DefaultDatabase>.ObjectType MappingBaseClass<LookUp, DefaultDatabase>.Order MappingBaseClass<LookUp, DefaultDatabase>.Prefix MappingBaseClass<LookUp, DefaultDatabase>.Queries MappingBaseClass<LookUp, DefaultDatabase>.ReferenceProperties MappingBaseClass<LookUp, DefaultDatabase>.SchemaName MappingBaseClass<LookUp, DefaultDatabase>.Suffix MappingBaseClass<LookUp, DefaultDatabase>.TableName object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods GenericExtensions.When<TObject>(TObject, bool, Func<TObject, TObject>) ExpandoObjectExtensions.ConvertToExpando(object?) Constructors LookUpMapping() Initializes a new instance of the LookUpMapping class. public LookUpMapping() See Also MappingBaseClass<TClassType, TDatabaseType>"
  },
  "api/Mithril.Data.Models.General.Mappings.LookUpTypeMapping.html": {
    "href": "api/Mithril.Data.Models.General.Mappings.LookUpTypeMapping.html",
    "title": "Class LookUpTypeMapping | Mithril API Reference",
    "keywords": "Class LookUpTypeMapping Namespace Mithril.Data.Models.General.Mappings Assembly Mithril.Data.dll LookUpType mapping public class LookUpTypeMapping : MappingBaseClass<LookUpType, DefaultDatabase>, IMapping<LookUpType>, IMapping Inheritance object MappingBaseClass<LookUpType, DefaultDatabase> LookUpTypeMapping Implements IMapping<LookUpType> IMapping Inherited Members MappingBaseClass<LookUpType, DefaultDatabase>.AddAutoKey() MappingBaseClass<LookUpType, DefaultDatabase>.ContainsProperty(string) MappingBaseClass<LookUpType, DefaultDatabase>.Copy(IMapping) MappingBaseClass<LookUpType, DefaultDatabase>.CopyProperty(IIDProperty) MappingBaseClass<LookUpType, DefaultDatabase>.CopyProperty(IProperty) MappingBaseClass<LookUpType, DefaultDatabase>.CopyProperty(IMapProperty) MappingBaseClass<LookUpType, DefaultDatabase>.CopyProperty(IManyToOneProperty) MappingBaseClass<LookUpType, DefaultDatabase>.CopyProperty(IManyToManyProperty) MappingBaseClass<LookUpType, DefaultDatabase>.Equals(object) MappingBaseClass<LookUpType, DefaultDatabase>.GetColumnName(string) MappingBaseClass<LookUpType, DefaultDatabase>.GetHashCode() MappingBaseClass<LookUpType, DefaultDatabase>.ID<TDataType>(Expression<Func<LookUpType, TDataType>>) MappingBaseClass<LookUpType, DefaultDatabase>.ManyToMany<TDataType>(Expression<Func<LookUpType, IList<TDataType>>>) MappingBaseClass<LookUpType, DefaultDatabase>.ManyToOne<TDataType>(Expression<Func<LookUpType, IList<TDataType>>>) MappingBaseClass<LookUpType, DefaultDatabase>.ManyToOne<TDataType>(Expression<Func<LookUpType, TDataType>>) MappingBaseClass<LookUpType, DefaultDatabase>.Map<TDataType>(Expression<Func<LookUpType, TDataType>>) MappingBaseClass<LookUpType, DefaultDatabase>.Reduce(ILogger) MappingBaseClass<LookUpType, DefaultDatabase>.Reduce(IMapping, ILogger) MappingBaseClass<LookUpType, DefaultDatabase>.Reference<TDataType>(Expression<Func<LookUpType, TDataType>>) MappingBaseClass<LookUpType, DefaultDatabase>.SetQuery(QueryType, string, CommandType, params IParameter[]) MappingBaseClass<LookUpType, DefaultDatabase>.Setup() MappingBaseClass<LookUpType, DefaultDatabase>.ToString() MappingBaseClass<LookUpType, DefaultDatabase>.AutoIDProperties MappingBaseClass<LookUpType, DefaultDatabase>.DatabaseConfigType MappingBaseClass<LookUpType, DefaultDatabase>.IDProperties MappingBaseClass<LookUpType, DefaultDatabase>.ManyToManyProperties MappingBaseClass<LookUpType, DefaultDatabase>.ManyToOneProperties MappingBaseClass<LookUpType, DefaultDatabase>.MapProperties MappingBaseClass<LookUpType, DefaultDatabase>.Merge MappingBaseClass<LookUpType, DefaultDatabase>.ObjectType MappingBaseClass<LookUpType, DefaultDatabase>.Order MappingBaseClass<LookUpType, DefaultDatabase>.Prefix MappingBaseClass<LookUpType, DefaultDatabase>.Queries MappingBaseClass<LookUpType, DefaultDatabase>.ReferenceProperties MappingBaseClass<LookUpType, DefaultDatabase>.SchemaName MappingBaseClass<LookUpType, DefaultDatabase>.Suffix MappingBaseClass<LookUpType, DefaultDatabase>.TableName object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods GenericExtensions.When<TObject>(TObject, bool, Func<TObject, TObject>) ExpandoObjectExtensions.ConvertToExpando(object?) Constructors LookUpTypeMapping() Initializes a new instance of the LookUpTypeMapping class. public LookUpTypeMapping() See Also MappingBaseClass<TClassType, TDatabaseType>"
  },
  "api/Mithril.Data.Models.General.Mappings.html": {
    "href": "api/Mithril.Data.Models.General.Mappings.html",
    "title": "Namespace Mithril.Data.Models.General.Mappings | Mithril API Reference",
    "keywords": "Namespace Mithril.Data.Models.General.Mappings Classes ILookUpMapping ILookUp mapping ILookUpTypeMapping ILookUpType mapping LookUpMapping LookUp mapping LookUpTypeMapping LookUpType mapping"
  },
  "api/Mithril.Data.Models.General.html": {
    "href": "api/Mithril.Data.Models.General.html",
    "title": "Namespace Mithril.Data.Models.General | Mithril API Reference",
    "keywords": "Namespace Mithril.Data.Models.General Classes LookUp LookUp Class LookUpType LookUpType object"
  },
  "api/Mithril.Data.Models.Mappings.IIndexedModelMapping.html": {
    "href": "api/Mithril.Data.Models.Mappings.IIndexedModelMapping.html",
    "title": "Class IIndexedModelMapping | Mithril API Reference",
    "keywords": "Class IIndexedModelMapping Namespace Mithril.Data.Models.Mappings Assembly Mithril.Data.dll IIndexedModel mapping public class IIndexedModelMapping : MappingBaseClass<IIndexedModel, DefaultDatabase>, IMapping<IIndexedModel>, IMapping Inheritance object MappingBaseClass<IIndexedModel, DefaultDatabase> IIndexedModelMapping Implements IMapping<IIndexedModel> IMapping Inherited Members MappingBaseClass<IIndexedModel, DefaultDatabase>.AddAutoKey() MappingBaseClass<IIndexedModel, DefaultDatabase>.ContainsProperty(string) MappingBaseClass<IIndexedModel, DefaultDatabase>.Copy(IMapping) MappingBaseClass<IIndexedModel, DefaultDatabase>.CopyProperty(IIDProperty) MappingBaseClass<IIndexedModel, DefaultDatabase>.CopyProperty(IProperty) MappingBaseClass<IIndexedModel, DefaultDatabase>.CopyProperty(IMapProperty) MappingBaseClass<IIndexedModel, DefaultDatabase>.CopyProperty(IManyToOneProperty) MappingBaseClass<IIndexedModel, DefaultDatabase>.CopyProperty(IManyToManyProperty) MappingBaseClass<IIndexedModel, DefaultDatabase>.Equals(object) MappingBaseClass<IIndexedModel, DefaultDatabase>.GetColumnName(string) MappingBaseClass<IIndexedModel, DefaultDatabase>.GetHashCode() MappingBaseClass<IIndexedModel, DefaultDatabase>.ID<TDataType>(Expression<Func<IIndexedModel, TDataType>>) MappingBaseClass<IIndexedModel, DefaultDatabase>.ManyToMany<TDataType>(Expression<Func<IIndexedModel, IList<TDataType>>>) MappingBaseClass<IIndexedModel, DefaultDatabase>.ManyToOne<TDataType>(Expression<Func<IIndexedModel, IList<TDataType>>>) MappingBaseClass<IIndexedModel, DefaultDatabase>.ManyToOne<TDataType>(Expression<Func<IIndexedModel, TDataType>>) MappingBaseClass<IIndexedModel, DefaultDatabase>.Map<TDataType>(Expression<Func<IIndexedModel, TDataType>>) MappingBaseClass<IIndexedModel, DefaultDatabase>.Reduce(ILogger) MappingBaseClass<IIndexedModel, DefaultDatabase>.Reduce(IMapping, ILogger) MappingBaseClass<IIndexedModel, DefaultDatabase>.Reference<TDataType>(Expression<Func<IIndexedModel, TDataType>>) MappingBaseClass<IIndexedModel, DefaultDatabase>.SetQuery(QueryType, string, CommandType, params IParameter[]) MappingBaseClass<IIndexedModel, DefaultDatabase>.Setup() MappingBaseClass<IIndexedModel, DefaultDatabase>.ToString() MappingBaseClass<IIndexedModel, DefaultDatabase>.AutoIDProperties MappingBaseClass<IIndexedModel, DefaultDatabase>.DatabaseConfigType MappingBaseClass<IIndexedModel, DefaultDatabase>.IDProperties MappingBaseClass<IIndexedModel, DefaultDatabase>.ManyToManyProperties MappingBaseClass<IIndexedModel, DefaultDatabase>.ManyToOneProperties MappingBaseClass<IIndexedModel, DefaultDatabase>.MapProperties MappingBaseClass<IIndexedModel, DefaultDatabase>.Merge MappingBaseClass<IIndexedModel, DefaultDatabase>.ObjectType MappingBaseClass<IIndexedModel, DefaultDatabase>.Order MappingBaseClass<IIndexedModel, DefaultDatabase>.Prefix MappingBaseClass<IIndexedModel, DefaultDatabase>.Queries MappingBaseClass<IIndexedModel, DefaultDatabase>.ReferenceProperties MappingBaseClass<IIndexedModel, DefaultDatabase>.SchemaName MappingBaseClass<IIndexedModel, DefaultDatabase>.Suffix MappingBaseClass<IIndexedModel, DefaultDatabase>.TableName object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods GenericExtensions.When<TObject>(TObject, bool, Func<TObject, TObject>) ExpandoObjectExtensions.ConvertToExpando(object?) Constructors IIndexedModelMapping() Initializes a new instance of the IIndexedModelMapping class. public IIndexedModelMapping() See Also MappingBaseClass<TClassType, TDatabaseType>"
  },
  "api/Mithril.Data.Models.Mappings.IModelMapping.html": {
    "href": "api/Mithril.Data.Models.Mappings.IModelMapping.html",
    "title": "Class IModelMapping | Mithril API Reference",
    "keywords": "Class IModelMapping Namespace Mithril.Data.Models.Mappings Assembly Mithril.Data.dll IModel mapping public class IModelMapping : MappingBaseClass<IModel, DefaultDatabase>, IMapping<IModel>, IMapping Inheritance object MappingBaseClass<IModel, DefaultDatabase> IModelMapping Implements IMapping<IModel> IMapping Inherited Members MappingBaseClass<IModel, DefaultDatabase>.AddAutoKey() MappingBaseClass<IModel, DefaultDatabase>.ContainsProperty(string) MappingBaseClass<IModel, DefaultDatabase>.Copy(IMapping) MappingBaseClass<IModel, DefaultDatabase>.CopyProperty(IIDProperty) MappingBaseClass<IModel, DefaultDatabase>.CopyProperty(IProperty) MappingBaseClass<IModel, DefaultDatabase>.CopyProperty(IMapProperty) MappingBaseClass<IModel, DefaultDatabase>.CopyProperty(IManyToOneProperty) MappingBaseClass<IModel, DefaultDatabase>.CopyProperty(IManyToManyProperty) MappingBaseClass<IModel, DefaultDatabase>.Equals(object) MappingBaseClass<IModel, DefaultDatabase>.GetColumnName(string) MappingBaseClass<IModel, DefaultDatabase>.GetHashCode() MappingBaseClass<IModel, DefaultDatabase>.ID<TDataType>(Expression<Func<IModel, TDataType>>) MappingBaseClass<IModel, DefaultDatabase>.ManyToMany<TDataType>(Expression<Func<IModel, IList<TDataType>>>) MappingBaseClass<IModel, DefaultDatabase>.ManyToOne<TDataType>(Expression<Func<IModel, IList<TDataType>>>) MappingBaseClass<IModel, DefaultDatabase>.ManyToOne<TDataType>(Expression<Func<IModel, TDataType>>) MappingBaseClass<IModel, DefaultDatabase>.Map<TDataType>(Expression<Func<IModel, TDataType>>) MappingBaseClass<IModel, DefaultDatabase>.Reduce(ILogger) MappingBaseClass<IModel, DefaultDatabase>.Reduce(IMapping, ILogger) MappingBaseClass<IModel, DefaultDatabase>.Reference<TDataType>(Expression<Func<IModel, TDataType>>) MappingBaseClass<IModel, DefaultDatabase>.SetQuery(QueryType, string, CommandType, params IParameter[]) MappingBaseClass<IModel, DefaultDatabase>.Setup() MappingBaseClass<IModel, DefaultDatabase>.ToString() MappingBaseClass<IModel, DefaultDatabase>.AutoIDProperties MappingBaseClass<IModel, DefaultDatabase>.DatabaseConfigType MappingBaseClass<IModel, DefaultDatabase>.IDProperties MappingBaseClass<IModel, DefaultDatabase>.ManyToManyProperties MappingBaseClass<IModel, DefaultDatabase>.ManyToOneProperties MappingBaseClass<IModel, DefaultDatabase>.MapProperties MappingBaseClass<IModel, DefaultDatabase>.Merge MappingBaseClass<IModel, DefaultDatabase>.ObjectType MappingBaseClass<IModel, DefaultDatabase>.Order MappingBaseClass<IModel, DefaultDatabase>.Prefix MappingBaseClass<IModel, DefaultDatabase>.Queries MappingBaseClass<IModel, DefaultDatabase>.ReferenceProperties MappingBaseClass<IModel, DefaultDatabase>.SchemaName MappingBaseClass<IModel, DefaultDatabase>.Suffix MappingBaseClass<IModel, DefaultDatabase>.TableName object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods GenericExtensions.When<TObject>(TObject, bool, Func<TObject, TObject>) ExpandoObjectExtensions.ConvertToExpando(object?) Constructors IModelMapping() Initializes a new instance of the IModelMapping class. public IModelMapping() See Also MappingBaseClass<TClassType, TDatabaseType>"
  },
  "api/Mithril.Data.Models.Mappings.ITypedModelMapping.html": {
    "href": "api/Mithril.Data.Models.Mappings.ITypedModelMapping.html",
    "title": "Class ITypedModelMapping | Mithril API Reference",
    "keywords": "Class ITypedModelMapping Namespace Mithril.Data.Models.Mappings Assembly Mithril.Data.dll Typed model mapping public class ITypedModelMapping : MappingBaseClass<ITypedModel, DefaultDatabase>, IMapping<ITypedModel>, IMapping Inheritance object MappingBaseClass<ITypedModel, DefaultDatabase> ITypedModelMapping Implements IMapping<ITypedModel> IMapping Inherited Members MappingBaseClass<ITypedModel, DefaultDatabase>.AddAutoKey() MappingBaseClass<ITypedModel, DefaultDatabase>.ContainsProperty(string) MappingBaseClass<ITypedModel, DefaultDatabase>.Copy(IMapping) MappingBaseClass<ITypedModel, DefaultDatabase>.CopyProperty(IIDProperty) MappingBaseClass<ITypedModel, DefaultDatabase>.CopyProperty(IProperty) MappingBaseClass<ITypedModel, DefaultDatabase>.CopyProperty(IMapProperty) MappingBaseClass<ITypedModel, DefaultDatabase>.CopyProperty(IManyToOneProperty) MappingBaseClass<ITypedModel, DefaultDatabase>.CopyProperty(IManyToManyProperty) MappingBaseClass<ITypedModel, DefaultDatabase>.Equals(object) MappingBaseClass<ITypedModel, DefaultDatabase>.GetColumnName(string) MappingBaseClass<ITypedModel, DefaultDatabase>.GetHashCode() MappingBaseClass<ITypedModel, DefaultDatabase>.ID<TDataType>(Expression<Func<ITypedModel, TDataType>>) MappingBaseClass<ITypedModel, DefaultDatabase>.ManyToMany<TDataType>(Expression<Func<ITypedModel, IList<TDataType>>>) MappingBaseClass<ITypedModel, DefaultDatabase>.ManyToOne<TDataType>(Expression<Func<ITypedModel, IList<TDataType>>>) MappingBaseClass<ITypedModel, DefaultDatabase>.ManyToOne<TDataType>(Expression<Func<ITypedModel, TDataType>>) MappingBaseClass<ITypedModel, DefaultDatabase>.Map<TDataType>(Expression<Func<ITypedModel, TDataType>>) MappingBaseClass<ITypedModel, DefaultDatabase>.Reduce(ILogger) MappingBaseClass<ITypedModel, DefaultDatabase>.Reduce(IMapping, ILogger) MappingBaseClass<ITypedModel, DefaultDatabase>.Reference<TDataType>(Expression<Func<ITypedModel, TDataType>>) MappingBaseClass<ITypedModel, DefaultDatabase>.SetQuery(QueryType, string, CommandType, params IParameter[]) MappingBaseClass<ITypedModel, DefaultDatabase>.Setup() MappingBaseClass<ITypedModel, DefaultDatabase>.ToString() MappingBaseClass<ITypedModel, DefaultDatabase>.AutoIDProperties MappingBaseClass<ITypedModel, DefaultDatabase>.DatabaseConfigType MappingBaseClass<ITypedModel, DefaultDatabase>.IDProperties MappingBaseClass<ITypedModel, DefaultDatabase>.ManyToManyProperties MappingBaseClass<ITypedModel, DefaultDatabase>.ManyToOneProperties MappingBaseClass<ITypedModel, DefaultDatabase>.MapProperties MappingBaseClass<ITypedModel, DefaultDatabase>.Merge MappingBaseClass<ITypedModel, DefaultDatabase>.ObjectType MappingBaseClass<ITypedModel, DefaultDatabase>.Order MappingBaseClass<ITypedModel, DefaultDatabase>.Prefix MappingBaseClass<ITypedModel, DefaultDatabase>.Queries MappingBaseClass<ITypedModel, DefaultDatabase>.ReferenceProperties MappingBaseClass<ITypedModel, DefaultDatabase>.SchemaName MappingBaseClass<ITypedModel, DefaultDatabase>.Suffix MappingBaseClass<ITypedModel, DefaultDatabase>.TableName object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods GenericExtensions.When<TObject>(TObject, bool, Func<TObject, TObject>) ExpandoObjectExtensions.ConvertToExpando(object?) Constructors ITypedModelMapping() Initializes a new instance of the ITypedModelMapping class. public ITypedModelMapping() See Also MappingBaseClass<TClassType, TDatabaseType>"
  },
  "api/Mithril.Data.Models.Mappings.html": {
    "href": "api/Mithril.Data.Models.Mappings.html",
    "title": "Namespace Mithril.Data.Models.Mappings | Mithril API Reference",
    "keywords": "Namespace Mithril.Data.Models.Mappings Classes IIndexedModelMapping IIndexedModel mapping IModelMapping IModel mapping ITypedModelMapping Typed model mapping"
  },
  "api/Mithril.Data.Services.DataService.html": {
    "href": "api/Mithril.Data.Services.DataService.html",
    "title": "Class DataService | Mithril API Reference",
    "keywords": "Class DataService Namespace Mithril.Data.Services Assembly Mithril.Data.dll Data service public class DataService : IDataService Inheritance object DataService Implements IDataService Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods GenericExtensions.When<TObject>(TObject, bool, Func<TObject, TObject>) ExpandoObjectExtensions.ConvertToExpando(object?) Remarks Initializes a new instance of the DataService class. Constructors DataService(DbContext?, SystemAccounts) Data service public DataService(DbContext? dbContext, SystemAccounts systemAccounts) Parameters dbContext DbContext The database context. systemAccounts SystemAccounts The system accounts. Remarks Initializes a new instance of the DataService class. See Also IDataService Methods DeleteAsync<TData>(ClaimsPrincipal?, params TData[]) Deletes the objects asynchronously. public Task<int> DeleteAsync<TData>(ClaimsPrincipal? user, params TData[] data) where TData : class, IModel Parameters user ClaimsPrincipal The user. data TData[] The data. Returns Task<int> The number of objects updated. Type Parameters TData The type of the data. QueryAsync<TData>(string, CommandType, string, params object[]) Runs a query and returns data of the specific type. public Task<IEnumerable<TData>> QueryAsync<TData>(string query, CommandType commandType, string connection, params object[] parameters) where TData : class Parameters query string The query. commandType CommandType Type of the command. connection string The connection. parameters object[] The parameters. Returns Task<IEnumerable<TData>> The resulting data. Type Parameters TData The type of the data. QueryDynamicAsync(string, CommandType, string, params object[]) Runs a dynamic query and returns the results. public Task<IEnumerable<dynamic>> QueryDynamicAsync(string query, CommandType commandType, string connection, params object[] parameters) Parameters query string The query. commandType CommandType Type of the command. connection string The connection. parameters object[] The parameters. Returns Task<IEnumerable<dynamic>> The data resulting from the query. QueryScalarAsync<TData>(string, CommandType, string, params object[]) Runs a scalar query and returns data of the specific type. public Task<TData> QueryScalarAsync<TData>(string query, CommandType commandType, string connection, params object[] parameters) where TData : class Parameters query string The query. commandType CommandType Type of the command. connection string The connection. parameters object[] The parameters. Returns Task<TData> The resulting data. Type Parameters TData The type of the data. Query<TData>() Creates a query used to get information. public IQueryable<TData>? Query<TData>() where TData : class Returns IQueryable<TData> The IQueryable object. Type Parameters TData The type of the data. SaveAsync<TData>(ClaimsPrincipal?, params TData?[]) Saves the objects asynchronously. public Task<int> SaveAsync<TData>(ClaimsPrincipal? user, params TData?[] data) where TData : class, IModel Parameters user ClaimsPrincipal The user. data TData[] The data. Returns Task<int> The number of objects updated. Type Parameters TData The type of the data. See Also IDataService"
  },
  "api/Mithril.Data.Services.html": {
    "href": "api/Mithril.Data.Services.html",
    "title": "Namespace Mithril.Data.Services | Mithril API Reference",
    "keywords": "Namespace Mithril.Data.Services Classes DataService Data service"
  },
  "api/Mithril.Data.html": {
    "href": "api/Mithril.Data.html",
    "title": "Namespace Mithril.Data | Mithril API Reference",
    "keywords": "Namespace Mithril.Data Classes DataModule Data module"
  },
  "api/Mithril.Features.Admin.FeatureEditor.html": {
    "href": "api/Mithril.Features.Admin.FeatureEditor.html",
    "title": "Class FeatureEditor | Mithril API Reference",
    "keywords": "Class FeatureEditor Namespace Mithril.Features.Admin Assembly Mithril.Features.dll Feature editor class public class FeatureEditor : EntityEditorBaseClass<FeatureVM, Feature>, IEntityEditor, IEditor Inheritance object EntityEditorBaseClass<FeatureVM> EntityEditorBaseClass<FeatureVM, Feature> FeatureEditor Implements IEntityEditor IEditor Inherited Members EntityEditorBaseClass<FeatureVM, Feature>.ActivateAsync(long, ClaimsPrincipal) EntityEditorBaseClass<FeatureVM, Feature>.CanView(ClaimsPrincipal) EntityEditorBaseClass<FeatureVM, Feature>.DeleteEntityAsync(long, ClaimsPrincipal) EntityEditorBaseClass<FeatureVM, Feature>.Load(long, ExpandoObject, ClaimsPrincipal) EntityEditorBaseClass<FeatureVM, Feature>.LoadPageAsync(int, int, string, bool, string, ClaimsPrincipal) EntityEditorBaseClass<FeatureVM, Feature>.SaveEntityAsync(long, ExpandoObject, ClaimsPrincipal) EntityEditorBaseClass<FeatureVM, Feature>.TotalActiveAsync(ClaimsPrincipal) EntityEditorBaseClass<FeatureVM, Feature>.Convert(Feature, bool) EntityEditorBaseClass<FeatureVM, Feature>.FilterQueryBySearchQuery(IQueryable<Feature>, string) EntityEditorBaseClass<FeatureVM, Feature>.LoadModel(long) EntityEditorBaseClass<FeatureVM, Feature>.MakeActiveAsync(Feature) EntityEditorBaseClass<FeatureVM, Feature>.MakeInactiveAsync(Feature) EntityEditorBaseClass<FeatureVM>.Category EntityEditorBaseClass<FeatureVM>.ComponentDefinition EntityEditorBaseClass<FeatureVM>.Description EntityEditorBaseClass<FeatureVM>.EntityType EntityEditorBaseClass<FeatureVM>.Name EntityEditorBaseClass<FeatureVM>.DataService EntityEditorBaseClass<FeatureVM>.ServiceProvider EntityEditorBaseClass<FeatureVM>.ActivateAsync(long, ClaimsPrincipal) EntityEditorBaseClass<FeatureVM>.CanView(ClaimsPrincipal) EntityEditorBaseClass<FeatureVM>.DeleteEntityAsync(long, ClaimsPrincipal) EntityEditorBaseClass<FeatureVM>.Load(long, ExpandoObject, ClaimsPrincipal) EntityEditorBaseClass<FeatureVM>.LoadPageAsync(int, int, string, bool, string, ClaimsPrincipal) EntityEditorBaseClass<FeatureVM>.SaveEntityAsync(long, ExpandoObject, ClaimsPrincipal) EntityEditorBaseClass<FeatureVM>.TotalActiveAsync(ClaimsPrincipal) object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods GenericExtensions.When<TObject>(TObject, bool, Func<TObject, TObject>) ExpandoObjectExtensions.ConvertToExpando(object?) Remarks Initializes a new instance of the FeatureEditor class. Constructors FeatureEditor(IDataService?, IEntityMetadataService?, IServiceProvider?, string?) Feature editor class public FeatureEditor(IDataService? dataService, IEntityMetadataService? entityMetadataService, IServiceProvider? serviceProvider, string? dataType = null) Parameters dataService IDataService The data service. entityMetadataService IEntityMetadataService The entity metadata service. serviceProvider IServiceProvider The service provider. dataType string Type of the data. Remarks Initializes a new instance of the FeatureEditor class. See Also EntityEditorBaseClass<TEntity, TModel> Properties Icon Gets the icon. public override string Icon { get; } Property Value string The icon. Methods Convert(Feature, bool) Converts the model into the appropriate view model. protected override IEntity Convert(Feature model, bool full = true) Parameters model Feature The model. full bool if set to true [full]. Returns IEntity The view model FilterQueryBySearchQuery(IQueryable<Feature>?, string) Filters the query by search term. protected override IQueryable<Feature>? FilterQueryBySearchQuery(IQueryable<Feature>? query, string searchQuery) Parameters query IQueryable<Feature> The query. searchQuery string The search query. Returns IQueryable<Feature> The resulting query. See Also EntityEditorBaseClass<TEntity, TModel>"
  },
  "api/Mithril.Features.Admin.ViewModels.FeatureVM.html": {
    "href": "api/Mithril.Features.Admin.ViewModels.FeatureVM.html",
    "title": "Class FeatureVM | Mithril API Reference",
    "keywords": "Class FeatureVM Namespace Mithril.Features.Admin.ViewModels Assembly Mithril.Features.dll Feature VM public class FeatureVM : EntityBaseClass<Feature>, IEntity<Feature>, IEntity Inheritance object EntityBaseClass<Feature> FeatureVM Implements IEntity<Feature> IEntity Inherited Members EntityBaseClass<Feature>.Active EntityBaseClass<Feature>.ID object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods GenericExtensions.When<TObject>(TObject, bool, Func<TObject, TObject>) ExpandoObjectExtensions.ConvertToExpando(object?) Constructors FeatureVM() Initializes a new instance of the FeatureVM class. public FeatureVM() FeatureVM(Feature, bool) Initializes a new instance of the FeatureVM class. public FeatureVM(Feature model, bool full) Parameters model Feature The model. full bool if set to true [full]. Properties Category Gets the category. [Order(2)] public string? Category { get; } Property Value string The category. Description Gets the description. [Order(3)] public string? Description { get; } Property Value string The description. Name Gets the name. [Order(1)] public string? Name { get; } Property Value string The name. Methods SaveAsync(long, IDataService?, IServiceProvider?, ClaimsPrincipal?) Saves the changes asynchronously. public override Task<Feature?> SaveAsync(long id, IDataService? dataService, IServiceProvider? serviceProvider, ClaimsPrincipal? currentUser) Parameters id long The identifier. dataService IDataService The data service. serviceProvider IServiceProvider The service provider. currentUser ClaimsPrincipal The current user. Returns Task<Feature> The async task. See Also EntityBaseClass<TEntity>"
  },
  "api/Mithril.Features.Admin.ViewModels.html": {
    "href": "api/Mithril.Features.Admin.ViewModels.html",
    "title": "Namespace Mithril.Features.Admin.ViewModels | Mithril API Reference",
    "keywords": "Namespace Mithril.Features.Admin.ViewModels Classes FeatureVM Feature VM"
  },
  "api/Mithril.Features.Admin.html": {
    "href": "api/Mithril.Features.Admin.html",
    "title": "Namespace Mithril.Features.Admin | Mithril API Reference",
    "keywords": "Namespace Mithril.Features.Admin Classes FeatureEditor Feature editor class"
  },
  "api/Mithril.Features.Commands.ToggleFeatureCommandHandler.html": {
    "href": "api/Mithril.Features.Commands.ToggleFeatureCommandHandler.html",
    "title": "Class ToggleFeatureCommandHandler | Mithril API Reference",
    "keywords": "Class ToggleFeatureCommandHandler Namespace Mithril.Features.Commands Assembly Mithril.Features.dll Toggle feature command handler [ApiAuthorize(\"Admin Only\")] public class ToggleFeatureCommandHandler : CommandHandlerBaseClass<ToggleFeatureCommand, ToggleFeatureCommandVM>, ICommandHandler<ToggleFeatureCommandVM>, ICommandHandler Inheritance object CommandHandlerBaseClass<ToggleFeatureCommand, ToggleFeatureCommandVM> ToggleFeatureCommandHandler Implements ICommandHandler<ToggleFeatureCommandVM> ICommandHandler Inherited Members CommandHandlerBaseClass<ToggleFeatureCommand, ToggleFeatureCommandVM>.CommandName CommandHandlerBaseClass<ToggleFeatureCommand, ToggleFeatureCommandVM>.ContentTypeAccepts CommandHandlerBaseClass<ToggleFeatureCommand, ToggleFeatureCommandVM>.Features CommandHandlerBaseClass<ToggleFeatureCommand, ToggleFeatureCommandVM>.Tags CommandHandlerBaseClass<ToggleFeatureCommand, ToggleFeatureCommandVM>.Version CommandHandlerBaseClass<ToggleFeatureCommand, ToggleFeatureCommandVM>.ViewModelType CommandHandlerBaseClass<ToggleFeatureCommand, ToggleFeatureCommandVM>.FeatureManager CommandHandlerBaseClass<ToggleFeatureCommand, ToggleFeatureCommandVM>.Logger CommandHandlerBaseClass<ToggleFeatureCommand, ToggleFeatureCommandVM>.CanHandle(ICommand) CommandHandlerBaseClass<ToggleFeatureCommand, ToggleFeatureCommandVM>.CreateAsync(ToggleFeatureCommandVM, ClaimsPrincipal) CommandHandlerBaseClass<ToggleFeatureCommand, ToggleFeatureCommandVM>.HandleCommandAsync(params ICommand[]) CommandHandlerBaseClass<ToggleFeatureCommand, ToggleFeatureCommandVM>.HandleCommandAsync(ToggleFeatureCommand[]) CommandHandlerBaseClass<ToggleFeatureCommand, ToggleFeatureCommandVM>.IsFeatureEnabled() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods GenericExtensions.When<TObject>(TObject, bool, Func<TObject, TObject>) ExpandoObjectExtensions.ConvertToExpando(object?) Remarks Initializes a new instance of the ToggleFeatureCommandHandler class. Constructors ToggleFeatureCommandHandler(ILogger<ToggleFeatureCommandHandler>?, IFeatureManager?, ISessionManager?) Toggle feature command handler public ToggleFeatureCommandHandler(ILogger<ToggleFeatureCommandHandler>? logger, IFeatureManager? featureManager, ISessionManager? sessionManager) Parameters logger ILogger<ToggleFeatureCommandHandler> The logger. featureManager IFeatureManager The feature manager. sessionManager ISessionManager The session manager. Remarks Initializes a new instance of the ToggleFeatureCommandHandler class. See Also CommandHandlerBaseClass<TCommand, TViewModel> Properties CommandName Gets the command type accepted. public override string CommandName { get; } Property Value string The command type accepted. Tags Gets the tags (Used by OpenAPI, etc). public override string[] Tags { get; } Property Value string[] The tags (Used by OpenAPI, etc). Methods CreateAsync(ToggleFeatureCommandVM?, ClaimsPrincipal) Creates the specified value. public override ValueTask<CommandCreationResult?> CreateAsync(ToggleFeatureCommandVM? value, ClaimsPrincipal user) Parameters value ToggleFeatureCommandVM The value. user ClaimsPrincipal The user. Returns ValueTask<CommandCreationResult> A command value converted from the ExpandoObject. HandleCommandAsync(ToggleFeatureCommand?[]?) Handles the command. protected override Task<IEvent[]> HandleCommandAsync(ToggleFeatureCommand?[]? args) Parameters args ToggleFeatureCommand[] The arguments. Returns Task<IEvent[]> The events generated by the command. See Also CommandHandlerBaseClass<TCommand, TViewModel>"
  },
  "api/Mithril.Features.Commands.ViewModels.ToggleFeatureCommandVM.html": {
    "href": "api/Mithril.Features.Commands.ViewModels.ToggleFeatureCommandVM.html",
    "title": "Class ToggleFeatureCommandVM | Mithril API Reference",
    "keywords": "Class ToggleFeatureCommandVM Namespace Mithril.Features.Commands.ViewModels Assembly Mithril.Features.dll Toggle feature command, used to turn on/off sections of the application as needed. Requires admin access. public class ToggleFeatureCommandVM Inheritance object ToggleFeatureCommandVM Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods GenericExtensions.When<TObject>(TObject, bool, Func<TObject, TObject>) ExpandoObjectExtensions.ConvertToExpando(object?) Properties Active Gets or sets a value indicating whether the feature should be made active or not. public bool Active { get; set; } Property Value bool true if active; otherwise, false. FeatureName The name of the feature to toggle. public string? FeatureName { get; set; } Property Value string The name."
  },
  "api/Mithril.Features.Commands.ViewModels.html": {
    "href": "api/Mithril.Features.Commands.ViewModels.html",
    "title": "Namespace Mithril.Features.Commands.ViewModels | Mithril API Reference",
    "keywords": "Namespace Mithril.Features.Commands.ViewModels Classes ToggleFeatureCommandVM Toggle feature command, used to turn on/off sections of the application as needed. Requires admin access."
  },
  "api/Mithril.Features.Commands.html": {
    "href": "api/Mithril.Features.Commands.html",
    "title": "Namespace Mithril.Features.Commands | Mithril API Reference",
    "keywords": "Namespace Mithril.Features.Commands Classes ToggleFeatureCommandHandler Toggle feature command handler"
  },
  "api/Mithril.Features.FeatureModule.html": {
    "href": "api/Mithril.Features.FeatureModule.html",
    "title": "Class FeatureModule | Mithril API Reference",
    "keywords": "Class FeatureModule Namespace Mithril.Features Assembly Mithril.Features.dll Feature module public class FeatureModule : ModuleBaseClass<FeatureModule>, IEquatable<FeatureModule>, IModule Inheritance object ModuleBaseClass<FeatureModule> FeatureModule Implements IEquatable<FeatureModule> IModule Inherited Members ModuleBaseClass<FeatureModule>.Category ModuleBaseClass<FeatureModule>.ContentPath ModuleBaseClass<FeatureModule>.Features ModuleBaseClass<FeatureModule>.ID ModuleBaseClass<FeatureModule>.LastModified ModuleBaseClass<FeatureModule>.Name ModuleBaseClass<FeatureModule>.Tags ModuleBaseClass<FeatureModule>.Version ModuleBaseClass<FeatureModule>.ConfigureApplication(IApplicationBuilder, IConfiguration, IHostEnvironment) ModuleBaseClass<FeatureModule>.ConfigureHostSettings(IHostBuilder, IConfiguration, IHostEnvironment) ModuleBaseClass<FeatureModule>.ConfigureLoggingSettings(ILoggingBuilder, IConfiguration, IHostEnvironment) ModuleBaseClass<FeatureModule>.ConfigureMVC(IMvcBuilder, IConfiguration, IHostEnvironment) ModuleBaseClass<FeatureModule>.ConfigureRoutes(IEndpointRouteBuilder, IConfiguration, IHostEnvironment) ModuleBaseClass<FeatureModule>.ConfigureWebHostSettings(IWebHostBuilder, IConfiguration, IHostEnvironment) ModuleBaseClass<FeatureModule>.Equals(object) ModuleBaseClass<FeatureModule>.Equals(FeatureModule) ModuleBaseClass<FeatureModule>.GetHashCode() ModuleBaseClass<FeatureModule>.OnStarted() ModuleBaseClass<FeatureModule>.OnStopped() ModuleBaseClass<FeatureModule>.OnStopping() object.Equals(object, object) object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods GenericExtensions.When<TObject>(TObject, bool, Func<TObject, TObject>) ExpandoObjectExtensions.ConvertToExpando(object?) Constructors FeatureModule() Initializes a new instance of the FeatureModule class. public FeatureModule() Properties Order Gets the order that they are initialized in. public override int Order { get; } Property Value int The order that they are initialized in. Methods ConfigureServices(IServiceCollection?, IConfiguration?, IHostEnvironment?) Configures the services for the module. public override IServiceCollection? ConfigureServices(IServiceCollection? services, IConfiguration? configuration, IHostEnvironment? environment) Parameters services IServiceCollection The services collection. configuration IConfiguration The configuration. environment IHostEnvironment The environment. Returns IServiceCollection Services InitializeDataAsync(IDataService?, IServiceProvider?) Initializes the data. public override Task InitializeDataAsync(IDataService? dataService, IServiceProvider? services) Parameters dataService IDataService The data service services IServiceProvider The services for the application. Returns Task Feature module See Also ModuleBaseClass<TModule>"
  },
  "api/Mithril.Features.Models.Feature.html": {
    "href": "api/Mithril.Features.Models.Feature.html",
    "title": "Class Feature | Mithril API Reference",
    "keywords": "Class Feature Namespace Mithril.Features.Models Assembly Mithril.Features.dll Feature model public class Feature : ModelBase<Feature>, IModel<Feature>, IModel, IEquatable<IModel>, IEquatable<IModel<Feature>>, IComparable, IComparable<Feature>, IEquatable<ModelBase<Feature>> Inheritance object ModelBase<Feature> Feature Implements IModel<Feature> IModel IEquatable<IModel> IEquatable<IModel<Feature>> IComparable IComparable<Feature> IEquatable<ModelBase<Feature>> Inherited Members ModelBase<Feature>.Active ModelBase<Feature>.Creator ModelBase<Feature>.DateCreated ModelBase<Feature>.DateModified ModelBase<Feature>.ID ModelBase<Feature>.Modifier ModelBase<Feature>.TenantID ModelBase<Feature>.All(IDataService) ModelBase<Feature>.AllActive(IDataService) ModelBase<Feature>.AllInactive(IDataService) ModelBase<Feature>.Load(long, IDataService) ModelBase<Feature>.Query(IDataService) ModelBase<Feature>.CanBeModifiedBy(ClaimsPrincipal) ModelBase<Feature>.CanBeViewedBy(ClaimsPrincipal) ModelBase<Feature>.CompareTo(object) ModelBase<Feature>.DeleteAsync(IDataService, ClaimsPrincipal, bool) ModelBase<Feature>.Equals(IModel) ModelBase<Feature>.Equals(IModel<Feature>) ModelBase<Feature>.Equals(ModelBase<Feature>) ModelBase<Feature>.SaveAsync(IDataService, ClaimsPrincipal) ModelBase<Feature>.SetupObject(IDataService, ClaimsPrincipal) ModelBase<Feature>.SetupObject(IDataService, IUser) ModelBase<Feature>.SetupObjectAndReturn(IDataService, ClaimsPrincipal) object.Equals(object, object) object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods GenericExtensions.When<TObject>(TObject, bool, Func<TObject, TObject>) ExpandoObjectExtensions.ConvertToExpando(object?) Constructors Feature() Initializes a new instance of the Feature class. public Feature() Feature(string, string) Initializes a new instance of the Feature class. public Feature(string name, string category) Parameters name string The name. category string The category. Exceptions ArgumentNullException name or category ArgumentException Properties Category Gets or sets the category. [Required] [MinLength(1)] [MaxLength(255)] public string? Category { get; set; } Property Value string The category. Description Gets or sets the description. [MaxLength] public string? Description { get; set; } Property Value string The description. Name Gets or sets the name. [Required] [MinLength(1)] [MaxLength(255)] public string? Name { get; set; } Property Value string The name. Methods CompareTo(Feature?) Compares the object to another object public override int CompareTo(Feature? other) Parameters other Feature Object to compare to Returns int 0 if they are equal, -1 if this is smaller, 1 if it is larger Equals(Feature) Indicates whether the current object is equal to another object of the same type. public bool Equals(Feature other) Parameters other Feature An object to compare with this object. Returns bool true if the current object is equal to the other parameter; otherwise, false. Equals(object?) Determines whether the specified object, is equal to this instance. public override bool Equals(object? obj) Parameters obj object The object to compare with this instance. Returns bool true if the specified object is equal to this instance; otherwise, false. GetHashCode() Returns a hash code for this instance. public override int GetHashCode() Returns int A hash code for this instance, suitable for use in hashing algorithms and data structures like a hash table. Load(string, IDataService?) Loads the feature based on the name specified. public static Feature? Load(string name, IDataService? dataService) Parameters name string The name. dataService IDataService The data service. Returns Feature The feature specified. LoadOrCreateAsync(string, string, IDataService?, ClaimsPrincipal?) Loads a specific feature or creates it. public static Task<Feature> LoadOrCreateAsync(string name, string category, IDataService? dataService, ClaimsPrincipal? user) Parameters name string The name. category string The category. dataService IDataService The data service. user ClaimsPrincipal The user. Returns Task<Feature> The feature specified. Operators operator ==(Feature, Feature) Implements the operator ==. public static bool operator ==(Feature first, Feature second) Parameters first Feature The first. second Feature The second. Returns bool The result of the operator. operator >(Feature, Feature) Implements the operator >. public static bool operator >(Feature left, Feature right) Parameters left Feature The left. right Feature The right. Returns bool The result of the operator. operator >=(Feature, Feature) Implements the operator >=. public static bool operator >=(Feature left, Feature right) Parameters left Feature The left. right Feature The right. Returns bool The result of the operator. operator !=(Feature, Feature) Implements the operator !=. public static bool operator !=(Feature left, Feature right) Parameters left Feature The left. right Feature The right. Returns bool The result of the operator. operator <(Feature, Feature) Implements the operator <. public static bool operator <(Feature left, Feature right) Parameters left Feature The left. right Feature The right. Returns bool The result of the operator. operator <=(Feature, Feature) Implements the operator <=. public static bool operator <=(Feature left, Feature right) Parameters left Feature The left. right Feature The right. Returns bool The result of the operator. See Also ModelBase<TClass>"
  },
  "api/Mithril.Features.Models.FeatureToggledEvent.html": {
    "href": "api/Mithril.Features.Models.FeatureToggledEvent.html",
    "title": "Class FeatureToggledEvent | Mithril API Reference",
    "keywords": "Class FeatureToggledEvent Namespace Mithril.Features.Models Assembly Mithril.Features.dll Feature toggled event public class FeatureToggledEvent : EventBaseClass<FeatureToggledEvent>, IModel<FeatureToggledEvent>, IEquatable<IModel<FeatureToggledEvent>>, IComparable, IComparable<FeatureToggledEvent>, IEquatable<ModelBase<FeatureToggledEvent>>, IEvent, IEquatable<IEvent>, IModel, IEquatable<IModel>, IEquatable<EventBaseClass<FeatureToggledEvent>> Inheritance object ModelBase<FeatureToggledEvent> EventBaseClass<FeatureToggledEvent> FeatureToggledEvent Implements IModel<FeatureToggledEvent> IEquatable<IModel<FeatureToggledEvent>> IComparable IComparable<FeatureToggledEvent> IEquatable<ModelBase<FeatureToggledEvent>> IEvent IEquatable<IEvent> IModel IEquatable<IModel> IEquatable<EventBaseClass<FeatureToggledEvent>> Inherited Members EventBaseClass<FeatureToggledEvent>.Name EventBaseClass<FeatureToggledEvent>.RetryCount EventBaseClass<FeatureToggledEvent>.State EventBaseClass<FeatureToggledEvent>.CanRun() EventBaseClass<FeatureToggledEvent>.CompareTo(EventBaseClass<FeatureToggledEvent>) EventBaseClass<FeatureToggledEvent>.Equals(EventBaseClass<FeatureToggledEvent>) EventBaseClass<FeatureToggledEvent>.Equals(IEvent) EventBaseClass<FeatureToggledEvent>.ToString() ModelBase<FeatureToggledEvent>.Active ModelBase<FeatureToggledEvent>.Creator ModelBase<FeatureToggledEvent>.DateCreated ModelBase<FeatureToggledEvent>.DateModified ModelBase<FeatureToggledEvent>.ID ModelBase<FeatureToggledEvent>.Modifier ModelBase<FeatureToggledEvent>.TenantID ModelBase<FeatureToggledEvent>.All(IDataService) ModelBase<FeatureToggledEvent>.AllActive(IDataService) ModelBase<FeatureToggledEvent>.AllInactive(IDataService) ModelBase<FeatureToggledEvent>.Load(long, IDataService) ModelBase<FeatureToggledEvent>.Query(IDataService) ModelBase<FeatureToggledEvent>.CanBeModifiedBy(ClaimsPrincipal) ModelBase<FeatureToggledEvent>.CanBeViewedBy(ClaimsPrincipal) ModelBase<FeatureToggledEvent>.CompareTo(object) ModelBase<FeatureToggledEvent>.DeleteAsync(IDataService, ClaimsPrincipal, bool) ModelBase<FeatureToggledEvent>.Equals(IModel) ModelBase<FeatureToggledEvent>.Equals(IModel<FeatureToggledEvent>) ModelBase<FeatureToggledEvent>.Equals(ModelBase<FeatureToggledEvent>) ModelBase<FeatureToggledEvent>.SaveAsync(IDataService, ClaimsPrincipal) ModelBase<FeatureToggledEvent>.SetupObject(IDataService, ClaimsPrincipal) ModelBase<FeatureToggledEvent>.SetupObject(IDataService, IUser) ModelBase<FeatureToggledEvent>.SetupObjectAndReturn(IDataService, ClaimsPrincipal) object.Equals(object, object) object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Extension Methods GenericExtensions.When<TObject>(TObject, bool, Func<TObject, TObject>) ExpandoObjectExtensions.ConvertToExpando(object?) Constructors FeatureToggledEvent() Initializes a new instance of the FeatureToggledEvent class. public FeatureToggledEvent() FeatureToggledEvent(string, bool) Initializes a new instance of the FeatureToggledEvent class. public FeatureToggledEvent(string name, bool active) Parameters name string The name. active bool if set to true [active]. Properties FeatureName Gets or sets the message. [MaxLength(100)] public string? FeatureName { get; set; } Property Value string The message. FeatureStatus Gets or sets a value indicating whether [feature status]. public bool FeatureStatus { get; set; } Property Value bool true if [feature status]; otherwise, false. Methods CompareTo(FeatureToggledEvent?) Compares the object to another object public override int CompareTo(FeatureToggledEvent? other) Parameters other FeatureToggledEvent Object to compare to Returns int 0 if they are equal, -1 if this is smaller, 1 if it is larger Equals(FeatureToggledEvent) Indicates whether the current object is equal to another object of the same type. public bool Equals(FeatureToggledEvent other) Parameters other FeatureToggledEvent An object to compare with this object. Returns bool true if the current object is equal to the other parameter; otherwise, false. Equals(object?) Determines whether the specified object, is equal to this instance. public override bool Equals(object? obj) Parameters obj object The object to compare with this instance. Returns bool true if the specified object is equal to this instance; otherwise, false. GetData() Gets the data within the event. public override ExpandoObject GetData() Returns ExpandoObject The data from the event. GetHashCode() Returns a hash code for this instance. public override int GetHashCode() Returns int A hash code for this instance, suitable for use in hashing algorithms and data structures like a hash table. GetSchema() Gets the schema. public override string GetSchema() Returns string The data schema. Operators operator ==(FeatureToggledEvent, FeatureToggledEvent) Implements the operator ==. public static bool operator ==(FeatureToggledEvent first, FeatureToggledEvent second) Parameters first FeatureToggledEvent The first. second FeatureToggledEvent The second. Returns bool The result of the operator. operator >(FeatureToggledEvent, FeatureToggledEvent) Implements the operator >. public static bool operator >(FeatureToggledEvent left, FeatureToggledEvent right) Parameters left FeatureToggledEvent The left. right FeatureToggledEvent The right. Returns bool The result of the operator. operator >=(FeatureToggledEvent, FeatureToggledEvent) Implements the operator >=. public static bool operator >=(FeatureToggledEvent left, FeatureToggledEvent right) Parameters left FeatureToggledEvent The left. right FeatureToggledEvent The right. Returns bool The result of the operator. operator !=(FeatureToggledEvent, FeatureToggledEvent) Implements the operator !=. public static bool operator !=(FeatureToggledEvent left, FeatureToggledEvent right) Parameters left FeatureToggledEvent The left. right FeatureToggledEvent The right. Returns bool The result of the operator. operator <(FeatureToggledEvent, FeatureToggledEvent) Implements the operator <. public static bool operator <(FeatureToggledEvent left, FeatureToggledEvent right) Parameters left FeatureToggledEvent The left. right FeatureToggledEvent The right. Returns bool The result of the operator. operator <=(FeatureToggledEvent, FeatureToggledEvent) Implements the operator <=. public static bool operator <=(FeatureToggledEvent left, FeatureToggledEvent right) Parameters left FeatureToggledEvent The left. right FeatureToggledEvent The right. Returns bool The result of the operator. See Also EventBaseClass<TEvent>"
  },
  "api/Mithril.Features.Models.Mappings.FeatureMapping.html": {
    "href": "api/Mithril.Features.Models.Mappings.FeatureMapping.html",
    "title": "Class FeatureMapping | Mithril API Reference",
    "keywords": "Class FeatureMapping Namespace Mithril.Features.Models.Mappings Assembly Mithril.Features.dll Feature mapping public class FeatureMapping : MappingBaseClass<Feature, DefaultDatabase>, IMapping<Feature>, IMapping Inheritance object MappingBaseClass<Feature, DefaultDatabase> FeatureMapping Implements IMapping<Feature> IMapping Inherited Members MappingBaseClass<Feature, DefaultDatabase>.AddAutoKey() MappingBaseClass<Feature, DefaultDatabase>.ContainsProperty(string) MappingBaseClass<Feature, DefaultDatabase>.Copy(IMapping) MappingBaseClass<Feature, DefaultDatabase>.CopyProperty(IIDProperty) MappingBaseClass<Feature, DefaultDatabase>.CopyProperty(IProperty) MappingBaseClass<Feature, DefaultDatabase>.CopyProperty(IMapProperty) MappingBaseClass<Feature, DefaultDatabase>.CopyProperty(IManyToOneProperty) MappingBaseClass<Feature, DefaultDatabase>.CopyProperty(IManyToManyProperty) MappingBaseClass<Feature, DefaultDatabase>.Equals(object) MappingBaseClass<Feature, DefaultDatabase>.GetColumnName(string) MappingBaseClass<Feature, DefaultDatabase>.GetHashCode() MappingBaseClass<Feature, DefaultDatabase>.ID<TDataType>(Expression<Func<Feature, TDataType>>) MappingBaseClass<Feature, DefaultDatabase>.ManyToMany<TDataType>(Expression<Func<Feature, IList<TDataType>>>) MappingBaseClass<Feature, DefaultDatabase>.ManyToOne<TDataType>(Expression<Func<Feature, IList<TDataType>>>) MappingBaseClass<Feature, DefaultDatabase>.ManyToOne<TDataType>(Expression<Func<Feature, TDataType>>) MappingBaseClass<Feature, DefaultDatabase>.Map<TDataType>(Expression<Func<Feature, TDataType>>) MappingBaseClass<Feature, DefaultDatabase>.Reduce(ILogger) MappingBaseClass<Feature, DefaultDatabase>.Reduce(IMapping, ILogger) MappingBaseClass<Feature, DefaultDatabase>.Reference<TDataType>(Expression<Func<Feature, TDataType>>) MappingBaseClass<Feature, DefaultDatabase>.SetQuery(QueryType, string, CommandType, params IParameter[]) MappingBaseClass<Feature, DefaultDatabase>.Setup() MappingBaseClass<Feature, DefaultDatabase>.ToString() MappingBaseClass<Feature, DefaultDatabase>.AutoIDProperties MappingBaseClass<Feature, DefaultDatabase>.DatabaseConfigType MappingBaseClass<Feature, DefaultDatabase>.IDProperties MappingBaseClass<Feature, DefaultDatabase>.ManyToManyProperties MappingBaseClass<Feature, DefaultDatabase>.ManyToOneProperties MappingBaseClass<Feature, DefaultDatabase>.MapProperties MappingBaseClass<Feature, DefaultDatabase>.Merge MappingBaseClass<Feature, DefaultDatabase>.ObjectType MappingBaseClass<Feature, DefaultDatabase>.Order MappingBaseClass<Feature, DefaultDatabase>.Prefix MappingBaseClass<Feature, DefaultDatabase>.Queries MappingBaseClass<Feature, DefaultDatabase>.ReferenceProperties MappingBaseClass<Feature, DefaultDatabase>.SchemaName MappingBaseClass<Feature, DefaultDatabase>.Suffix MappingBaseClass<Feature, DefaultDatabase>.TableName object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods GenericExtensions.When<TObject>(TObject, bool, Func<TObject, TObject>) ExpandoObjectExtensions.ConvertToExpando(object?) Constructors FeatureMapping() Initializes a new instance of the FeatureMapping class. public FeatureMapping() See Also MappingBaseClass<TClassType, TDatabaseType>"
  },
  "api/Mithril.Features.Models.Mappings.FeatureToggledEventMapping.html": {
    "href": "api/Mithril.Features.Models.Mappings.FeatureToggledEventMapping.html",
    "title": "Class FeatureToggledEventMapping | Mithril API Reference",
    "keywords": "Class FeatureToggledEventMapping Namespace Mithril.Features.Models.Mappings Assembly Mithril.Features.dll Feature toggled event mapping public class FeatureToggledEventMapping : MappingBaseClass<FeatureToggledEvent, DefaultDatabase>, IMapping<FeatureToggledEvent>, IMapping Inheritance object MappingBaseClass<FeatureToggledEvent, DefaultDatabase> FeatureToggledEventMapping Implements IMapping<FeatureToggledEvent> IMapping Inherited Members MappingBaseClass<FeatureToggledEvent, DefaultDatabase>.AddAutoKey() MappingBaseClass<FeatureToggledEvent, DefaultDatabase>.ContainsProperty(string) MappingBaseClass<FeatureToggledEvent, DefaultDatabase>.Copy(IMapping) MappingBaseClass<FeatureToggledEvent, DefaultDatabase>.CopyProperty(IIDProperty) MappingBaseClass<FeatureToggledEvent, DefaultDatabase>.CopyProperty(IProperty) MappingBaseClass<FeatureToggledEvent, DefaultDatabase>.CopyProperty(IMapProperty) MappingBaseClass<FeatureToggledEvent, DefaultDatabase>.CopyProperty(IManyToOneProperty) MappingBaseClass<FeatureToggledEvent, DefaultDatabase>.CopyProperty(IManyToManyProperty) MappingBaseClass<FeatureToggledEvent, DefaultDatabase>.Equals(object) MappingBaseClass<FeatureToggledEvent, DefaultDatabase>.GetColumnName(string) MappingBaseClass<FeatureToggledEvent, DefaultDatabase>.GetHashCode() MappingBaseClass<FeatureToggledEvent, DefaultDatabase>.ID<TDataType>(Expression<Func<FeatureToggledEvent, TDataType>>) MappingBaseClass<FeatureToggledEvent, DefaultDatabase>.ManyToMany<TDataType>(Expression<Func<FeatureToggledEvent, IList<TDataType>>>) MappingBaseClass<FeatureToggledEvent, DefaultDatabase>.ManyToOne<TDataType>(Expression<Func<FeatureToggledEvent, IList<TDataType>>>) MappingBaseClass<FeatureToggledEvent, DefaultDatabase>.ManyToOne<TDataType>(Expression<Func<FeatureToggledEvent, TDataType>>) MappingBaseClass<FeatureToggledEvent, DefaultDatabase>.Map<TDataType>(Expression<Func<FeatureToggledEvent, TDataType>>) MappingBaseClass<FeatureToggledEvent, DefaultDatabase>.Reduce(ILogger) MappingBaseClass<FeatureToggledEvent, DefaultDatabase>.Reduce(IMapping, ILogger) MappingBaseClass<FeatureToggledEvent, DefaultDatabase>.Reference<TDataType>(Expression<Func<FeatureToggledEvent, TDataType>>) MappingBaseClass<FeatureToggledEvent, DefaultDatabase>.SetQuery(QueryType, string, CommandType, params IParameter[]) MappingBaseClass<FeatureToggledEvent, DefaultDatabase>.Setup() MappingBaseClass<FeatureToggledEvent, DefaultDatabase>.ToString() MappingBaseClass<FeatureToggledEvent, DefaultDatabase>.AutoIDProperties MappingBaseClass<FeatureToggledEvent, DefaultDatabase>.DatabaseConfigType MappingBaseClass<FeatureToggledEvent, DefaultDatabase>.IDProperties MappingBaseClass<FeatureToggledEvent, DefaultDatabase>.ManyToManyProperties MappingBaseClass<FeatureToggledEvent, DefaultDatabase>.ManyToOneProperties MappingBaseClass<FeatureToggledEvent, DefaultDatabase>.MapProperties MappingBaseClass<FeatureToggledEvent, DefaultDatabase>.Merge MappingBaseClass<FeatureToggledEvent, DefaultDatabase>.ObjectType MappingBaseClass<FeatureToggledEvent, DefaultDatabase>.Order MappingBaseClass<FeatureToggledEvent, DefaultDatabase>.Prefix MappingBaseClass<FeatureToggledEvent, DefaultDatabase>.Queries MappingBaseClass<FeatureToggledEvent, DefaultDatabase>.ReferenceProperties MappingBaseClass<FeatureToggledEvent, DefaultDatabase>.SchemaName MappingBaseClass<FeatureToggledEvent, DefaultDatabase>.Suffix MappingBaseClass<FeatureToggledEvent, DefaultDatabase>.TableName object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods GenericExtensions.When<TObject>(TObject, bool, Func<TObject, TObject>) ExpandoObjectExtensions.ConvertToExpando(object?) Constructors FeatureToggledEventMapping() Initializes a new instance of the FeatureMapping class. public FeatureToggledEventMapping() See Also MappingBaseClass<TClassType, TDatabaseType>"
  },
  "api/Mithril.Features.Models.Mappings.ToggleFeatureCommandMapping.html": {
    "href": "api/Mithril.Features.Models.Mappings.ToggleFeatureCommandMapping.html",
    "title": "Class ToggleFeatureCommandMapping | Mithril API Reference",
    "keywords": "Class ToggleFeatureCommandMapping Namespace Mithril.Features.Models.Mappings Assembly Mithril.Features.dll Toggle feature command mapping public class ToggleFeatureCommandMapping : MappingBaseClass<ToggleFeatureCommand, DefaultDatabase>, IMapping<ToggleFeatureCommand>, IMapping Inheritance object MappingBaseClass<ToggleFeatureCommand, DefaultDatabase> ToggleFeatureCommandMapping Implements IMapping<ToggleFeatureCommand> IMapping Inherited Members MappingBaseClass<ToggleFeatureCommand, DefaultDatabase>.AddAutoKey() MappingBaseClass<ToggleFeatureCommand, DefaultDatabase>.ContainsProperty(string) MappingBaseClass<ToggleFeatureCommand, DefaultDatabase>.Copy(IMapping) MappingBaseClass<ToggleFeatureCommand, DefaultDatabase>.CopyProperty(IIDProperty) MappingBaseClass<ToggleFeatureCommand, DefaultDatabase>.CopyProperty(IProperty) MappingBaseClass<ToggleFeatureCommand, DefaultDatabase>.CopyProperty(IMapProperty) MappingBaseClass<ToggleFeatureCommand, DefaultDatabase>.CopyProperty(IManyToOneProperty) MappingBaseClass<ToggleFeatureCommand, DefaultDatabase>.CopyProperty(IManyToManyProperty) MappingBaseClass<ToggleFeatureCommand, DefaultDatabase>.Equals(object) MappingBaseClass<ToggleFeatureCommand, DefaultDatabase>.GetColumnName(string) MappingBaseClass<ToggleFeatureCommand, DefaultDatabase>.GetHashCode() MappingBaseClass<ToggleFeatureCommand, DefaultDatabase>.ID<TDataType>(Expression<Func<ToggleFeatureCommand, TDataType>>) MappingBaseClass<ToggleFeatureCommand, DefaultDatabase>.ManyToMany<TDataType>(Expression<Func<ToggleFeatureCommand, IList<TDataType>>>) MappingBaseClass<ToggleFeatureCommand, DefaultDatabase>.ManyToOne<TDataType>(Expression<Func<ToggleFeatureCommand, IList<TDataType>>>) MappingBaseClass<ToggleFeatureCommand, DefaultDatabase>.ManyToOne<TDataType>(Expression<Func<ToggleFeatureCommand, TDataType>>) MappingBaseClass<ToggleFeatureCommand, DefaultDatabase>.Map<TDataType>(Expression<Func<ToggleFeatureCommand, TDataType>>) MappingBaseClass<ToggleFeatureCommand, DefaultDatabase>.Reduce(ILogger) MappingBaseClass<ToggleFeatureCommand, DefaultDatabase>.Reduce(IMapping, ILogger) MappingBaseClass<ToggleFeatureCommand, DefaultDatabase>.Reference<TDataType>(Expression<Func<ToggleFeatureCommand, TDataType>>) MappingBaseClass<ToggleFeatureCommand, DefaultDatabase>.SetQuery(QueryType, string, CommandType, params IParameter[]) MappingBaseClass<ToggleFeatureCommand, DefaultDatabase>.Setup() MappingBaseClass<ToggleFeatureCommand, DefaultDatabase>.ToString() MappingBaseClass<ToggleFeatureCommand, DefaultDatabase>.AutoIDProperties MappingBaseClass<ToggleFeatureCommand, DefaultDatabase>.DatabaseConfigType MappingBaseClass<ToggleFeatureCommand, DefaultDatabase>.IDProperties MappingBaseClass<ToggleFeatureCommand, DefaultDatabase>.ManyToManyProperties MappingBaseClass<ToggleFeatureCommand, DefaultDatabase>.ManyToOneProperties MappingBaseClass<ToggleFeatureCommand, DefaultDatabase>.MapProperties MappingBaseClass<ToggleFeatureCommand, DefaultDatabase>.Merge MappingBaseClass<ToggleFeatureCommand, DefaultDatabase>.ObjectType MappingBaseClass<ToggleFeatureCommand, DefaultDatabase>.Order MappingBaseClass<ToggleFeatureCommand, DefaultDatabase>.Prefix MappingBaseClass<ToggleFeatureCommand, DefaultDatabase>.Queries MappingBaseClass<ToggleFeatureCommand, DefaultDatabase>.ReferenceProperties MappingBaseClass<ToggleFeatureCommand, DefaultDatabase>.SchemaName MappingBaseClass<ToggleFeatureCommand, DefaultDatabase>.Suffix MappingBaseClass<ToggleFeatureCommand, DefaultDatabase>.TableName object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods GenericExtensions.When<TObject>(TObject, bool, Func<TObject, TObject>) ExpandoObjectExtensions.ConvertToExpando(object?) Constructors ToggleFeatureCommandMapping() Initializes a new instance of the ToggleFeatureCommandMapping class. public ToggleFeatureCommandMapping() See Also MappingBaseClass<TClassType, TDatabaseType>"
  },
  "api/Mithril.Features.Models.Mappings.html": {
    "href": "api/Mithril.Features.Models.Mappings.html",
    "title": "Namespace Mithril.Features.Models.Mappings | Mithril API Reference",
    "keywords": "Namespace Mithril.Features.Models.Mappings Classes FeatureMapping Feature mapping FeatureToggledEventMapping Feature toggled event mapping ToggleFeatureCommandMapping Toggle feature command mapping"
  },
  "api/Mithril.Features.Models.ToggleFeatureCommand.html": {
    "href": "api/Mithril.Features.Models.ToggleFeatureCommand.html",
    "title": "Class ToggleFeatureCommand | Mithril API Reference",
    "keywords": "Class ToggleFeatureCommand Namespace Mithril.Features.Models Assembly Mithril.Features.dll Toggle feature command public class ToggleFeatureCommand : CommandBaseClass<ToggleFeatureCommand>, IModel<ToggleFeatureCommand>, IEquatable<IModel<ToggleFeatureCommand>>, IComparable, IComparable<ToggleFeatureCommand>, IEquatable<ModelBase<ToggleFeatureCommand>>, ICommand, IEquatable<ICommand>, IModel, IEquatable<IModel>, IEquatable<CommandBaseClass<ToggleFeatureCommand>> Inheritance object ModelBase<ToggleFeatureCommand> CommandBaseClass<ToggleFeatureCommand> ToggleFeatureCommand Implements IModel<ToggleFeatureCommand> IEquatable<IModel<ToggleFeatureCommand>> IComparable IComparable<ToggleFeatureCommand> IEquatable<ModelBase<ToggleFeatureCommand>> ICommand IEquatable<ICommand> IModel IEquatable<IModel> IEquatable<CommandBaseClass<ToggleFeatureCommand>> Inherited Members CommandBaseClass<ToggleFeatureCommand>.Name CommandBaseClass<ToggleFeatureCommand>.CompareTo(CommandBaseClass<ToggleFeatureCommand>) CommandBaseClass<ToggleFeatureCommand>.Equals(CommandBaseClass<ToggleFeatureCommand>) CommandBaseClass<ToggleFeatureCommand>.Equals(ICommand) CommandBaseClass<ToggleFeatureCommand>.ToString() ModelBase<ToggleFeatureCommand>.Active ModelBase<ToggleFeatureCommand>.Creator ModelBase<ToggleFeatureCommand>.DateCreated ModelBase<ToggleFeatureCommand>.DateModified ModelBase<ToggleFeatureCommand>.ID ModelBase<ToggleFeatureCommand>.Modifier ModelBase<ToggleFeatureCommand>.TenantID ModelBase<ToggleFeatureCommand>.All(IDataService) ModelBase<ToggleFeatureCommand>.AllActive(IDataService) ModelBase<ToggleFeatureCommand>.AllInactive(IDataService) ModelBase<ToggleFeatureCommand>.Load(long, IDataService) ModelBase<ToggleFeatureCommand>.Query(IDataService) ModelBase<ToggleFeatureCommand>.CanBeModifiedBy(ClaimsPrincipal) ModelBase<ToggleFeatureCommand>.CanBeViewedBy(ClaimsPrincipal) ModelBase<ToggleFeatureCommand>.CompareTo(object) ModelBase<ToggleFeatureCommand>.DeleteAsync(IDataService, ClaimsPrincipal, bool) ModelBase<ToggleFeatureCommand>.Equals(IModel) ModelBase<ToggleFeatureCommand>.Equals(IModel<ToggleFeatureCommand>) ModelBase<ToggleFeatureCommand>.Equals(ModelBase<ToggleFeatureCommand>) ModelBase<ToggleFeatureCommand>.SaveAsync(IDataService, ClaimsPrincipal) ModelBase<ToggleFeatureCommand>.SetupObject(IDataService, ClaimsPrincipal) ModelBase<ToggleFeatureCommand>.SetupObject(IDataService, IUser) ModelBase<ToggleFeatureCommand>.SetupObjectAndReturn(IDataService, ClaimsPrincipal) object.Equals(object, object) object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Extension Methods GenericExtensions.When<TObject>(TObject, bool, Func<TObject, TObject>) ExpandoObjectExtensions.ConvertToExpando(object?) Constructors ToggleFeatureCommand() Initializes a new instance of the ToggleFeatureCommand class. public ToggleFeatureCommand() ToggleFeatureCommand(string, bool) Initializes a new instance of the ToggleFeatureCommand class. public ToggleFeatureCommand(string name, bool active) Parameters name string The name. active bool if set to true [active]. Properties FeatureName Gets or sets the message. [MaxLength(100)] public string? FeatureName { get; set; } Property Value string The message. FeatureStatus Gets or sets a value indicating whether [feature status]. public bool FeatureStatus { get; set; } Property Value bool true if [feature status]; otherwise, false. Methods CompareTo(ToggleFeatureCommand?) Compares the object to another object public override int CompareTo(ToggleFeatureCommand? other) Parameters other ToggleFeatureCommand Object to compare to Returns int 0 if they are equal, -1 if this is smaller, 1 if it is larger Equals(ToggleFeatureCommand) Indicates whether the current object is equal to another object of the same type. public bool Equals(ToggleFeatureCommand other) Parameters other ToggleFeatureCommand An object to compare with this object. Returns bool true if the current object is equal to the other parameter; otherwise, false. Equals(object?) Determines whether the specified object, is equal to this instance. public override bool Equals(object? obj) Parameters obj object The object to compare with this instance. Returns bool true if the specified object is equal to this instance; otherwise, false. GetHashCode() Returns a hash code for this instance. public override int GetHashCode() Returns int A hash code for this instance, suitable for use in hashing algorithms and data structures like a hash table. Operators operator ==(ToggleFeatureCommand, ToggleFeatureCommand) Implements the operator ==. public static bool operator ==(ToggleFeatureCommand first, ToggleFeatureCommand second) Parameters first ToggleFeatureCommand The first. second ToggleFeatureCommand The second. Returns bool The result of the operator. operator >(ToggleFeatureCommand, ToggleFeatureCommand) Implements the operator >. public static bool operator >(ToggleFeatureCommand left, ToggleFeatureCommand right) Parameters left ToggleFeatureCommand The left. right ToggleFeatureCommand The right. Returns bool The result of the operator. operator >=(ToggleFeatureCommand, ToggleFeatureCommand) Implements the operator >=. public static bool operator >=(ToggleFeatureCommand left, ToggleFeatureCommand right) Parameters left ToggleFeatureCommand The left. right ToggleFeatureCommand The right. Returns bool The result of the operator. operator !=(ToggleFeatureCommand, ToggleFeatureCommand) Implements the operator !=. public static bool operator !=(ToggleFeatureCommand left, ToggleFeatureCommand right) Parameters left ToggleFeatureCommand The left. right ToggleFeatureCommand The right. Returns bool The result of the operator. operator <(ToggleFeatureCommand, ToggleFeatureCommand) Implements the operator <. public static bool operator <(ToggleFeatureCommand left, ToggleFeatureCommand right) Parameters left ToggleFeatureCommand The left. right ToggleFeatureCommand The right. Returns bool The result of the operator. operator <=(ToggleFeatureCommand, ToggleFeatureCommand) Implements the operator <=. public static bool operator <=(ToggleFeatureCommand left, ToggleFeatureCommand right) Parameters left ToggleFeatureCommand The left. right ToggleFeatureCommand The right. Returns bool The result of the operator. See Also CommandBaseClass<TCommand>"
  },
  "api/Mithril.Features.Models.html": {
    "href": "api/Mithril.Features.Models.html",
    "title": "Namespace Mithril.Features.Models | Mithril API Reference",
    "keywords": "Namespace Mithril.Features.Models Classes Feature Feature model FeatureToggledEvent Feature toggled event ToggleFeatureCommand Toggle feature command"
  },
  "api/Mithril.Features.Queries.FeatureListVM.html": {
    "href": "api/Mithril.Features.Queries.FeatureListVM.html",
    "title": "Class FeatureListVM | Mithril API Reference",
    "keywords": "Class FeatureListVM Namespace Mithril.Features.Queries Assembly Mithril.Features.dll Feature List VM public class FeatureListVM Inheritance object FeatureListVM Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods GenericExtensions.When<TObject>(TObject, bool, Func<TObject, TObject>) ExpandoObjectExtensions.ConvertToExpando(object?) Constructors FeatureListVM(IEnumerable<Feature>) Initializes a new instance of the FeatureListVM class. public FeatureListVM(IEnumerable<Feature> features) Parameters features IEnumerable<Feature> The features. Properties Features Gets the features. public List<FeatureVM> Features { get; } Property Value List<FeatureVM> The features."
  },
  "api/Mithril.Features.Queries.FeatureVM.html": {
    "href": "api/Mithril.Features.Queries.FeatureVM.html",
    "title": "Class FeatureVM | Mithril API Reference",
    "keywords": "Class FeatureVM Namespace Mithril.Features.Queries Assembly Mithril.Features.dll Feature view model public class FeatureVM Inheritance object FeatureVM Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods GenericExtensions.When<TObject>(TObject, bool, Func<TObject, TObject>) ExpandoObjectExtensions.ConvertToExpando(object?) Constructors FeatureVM(Feature) Initializes a new instance of the FeatureVM class. public FeatureVM(Feature model) Parameters model Feature The model. Properties Active Gets a value indicating whether this FeatureVM is active. public bool Active { get; } Property Value bool true if active; otherwise, false. Name Gets the name. public string? Name { get; } Property Value string The name."
  },
  "api/Mithril.Features.Queries.FeaturesQuery.html": {
    "href": "api/Mithril.Features.Queries.FeaturesQuery.html",
    "title": "Class FeaturesQuery | Mithril API Reference",
    "keywords": "Class FeaturesQuery Namespace Mithril.Features.Queries Assembly Mithril.Features.dll Features query [ApiAuthorize(\"Admin Only\")] public class FeaturesQuery : QueryBaseClass<IEnumerable<FeatureVM>>, IQuery<IEnumerable<FeatureVM>>, IQuery Inheritance object QueryBaseClass<IEnumerable<FeatureVM>> FeaturesQuery Implements IQuery<IEnumerable<FeatureVM>> IQuery Inherited Members QueryBaseClass<IEnumerable<FeatureVM>>.Arguments QueryBaseClass<IEnumerable<FeatureVM>>.DeprecationReason QueryBaseClass<IEnumerable<FeatureVM>>.Description QueryBaseClass<IEnumerable<FeatureVM>>.Features QueryBaseClass<IEnumerable<FeatureVM>>.ReturnType QueryBaseClass<IEnumerable<FeatureVM>>.Version QueryBaseClass<IEnumerable<FeatureVM>>.FeatureManager QueryBaseClass<IEnumerable<FeatureVM>>.Logger QueryBaseClass<IEnumerable<FeatureVM>>.IsFeatureEnabled() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods GenericExtensions.When<TObject>(TObject, bool, Func<TObject, TObject>) ExpandoObjectExtensions.ConvertToExpando(object?) Remarks Initializes a new instance of the FeaturesQuery class. Constructors FeaturesQuery(ILogger<FeaturesQuery>?, IFeatureManager?, IDataService?) Features query public FeaturesQuery(ILogger<FeaturesQuery>? logger, IFeatureManager? featureManager, IDataService? dataService) Parameters logger ILogger<FeaturesQuery> The logger. featureManager IFeatureManager The feature manager. dataService IDataService The data service. Remarks Initializes a new instance of the FeaturesQuery class. Properties DataService Gets the data service. public IDataService? DataService { get; } Property Value IDataService The data service. Name Gets the name. public override string Name { get; } Property Value string The name. Methods ResolveAsync(ClaimsPrincipal?, Arguments) Resolves the asynchronous. public override Task<IEnumerable<FeatureVM>?> ResolveAsync(ClaimsPrincipal? arg, Arguments arguments) Parameters arg ClaimsPrincipal The argument. arguments Arguments The arguments. Returns Task<IEnumerable<FeatureVM>>"
  },
  "api/Mithril.Features.Queries.html": {
    "href": "api/Mithril.Features.Queries.html",
    "title": "Namespace Mithril.Features.Queries | Mithril API Reference",
    "keywords": "Namespace Mithril.Features.Queries Classes FeatureListVM Feature List VM FeatureVM Feature view model FeaturesQuery Features query"
  },
  "api/Mithril.Features.Services.DatabaseSessionManager.html": {
    "href": "api/Mithril.Features.Services.DatabaseSessionManager.html",
    "title": "Class DatabaseSessionManager | Mithril API Reference",
    "keywords": "Class DatabaseSessionManager Namespace Mithril.Features.Services Assembly Mithril.Features.dll Database session manager public class DatabaseSessionManager : ISessionManager Inheritance object DatabaseSessionManager Implements ISessionManager Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods GenericExtensions.When<TObject>(TObject, bool, Func<TObject, TObject>) ExpandoObjectExtensions.ConvertToExpando(object?) Remarks Initializes a new instance of the DatabaseSessionManager class. Constructors DatabaseSessionManager(IDataService?) Database session manager public DatabaseSessionManager(IDataService? dataService) Parameters dataService IDataService The data service. Remarks Initializes a new instance of the DatabaseSessionManager class. See Also ISessionManager Properties DataService Gets the data service. public IDataService? DataService { get; } Property Value IDataService The data service. Methods GetAsync(string) Queries the session manager for the session's feature state, if any, for the given feature. public Task<bool?> GetAsync(string featureName) Parameters featureName string The name of the feature. Returns Task<bool?> The state of the feature if it is present in the session, otherwise null. SetAsync(string, bool) Set the state of a feature to be used for a session. public Task SetAsync(string featureName, bool enabled) Parameters featureName string The name of the feature. enabled bool The state of the feature. Returns Task The async task. See Also ISessionManager"
  },
  "api/Mithril.Features.Services.html": {
    "href": "api/Mithril.Features.Services.html",
    "title": "Namespace Mithril.Features.Services | Mithril API Reference",
    "keywords": "Namespace Mithril.Features.Services Classes DatabaseSessionManager Database session manager"
  },
  "api/Mithril.Features.html": {
    "href": "api/Mithril.Features.html",
    "title": "Namespace Mithril.Features | Mithril API Reference",
    "keywords": "Namespace Mithril.Features Classes FeatureModule Feature module"
  },
  "api/Mithril.FileSystem.Abstractions.BaseClasses.MediaDirectoryBaseClass-2.html": {
    "href": "api/Mithril.FileSystem.Abstractions.BaseClasses.MediaDirectoryBaseClass-2.html",
    "title": "Class MediaDirectoryBaseClass<TInternalDirectoryType, TDirectoryType> | Mithril API Reference",
    "keywords": "Class MediaDirectoryBaseClass<TInternalDirectoryType, TDirectoryType> Namespace Mithril.FileSystem.Abstractions.BaseClasses Assembly Mithril.FileSystem.Abstractions.dll Media directory base class public abstract class MediaDirectoryBaseClass<TInternalDirectoryType, TDirectoryType> : DirectoryBase<TInternalDirectoryType, TDirectoryType>, IDirectory, IComparable<IDirectory>, IEnumerable<IFile>, IEnumerable, IComparable, IEquatable<IDirectory> where TDirectoryType : MediaDirectoryBaseClass<TInternalDirectoryType, TDirectoryType>, new() Type Parameters TInternalDirectoryType The type of the internal directory type. TDirectoryType The type of the directory type. Inheritance object DirectoryBase<TInternalDirectoryType, TDirectoryType> MediaDirectoryBaseClass<TInternalDirectoryType, TDirectoryType> Implements IDirectory IComparable<IDirectory> IEnumerable<IFile> IEnumerable IComparable IEquatable<IDirectory> Inherited Members DirectoryBase<TInternalDirectoryType, TDirectoryType>.CompareTo(IDirectory) DirectoryBase<TInternalDirectoryType, TDirectoryType>.CompareTo(object) DirectoryBase<TInternalDirectoryType, TDirectoryType>.CopyTo(IDirectory, CopyOptions) DirectoryBase<TInternalDirectoryType, TDirectoryType>.CopyToAsync(IDirectory, CopyOptions) DirectoryBase<TInternalDirectoryType, TDirectoryType>.Create() DirectoryBase<TInternalDirectoryType, TDirectoryType>.CreateAsync() DirectoryBase<TInternalDirectoryType, TDirectoryType>.Delete() DirectoryBase<TInternalDirectoryType, TDirectoryType>.DeleteAsync() DirectoryBase<TInternalDirectoryType, TDirectoryType>.EnumerateDirectories(string, SearchOption) DirectoryBase<TInternalDirectoryType, TDirectoryType>.EnumerateDirectories(Predicate<IDirectory>, SearchOption) DirectoryBase<TInternalDirectoryType, TDirectoryType>.EnumerateFiles(string, SearchOption) DirectoryBase<TInternalDirectoryType, TDirectoryType>.EnumerateFiles(Predicate<IFile>, SearchOption) DirectoryBase<TInternalDirectoryType, TDirectoryType>.Equals(object) DirectoryBase<TInternalDirectoryType, TDirectoryType>.Equals(IDirectory) DirectoryBase<TInternalDirectoryType, TDirectoryType>.GetEnumerator() DirectoryBase<TInternalDirectoryType, TDirectoryType>.GetHashCode() DirectoryBase<TInternalDirectoryType, TDirectoryType>.MoveTo(IDirectory) DirectoryBase<TInternalDirectoryType, TDirectoryType>.MoveToAsync(IDirectory) DirectoryBase<TInternalDirectoryType, TDirectoryType>.Rename(string) DirectoryBase<TInternalDirectoryType, TDirectoryType>.RenameAsync(string) DirectoryBase<TInternalDirectoryType, TDirectoryType>.ToString() DirectoryBase<TInternalDirectoryType, TDirectoryType>.Accessed DirectoryBase<TInternalDirectoryType, TDirectoryType>.Created DirectoryBase<TInternalDirectoryType, TDirectoryType>.Credentials DirectoryBase<TInternalDirectoryType, TDirectoryType>.Exists DirectoryBase<TInternalDirectoryType, TDirectoryType>.FullName DirectoryBase<TInternalDirectoryType, TDirectoryType>.Modified DirectoryBase<TInternalDirectoryType, TDirectoryType>.Name DirectoryBase<TInternalDirectoryType, TDirectoryType>.Parent DirectoryBase<TInternalDirectoryType, TDirectoryType>.Root DirectoryBase<TInternalDirectoryType, TDirectoryType>.Size DirectoryBase<TInternalDirectoryType, TDirectoryType>.InternalDirectory object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods GenericExtensions.When<TObject>(TObject, bool, Func<TObject, TObject>) ExpandoObjectExtensions.ConvertToExpando(object?) Constructors MediaDirectoryBaseClass() Initializes a new instance of the MediaDirectoryBaseClass<TInternalDirectoryType, TDirectoryType> class. protected MediaDirectoryBaseClass() MediaDirectoryBaseClass(TInternalDirectoryType, Credentials?) Initializes a new instance of the MediaDirectoryBaseClass<TInternalDirectoryType, TDirectoryType> class. protected MediaDirectoryBaseClass(TInternalDirectoryType internalDirectory, Credentials? credentials = null) Parameters internalDirectory TInternalDirectoryType Internal directory object credentials Credentials The credentials. See Also DirectoryBase<TInternalDirectoryType, TDirectoryType>"
  },
  "api/Mithril.FileSystem.Abstractions.BaseClasses.MediaFileBaseClass-2.html": {
    "href": "api/Mithril.FileSystem.Abstractions.BaseClasses.MediaFileBaseClass-2.html",
    "title": "Class MediaFileBaseClass<TInternalFileType, TFileType> | Mithril API Reference",
    "keywords": "Class MediaFileBaseClass<TInternalFileType, TFileType> Namespace Mithril.FileSystem.Abstractions.BaseClasses Assembly Mithril.FileSystem.Abstractions.dll Media file base class public abstract class MediaFileBaseClass<TInternalFileType, TFileType> : FileBase<TInternalFileType, TFileType>, IFile, IComparable<IFile>, IComparable, IEquatable<IFile> where TFileType : MediaFileBaseClass<TInternalFileType, TFileType>, new() Type Parameters TInternalFileType The type of the internal file type. TFileType The type of the file type. Inheritance object FileBase<TInternalFileType, TFileType> MediaFileBaseClass<TInternalFileType, TFileType> Implements IFile IComparable<IFile> IComparable IEquatable<IFile> Inherited Members FileBase<TInternalFileType, TFileType>.CompareTo(IFile) FileBase<TInternalFileType, TFileType>.CompareTo(object) FileBase<TInternalFileType, TFileType>.CopyTo(IDirectory, bool) FileBase<TInternalFileType, TFileType>.CopyToAsync(IDirectory, bool) FileBase<TInternalFileType, TFileType>.Delete() FileBase<TInternalFileType, TFileType>.DeleteAsync() FileBase<TInternalFileType, TFileType>.Equals(object) FileBase<TInternalFileType, TFileType>.Equals(IFile) FileBase<TInternalFileType, TFileType>.GetHashCode() FileBase<TInternalFileType, TFileType>.MoveTo(IDirectory) FileBase<TInternalFileType, TFileType>.MoveToAsync(IDirectory) FileBase<TInternalFileType, TFileType>.Parse<TFile>() FileBase<TInternalFileType, TFileType>.Parse() FileBase<TInternalFileType, TFileType>.ParseAsync<TFile>() FileBase<TInternalFileType, TFileType>.ParseAsync() FileBase<TInternalFileType, TFileType>.Read() FileBase<TInternalFileType, TFileType>.ReadAsync() FileBase<TInternalFileType, TFileType>.ReadBinary() FileBase<TInternalFileType, TFileType>.ReadBinaryAsync() FileBase<TInternalFileType, TFileType>.Rename(string) FileBase<TInternalFileType, TFileType>.RenameAsync(string) FileBase<TInternalFileType, TFileType>.ToString() FileBase<TInternalFileType, TFileType>.Write(string, FileMode, Encoding) FileBase<TInternalFileType, TFileType>.Write(byte[], FileMode) FileBase<TInternalFileType, TFileType>.Write(IGenericFile, FileMode) FileBase<TInternalFileType, TFileType>.WriteAsync(string, FileMode, Encoding) FileBase<TInternalFileType, TFileType>.WriteAsync(byte[], FileMode) FileBase<TInternalFileType, TFileType>.WriteAsync(IGenericFile, FileMode) FileBase<TInternalFileType, TFileType>.Accessed FileBase<TInternalFileType, TFileType>.Created FileBase<TInternalFileType, TFileType>.Credentials FileBase<TInternalFileType, TFileType>.Directory FileBase<TInternalFileType, TFileType>.Exists FileBase<TInternalFileType, TFileType>.Extension FileBase<TInternalFileType, TFileType>.FullName FileBase<TInternalFileType, TFileType>.Length FileBase<TInternalFileType, TFileType>.Modified FileBase<TInternalFileType, TFileType>.Name FileBase<TInternalFileType, TFileType>.FormatManager FileBase<TInternalFileType, TFileType>.InternalFile object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods GenericExtensions.When<TObject>(TObject, bool, Func<TObject, TObject>) ExpandoObjectExtensions.ConvertToExpando(object?) Constructors MediaFileBaseClass() Initializes a new instance of the MediaFileBaseClass<TInternalFileType, TFileType> class. protected MediaFileBaseClass() MediaFileBaseClass(TInternalFileType) Initializes a new instance of the MediaFileBaseClass<TInternalFileType, TFileType> class. protected MediaFileBaseClass(TInternalFileType internalFile) Parameters internalFile TInternalFileType Internal file MediaFileBaseClass(TInternalFileType, Credentials?) Initializes a new instance of the MediaFileBaseClass<TInternalFileType, TFileType> class. protected MediaFileBaseClass(TInternalFileType internalFileType, Credentials? credentials = null) Parameters internalFileType TInternalFileType Type of the internal file. credentials Credentials The credentials. See Also FileBase<InternalFileType, FileType>"
  },
  "api/Mithril.FileSystem.Abstractions.BaseClasses.MediaFileSystemBaseClass.html": {
    "href": "api/Mithril.FileSystem.Abstractions.BaseClasses.MediaFileSystemBaseClass.html",
    "title": "Class MediaFileSystemBaseClass | Mithril API Reference",
    "keywords": "Class MediaFileSystemBaseClass Namespace Mithril.FileSystem.Abstractions.BaseClasses Assembly Mithril.FileSystem.Abstractions.dll File system base class public abstract class MediaFileSystemBaseClass : FileSystemBase, IDisposable, IFileSystem Inheritance object FileSystemBase MediaFileSystemBaseClass Implements IDisposable IFileSystem Derived LocalSystem Inherited Members FileSystemBase.CanHandle(string) FileSystemBase.Directory(string, Credentials) FileSystemBase.Dispose() FileSystemBase.File(string, Credentials) FileSystemBase.AbsolutePath(string) FileSystemBase.Dispose(bool) FileSystemBase.Name FileSystemBase.Order FileSystemBase.HandleRegex FileSystemBase.HandleRegexString object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods GenericExtensions.When<TObject>(TObject, bool, Func<TObject, TObject>) ExpandoObjectExtensions.ConvertToExpando(object?) Constructors MediaFileSystemBaseClass() Initializes a new instance of the MediaFileSystemBaseClass class. protected MediaFileSystemBaseClass() See Also FileSystemBase"
  },
  "api/Mithril.FileSystem.Abstractions.BaseClasses.html": {
    "href": "api/Mithril.FileSystem.Abstractions.BaseClasses.html",
    "title": "Namespace Mithril.FileSystem.Abstractions.BaseClasses | Mithril API Reference",
    "keywords": "Namespace Mithril.FileSystem.Abstractions.BaseClasses Classes MediaDirectoryBaseClass<TInternalDirectoryType, TDirectoryType> Media directory base class MediaFileBaseClass<TInternalFileType, TFileType> Media file base class MediaFileSystemBaseClass File system base class"
  },
  "api/Mithril.FileSystem.Abstractions.Interfaces.IPathConverter.html": {
    "href": "api/Mithril.FileSystem.Abstractions.Interfaces.IPathConverter.html",
    "title": "Interface IPathConverter | Mithril API Reference",
    "keywords": "Interface IPathConverter Namespace Mithril.FileSystem.Abstractions.Interfaces Assembly Mithril.FileSystem.Abstractions.dll Path converter public interface IPathConverter Extension Methods GenericExtensions.When<TObject>(TObject, bool, Func<TObject, TObject>) ExpandoObjectExtensions.ConvertToExpando(object?) Properties Order Gets the order. int Order { get; } Property Value int The order. Methods CanConvert(IFile) Determines whether this instance can convert the specified path. bool CanConvert(IFile file) Parameters file IFile The file. Returns bool true if this instance can convert the specified path; otherwise, false. CanConvert(string) Determines whether this instance can convert the specified path. bool CanConvert(string path) Parameters path string The path. Returns bool true if this instance can convert the specified path; otherwise, false. GetUrl(IFile) Gets the URL. Uri? GetUrl(IFile file) Parameters file IFile The file. Returns Uri GetUrl(string) Converts the file in the path to a Uri. Uri? GetUrl(string path) Parameters path string The path. Returns Uri The Uri corresponding to the path."
  },
  "api/Mithril.FileSystem.Abstractions.Interfaces.html": {
    "href": "api/Mithril.FileSystem.Abstractions.Interfaces.html",
    "title": "Namespace Mithril.FileSystem.Abstractions.Interfaces | Mithril API Reference",
    "keywords": "Namespace Mithril.FileSystem.Abstractions.Interfaces Interfaces IPathConverter Path converter"
  },
  "api/Mithril.FileSystem.Abstractions.Services.IFileSystemService.html": {
    "href": "api/Mithril.FileSystem.Abstractions.Services.IFileSystemService.html",
    "title": "Interface IFileSystemService | Mithril API Reference",
    "keywords": "Interface IFileSystemService Namespace Mithril.FileSystem.Abstractions.Services Assembly Mithril.FileSystem.Abstractions.dll File system service public interface IFileSystemService : IDisposable Inherited Members IDisposable.Dispose() Extension Methods GenericExtensions.When<TObject>(TObject, bool, Func<TObject, TObject>) ExpandoObjectExtensions.ConvertToExpando(object?) Methods Directory(string, Credentials?) Gets the directory pointer to the specified path. IDirectory? Directory(string path, Credentials? credentials = null) Parameters path string The path. credentials Credentials The credentials. Returns IDirectory The directory File(string, Credentials?) Gets the file pointer to the specified path. IFile? File(string path, Credentials? credentials = null) Parameters path string The path. credentials Credentials The credentials. Returns IFile The file GetUrl(IFile) Translates the path from the file system to the URL Uri? GetUrl(IFile file) Parameters file IFile The file. Returns Uri The url. GetUrl(string) Translates the path from the file system to the URL Uri? GetUrl(string path) Parameters path string The path. Returns Uri The Url. See Also IDisposable"
  },
  "api/Mithril.FileSystem.Abstractions.Services.html": {
    "href": "api/Mithril.FileSystem.Abstractions.Services.html",
    "title": "Namespace Mithril.FileSystem.Abstractions.Services | Mithril API Reference",
    "keywords": "Namespace Mithril.FileSystem.Abstractions.Services Interfaces IFileSystemService File system service"
  },
  "api/Mithril.FileSystem.Controllers.FileBrowserController.html": {
    "href": "api/Mithril.FileSystem.Controllers.FileBrowserController.html",
    "title": "Class FileBrowserController | Mithril API Reference",
    "keywords": "Class FileBrowserController Namespace Mithril.FileSystem.Controllers Assembly Mithril.FileSystem.dll File browser controller [Area(\"Services\")] [Authorize] [Route(\"/Services/[controller]\")] [ApiExplorerSettings(IgnoreApi = true)] [AddHeader(\"X-Frame-Options\", \"SAMEORIGIN\")] public class FileBrowserController : Controller, IActionFilter, IAsyncActionFilter, IFilterMetadata, IDisposable Inheritance object ControllerBase Controller FileBrowserController Implements IActionFilter IAsyncActionFilter IFilterMetadata IDisposable Inherited Members Controller.View() Controller.View(string) Controller.View(object) Controller.View(string, object) Controller.PartialView() Controller.PartialView(string) Controller.PartialView(object) Controller.PartialView(string, object) Controller.ViewComponent(string) Controller.ViewComponent(Type) Controller.ViewComponent(string, object) Controller.ViewComponent(Type, object) Controller.Json(object) Controller.Json(object, object) Controller.OnActionExecuting(ActionExecutingContext) Controller.OnActionExecuted(ActionExecutedContext) Controller.OnActionExecutionAsync(ActionExecutingContext, ActionExecutionDelegate) Controller.Dispose() Controller.Dispose(bool) Controller.ViewData Controller.TempData Controller.ViewBag ControllerBase.StatusCode(int) ControllerBase.StatusCode(int, object) ControllerBase.Content(string) ControllerBase.Content(string, string) ControllerBase.Content(string, string, Encoding) ControllerBase.Content(string, MediaTypeHeaderValue) ControllerBase.NoContent() ControllerBase.Ok() ControllerBase.Ok(object) ControllerBase.Redirect(string) ControllerBase.RedirectPermanent(string) ControllerBase.RedirectPreserveMethod(string) ControllerBase.RedirectPermanentPreserveMethod(string) ControllerBase.LocalRedirect(string) ControllerBase.LocalRedirectPermanent(string) ControllerBase.LocalRedirectPreserveMethod(string) ControllerBase.LocalRedirectPermanentPreserveMethod(string) ControllerBase.RedirectToAction() ControllerBase.RedirectToAction(string) ControllerBase.RedirectToAction(string, object) ControllerBase.RedirectToAction(string, string) ControllerBase.RedirectToAction(string, string, object) ControllerBase.RedirectToAction(string, string, string) ControllerBase.RedirectToAction(string, string, object, string) ControllerBase.RedirectToActionPreserveMethod(string, string, object, string) ControllerBase.RedirectToActionPermanent(string) ControllerBase.RedirectToActionPermanent(string, object) ControllerBase.RedirectToActionPermanent(string, string) ControllerBase.RedirectToActionPermanent(string, string, string) ControllerBase.RedirectToActionPermanent(string, string, object) ControllerBase.RedirectToActionPermanent(string, string, object, string) ControllerBase.RedirectToActionPermanentPreserveMethod(string, string, object, string) ControllerBase.RedirectToRoute(string) ControllerBase.RedirectToRoute(object) ControllerBase.RedirectToRoute(string, object) ControllerBase.RedirectToRoute(string, string) ControllerBase.RedirectToRoute(string, object, string) ControllerBase.RedirectToRoutePreserveMethod(string, object, string) ControllerBase.RedirectToRoutePermanent(string) ControllerBase.RedirectToRoutePermanent(object) ControllerBase.RedirectToRoutePermanent(string, object) ControllerBase.RedirectToRoutePermanent(string, string) ControllerBase.RedirectToRoutePermanent(string, object, string) ControllerBase.RedirectToRoutePermanentPreserveMethod(string, object, string) ControllerBase.RedirectToPage(string) ControllerBase.RedirectToPage(string, object) ControllerBase.RedirectToPage(string, string) ControllerBase.RedirectToPage(string, string, object) ControllerBase.RedirectToPage(string, string, string) ControllerBase.RedirectToPage(string, string, object, string) ControllerBase.RedirectToPagePermanent(string) ControllerBase.RedirectToPagePermanent(string, object) ControllerBase.RedirectToPagePermanent(string, string) ControllerBase.RedirectToPagePermanent(string, string, string) ControllerBase.RedirectToPagePermanent(string, string, object, string) ControllerBase.RedirectToPagePreserveMethod(string, string, object, string) ControllerBase.RedirectToPagePermanentPreserveMethod(string, string, object, string) ControllerBase.File(byte[], string) ControllerBase.File(byte[], string, bool) ControllerBase.File(byte[], string, string) ControllerBase.File(byte[], string, string, bool) ControllerBase.File(byte[], string, DateTimeOffset?, EntityTagHeaderValue) ControllerBase.File(byte[], string, DateTimeOffset?, EntityTagHeaderValue, bool) ControllerBase.File(byte[], string, string, DateTimeOffset?, EntityTagHeaderValue) ControllerBase.File(byte[], string, string, DateTimeOffset?, EntityTagHeaderValue, bool) ControllerBase.File(Stream, string) ControllerBase.File(Stream, string, bool) ControllerBase.File(Stream, string, string) ControllerBase.File(Stream, string, string, bool) ControllerBase.File(Stream, string, DateTimeOffset?, EntityTagHeaderValue) ControllerBase.File(Stream, string, DateTimeOffset?, EntityTagHeaderValue, bool) ControllerBase.File(Stream, string, string, DateTimeOffset?, EntityTagHeaderValue) ControllerBase.File(Stream, string, string, DateTimeOffset?, EntityTagHeaderValue, bool) ControllerBase.File(string, string) ControllerBase.File(string, string, bool) ControllerBase.File(string, string, string) ControllerBase.File(string, string, string, bool) ControllerBase.File(string, string, DateTimeOffset?, EntityTagHeaderValue) ControllerBase.File(string, string, DateTimeOffset?, EntityTagHeaderValue, bool) ControllerBase.File(string, string, string, DateTimeOffset?, EntityTagHeaderValue) ControllerBase.File(string, string, string, DateTimeOffset?, EntityTagHeaderValue, bool) ControllerBase.PhysicalFile(string, string) ControllerBase.PhysicalFile(string, string, bool) ControllerBase.PhysicalFile(string, string, string) ControllerBase.PhysicalFile(string, string, string, bool) ControllerBase.PhysicalFile(string, string, DateTimeOffset?, EntityTagHeaderValue) ControllerBase.PhysicalFile(string, string, DateTimeOffset?, EntityTagHeaderValue, bool) ControllerBase.PhysicalFile(string, string, string, DateTimeOffset?, EntityTagHeaderValue) ControllerBase.PhysicalFile(string, string, string, DateTimeOffset?, EntityTagHeaderValue, bool) ControllerBase.Unauthorized() ControllerBase.Unauthorized(object) ControllerBase.NotFound() ControllerBase.NotFound(object) ControllerBase.BadRequest() ControllerBase.BadRequest(object) ControllerBase.BadRequest(ModelStateDictionary) ControllerBase.UnprocessableEntity() ControllerBase.UnprocessableEntity(object) ControllerBase.UnprocessableEntity(ModelStateDictionary) ControllerBase.Conflict() ControllerBase.Conflict(object) ControllerBase.Conflict(ModelStateDictionary) ControllerBase.Problem(string, string, int?, string, string) ControllerBase.ValidationProblem(ValidationProblemDetails) ControllerBase.ValidationProblem(ModelStateDictionary) ControllerBase.ValidationProblem() ControllerBase.ValidationProblem(string, string, int?, string, string, ModelStateDictionary) ControllerBase.Created() ControllerBase.Created(string, object) ControllerBase.Created(Uri, object) ControllerBase.CreatedAtAction(string, object) ControllerBase.CreatedAtAction(string, object, object) ControllerBase.CreatedAtAction(string, string, object, object) ControllerBase.CreatedAtRoute(string, object) ControllerBase.CreatedAtRoute(object, object) ControllerBase.CreatedAtRoute(string, object, object) ControllerBase.Accepted() ControllerBase.Accepted(object) ControllerBase.Accepted(Uri) ControllerBase.Accepted(string) ControllerBase.Accepted(string, object) ControllerBase.Accepted(Uri, object) ControllerBase.AcceptedAtAction(string) ControllerBase.AcceptedAtAction(string, string) ControllerBase.AcceptedAtAction(string, object) ControllerBase.AcceptedAtAction(string, string, object) ControllerBase.AcceptedAtAction(string, object, object) ControllerBase.AcceptedAtAction(string, string, object, object) ControllerBase.AcceptedAtRoute(object) ControllerBase.AcceptedAtRoute(string) ControllerBase.AcceptedAtRoute(string, object) ControllerBase.AcceptedAtRoute(object, object) ControllerBase.AcceptedAtRoute(string, object, object) ControllerBase.Challenge() ControllerBase.Challenge(params string[]) ControllerBase.Challenge(AuthenticationProperties) ControllerBase.Challenge(AuthenticationProperties, params string[]) ControllerBase.Forbid() ControllerBase.Forbid(params string[]) ControllerBase.Forbid(AuthenticationProperties) ControllerBase.Forbid(AuthenticationProperties, params string[]) ControllerBase.SignIn(ClaimsPrincipal) ControllerBase.SignIn(ClaimsPrincipal, string) ControllerBase.SignIn(ClaimsPrincipal, AuthenticationProperties) ControllerBase.SignIn(ClaimsPrincipal, AuthenticationProperties, string) ControllerBase.SignOut() ControllerBase.SignOut(AuthenticationProperties) ControllerBase.SignOut(params string[]) ControllerBase.SignOut(AuthenticationProperties, params string[]) ControllerBase.TryUpdateModelAsync<TModel>(TModel) ControllerBase.TryUpdateModelAsync<TModel>(TModel, string) ControllerBase.TryUpdateModelAsync<TModel>(TModel, string, IValueProvider) ControllerBase.TryUpdateModelAsync<TModel>(TModel, string, params Expression<Func<TModel, object>>[]) ControllerBase.TryUpdateModelAsync<TModel>(TModel, string, Func<ModelMetadata, bool>) ControllerBase.TryUpdateModelAsync<TModel>(TModel, string, IValueProvider, params Expression<Func<TModel, object>>[]) ControllerBase.TryUpdateModelAsync<TModel>(TModel, string, IValueProvider, Func<ModelMetadata, bool>) ControllerBase.TryUpdateModelAsync(object, Type, string) ControllerBase.TryUpdateModelAsync(object, Type, string, IValueProvider, Func<ModelMetadata, bool>) ControllerBase.TryValidateModel(object) ControllerBase.TryValidateModel(object, string) ControllerBase.HttpContext ControllerBase.Request ControllerBase.Response ControllerBase.RouteData ControllerBase.ModelState ControllerBase.ControllerContext ControllerBase.MetadataProvider ControllerBase.ModelBinderFactory ControllerBase.Url ControllerBase.ObjectValidator ControllerBase.ProblemDetailsFactory ControllerBase.User ControllerBase.Empty object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods GenericExtensions.When<TObject>(TObject, bool, Func<TObject, TObject>) ExpandoObjectExtensions.ConvertToExpando(object?) Remarks Initializes a new instance of the FileBrowserController class. Constructors FileBrowserController(IFileSystemService?) File browser controller public FileBrowserController(IFileSystemService? fileManager) Parameters fileManager IFileSystemService The file manager. Remarks Initializes a new instance of the FileBrowserController class. See Also Controller Properties FileManager Gets the file manager. public IFileSystemService? FileManager { get; } Property Value IFileSystemService The file manager. Methods Browser(string) Returns the file browser based on the file type. [HttpGet(\"{type}\")] public IActionResult Browser(string type) Parameters type string The type. Returns IActionResult The view. Browser(string, IFormFile) Uploads files to the browser. [HttpPost(\"{type}\")] public IActionResult Browser(string type, IFormFile file) Parameters type string The type. file IFormFile The file. Returns IActionResult The result. See Also Controller"
  },
  "api/Mithril.FileSystem.Controllers.html": {
    "href": "api/Mithril.FileSystem.Controllers.html",
    "title": "Namespace Mithril.FileSystem.Controllers | Mithril API Reference",
    "keywords": "Namespace Mithril.FileSystem.Controllers Classes FileBrowserController File browser controller"
  },
  "api/Mithril.FileSystem.Exceptions.ImageSaveException.html": {
    "href": "api/Mithril.FileSystem.Exceptions.ImageSaveException.html",
    "title": "Class ImageSaveException | Mithril API Reference",
    "keywords": "Class ImageSaveException Namespace Mithril.FileSystem.Exceptions Assembly Mithril.FileSystem.dll Image save exception public class ImageSaveException : Exception, ISerializable Inheritance object Exception ImageSaveException Implements ISerializable Inherited Members Exception.GetBaseException() Exception.GetType() Exception.ToString() Exception.Data Exception.HelpLink Exception.HResult Exception.InnerException Exception.Message Exception.Source Exception.StackTrace Exception.TargetSite Exception.SerializeObjectState object.Equals(object) object.Equals(object, object) object.GetHashCode() object.MemberwiseClone() object.ReferenceEquals(object, object) Extension Methods GenericExtensions.When<TObject>(TObject, bool, Func<TObject, TObject>) ExpandoObjectExtensions.ConvertToExpando(object?) Constructors ImageSaveException() Initializes a new instance of the ImageSaveException class. public ImageSaveException() ImageSaveException(string) Initializes a new instance of the ImageSaveException class. public ImageSaveException(string message) Parameters message string The message that describes the error. ImageSaveException(string, Exception) Initializes a new instance of the ImageSaveException class. public ImageSaveException(string message, Exception innerException) Parameters message string The error message that explains the reason for the exception. innerException Exception The exception that is the cause of the current exception, or a null reference ( Nothing in Visual Basic) if no inner exception is specified."
  },
  "api/Mithril.FileSystem.Exceptions.html": {
    "href": "api/Mithril.FileSystem.Exceptions.html",
    "title": "Namespace Mithril.FileSystem.Exceptions | Mithril API Reference",
    "keywords": "Namespace Mithril.FileSystem.Exceptions Classes ImageSaveException Image save exception"
  },
  "api/Mithril.FileSystem.FileSystemModule.html": {
    "href": "api/Mithril.FileSystem.FileSystemModule.html",
    "title": "Class FileSystemModule | Mithril API Reference",
    "keywords": "Class FileSystemModule Namespace Mithril.FileSystem Assembly Mithril.FileSystem.dll File system module public class FileSystemModule : ModuleBaseClass<FileSystemModule>, IEquatable<FileSystemModule>, IModule Inheritance object ModuleBaseClass<FileSystemModule> FileSystemModule Implements IEquatable<FileSystemModule> IModule Inherited Members ModuleBaseClass<FileSystemModule>.Category ModuleBaseClass<FileSystemModule>.ContentPath ModuleBaseClass<FileSystemModule>.Features ModuleBaseClass<FileSystemModule>.ID ModuleBaseClass<FileSystemModule>.LastModified ModuleBaseClass<FileSystemModule>.Name ModuleBaseClass<FileSystemModule>.Order ModuleBaseClass<FileSystemModule>.Tags ModuleBaseClass<FileSystemModule>.Version ModuleBaseClass<FileSystemModule>.ConfigureApplication(IApplicationBuilder, IConfiguration, IHostEnvironment) ModuleBaseClass<FileSystemModule>.ConfigureHostSettings(IHostBuilder, IConfiguration, IHostEnvironment) ModuleBaseClass<FileSystemModule>.ConfigureLoggingSettings(ILoggingBuilder, IConfiguration, IHostEnvironment) ModuleBaseClass<FileSystemModule>.ConfigureMVC(IMvcBuilder, IConfiguration, IHostEnvironment) ModuleBaseClass<FileSystemModule>.ConfigureRoutes(IEndpointRouteBuilder, IConfiguration, IHostEnvironment) ModuleBaseClass<FileSystemModule>.ConfigureWebHostSettings(IWebHostBuilder, IConfiguration, IHostEnvironment) ModuleBaseClass<FileSystemModule>.Equals(object) ModuleBaseClass<FileSystemModule>.Equals(FileSystemModule) ModuleBaseClass<FileSystemModule>.GetHashCode() ModuleBaseClass<FileSystemModule>.InitializeDataAsync(IDataService, IServiceProvider) ModuleBaseClass<FileSystemModule>.OnStarted() ModuleBaseClass<FileSystemModule>.OnStopped() ModuleBaseClass<FileSystemModule>.OnStopping() object.Equals(object, object) object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods GenericExtensions.When<TObject>(TObject, bool, Func<TObject, TObject>) ExpandoObjectExtensions.ConvertToExpando(object?) Methods ConfigureServices(IServiceCollection?, IConfiguration?, IHostEnvironment?) Configures the services for the module. public override IServiceCollection? ConfigureServices(IServiceCollection? services, IConfiguration? configuration, IHostEnvironment? environment) Parameters services IServiceCollection The services collection. configuration IConfiguration The configuration. environment IHostEnvironment The environment. Returns IServiceCollection Services See Also ModuleBaseClass<TModule>"
  },
  "api/Mithril.FileSystem.HealthChecks.DiskSpaceHealthCheck.html": {
    "href": "api/Mithril.FileSystem.HealthChecks.DiskSpaceHealthCheck.html",
    "title": "Class DiskSpaceHealthCheck | Mithril API Reference",
    "keywords": "Class DiskSpaceHealthCheck Namespace Mithril.FileSystem.HealthChecks Assembly Mithril.FileSystem.dll Disk space health check public class DiskSpaceHealthCheck : IHealthCheck Inheritance object DiskSpaceHealthCheck Implements IHealthCheck Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods GenericExtensions.When<TObject>(TObject, bool, Func<TObject, TObject>) ExpandoObjectExtensions.ConvertToExpando(object?) Methods CheckHealthAsync(HealthCheckContext, CancellationToken) Runs the health check, returning the status of the component being checked. public Task<HealthCheckResult> CheckHealthAsync(HealthCheckContext context, CancellationToken cancellationToken = default) Parameters context HealthCheckContext A context object associated with the current execution. cancellationToken CancellationToken A CancellationToken that can be used to cancel the health check. Returns Task<HealthCheckResult> A Task<TResult> that completes when the health check has finished, yielding the status of the component being checked. See Also IHealthCheck"
  },
  "api/Mithril.FileSystem.HealthChecks.html": {
    "href": "api/Mithril.FileSystem.HealthChecks.html",
    "title": "Namespace Mithril.FileSystem.HealthChecks | Mithril API Reference",
    "keywords": "Namespace Mithril.FileSystem.HealthChecks Classes DiskSpaceHealthCheck Disk space health check"
  },
  "api/Mithril.FileSystem.LocalFileSystem.LocalPathConverter.html": {
    "href": "api/Mithril.FileSystem.LocalFileSystem.LocalPathConverter.html",
    "title": "Class LocalPathConverter | Mithril API Reference",
    "keywords": "Class LocalPathConverter Namespace Mithril.FileSystem.LocalFileSystem Assembly Mithril.FileSystem.dll Local path converter public class LocalPathConverter : IPathConverter Inheritance object LocalPathConverter Implements IPathConverter Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods GenericExtensions.When<TObject>(TObject, bool, Func<TObject, TObject>) ExpandoObjectExtensions.ConvertToExpando(object?) Remarks Initializes a new instance of the LocalPathConverter class. Constructors LocalPathConverter(IWebHostEnvironment?) Local path converter public LocalPathConverter(IWebHostEnvironment? webHostEnvironment = null) Parameters webHostEnvironment IWebHostEnvironment The web host environment. Remarks Initializes a new instance of the LocalPathConverter class. See Also IPathConverter Properties ContentRootPath Gets the content root path. public string ContentRootPath { get; } Property Value string The content root path. Order Gets the order. public int Order { get; } Property Value int The order. Methods CanConvert(IFile) Determines whether this instance can convert the specified path. public bool CanConvert(IFile file) Parameters file IFile The file. Returns bool true if this instance can convert the specified path; otherwise, false. CanConvert(string) Determines whether this instance can convert the specified path. public bool CanConvert(string path) Parameters path string The path. Returns bool true if this instance can convert the specified path; otherwise, false. GetUrl(IFile) Gets the URL. public Uri? GetUrl(IFile file) Parameters file IFile The file. Returns Uri GetUrl(string) Converts the file in the path to a Uri. public Uri? GetUrl(string path) Parameters path string The path. Returns Uri The Uri corresponding to the path. See Also IPathConverter"
  },
  "api/Mithril.FileSystem.LocalFileSystem.LocalSystem.html": {
    "href": "api/Mithril.FileSystem.LocalFileSystem.LocalSystem.html",
    "title": "Class LocalSystem | Mithril API Reference",
    "keywords": "Class LocalSystem Namespace Mithril.FileSystem.LocalFileSystem Assembly Mithril.FileSystem.dll Local file system public class LocalSystem : MediaFileSystemBaseClass, IDisposable, IFileSystem Inheritance object FileSystemBase MediaFileSystemBaseClass LocalSystem Implements IDisposable IFileSystem Inherited Members FileSystemBase.CanHandle(string) FileSystemBase.Dispose() FileSystemBase.HandleRegex object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods GenericExtensions.When<TObject>(TObject, bool, Func<TObject, TObject>) ExpandoObjectExtensions.ConvertToExpando(object?) Remarks Initializes a new instance of the LocalSystem class. Constructors LocalSystem(IWebHostEnvironment?) Local file system public LocalSystem(IWebHostEnvironment? hostingEnvironment = null) Parameters hostingEnvironment IWebHostEnvironment The hosting environment. Remarks Initializes a new instance of the LocalSystem class. See Also MediaFileSystemBaseClass Properties HandleRegexString Regex string used to determine if the file system can handle the path protected override string HandleRegexString { get; } Property Value string Local file system Name Name of the file system public override string Name { get; } Property Value string Local file system Order Gets the order (lower numbers occur first). public override int Order { get; } Property Value int The order. Methods AbsolutePath(string?) Gets the absolute path of the variable passed in protected override string AbsolutePath(string? path) Parameters path string Path to convert to absolute Returns string The absolute path of the path passed in Directory(string?, Credentials?) Gets the directory representation for the directory public override IDirectory? Directory(string? path, Credentials? credentials = null) Parameters path string Path to the directory credentials Credentials The credentials. Returns IDirectory The directory object Dispose(bool) Releases unmanaged and - optionally - managed resources. protected override void Dispose(bool managed) Parameters managed bool true to release both managed and unmanaged resources; false to release only unmanaged resources. File(string?, Credentials?) Gets the class representation for the file public override IFile? File(string? path, Credentials? credentials = null) Parameters path string Path to the file credentials Credentials The credentials. Returns IFile The file object See Also MediaFileSystemBaseClass"
  },
  "api/Mithril.FileSystem.LocalFileSystem.html": {
    "href": "api/Mithril.FileSystem.LocalFileSystem.html",
    "title": "Namespace Mithril.FileSystem.LocalFileSystem | Mithril API Reference",
    "keywords": "Namespace Mithril.FileSystem.LocalFileSystem Classes LocalPathConverter Local path converter LocalSystem Local file system"
  },
  "api/Mithril.FileSystem.Services.FileSystemService.html": {
    "href": "api/Mithril.FileSystem.Services.FileSystemService.html",
    "title": "Class FileSystemService | Mithril API Reference",
    "keywords": "Class FileSystemService Namespace Mithril.FileSystem.Services Assembly Mithril.FileSystem.dll File system service public class FileSystemService : IFileSystemService, IDisposable Inheritance object FileSystemService Implements IFileSystemService IDisposable Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods GenericExtensions.When<TObject>(TObject, bool, Func<TObject, TObject>) ExpandoObjectExtensions.ConvertToExpando(object?) Remarks Initializes a new instance of the FileSystemService class. Constructors FileSystemService(FileSystem?, IEnumerable<IPathConverter>) File system service public FileSystemService(FileSystem? fileSystem, IEnumerable<IPathConverter> pathConverters) Parameters fileSystem FileSystem The file system. pathConverters IEnumerable<IPathConverter> The path converters. Remarks Initializes a new instance of the FileSystemService class. See Also IFileSystemService Methods Directory(string, Credentials?) Directories the specified path. public IDirectory? Directory(string path, Credentials? credentials = null) Parameters path string The path. credentials Credentials The credentials. Returns IDirectory The directory Dispose() Releases unmanaged and - optionally - managed resources. public void Dispose() Dispose(bool) Releases unmanaged and - optionally - managed resources. protected virtual void Dispose(bool managed) Parameters managed bool true to release both managed and unmanaged resources; false to release only unmanaged resources. File(string, Credentials?) Files the specified path. public IFile? File(string path, Credentials? credentials = null) Parameters path string The path. credentials Credentials The credentials. Returns IFile The file GetUrl(IFile) Translates the path from the file system to the URL public Uri? GetUrl(IFile file) Parameters file IFile The file. Returns Uri The url. GetUrl(string) Translates the path from the file system to the URL public Uri? GetUrl(string path) Parameters path string The path. Returns Uri The Url. See Also IFileSystemService"
  },
  "api/Mithril.FileSystem.Services.Image.html": {
    "href": "api/Mithril.FileSystem.Services.Image.html",
    "title": "Class Image | Mithril API Reference",
    "keywords": "Class Image Namespace Mithril.FileSystem.Services Assembly Mithril.FileSystem.dll Image class public class Image : IDisposable Inheritance object Image Implements IDisposable Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods GenericExtensions.When<TObject>(TObject, bool, Func<TObject, TObject>) ExpandoObjectExtensions.ConvertToExpando(object?) Constructors Image(IFile?) Initializes a new instance of the Image class. public Image(IFile? fileInfo) Parameters fileInfo IFile The file information. Properties Height Gets the height. public int Height { get; } Property Value int The height. Width Gets the width. public int Width { get; } Property Value int The width. Methods Dispose() Performs application-defined tasks associated with freeing, releasing, or resetting unmanaged resources. public void Dispose() Dispose(bool) Releases unmanaged and - optionally - managed resources. protected virtual void Dispose(bool disposing) Parameters disposing bool true to release both managed and unmanaged resources; false to release only unmanaged resources. Resize(int) Resizes the image to the specified maximum width. public Image Resize(int maxWidth) Parameters maxWidth int The maximum width. Returns Image This. Save(IFile?, int) Saves the image to the specified location. public Image Save(IFile? location, int quality) Parameters location IFile The location. quality int The quality. Returns Image This. Exceptions ImageSaveException Data could not be encoded"
  },
  "api/Mithril.FileSystem.Services.html": {
    "href": "api/Mithril.FileSystem.Services.html",
    "title": "Namespace Mithril.FileSystem.Services | Mithril API Reference",
    "keywords": "Namespace Mithril.FileSystem.Services Classes FileSystemService File system service Image Image class"
  },
  "api/Mithril.FileSystem.ViewModels.FileBrowserDirectoryVM.html": {
    "href": "api/Mithril.FileSystem.ViewModels.FileBrowserDirectoryVM.html",
    "title": "Class FileBrowserDirectoryVM | Mithril API Reference",
    "keywords": "Class FileBrowserDirectoryVM Namespace Mithril.FileSystem.ViewModels Assembly Mithril.FileSystem.dll File browser directory VM public class FileBrowserDirectoryVM Inheritance object FileBrowserDirectoryVM Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods GenericExtensions.When<TObject>(TObject, bool, Func<TObject, TObject>) ExpandoObjectExtensions.ConvertToExpando(object?) Remarks Initializes a new instance of the FileBrowserDirectoryVM class. Constructors FileBrowserDirectoryVM(IDirectory?, string?, IFile?, IFileSystemService?) File browser directory VM public FileBrowserDirectoryVM(IDirectory? directory, string? type, IFile? selectedFile, IFileSystemService? fileSystemService) Parameters directory IDirectory The directory. type string The type. selectedFile IFile The selected file. fileSystemService IFileSystemService The file system service. Remarks Initializes a new instance of the FileBrowserDirectoryVM class. Properties Files Gets or sets the files. public MediaFileVM[] Files { get; set; } Property Value MediaFileVM[] The files. Name Gets or sets the name. public string? Name { get; set; } Property Value string The name. SelectedFile Gets the selected file. public MediaFileVM? SelectedFile { get; } Property Value MediaFileVM The selected file. SubDirectories Gets or sets the sub directories. public FileBrowserDirectoryVM[] SubDirectories { get; set; } Property Value FileBrowserDirectoryVM[] The sub directories. Type Gets or sets the type. public string? Type { get; set; } Property Value string The type."
  },
  "api/Mithril.FileSystem.ViewModels.MediaFileVM.html": {
    "href": "api/Mithril.FileSystem.ViewModels.MediaFileVM.html",
    "title": "Class MediaFileVM | Mithril API Reference",
    "keywords": "Class MediaFileVM Namespace Mithril.FileSystem.ViewModels Assembly Mithril.FileSystem.dll Media file VM public class MediaFileVM Inheritance object MediaFileVM Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods GenericExtensions.When<TObject>(TObject, bool, Func<TObject, TObject>) ExpandoObjectExtensions.ConvertToExpando(object?) Constructors MediaFileVM() Initializes a new instance of the MediaFileVM class. public MediaFileVM() MediaFileVM(IFile?, string?, IFileSystemService?) Initializes a new instance of the MediaFileVM class. public MediaFileVM(IFile? file, string? type, IFileSystemService? fileSystemService) Parameters file IFile The file. type string The type. fileSystemService IFileSystemService The file system service. Properties DateModified Gets or sets the date modified. public DateTime DateModified { get; set; } Property Value DateTime The date modified. DeleteURL Gets or sets the delete URL. public string? DeleteURL { get; set; } Property Value string The delete URL. Icon Gets or sets the icon. public string? Icon { get; set; } Property Value string The icon. ImageURL Gets or sets the image URL. public string? ImageURL { get; set; } Property Value string The image URL. Name Gets or sets the name. public string? Name { get; set; } Property Value string The name. URL Gets or sets the URL. public string? URL { get; set; } Property Value string The URL."
  },
  "api/Mithril.FileSystem.ViewModels.html": {
    "href": "api/Mithril.FileSystem.ViewModels.html",
    "title": "Namespace Mithril.FileSystem.ViewModels | Mithril API Reference",
    "keywords": "Namespace Mithril.FileSystem.ViewModels Classes FileBrowserDirectoryVM File browser directory VM MediaFileVM Media file VM"
  },
  "api/Mithril.FileSystem.html": {
    "href": "api/Mithril.FileSystem.html",
    "title": "Namespace Mithril.FileSystem | Mithril API Reference",
    "keywords": "Namespace Mithril.FileSystem Classes FileSystemModule File system module"
  },
  "api/Mithril.HealthChecks.Abstractions.BaseClasses.ResponseFormatterBaseClass.html": {
    "href": "api/Mithril.HealthChecks.Abstractions.BaseClasses.ResponseFormatterBaseClass.html",
    "title": "Class ResponseFormatterBaseClass | Mithril API Reference",
    "keywords": "Class ResponseFormatterBaseClass Namespace Mithril.HealthChecks.Abstractions.BaseClasses Assembly Mithril.HealthChecks.Abstractions.dll Response formatter base class public abstract class ResponseFormatterBaseClass : IResponseFormatter Inheritance object ResponseFormatterBaseClass Implements IResponseFormatter Derived DefaultJsonFormatter DefaultTextFormatter Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods GenericExtensions.When<TObject>(TObject, bool, Func<TObject, TObject>) ExpandoObjectExtensions.ConvertToExpando(object?) Constructors ResponseFormatterBaseClass() Initializes a new instance of the ResponseFormatterBaseClass class. protected ResponseFormatterBaseClass() Properties Order Gets the order. public virtual int Order { get; } Property Value int The order. Methods Accepts(string) Acceptses the specified format. public virtual bool Accepts(string format) Parameters format string The format. Returns bool True if it accepts that format, false otherwise. SendResponseAsync(HttpContext, HealthReport) Sends the response asynchronously. public abstract Task SendResponseAsync(HttpContext httpContext, HealthReport healthReport) Parameters httpContext HttpContext The HTTP context. healthReport HealthReport The health report. Returns Task The async task. See Also IResponseFormatter"
  },
  "api/Mithril.HealthChecks.Abstractions.BaseClasses.html": {
    "href": "api/Mithril.HealthChecks.Abstractions.BaseClasses.html",
    "title": "Namespace Mithril.HealthChecks.Abstractions.BaseClasses | Mithril API Reference",
    "keywords": "Namespace Mithril.HealthChecks.Abstractions.BaseClasses Classes ResponseFormatterBaseClass Response formatter base class"
  },
  "api/Mithril.HealthChecks.Abstractions.Configuration.MithrilHealthCheckOptions.html": {
    "href": "api/Mithril.HealthChecks.Abstractions.Configuration.MithrilHealthCheckOptions.html",
    "title": "Class MithrilHealthCheckOptions | Mithril API Reference",
    "keywords": "Class MithrilHealthCheckOptions Namespace Mithril.HealthChecks.Abstractions.Configuration Assembly Mithril.HealthChecks.Abstractions.dll Health checks config options public class MithrilHealthCheckOptions Inheritance object MithrilHealthCheckOptions Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods GenericExtensions.When<TObject>(TObject, bool, Func<TObject, TObject>) ExpandoObjectExtensions.ConvertToExpando(object?) Properties CheckEndPoint Gets the check end point (defaults to '/api/healthchecks'). public string? CheckEndPoint { get; set; } Property Value string The check end point (defaults to '/api/healthchecks'). DefaultTimeout Gets or sets the default timeout (in seconds). public int? DefaultTimeout { get; set; } Property Value int? The default timeout (in seconds)."
  },
  "api/Mithril.HealthChecks.Abstractions.Configuration.html": {
    "href": "api/Mithril.HealthChecks.Abstractions.Configuration.html",
    "title": "Namespace Mithril.HealthChecks.Abstractions.Configuration | Mithril API Reference",
    "keywords": "Namespace Mithril.HealthChecks.Abstractions.Configuration Classes MithrilHealthCheckOptions Health checks config options"
  },
  "api/Mithril.HealthChecks.Abstractions.Interfaces.IResponseFormatter.html": {
    "href": "api/Mithril.HealthChecks.Abstractions.Interfaces.IResponseFormatter.html",
    "title": "Interface IResponseFormatter | Mithril API Reference",
    "keywords": "Interface IResponseFormatter Namespace Mithril.HealthChecks.Abstractions.Interfaces Assembly Mithril.HealthChecks.Abstractions.dll Response formatter public interface IResponseFormatter Extension Methods GenericExtensions.When<TObject>(TObject, bool, Func<TObject, TObject>) ExpandoObjectExtensions.ConvertToExpando(object?) Properties Order Gets the order. int Order { get; } Property Value int The order. Methods Accepts(string) Acceptses the specified format. bool Accepts(string format) Parameters format string The format. Returns bool True if it accepts that format, false otherwise. SendResponseAsync(HttpContext, HealthReport) Sends the response asynchronously. Task SendResponseAsync(HttpContext httpContext, HealthReport healthReport) Parameters httpContext HttpContext The HTTP context. healthReport HealthReport The health report. Returns Task The async task."
  },
  "api/Mithril.HealthChecks.Abstractions.Interfaces.html": {
    "href": "api/Mithril.HealthChecks.Abstractions.Interfaces.html",
    "title": "Namespace Mithril.HealthChecks.Abstractions.Interfaces | Mithril API Reference",
    "keywords": "Namespace Mithril.HealthChecks.Abstractions.Interfaces Interfaces IResponseFormatter Response formatter"
  },
  "api/Mithril.HealthChecks.Abstractions.Services.IResponseFormatterService.html": {
    "href": "api/Mithril.HealthChecks.Abstractions.Services.IResponseFormatterService.html",
    "title": "Interface IResponseFormatterService | Mithril API Reference",
    "keywords": "Interface IResponseFormatterService Namespace Mithril.HealthChecks.Abstractions.Services Assembly Mithril.HealthChecks.Abstractions.dll Response formatter service interface public interface IResponseFormatterService Extension Methods GenericExtensions.When<TObject>(TObject, bool, Func<TObject, TObject>) ExpandoObjectExtensions.ConvertToExpando(object?) Methods FormatResponse(HttpContext, HealthReport) Formats the response. Task FormatResponse(HttpContext httpContext, HealthReport healthReport) Parameters httpContext HttpContext The HTTP context. healthReport HealthReport The health report. Returns Task The async task"
  },
  "api/Mithril.HealthChecks.Abstractions.Services.html": {
    "href": "api/Mithril.HealthChecks.Abstractions.Services.html",
    "title": "Namespace Mithril.HealthChecks.Abstractions.Services | Mithril API Reference",
    "keywords": "Namespace Mithril.HealthChecks.Abstractions.Services Interfaces IResponseFormatterService Response formatter service interface"
  },
  "api/Mithril.HealthChecks.Formatters.DefaultJsonFormatter.html": {
    "href": "api/Mithril.HealthChecks.Formatters.DefaultJsonFormatter.html",
    "title": "Class DefaultJsonFormatter | Mithril API Reference",
    "keywords": "Class DefaultJsonFormatter Namespace Mithril.HealthChecks.Formatters Assembly Mithril.HealthChecks.dll Default json formatter public class DefaultJsonFormatter : ResponseFormatterBaseClass, IResponseFormatter Inheritance object ResponseFormatterBaseClass DefaultJsonFormatter Implements IResponseFormatter Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods GenericExtensions.When<TObject>(TObject, bool, Func<TObject, TObject>) ExpandoObjectExtensions.ConvertToExpando(object?) Properties Order Gets the order. public override int Order { get; } Property Value int The order. Methods Accepts(string) Acceptses the specified format. public override bool Accepts(string format) Parameters format string The format. Returns bool True if it accepts that format, false otherwise. SendResponseAsync(HttpContext, HealthReport) Sends the response asynchronously. public override Task SendResponseAsync(HttpContext httpContext, HealthReport healthReport) Parameters httpContext HttpContext The HTTP context. healthReport HealthReport The health report. Returns Task The async task. See Also ResponseFormatterBaseClass"
  },
  "api/Mithril.HealthChecks.Formatters.DefaultTextFormatter.html": {
    "href": "api/Mithril.HealthChecks.Formatters.DefaultTextFormatter.html",
    "title": "Class DefaultTextFormatter | Mithril API Reference",
    "keywords": "Class DefaultTextFormatter Namespace Mithril.HealthChecks.Formatters Assembly Mithril.HealthChecks.dll Default text formatter public class DefaultTextFormatter : ResponseFormatterBaseClass, IResponseFormatter Inheritance object ResponseFormatterBaseClass DefaultTextFormatter Implements IResponseFormatter Inherited Members ResponseFormatterBaseClass.Accepts(string) object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods GenericExtensions.When<TObject>(TObject, bool, Func<TObject, TObject>) ExpandoObjectExtensions.ConvertToExpando(object?) Properties Order Gets the order. public override int Order { get; } Property Value int The order. Methods SendResponseAsync(HttpContext, HealthReport) Sends the response asynchronously. public override Task SendResponseAsync(HttpContext httpContext, HealthReport healthReport) Parameters httpContext HttpContext The HTTP context. healthReport HealthReport The health report. Returns Task The async task. See Also ResponseFormatterBaseClass"
  },
  "api/Mithril.HealthChecks.Formatters.html": {
    "href": "api/Mithril.HealthChecks.Formatters.html",
    "title": "Namespace Mithril.HealthChecks.Formatters | Mithril API Reference",
    "keywords": "Namespace Mithril.HealthChecks.Formatters Classes DefaultJsonFormatter Default json formatter DefaultTextFormatter Default text formatter"
  },
  "api/Mithril.HealthChecks.HealthCheckModule.html": {
    "href": "api/Mithril.HealthChecks.HealthCheckModule.html",
    "title": "Class HealthCheckModule | Mithril API Reference",
    "keywords": "Class HealthCheckModule Namespace Mithril.HealthChecks Assembly Mithril.HealthChecks.dll Health check module public class HealthCheckModule : ModuleBaseClass<HealthCheckModule>, IEquatable<HealthCheckModule>, IModule Inheritance object ModuleBaseClass<HealthCheckModule> HealthCheckModule Implements IEquatable<HealthCheckModule> IModule Inherited Members ModuleBaseClass<HealthCheckModule>.Category ModuleBaseClass<HealthCheckModule>.ContentPath ModuleBaseClass<HealthCheckModule>.Features ModuleBaseClass<HealthCheckModule>.ID ModuleBaseClass<HealthCheckModule>.LastModified ModuleBaseClass<HealthCheckModule>.Name ModuleBaseClass<HealthCheckModule>.Tags ModuleBaseClass<HealthCheckModule>.Version ModuleBaseClass<HealthCheckModule>.ConfigureApplication(IApplicationBuilder, IConfiguration, IHostEnvironment) ModuleBaseClass<HealthCheckModule>.ConfigureHostSettings(IHostBuilder, IConfiguration, IHostEnvironment) ModuleBaseClass<HealthCheckModule>.ConfigureLoggingSettings(ILoggingBuilder, IConfiguration, IHostEnvironment) ModuleBaseClass<HealthCheckModule>.ConfigureMVC(IMvcBuilder, IConfiguration, IHostEnvironment) ModuleBaseClass<HealthCheckModule>.ConfigureWebHostSettings(IWebHostBuilder, IConfiguration, IHostEnvironment) ModuleBaseClass<HealthCheckModule>.Equals(object) ModuleBaseClass<HealthCheckModule>.Equals(HealthCheckModule) ModuleBaseClass<HealthCheckModule>.GetHashCode() ModuleBaseClass<HealthCheckModule>.InitializeDataAsync(IDataService, IServiceProvider) ModuleBaseClass<HealthCheckModule>.OnStarted() ModuleBaseClass<HealthCheckModule>.OnStopped() ModuleBaseClass<HealthCheckModule>.OnStopping() object.Equals(object, object) object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods GenericExtensions.When<TObject>(TObject, bool, Func<TObject, TObject>) ExpandoObjectExtensions.ConvertToExpando(object?) Properties Order Gets the order that they are initialized in. public override int Order { get; } Property Value int The order that they are initialized in. Methods ConfigureRoutes(IEndpointRouteBuilder?, IConfiguration?, IHostEnvironment?) Configures the routes. public override IEndpointRouteBuilder? ConfigureRoutes(IEndpointRouteBuilder? endpoints, IConfiguration? configuration, IHostEnvironment? environment) Parameters endpoints IEndpointRouteBuilder The endpoints. configuration IConfiguration The configuration. environment IHostEnvironment The environment. Returns IEndpointRouteBuilder Endpoint route builder ConfigureServices(IServiceCollection?, IConfiguration?, IHostEnvironment?) Configures the services for the module. public override IServiceCollection? ConfigureServices(IServiceCollection? services, IConfiguration? configuration, IHostEnvironment? environment) Parameters services IServiceCollection The services collection. configuration IConfiguration The configuration. environment IHostEnvironment The environment. Returns IServiceCollection Services See Also ModuleBaseClass<TModule>"
  },
  "api/Mithril.HealthChecks.HealthChecks.SystemStatusHealthCheck.html": {
    "href": "api/Mithril.HealthChecks.HealthChecks.SystemStatusHealthCheck.html",
    "title": "Class SystemStatusHealthCheck | Mithril API Reference",
    "keywords": "Class SystemStatusHealthCheck Namespace Mithril.HealthChecks.HealthChecks Assembly Mithril.HealthChecks.dll System status health check public class SystemStatusHealthCheck : IHealthCheck, IDisposable Inheritance object SystemStatusHealthCheck Implements IHealthCheck IDisposable Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods GenericExtensions.When<TObject>(TObject, bool, Func<TObject, TObject>) ExpandoObjectExtensions.ConvertToExpando(object?) Constructors SystemStatusHealthCheck(IHostApplicationLifetime?) Initializes a new instance of the SystemStatusHealthCheck class. public SystemStatusHealthCheck(IHostApplicationLifetime? hostApplicationLifetime) Parameters hostApplicationLifetime IHostApplicationLifetime The host application lifetime. Methods CheckHealthAsync(HealthCheckContext, CancellationToken) Runs the health check, returning the status of the component being checked. public Task<HealthCheckResult> CheckHealthAsync(HealthCheckContext context, CancellationToken cancellationToken = default) Parameters context HealthCheckContext A context object associated with the current execution. cancellationToken CancellationToken A CancellationToken that can be used to cancel the health check. Returns Task<HealthCheckResult> A Task<TResult> that completes when the health check has finished, yielding the status of the component being checked. Dispose() Performs application-defined tasks associated with freeing, releasing, or resetting unmanaged resources. public void Dispose() See Also IHealthCheck IDisposable"
  },
  "api/Mithril.HealthChecks.HealthChecks.html": {
    "href": "api/Mithril.HealthChecks.HealthChecks.html",
    "title": "Namespace Mithril.HealthChecks.HealthChecks | Mithril API Reference",
    "keywords": "Namespace Mithril.HealthChecks.HealthChecks Classes SystemStatusHealthCheck System status health check"
  },
  "api/Mithril.HealthChecks.Services.ResponseFormatterService.html": {
    "href": "api/Mithril.HealthChecks.Services.ResponseFormatterService.html",
    "title": "Class ResponseFormatterService | Mithril API Reference",
    "keywords": "Class ResponseFormatterService Namespace Mithril.HealthChecks.Services Assembly Mithril.HealthChecks.dll Response formatter service public class ResponseFormatterService : IResponseFormatterService Inheritance object ResponseFormatterService Implements IResponseFormatterService Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods GenericExtensions.When<TObject>(TObject, bool, Func<TObject, TObject>) ExpandoObjectExtensions.ConvertToExpando(object?) Remarks Initializes a new instance of the ResponseFormatterService class. Constructors ResponseFormatterService(IEnumerable<IResponseFormatter>) Response formatter service public ResponseFormatterService(IEnumerable<IResponseFormatter> formatters) Parameters formatters IEnumerable<IResponseFormatter> The formatters. Remarks Initializes a new instance of the ResponseFormatterService class. Properties Formatters Gets the formatters. public IEnumerable<IResponseFormatter> Formatters { get; } Property Value IEnumerable<IResponseFormatter> The formatters. Methods FormatResponse(HttpContext, HealthReport) Formats the response. public Task FormatResponse(HttpContext httpContext, HealthReport healthReport) Parameters httpContext HttpContext The HTTP context. healthReport HealthReport The health report. Returns Task"
  },
  "api/Mithril.HealthChecks.Services.html": {
    "href": "api/Mithril.HealthChecks.Services.html",
    "title": "Namespace Mithril.HealthChecks.Services | Mithril API Reference",
    "keywords": "Namespace Mithril.HealthChecks.Services Classes ResponseFormatterService Response formatter service"
  },
  "api/Mithril.HealthChecks.html": {
    "href": "api/Mithril.HealthChecks.html",
    "title": "Namespace Mithril.HealthChecks | Mithril API Reference",
    "keywords": "Namespace Mithril.HealthChecks Classes HealthCheckModule Health check module"
  },
  "api/Mithril.Logging.Commands.CSPLogCommandHandler.html": {
    "href": "api/Mithril.Logging.Commands.CSPLogCommandHandler.html",
    "title": "Class CSPLogCommandHandler | Mithril API Reference",
    "keywords": "Class CSPLogCommandHandler Namespace Mithril.Logging.Commands Assembly Mithril.Logging.dll CSP log command handler public class CSPLogCommandHandler : CommandHandlerBaseClass<LogCommand, CSPLogCommandVM>, ICommandHandler<CSPLogCommandVM>, ICommandHandler Inheritance object CommandHandlerBaseClass<LogCommand, CSPLogCommandVM> CSPLogCommandHandler Implements ICommandHandler<CSPLogCommandVM> ICommandHandler Inherited Members CommandHandlerBaseClass<LogCommand, CSPLogCommandVM>.CommandName CommandHandlerBaseClass<LogCommand, CSPLogCommandVM>.ContentTypeAccepts CommandHandlerBaseClass<LogCommand, CSPLogCommandVM>.Features CommandHandlerBaseClass<LogCommand, CSPLogCommandVM>.Tags CommandHandlerBaseClass<LogCommand, CSPLogCommandVM>.Version CommandHandlerBaseClass<LogCommand, CSPLogCommandVM>.ViewModelType CommandHandlerBaseClass<LogCommand, CSPLogCommandVM>.FeatureManager CommandHandlerBaseClass<LogCommand, CSPLogCommandVM>.Logger CommandHandlerBaseClass<LogCommand, CSPLogCommandVM>.CanHandle(ICommand) CommandHandlerBaseClass<LogCommand, CSPLogCommandVM>.CreateAsync(CSPLogCommandVM, ClaimsPrincipal) CommandHandlerBaseClass<LogCommand, CSPLogCommandVM>.HandleCommandAsync(params ICommand[]) CommandHandlerBaseClass<LogCommand, CSPLogCommandVM>.HandleCommandAsync(LogCommand[]) CommandHandlerBaseClass<LogCommand, CSPLogCommandVM>.IsFeatureEnabled() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods GenericExtensions.When<TObject>(TObject, bool, Func<TObject, TObject>) ExpandoObjectExtensions.ConvertToExpando(object?) Remarks Initializes a new instance of the CSPLogCommandHandler class. Constructors CSPLogCommandHandler(ILogger<CSPLogCommandHandler>?, IFeatureManager?) CSP log command handler public CSPLogCommandHandler(ILogger<CSPLogCommandHandler>? logger, IFeatureManager? featureManager) Parameters logger ILogger<CSPLogCommandHandler> The logger. featureManager IFeatureManager The feature manager. Remarks Initializes a new instance of the CSPLogCommandHandler class. See Also CommandHandlerBaseClass<TCommand, TViewModel> Properties CommandName Gets the command type accepted. public override string CommandName { get; } Property Value string The command type accepted. ContentTypeAccepts Gets the content type accepted by command handler. public override string[] ContentTypeAccepts { get; } Property Value string[] The content type accepted by command handler. Features Gets the features associated with this command. public override IFeature[] Features { get; } Property Value IFeature[] The features associated with this command. Tags Gets the tags (Used by OpenAPI, etc). public override string[] Tags { get; } Property Value string[] The tags (Used by OpenAPI, etc). Methods CanHandle(ICommand) Determines whether this instance can handle the specified command. public override bool CanHandle(ICommand command) Parameters command ICommand The command. Returns bool true if this instance can handle the specified command; otherwise, false. CreateAsync(CSPLogCommandVM?, ClaimsPrincipal) Creates the specified value. public override ValueTask<CommandCreationResult?> CreateAsync(CSPLogCommandVM? value, ClaimsPrincipal user) Parameters value CSPLogCommandVM The value. user ClaimsPrincipal The user. Returns ValueTask<CommandCreationResult> A command value converted from the ExpandoObject. HandleCommandAsync(LogCommand?[]?) Handles the command. protected override Task<IEvent[]> HandleCommandAsync(LogCommand?[]? args) Parameters args LogCommand[] The arguments. Returns Task<IEvent[]> The events generated by the command. See Also CommandHandlerBaseClass<TCommand, TViewModel>"
  },
  "api/Mithril.Logging.Commands.LogCommandHandler.html": {
    "href": "api/Mithril.Logging.Commands.LogCommandHandler.html",
    "title": "Class LogCommandHandler | Mithril API Reference",
    "keywords": "Class LogCommandHandler Namespace Mithril.Logging.Commands Assembly Mithril.Logging.dll Log command handler public class LogCommandHandler : CommandHandlerBaseClass<LogCommand, LogCommandVM>, ICommandHandler<LogCommandVM>, ICommandHandler Inheritance object CommandHandlerBaseClass<LogCommand, LogCommandVM> LogCommandHandler Implements ICommandHandler<LogCommandVM> ICommandHandler Inherited Members CommandHandlerBaseClass<LogCommand, LogCommandVM>.CommandName CommandHandlerBaseClass<LogCommand, LogCommandVM>.ContentTypeAccepts CommandHandlerBaseClass<LogCommand, LogCommandVM>.Features CommandHandlerBaseClass<LogCommand, LogCommandVM>.Tags CommandHandlerBaseClass<LogCommand, LogCommandVM>.Version CommandHandlerBaseClass<LogCommand, LogCommandVM>.ViewModelType CommandHandlerBaseClass<LogCommand, LogCommandVM>.FeatureManager CommandHandlerBaseClass<LogCommand, LogCommandVM>.Logger CommandHandlerBaseClass<LogCommand, LogCommandVM>.CanHandle(ICommand) CommandHandlerBaseClass<LogCommand, LogCommandVM>.CreateAsync(LogCommandVM, ClaimsPrincipal) CommandHandlerBaseClass<LogCommand, LogCommandVM>.HandleCommandAsync(params ICommand[]) CommandHandlerBaseClass<LogCommand, LogCommandVM>.HandleCommandAsync(LogCommand[]) CommandHandlerBaseClass<LogCommand, LogCommandVM>.IsFeatureEnabled() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods GenericExtensions.When<TObject>(TObject, bool, Func<TObject, TObject>) ExpandoObjectExtensions.ConvertToExpando(object?) Remarks Initializes a new instance of the LogCommandHandler class. Constructors LogCommandHandler(ILogger<LogCommandHandler>?, IFeatureManager?) Log command handler public LogCommandHandler(ILogger<LogCommandHandler>? logger, IFeatureManager? featureManager) Parameters logger ILogger<LogCommandHandler> The logger. featureManager IFeatureManager The feature manager. Remarks Initializes a new instance of the LogCommandHandler class. See Also CommandHandlerBaseClass<TCommand, TViewModel> Properties CommandName Gets the command type accepted. public override string CommandName { get; } Property Value string The command type accepted. Features Gets the features associated with this command. public override IFeature[] Features { get; } Property Value IFeature[] The features associated with this command. Tags Gets the tags (Used by OpenAPI, etc). public override string[] Tags { get; } Property Value string[] The tags (Used by OpenAPI, etc). Methods CreateAsync(LogCommandVM?, ClaimsPrincipal) Creates the specified value. public override ValueTask<CommandCreationResult?> CreateAsync(LogCommandVM? value, ClaimsPrincipal user) Parameters value LogCommandVM The value. user ClaimsPrincipal The user. Returns ValueTask<CommandCreationResult> A command value converted from the ExpandoObject. HandleCommandAsync(LogCommand?[]?) Handles the command. protected override Task<IEvent[]> HandleCommandAsync(LogCommand?[]? args) Parameters args LogCommand[] The arguments. Returns Task<IEvent[]> The events generated by the command. See Also CommandHandlerBaseClass<TCommand, TViewModel>"
  },
  "api/Mithril.Logging.Commands.ViewModels.CSPLogCommandVM.html": {
    "href": "api/Mithril.Logging.Commands.ViewModels.CSPLogCommandVM.html",
    "title": "Class CSPLogCommandVM | Mithril API Reference",
    "keywords": "Class CSPLogCommandVM Namespace Mithril.Logging.Commands.ViewModels Assembly Mithril.Logging.dll CSP Log Command, used for reporting CSP violations. public class CSPLogCommandVM Inheritance object CSPLogCommandVM Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods GenericExtensions.When<TObject>(TObject, bool, Func<TObject, TObject>) ExpandoObjectExtensions.ConvertToExpando(object?) Properties CspReport The CSP report. [JsonPropertyName(\"csp-report\")] public CspReport? CspReport { get; set; } Property Value CspReport The CSP report. Methods BindAsync(HttpContext, ParameterInfo) Binds the VM asynchronously. public static ValueTask<CSPLogCommandVM?> BindAsync(HttpContext context, ParameterInfo parameter) Parameters context HttpContext The context. parameter ParameterInfo The parameter. Returns ValueTask<CSPLogCommandVM> The view model. Exceptions BadHttpRequestException Request content type was not 'application/csp-report'"
  },
  "api/Mithril.Logging.Commands.ViewModels.CspReport.html": {
    "href": "api/Mithril.Logging.Commands.ViewModels.CspReport.html",
    "title": "Class CspReport | Mithril API Reference",
    "keywords": "Class CspReport Namespace Mithril.Logging.Commands.ViewModels Assembly Mithril.Logging.dll CSP Report public class CspReport Inheritance object CspReport Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods GenericExtensions.When<TObject>(TObject, bool, Func<TObject, TObject>) ExpandoObjectExtensions.ConvertToExpando(object?) Properties BlockedUri The blocked URI. [JsonPropertyName(\"blocked-uri\")] public string? BlockedUri { get; set; } Property Value string The blocked URI. DocumentUri The document URI. [JsonPropertyName(\"document-uri\")] public string? DocumentUri { get; set; } Property Value string The document URI. EffectiveDirective The effective directive. [JsonPropertyName(\"effective-directive\")] public string? EffectiveDirective { get; set; } Property Value string The effective directive. OriginalPolicy The original policy. [JsonPropertyName(\"original-policy\")] public string? OriginalPolicy { get; set; } Property Value string The original policy. Referrer The referrer. [JsonPropertyName(\"referrer\")] public string? Referrer { get; set; } Property Value string The referrer. StatusCode The status code. [JsonPropertyName(\"status-code\")] public int StatusCode { get; set; } Property Value int The status code. ViolatedDirective The violated directive. [JsonPropertyName(\"violated-directive\")] public string? ViolatedDirective { get; set; } Property Value string The violated directive."
  },
  "api/Mithril.Logging.Commands.ViewModels.LogCommandVM.html": {
    "href": "api/Mithril.Logging.Commands.ViewModels.LogCommandVM.html",
    "title": "Class LogCommandVM | Mithril API Reference",
    "keywords": "Class LogCommandVM Namespace Mithril.Logging.Commands.ViewModels Assembly Mithril.Logging.dll Log Command, used for reporting javascript related logging messages. public class LogCommandVM Inheritance object LogCommandVM Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods GenericExtensions.When<TObject>(TObject, bool, Func<TObject, TObject>) ExpandoObjectExtensions.ConvertToExpando(object?) Properties LogLevel The log level to use for the message. public LogLevel LogLevel { get; set; } Property Value LogLevel The log level. Message The message. public string? Message { get; set; } Property Value string The message."
  },
  "api/Mithril.Logging.Commands.ViewModels.html": {
    "href": "api/Mithril.Logging.Commands.ViewModels.html",
    "title": "Namespace Mithril.Logging.Commands.ViewModels | Mithril API Reference",
    "keywords": "Namespace Mithril.Logging.Commands.ViewModels Classes CSPLogCommandVM CSP Log Command, used for reporting CSP violations. CspReport CSP Report LogCommandVM Log Command, used for reporting javascript related logging messages."
  },
  "api/Mithril.Logging.Commands.html": {
    "href": "api/Mithril.Logging.Commands.html",
    "title": "Namespace Mithril.Logging.Commands | Mithril API Reference",
    "keywords": "Namespace Mithril.Logging.Commands Classes CSPLogCommandHandler CSP log command handler LogCommandHandler Log command handler"
  },
  "api/Mithril.Logging.Exceptions.JavascriptException.html": {
    "href": "api/Mithril.Logging.Exceptions.JavascriptException.html",
    "title": "Class JavascriptException | Mithril API Reference",
    "keywords": "Class JavascriptException Namespace Mithril.Logging.Exceptions Assembly Mithril.Logging.dll Javascript exception public class JavascriptException : Exception, ISerializable Inheritance object Exception JavascriptException Implements ISerializable Inherited Members Exception.GetBaseException() Exception.GetType() Exception.ToString() Exception.Data Exception.HelpLink Exception.HResult Exception.InnerException Exception.Message Exception.Source Exception.StackTrace Exception.TargetSite Exception.SerializeObjectState object.Equals(object) object.Equals(object, object) object.GetHashCode() object.MemberwiseClone() object.ReferenceEquals(object, object) Extension Methods GenericExtensions.When<TObject>(TObject, bool, Func<TObject, TObject>) ExpandoObjectExtensions.ConvertToExpando(object?) Constructors JavascriptException() Initializes a new instance of the JavascriptException class. public JavascriptException() JavascriptException(string) Initializes a new instance of the JavascriptException class. public JavascriptException(string message) Parameters message string The message that describes the error. JavascriptException(string, Exception) Initializes a new instance of the JavascriptException class. public JavascriptException(string message, Exception innerException) Parameters message string The error message that explains the reason for the exception. innerException Exception The exception that is the cause of the current exception, or a null reference ( Nothing in Visual Basic) if no inner exception is specified. See Also Exception"
  },
  "api/Mithril.Logging.Exceptions.html": {
    "href": "api/Mithril.Logging.Exceptions.html",
    "title": "Namespace Mithril.Logging.Exceptions | Mithril API Reference",
    "keywords": "Namespace Mithril.Logging.Exceptions Classes JavascriptException Javascript exception"
  },
  "api/Mithril.Logging.Features.LoggingFeature.html": {
    "href": "api/Mithril.Logging.Features.LoggingFeature.html",
    "title": "Class LoggingFeature | Mithril API Reference",
    "keywords": "Class LoggingFeature Namespace Mithril.Logging.Features Assembly Mithril.Logging.dll Logging feature public class LoggingFeature : FeatureBaseClass<LoggingFeature>, IFeature, IEquatable<LoggingFeature> Inheritance object FeatureBaseClass<LoggingFeature> LoggingFeature Implements IFeature IEquatable<LoggingFeature> Inherited Members FeatureBaseClass<LoggingFeature>.Instance FeatureBaseClass<LoggingFeature>.Equals(object) FeatureBaseClass<LoggingFeature>.Equals(LoggingFeature) FeatureBaseClass<LoggingFeature>.GetHashCode() object.Equals(object, object) object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods GenericExtensions.When<TObject>(TObject, bool, Func<TObject, TObject>) ExpandoObjectExtensions.ConvertToExpando(object?) Properties Category The group (by category) that the feature belongs. If not provided, defaults to 'Uncategorized'. public override string Category { get; } Property Value string The category. Description Gets or sets the description. public override string Description { get; } Property Value string The description. Name Human-readable name of the feature. If not provided, the identifier will be used. public override string Name { get; } Property Value string The name. See Also FeatureBaseClass<TFeature>"
  },
  "api/Mithril.Logging.Features.html": {
    "href": "api/Mithril.Logging.Features.html",
    "title": "Namespace Mithril.Logging.Features | Mithril API Reference",
    "keywords": "Namespace Mithril.Logging.Features Classes LoggingFeature Logging feature"
  },
  "api/Mithril.Logging.LoggingModule.html": {
    "href": "api/Mithril.Logging.LoggingModule.html",
    "title": "Class LoggingModule | Mithril API Reference",
    "keywords": "Class LoggingModule Namespace Mithril.Logging Assembly Mithril.Logging.dll Module that adds a command handler that accepts specific logging added to Mithril public class LoggingModule : ModuleBaseClass<LoggingModule>, IEquatable<LoggingModule>, IModule Inheritance object ModuleBaseClass<LoggingModule> LoggingModule Implements IEquatable<LoggingModule> IModule Inherited Members ModuleBaseClass<LoggingModule>.Category ModuleBaseClass<LoggingModule>.ContentPath ModuleBaseClass<LoggingModule>.ID ModuleBaseClass<LoggingModule>.LastModified ModuleBaseClass<LoggingModule>.Name ModuleBaseClass<LoggingModule>.Tags ModuleBaseClass<LoggingModule>.Version ModuleBaseClass<LoggingModule>.ConfigureApplication(IApplicationBuilder, IConfiguration, IHostEnvironment) ModuleBaseClass<LoggingModule>.ConfigureHostSettings(IHostBuilder, IConfiguration, IHostEnvironment) ModuleBaseClass<LoggingModule>.ConfigureLoggingSettings(ILoggingBuilder, IConfiguration, IHostEnvironment) ModuleBaseClass<LoggingModule>.ConfigureMVC(IMvcBuilder, IConfiguration, IHostEnvironment) ModuleBaseClass<LoggingModule>.ConfigureRoutes(IEndpointRouteBuilder, IConfiguration, IHostEnvironment) ModuleBaseClass<LoggingModule>.ConfigureWebHostSettings(IWebHostBuilder, IConfiguration, IHostEnvironment) ModuleBaseClass<LoggingModule>.Equals(object) ModuleBaseClass<LoggingModule>.Equals(LoggingModule) ModuleBaseClass<LoggingModule>.GetHashCode() ModuleBaseClass<LoggingModule>.InitializeDataAsync(IDataService, IServiceProvider) ModuleBaseClass<LoggingModule>.OnStarted() ModuleBaseClass<LoggingModule>.OnStopped() ModuleBaseClass<LoggingModule>.OnStopping() object.Equals(object, object) object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods GenericExtensions.When<TObject>(TObject, bool, Func<TObject, TObject>) ExpandoObjectExtensions.ConvertToExpando(object?) Properties Features Gets the features. public override IFeature[] Features { get; } Property Value IFeature[] The features. Order Gets the order that they are initialized in. public override int Order { get; } Property Value int The order that they are initialized in. Methods ConfigureServices(IServiceCollection?, IConfiguration?, IHostEnvironment?) Configures the services for the module. public override IServiceCollection? ConfigureServices(IServiceCollection? services, IConfiguration? configuration, IHostEnvironment? environment) Parameters services IServiceCollection The services collection. configuration IConfiguration The configuration. environment IHostEnvironment The environment. Returns IServiceCollection Services See Also ModuleBaseClass<TModule>"
  },
  "api/Mithril.Logging.Models.LogCommand.html": {
    "href": "api/Mithril.Logging.Models.LogCommand.html",
    "title": "Class LogCommand | Mithril API Reference",
    "keywords": "Class LogCommand Namespace Mithril.Logging.Models Assembly Mithril.Logging.dll Log command public class LogCommand : CommandBaseClass<LogCommand>, IModel<LogCommand>, IEquatable<IModel<LogCommand>>, IComparable, IComparable<LogCommand>, IEquatable<ModelBase<LogCommand>>, ICommand, IEquatable<ICommand>, IModel, IEquatable<IModel>, IEquatable<CommandBaseClass<LogCommand>> Inheritance object ModelBase<LogCommand> CommandBaseClass<LogCommand> LogCommand Implements IModel<LogCommand> IEquatable<IModel<LogCommand>> IComparable IComparable<LogCommand> IEquatable<ModelBase<LogCommand>> ICommand IEquatable<ICommand> IModel IEquatable<IModel> IEquatable<CommandBaseClass<LogCommand>> Inherited Members CommandBaseClass<LogCommand>.Name CommandBaseClass<LogCommand>.CompareTo(CommandBaseClass<LogCommand>) CommandBaseClass<LogCommand>.Equals(CommandBaseClass<LogCommand>) CommandBaseClass<LogCommand>.Equals(ICommand) CommandBaseClass<LogCommand>.ToString() ModelBase<LogCommand>.Active ModelBase<LogCommand>.Creator ModelBase<LogCommand>.DateCreated ModelBase<LogCommand>.DateModified ModelBase<LogCommand>.ID ModelBase<LogCommand>.Modifier ModelBase<LogCommand>.TenantID ModelBase<LogCommand>.All(IDataService) ModelBase<LogCommand>.AllActive(IDataService) ModelBase<LogCommand>.AllInactive(IDataService) ModelBase<LogCommand>.Load(long, IDataService) ModelBase<LogCommand>.Query(IDataService) ModelBase<LogCommand>.CanBeModifiedBy(ClaimsPrincipal) ModelBase<LogCommand>.CanBeViewedBy(ClaimsPrincipal) ModelBase<LogCommand>.CompareTo(object) ModelBase<LogCommand>.DeleteAsync(IDataService, ClaimsPrincipal, bool) ModelBase<LogCommand>.Equals(IModel) ModelBase<LogCommand>.Equals(IModel<LogCommand>) ModelBase<LogCommand>.Equals(ModelBase<LogCommand>) ModelBase<LogCommand>.SaveAsync(IDataService, ClaimsPrincipal) ModelBase<LogCommand>.SetupObject(IDataService, ClaimsPrincipal) ModelBase<LogCommand>.SetupObject(IDataService, IUser) ModelBase<LogCommand>.SetupObjectAndReturn(IDataService, ClaimsPrincipal) object.Equals(object, object) object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Extension Methods GenericExtensions.When<TObject>(TObject, bool, Func<TObject, TObject>) ExpandoObjectExtensions.ConvertToExpando(object?) Constructors LogCommand() Initializes a new instance of the LogCommand class. public LogCommand() LogCommand(LogLevel, string) Initializes a new instance of the LogCommand class. public LogCommand(LogLevel logLevel, string message) Parameters logLevel LogLevel The log level. message string The message. Properties LogLevel Gets or sets the log level. public LogLevel LogLevel { get; set; } Property Value LogLevel The log level. Message Gets or sets the message. [MaxLength] public string? Message { get; set; } Property Value string The message. Methods CompareTo(LogCommand?) Compares the object to another object public override int CompareTo(LogCommand? other) Parameters other LogCommand Object to compare to Returns int 0 if they are equal, -1 if this is smaller, 1 if it is larger Equals(LogCommand) Indicates whether the current object is equal to another object of the same type. public bool Equals(LogCommand other) Parameters other LogCommand An object to compare with this object. Returns bool true if the current object is equal to the other parameter; otherwise, false. Equals(object?) Determines whether the specified object, is equal to this instance. public override bool Equals(object? obj) Parameters obj object The object to compare with this instance. Returns bool true if the specified object is equal to this instance; otherwise, false. GetHashCode() Returns a hash code for this instance. public override int GetHashCode() Returns int A hash code for this instance, suitable for use in hashing algorithms and data structures like a hash table. Operators operator ==(LogCommand, LogCommand) Implements the operator ==. public static bool operator ==(LogCommand first, LogCommand second) Parameters first LogCommand The first. second LogCommand The second. Returns bool The result of the operator. operator >(LogCommand, LogCommand) Implements the operator >. public static bool operator >(LogCommand left, LogCommand right) Parameters left LogCommand The left. right LogCommand The right. Returns bool The result of the operator. operator >=(LogCommand, LogCommand) Implements the operator >=. public static bool operator >=(LogCommand left, LogCommand right) Parameters left LogCommand The left. right LogCommand The right. Returns bool The result of the operator. operator !=(LogCommand, LogCommand) Implements the operator !=. public static bool operator !=(LogCommand left, LogCommand right) Parameters left LogCommand The left. right LogCommand The right. Returns bool The result of the operator. operator <(LogCommand, LogCommand) Implements the operator <. public static bool operator <(LogCommand left, LogCommand right) Parameters left LogCommand The left. right LogCommand The right. Returns bool The result of the operator. operator <=(LogCommand, LogCommand) Implements the operator <=. public static bool operator <=(LogCommand left, LogCommand right) Parameters left LogCommand The left. right LogCommand The right. Returns bool The result of the operator. See Also CommandBaseClass<TCommand>"
  },
  "api/Mithril.Logging.Models.Mappings.LogCommandMapping.html": {
    "href": "api/Mithril.Logging.Models.Mappings.LogCommandMapping.html",
    "title": "Class LogCommandMapping | Mithril API Reference",
    "keywords": "Class LogCommandMapping Namespace Mithril.Logging.Models.Mappings Assembly Mithril.Logging.dll Log command mapping public class LogCommandMapping : MappingBaseClass<LogCommand, DefaultDatabase>, IMapping<LogCommand>, IMapping Inheritance object MappingBaseClass<LogCommand, DefaultDatabase> LogCommandMapping Implements IMapping<LogCommand> IMapping Inherited Members MappingBaseClass<LogCommand, DefaultDatabase>.AddAutoKey() MappingBaseClass<LogCommand, DefaultDatabase>.ContainsProperty(string) MappingBaseClass<LogCommand, DefaultDatabase>.Copy(IMapping) MappingBaseClass<LogCommand, DefaultDatabase>.CopyProperty(IIDProperty) MappingBaseClass<LogCommand, DefaultDatabase>.CopyProperty(IProperty) MappingBaseClass<LogCommand, DefaultDatabase>.CopyProperty(IMapProperty) MappingBaseClass<LogCommand, DefaultDatabase>.CopyProperty(IManyToOneProperty) MappingBaseClass<LogCommand, DefaultDatabase>.CopyProperty(IManyToManyProperty) MappingBaseClass<LogCommand, DefaultDatabase>.Equals(object) MappingBaseClass<LogCommand, DefaultDatabase>.GetColumnName(string) MappingBaseClass<LogCommand, DefaultDatabase>.GetHashCode() MappingBaseClass<LogCommand, DefaultDatabase>.ID<TDataType>(Expression<Func<LogCommand, TDataType>>) MappingBaseClass<LogCommand, DefaultDatabase>.ManyToMany<TDataType>(Expression<Func<LogCommand, IList<TDataType>>>) MappingBaseClass<LogCommand, DefaultDatabase>.ManyToOne<TDataType>(Expression<Func<LogCommand, IList<TDataType>>>) MappingBaseClass<LogCommand, DefaultDatabase>.ManyToOne<TDataType>(Expression<Func<LogCommand, TDataType>>) MappingBaseClass<LogCommand, DefaultDatabase>.Map<TDataType>(Expression<Func<LogCommand, TDataType>>) MappingBaseClass<LogCommand, DefaultDatabase>.Reduce(ILogger) MappingBaseClass<LogCommand, DefaultDatabase>.Reduce(IMapping, ILogger) MappingBaseClass<LogCommand, DefaultDatabase>.Reference<TDataType>(Expression<Func<LogCommand, TDataType>>) MappingBaseClass<LogCommand, DefaultDatabase>.SetQuery(QueryType, string, CommandType, params IParameter[]) MappingBaseClass<LogCommand, DefaultDatabase>.Setup() MappingBaseClass<LogCommand, DefaultDatabase>.ToString() MappingBaseClass<LogCommand, DefaultDatabase>.AutoIDProperties MappingBaseClass<LogCommand, DefaultDatabase>.DatabaseConfigType MappingBaseClass<LogCommand, DefaultDatabase>.IDProperties MappingBaseClass<LogCommand, DefaultDatabase>.ManyToManyProperties MappingBaseClass<LogCommand, DefaultDatabase>.ManyToOneProperties MappingBaseClass<LogCommand, DefaultDatabase>.MapProperties MappingBaseClass<LogCommand, DefaultDatabase>.Merge MappingBaseClass<LogCommand, DefaultDatabase>.ObjectType MappingBaseClass<LogCommand, DefaultDatabase>.Order MappingBaseClass<LogCommand, DefaultDatabase>.Prefix MappingBaseClass<LogCommand, DefaultDatabase>.Queries MappingBaseClass<LogCommand, DefaultDatabase>.ReferenceProperties MappingBaseClass<LogCommand, DefaultDatabase>.SchemaName MappingBaseClass<LogCommand, DefaultDatabase>.Suffix MappingBaseClass<LogCommand, DefaultDatabase>.TableName object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods GenericExtensions.When<TObject>(TObject, bool, Func<TObject, TObject>) ExpandoObjectExtensions.ConvertToExpando(object?) Constructors LogCommandMapping() Initializes a new instance of the LogCommandMapping class. public LogCommandMapping() See Also MappingBaseClass<TClassType, TDatabaseType>"
  },
  "api/Mithril.Logging.Models.Mappings.html": {
    "href": "api/Mithril.Logging.Models.Mappings.html",
    "title": "Namespace Mithril.Logging.Models.Mappings | Mithril API Reference",
    "keywords": "Namespace Mithril.Logging.Models.Mappings Classes LogCommandMapping Log command mapping"
  },
  "api/Mithril.Logging.Models.html": {
    "href": "api/Mithril.Logging.Models.html",
    "title": "Namespace Mithril.Logging.Models | Mithril API Reference",
    "keywords": "Namespace Mithril.Logging.Models Classes LogCommand Log command"
  },
  "api/Mithril.Logging.Serilog.Middleware.LoggingMiddleware.html": {
    "href": "api/Mithril.Logging.Serilog.Middleware.LoggingMiddleware.html",
    "title": "Class LoggingMiddleware | Mithril API Reference",
    "keywords": "Class LoggingMiddleware Namespace Mithril.Logging.Serilog.Middleware Assembly Mithril.Logging.Serilog.dll Logging middleware used to store info for Serilog. public class LoggingMiddleware Inheritance object LoggingMiddleware Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods GenericExtensions.When<TObject>(TObject, bool, Func<TObject, TObject>) ExpandoObjectExtensions.ConvertToExpando(object?) Remarks Initializes a new instance of the LoggingMiddleware class. Constructors LoggingMiddleware(RequestDelegate?) Logging middleware used to store info for Serilog. public LoggingMiddleware(RequestDelegate? next) Parameters next RequestDelegate The next. Remarks Initializes a new instance of the LoggingMiddleware class. Methods InvokeAsync(HttpContext) Invokes the specified context. public Task InvokeAsync(HttpContext context) Parameters context HttpContext The context. Returns Task"
  },
  "api/Mithril.Logging.Serilog.Middleware.html": {
    "href": "api/Mithril.Logging.Serilog.Middleware.html",
    "title": "Namespace Mithril.Logging.Serilog.Middleware | Mithril API Reference",
    "keywords": "Namespace Mithril.Logging.Serilog.Middleware Classes LoggingMiddleware Logging middleware used to store info for Serilog."
  },
  "api/Mithril.Logging.Serilog.SerilogModule.html": {
    "href": "api/Mithril.Logging.Serilog.SerilogModule.html",
    "title": "Class SerilogModule | Mithril API Reference",
    "keywords": "Class SerilogModule Namespace Mithril.Logging.Serilog Assembly Mithril.Logging.Serilog.dll Serilog specific logging added to Mithril public class SerilogModule : ModuleBaseClass<SerilogModule>, IEquatable<SerilogModule>, IModule Inheritance object ModuleBaseClass<SerilogModule> SerilogModule Implements IEquatable<SerilogModule> IModule Inherited Members ModuleBaseClass<SerilogModule>.Category ModuleBaseClass<SerilogModule>.ContentPath ModuleBaseClass<SerilogModule>.ID ModuleBaseClass<SerilogModule>.LastModified ModuleBaseClass<SerilogModule>.Name ModuleBaseClass<SerilogModule>.Order ModuleBaseClass<SerilogModule>.Tags ModuleBaseClass<SerilogModule>.Version ModuleBaseClass<SerilogModule>.ConfigureMVC(IMvcBuilder, IConfiguration, IHostEnvironment) ModuleBaseClass<SerilogModule>.ConfigureRoutes(IEndpointRouteBuilder, IConfiguration, IHostEnvironment) ModuleBaseClass<SerilogModule>.ConfigureWebHostSettings(IWebHostBuilder, IConfiguration, IHostEnvironment) ModuleBaseClass<SerilogModule>.Equals(object) ModuleBaseClass<SerilogModule>.Equals(SerilogModule) ModuleBaseClass<SerilogModule>.GetHashCode() ModuleBaseClass<SerilogModule>.InitializeDataAsync(IDataService, IServiceProvider) ModuleBaseClass<SerilogModule>.OnStarted() ModuleBaseClass<SerilogModule>.OnStopped() ModuleBaseClass<SerilogModule>.OnStopping() object.Equals(object, object) object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods GenericExtensions.When<TObject>(TObject, bool, Func<TObject, TObject>) ExpandoObjectExtensions.ConvertToExpando(object?) Properties Features Gets the features. public override IFeature[] Features { get; } Property Value IFeature[] The features. Methods ConfigureApplication(IApplicationBuilder?, IConfiguration?, IHostEnvironment?) Configures the application. public override IApplicationBuilder? ConfigureApplication(IApplicationBuilder? app, IConfiguration? configuration, IHostEnvironment? environment) Parameters app IApplicationBuilder The application. configuration IConfiguration The configuration. environment IHostEnvironment The environment. Returns IApplicationBuilder Application builder ConfigureHostSettings(IHostBuilder?, IConfiguration?, IHostEnvironment?) Configures the host settings. public override IHostBuilder? ConfigureHostSettings(IHostBuilder? host, IConfiguration? configuration, IHostEnvironment? environment) Parameters host IHostBuilder The host. configuration IConfiguration The configuration. environment IHostEnvironment The environment. Returns IHostBuilder Host builder ConfigureLoggingSettings(ILoggingBuilder?, IConfiguration?, IHostEnvironment?) Configures the logging settings. public override ILoggingBuilder? ConfigureLoggingSettings(ILoggingBuilder? logging, IConfiguration? configuration, IHostEnvironment? environment) Parameters logging ILoggingBuilder The logging. configuration IConfiguration The configuration. environment IHostEnvironment The environment. Returns ILoggingBuilder Logging builder ConfigureServices(IServiceCollection?, IConfiguration?, IHostEnvironment?) Configures the services for the module. public override IServiceCollection? ConfigureServices(IServiceCollection? services, IConfiguration? configuration, IHostEnvironment? environment) Parameters services IServiceCollection The services collection. configuration IConfiguration The configuration. environment IHostEnvironment The environment. Returns IServiceCollection Services See Also ModuleBaseClass<TModule>"
  },
  "api/Mithril.Logging.Serilog.html": {
    "href": "api/Mithril.Logging.Serilog.html",
    "title": "Namespace Mithril.Logging.Serilog | Mithril API Reference",
    "keywords": "Namespace Mithril.Logging.Serilog Classes SerilogModule Serilog specific logging added to Mithril"
  },
  "api/Mithril.Logging.html": {
    "href": "api/Mithril.Logging.html",
    "title": "Namespace Mithril.Logging | Mithril API Reference",
    "keywords": "Namespace Mithril.Logging Classes LoggingModule Module that adds a command handler that accepts specific logging added to Mithril"
  },
  "api/Mithril.Models.ErrorViewModel.html": {
    "href": "api/Mithril.Models.ErrorViewModel.html",
    "title": "Class ErrorViewModel | Mithril API Reference",
    "keywords": "Class ErrorViewModel Namespace Mithril.Models Assembly Mithril.dll ERROR view model public class ErrorViewModel Inheritance object ErrorViewModel Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods GenericExtensions.When<TObject>(TObject, bool, Func<TObject, TObject>) ExpandoObjectExtensions.ConvertToExpando(object?) Properties RequestId Gets or sets the request identifier. public string? RequestId { get; set; } Property Value string The request identifier. ShowRequestId Gets a value indicating whether [show request identifier]. public bool ShowRequestId { get; } Property Value bool true if [show request identifier]; otherwise, false."
  },
  "api/Mithril.Models.TestModule.html": {
    "href": "api/Mithril.Models.TestModule.html",
    "title": "Class TestModule | Mithril API Reference",
    "keywords": "Class TestModule Namespace Mithril.Models Assembly Mithril.dll Test module public class TestModule : ModuleBaseClass<TestModule>, IEquatable<TestModule>, IModule Inheritance object ModuleBaseClass<TestModule> TestModule Implements IEquatable<TestModule> IModule Inherited Members ModuleBaseClass<TestModule>.Category ModuleBaseClass<TestModule>.ContentPath ModuleBaseClass<TestModule>.Features ModuleBaseClass<TestModule>.ID ModuleBaseClass<TestModule>.LastModified ModuleBaseClass<TestModule>.Name ModuleBaseClass<TestModule>.Order ModuleBaseClass<TestModule>.Tags ModuleBaseClass<TestModule>.Version ModuleBaseClass<TestModule>.ConfigureApplication(IApplicationBuilder, IConfiguration, IHostEnvironment) ModuleBaseClass<TestModule>.ConfigureHostSettings(IHostBuilder, IConfiguration, IHostEnvironment) ModuleBaseClass<TestModule>.ConfigureLoggingSettings(ILoggingBuilder, IConfiguration, IHostEnvironment) ModuleBaseClass<TestModule>.ConfigureMVC(IMvcBuilder, IConfiguration, IHostEnvironment) ModuleBaseClass<TestModule>.ConfigureRoutes(IEndpointRouteBuilder, IConfiguration, IHostEnvironment) ModuleBaseClass<TestModule>.ConfigureWebHostSettings(IWebHostBuilder, IConfiguration, IHostEnvironment) ModuleBaseClass<TestModule>.Equals(object) ModuleBaseClass<TestModule>.Equals(TestModule) ModuleBaseClass<TestModule>.GetHashCode() ModuleBaseClass<TestModule>.InitializeDataAsync(IDataService, IServiceProvider) ModuleBaseClass<TestModule>.OnStarted() ModuleBaseClass<TestModule>.OnStopped() ModuleBaseClass<TestModule>.OnStopping() object.Equals(object, object) object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods GenericExtensions.When<TObject>(TObject, bool, Func<TObject, TObject>) ExpandoObjectExtensions.ConvertToExpando(object?) Methods ConfigureServices(IServiceCollection?, IConfiguration?, IHostEnvironment?) Configures the services for the module. public override IServiceCollection? ConfigureServices(IServiceCollection? services, IConfiguration? configuration, IHostEnvironment? environment) Parameters services IServiceCollection The services collection. configuration IConfiguration The configuration. environment IHostEnvironment The environment. Returns IServiceCollection Services See Also ModuleBaseClass<TModule>"
  },
  "api/Mithril.Models.TestQuery.html": {
    "href": "api/Mithril.Models.TestQuery.html",
    "title": "Class TestQuery | Mithril API Reference",
    "keywords": "Class TestQuery Namespace Mithril.Models Assembly Mithril.dll Test query public class TestQuery : QueryBaseClass<TestVM>, IQuery<TestVM>, IQuery Inheritance object QueryBaseClass<TestVM> TestQuery Implements IQuery<TestVM> IQuery Inherited Members QueryBaseClass<TestVM>.DeprecationReason QueryBaseClass<TestVM>.Description QueryBaseClass<TestVM>.Name QueryBaseClass<TestVM>.ReturnType QueryBaseClass<TestVM>.Version QueryBaseClass<TestVM>.FeatureManager QueryBaseClass<TestVM>.Logger QueryBaseClass<TestVM>.IsFeatureEnabled() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods GenericExtensions.When<TObject>(TObject, bool, Func<TObject, TObject>) ExpandoObjectExtensions.ConvertToExpando(object?) Remarks Initializes a new instance of the TestQuery class. Constructors TestQuery(ILogger<TestQuery>?, IFeatureManager?) Test query public TestQuery(ILogger<TestQuery>? logger, IFeatureManager? featureManager) Parameters logger ILogger<TestQuery> featureManager IFeatureManager Remarks Initializes a new instance of the TestQuery class. See Also QueryBaseClass<TClass> Properties Arguments Gets the arguments. public override IArgument[] Arguments { get; } Property Value IArgument[] The arguments. Features Gets the features associated with this command. public override IFeature[] Features { get; } Property Value IFeature[] The features associated with this command. Methods ResolveAsync(ClaimsPrincipal?, Arguments) Resolves the asynchronous. public override Task<TestVM?> ResolveAsync(ClaimsPrincipal? arg, Arguments arguments) Parameters arg ClaimsPrincipal The argument. arguments Arguments The arguments. Returns Task<TestVM> See Also QueryBaseClass<TClass>"
  },
  "api/Mithril.Models.TestVM.html": {
    "href": "api/Mithril.Models.TestVM.html",
    "title": "Class TestVM | Mithril API Reference",
    "keywords": "Class TestVM Namespace Mithril.Models Assembly Mithril.dll Test VM public class TestVM Inheritance object TestVM Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods GenericExtensions.When<TObject>(TObject, bool, Func<TObject, TObject>) ExpandoObjectExtensions.ConvertToExpando(object?) Properties A Gets or sets a. [ApiAuthorize(\"Test\")] [ApiDescription(\"This will show up in the API\")] public List<TestVM2> A { get; set; } Property Value List<TestVM2> a. Methods ExampleMethod(string, int) Examples the method. public TestVM2 ExampleMethod(string a = \"A\", int b = 2) Parameters a string a. b int The b. Returns TestVM2 ExampleMethod2(string, int) Examples the method2. [ApiDepricationReason(\"Because it is old or something\")] public string ExampleMethod2(string a, int b) Parameters a string a. b int The b. Returns string"
  },
  "api/Mithril.Models.TestVM2.html": {
    "href": "api/Mithril.Models.TestVM2.html",
    "title": "Class TestVM2 | Mithril API Reference",
    "keywords": "Class TestVM2 Namespace Mithril.Models Assembly Mithril.dll TestVM 2 public class TestVM2 Inheritance object TestVM2 Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods GenericExtensions.When<TObject>(TObject, bool, Func<TObject, TObject>) ExpandoObjectExtensions.ConvertToExpando(object?) Properties A Gets or sets a. public string? A { get; set; } Property Value string a. B Gets or sets the b. public int B { get; set; } Property Value int The b."
  },
  "api/Mithril.Models.html": {
    "href": "api/Mithril.Models.html",
    "title": "Namespace Mithril.Models | Mithril API Reference",
    "keywords": "Namespace Mithril.Models Classes ErrorViewModel ERROR view model TestModule Test module TestQuery Test query TestVM Test VM TestVM2 TestVM 2"
  },
  "api/Mithril.Mvc.Abstractions.Enums.Orientation.html": {
    "href": "api/Mithril.Mvc.Abstractions.Enums.Orientation.html",
    "title": "Enum Orientation | Mithril API Reference",
    "keywords": "Enum Orientation Namespace Mithril.Mvc.Abstractions.Enums Assembly Mithril.Mvc.Abstractions.dll Orientation public enum Orientation Extension Methods GenericExtensions.When<TObject>(TObject, bool, Func<TObject, TObject>) ExpandoObjectExtensions.ConvertToExpando(object?) Fields Landscape = 0 The landscape Portrait = 1 The portrait"
  },
  "api/Mithril.Mvc.Abstractions.Enums.RenderFormat.html": {
    "href": "api/Mithril.Mvc.Abstractions.Enums.RenderFormat.html",
    "title": "Enum RenderFormat | Mithril API Reference",
    "keywords": "Enum RenderFormat Namespace Mithril.Mvc.Abstractions.Enums Assembly Mithril.Mvc.Abstractions.dll Render format enum public enum RenderFormat Extension Methods GenericExtensions.When<TObject>(TObject, bool, Func<TObject, TObject>) ExpandoObjectExtensions.ConvertToExpando(object?) Fields HTML = 0 The HTML renderer PDF = 1 The PDF renderer"
  },
  "api/Mithril.Mvc.Abstractions.Enums.html": {
    "href": "api/Mithril.Mvc.Abstractions.Enums.html",
    "title": "Namespace Mithril.Mvc.Abstractions.Enums | Mithril API Reference",
    "keywords": "Namespace Mithril.Mvc.Abstractions.Enums Enums Orientation Orientation RenderFormat Render format enum"
  },
  "api/Mithril.Mvc.Abstractions.RenderOptions.html": {
    "href": "api/Mithril.Mvc.Abstractions.RenderOptions.html",
    "title": "Class RenderOptions | Mithril API Reference",
    "keywords": "Class RenderOptions Namespace Mithril.Mvc.Abstractions Assembly Mithril.Mvc.Abstractions.dll Render Options public class RenderOptions Inheritance object RenderOptions Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods GenericExtensions.When<TObject>(TObject, bool, Func<TObject, TObject>) ExpandoObjectExtensions.ConvertToExpando(object?) Properties Orientation The orientation public Orientation Orientation { get; set; } Property Value Orientation The orientation."
  },
  "api/Mithril.Mvc.Abstractions.Services.IViewRendererService.html": {
    "href": "api/Mithril.Mvc.Abstractions.Services.IViewRendererService.html",
    "title": "Interface IViewRendererService | Mithril API Reference",
    "keywords": "Interface IViewRendererService Namespace Mithril.Mvc.Abstractions.Services Assembly Mithril.Mvc.Abstractions.dll View renderer service interface public interface IViewRendererService Extension Methods GenericExtensions.When<TObject>(TObject, bool, Func<TObject, TObject>) ExpandoObjectExtensions.ConvertToExpando(object?) Methods RenderAsync<TModel>(string, TModel, RenderOptions?, RenderFormat) Renders the specified view. Task<byte[]> RenderAsync<TModel>(string name, TModel model, RenderOptions? options = null, RenderFormat format = RenderFormat.HTML) Parameters name string The name. model TModel The model. options RenderOptions The options. format RenderFormat The format. Returns Task<byte[]> The rendered view. Type Parameters TModel The type of the model."
  },
  "api/Mithril.Mvc.Abstractions.Services.html": {
    "href": "api/Mithril.Mvc.Abstractions.Services.html",
    "title": "Namespace Mithril.Mvc.Abstractions.Services | Mithril API Reference",
    "keywords": "Namespace Mithril.Mvc.Abstractions.Services Interfaces IViewRendererService View renderer service interface"
  },
  "api/Mithril.Mvc.Abstractions.html": {
    "href": "api/Mithril.Mvc.Abstractions.html",
    "title": "Namespace Mithril.Mvc.Abstractions | Mithril API Reference",
    "keywords": "Namespace Mithril.Mvc.Abstractions Classes RenderOptions Render Options"
  },
  "api/Mithril.Mvc.MvcModule.html": {
    "href": "api/Mithril.Mvc.MvcModule.html",
    "title": "Class MvcModule | Mithril API Reference",
    "keywords": "Class MvcModule Namespace Mithril.Mvc Assembly Mithril.Mvc.dll MVC Module public class MvcModule : ModuleBaseClass<MvcModule>, IEquatable<MvcModule>, IModule Inheritance object ModuleBaseClass<MvcModule> MvcModule Implements IEquatable<MvcModule> IModule Inherited Members ModuleBaseClass<MvcModule>.Category ModuleBaseClass<MvcModule>.ContentPath ModuleBaseClass<MvcModule>.Features ModuleBaseClass<MvcModule>.ID ModuleBaseClass<MvcModule>.LastModified ModuleBaseClass<MvcModule>.Name ModuleBaseClass<MvcModule>.Order ModuleBaseClass<MvcModule>.Tags ModuleBaseClass<MvcModule>.Version ModuleBaseClass<MvcModule>.ConfigureApplication(IApplicationBuilder, IConfiguration, IHostEnvironment) ModuleBaseClass<MvcModule>.ConfigureHostSettings(IHostBuilder, IConfiguration, IHostEnvironment) ModuleBaseClass<MvcModule>.ConfigureLoggingSettings(ILoggingBuilder, IConfiguration, IHostEnvironment) ModuleBaseClass<MvcModule>.ConfigureMVC(IMvcBuilder, IConfiguration, IHostEnvironment) ModuleBaseClass<MvcModule>.ConfigureRoutes(IEndpointRouteBuilder, IConfiguration, IHostEnvironment) ModuleBaseClass<MvcModule>.ConfigureWebHostSettings(IWebHostBuilder, IConfiguration, IHostEnvironment) ModuleBaseClass<MvcModule>.Equals(object) ModuleBaseClass<MvcModule>.Equals(MvcModule) ModuleBaseClass<MvcModule>.GetHashCode() ModuleBaseClass<MvcModule>.InitializeDataAsync(IDataService, IServiceProvider) ModuleBaseClass<MvcModule>.OnStarted() ModuleBaseClass<MvcModule>.OnStopped() ModuleBaseClass<MvcModule>.OnStopping() object.Equals(object, object) object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods GenericExtensions.When<TObject>(TObject, bool, Func<TObject, TObject>) ExpandoObjectExtensions.ConvertToExpando(object?) Constructors MvcModule() Initializes a new instance of the MvcModule class. public MvcModule() Methods ConfigureServices(IServiceCollection?, IConfiguration?, IHostEnvironment?) Configures the services for the module. public override IServiceCollection? ConfigureServices(IServiceCollection? services, IConfiguration? configuration, IHostEnvironment? environment) Parameters services IServiceCollection The services collection. configuration IConfiguration The configuration. environment IHostEnvironment The environment. Returns IServiceCollection Services See Also ModuleBaseClass<TModule>"
  },
  "api/Mithril.Mvc.Services.ViewRendererService.html": {
    "href": "api/Mithril.Mvc.Services.ViewRendererService.html",
    "title": "Class ViewRendererService | Mithril API Reference",
    "keywords": "Class ViewRendererService Namespace Mithril.Mvc.Services Assembly Mithril.Mvc.dll View renderer service public class ViewRendererService : IViewRendererService Inheritance object ViewRendererService Implements IViewRendererService Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods GenericExtensions.When<TObject>(TObject, bool, Func<TObject, TObject>) ExpandoObjectExtensions.ConvertToExpando(object?) Remarks Initializes a new instance of the ViewRendererService class. Constructors ViewRendererService(IRazorViewEngine?, ITempDataProvider?, IServiceProvider?, IConverter?, IWebHostEnvironment?, ILogger<ViewRendererService>?) View renderer service public ViewRendererService(IRazorViewEngine? viewEngine, ITempDataProvider? tempDataProvider, IServiceProvider? serviceProvider, IConverter? pdfConverter, IWebHostEnvironment? webHostEnvironment, ILogger<ViewRendererService>? logger) Parameters viewEngine IRazorViewEngine The view engine. tempDataProvider ITempDataProvider The temporary data provider. serviceProvider IServiceProvider The service provider. pdfConverter IConverter The PDF converter. webHostEnvironment IWebHostEnvironment The web host environment. logger ILogger<ViewRendererService> The logger. Remarks Initializes a new instance of the ViewRendererService class. See Also IViewRendererService Properties Logger Gets the logger. public ILogger<ViewRendererService>? Logger { get; } Property Value ILogger<ViewRendererService> The logger. PdfConverter Gets the PDF converter. public IConverter? PdfConverter { get; } Property Value IConverter The PDF converter. WebHostEnvironment Gets the web host environment. public IWebHostEnvironment? WebHostEnvironment { get; } Property Value IWebHostEnvironment The web host environment. Methods RenderAsync<TModel>(string?, TModel, RenderOptions?, RenderFormat) Renders the specified name. public Task<byte[]> RenderAsync<TModel>(string? name, TModel model, RenderOptions? renderOptions = null, RenderFormat format = RenderFormat.HTML) Parameters name string The name. model TModel The model. renderOptions RenderOptions The render options. format RenderFormat The format. Returns Task<byte[]> The rendered view. Type Parameters TModel The type of the model. Exceptions InvalidOperationException Couldn't find view '{name}' See Also IViewRendererService"
  },
  "api/Mithril.Mvc.Services.html": {
    "href": "api/Mithril.Mvc.Services.html",
    "title": "Namespace Mithril.Mvc.Services | Mithril API Reference",
    "keywords": "Namespace Mithril.Mvc.Services Classes ViewRendererService View renderer service"
  },
  "api/Mithril.Mvc.html": {
    "href": "api/Mithril.Mvc.html",
    "title": "Namespace Mithril.Mvc | Mithril API Reference",
    "keywords": "Namespace Mithril.Mvc Classes MvcModule MVC Module"
  },
  "api/Mithril.Navigation.Abstractions.Interfaces.IMenuBuilder.html": {
    "href": "api/Mithril.Navigation.Abstractions.Interfaces.IMenuBuilder.html",
    "title": "Interface IMenuBuilder | Mithril API Reference",
    "keywords": "Interface IMenuBuilder Namespace Mithril.Navigation.Abstractions.Interfaces Assembly Mithril.Navigation.Abstractions.dll Menu builder interface public interface IMenuBuilder Extension Methods GenericExtensions.When<TObject>(TObject, bool, Func<TObject, TObject>) ExpandoObjectExtensions.ConvertToExpando(object?) Properties Display Gets the display name of the menu. string Display { get; } Property Value string The display name of the menu. Permissions Gets the permissions. IPermission? Permissions { get; } Property Value IPermission The permissions. Methods AddOrUpdateMenuItem(string, string, string, string, int, IPermission?) Adds a menu item. IMenuBuilder AddOrUpdateMenuItem(string display, string description, string icon, string url, int order = 0, IPermission? permission = null) Parameters display string The display. description string The description. icon string The icon. url string The URL. order int The order. permission IPermission The permission. Returns IMenuBuilder This BuildAsync() Builds this instance. Task BuildAsync() Returns Task The async task. HasMenuItem(string) Determines whether [the menu] [has the menu item specified]. bool HasMenuItem(string display) Parameters display string The display name. Returns bool true if it [has the menu item specified]; otherwise, false. SetSecurity(IPermission?) Sets the security. IMenuBuilder SetSecurity(IPermission? permission) Parameters permission IPermission The permission. Returns IMenuBuilder This."
  },
  "api/Mithril.Navigation.Abstractions.Interfaces.html": {
    "href": "api/Mithril.Navigation.Abstractions.Interfaces.html",
    "title": "Namespace Mithril.Navigation.Abstractions.Interfaces | Mithril API Reference",
    "keywords": "Namespace Mithril.Navigation.Abstractions.Interfaces Interfaces IMenuBuilder Menu builder interface"
  },
  "api/Mithril.Navigation.Abstractions.Services.IMenuService.html": {
    "href": "api/Mithril.Navigation.Abstractions.Services.IMenuService.html",
    "title": "Interface IMenuService | Mithril API Reference",
    "keywords": "Interface IMenuService Namespace Mithril.Navigation.Abstractions.Services Assembly Mithril.Navigation.Abstractions.dll Menu service interface public interface IMenuService Extension Methods GenericExtensions.When<TObject>(TObject, bool, Func<TObject, TObject>) ExpandoObjectExtensions.ConvertToExpando(object?) Methods CreateMenuBuilder(string, ClaimsPrincipal?) Creates a menu builder. IMenuBuilder? CreateMenuBuilder(string display, ClaimsPrincipal? user) Parameters display string The display name of the menu. user ClaimsPrincipal The user. Returns IMenuBuilder The menu builder."
  },
  "api/Mithril.Navigation.Abstractions.Services.html": {
    "href": "api/Mithril.Navigation.Abstractions.Services.html",
    "title": "Namespace Mithril.Navigation.Abstractions.Services | Mithril API Reference",
    "keywords": "Namespace Mithril.Navigation.Abstractions.Services Interfaces IMenuService Menu service interface"
  },
  "api/Mithril.Navigation.Admin.MenuEditor.html": {
    "href": "api/Mithril.Navigation.Admin.MenuEditor.html",
    "title": "Class MenuEditor | Mithril API Reference",
    "keywords": "Class MenuEditor Namespace Mithril.Navigation.Admin Assembly Mithril.Navigation.dll Menu editor public class MenuEditor : EntityEditorBaseClass<MenuVM, Menu>, IEntityEditor, IEditor Inheritance object EntityEditorBaseClass<MenuVM> EntityEditorBaseClass<MenuVM, Menu> MenuEditor Implements IEntityEditor IEditor Inherited Members EntityEditorBaseClass<MenuVM, Menu>.ActivateAsync(long, ClaimsPrincipal) EntityEditorBaseClass<MenuVM, Menu>.CanView(ClaimsPrincipal) EntityEditorBaseClass<MenuVM, Menu>.DeleteEntityAsync(long, ClaimsPrincipal) EntityEditorBaseClass<MenuVM, Menu>.Load(long, ExpandoObject, ClaimsPrincipal) EntityEditorBaseClass<MenuVM, Menu>.LoadPageAsync(int, int, string, bool, string, ClaimsPrincipal) EntityEditorBaseClass<MenuVM, Menu>.SaveEntityAsync(long, ExpandoObject, ClaimsPrincipal) EntityEditorBaseClass<MenuVM, Menu>.TotalActiveAsync(ClaimsPrincipal) EntityEditorBaseClass<MenuVM, Menu>.Convert(Menu, bool) EntityEditorBaseClass<MenuVM, Menu>.FilterQueryBySearchQuery(IQueryable<Menu>, string) EntityEditorBaseClass<MenuVM, Menu>.LoadModel(long) EntityEditorBaseClass<MenuVM, Menu>.MakeActiveAsync(Menu) EntityEditorBaseClass<MenuVM, Menu>.MakeInactiveAsync(Menu) EntityEditorBaseClass<MenuVM>.Category EntityEditorBaseClass<MenuVM>.ComponentDefinition EntityEditorBaseClass<MenuVM>.Description EntityEditorBaseClass<MenuVM>.EntityType EntityEditorBaseClass<MenuVM>.Name EntityEditorBaseClass<MenuVM>.DataService EntityEditorBaseClass<MenuVM>.ServiceProvider EntityEditorBaseClass<MenuVM>.ActivateAsync(long, ClaimsPrincipal) EntityEditorBaseClass<MenuVM>.CanView(ClaimsPrincipal) EntityEditorBaseClass<MenuVM>.DeleteEntityAsync(long, ClaimsPrincipal) EntityEditorBaseClass<MenuVM>.Load(long, ExpandoObject, ClaimsPrincipal) EntityEditorBaseClass<MenuVM>.LoadPageAsync(int, int, string, bool, string, ClaimsPrincipal) EntityEditorBaseClass<MenuVM>.SaveEntityAsync(long, ExpandoObject, ClaimsPrincipal) EntityEditorBaseClass<MenuVM>.TotalActiveAsync(ClaimsPrincipal) object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods GenericExtensions.When<TObject>(TObject, bool, Func<TObject, TObject>) ExpandoObjectExtensions.ConvertToExpando(object?) Remarks Initializes a new instance of the MenuEditor class. Constructors MenuEditor(IDataService?, IEntityMetadataService?, IServiceProvider?, string?) Menu editor public MenuEditor(IDataService? dataService, IEntityMetadataService? entityMetadataService, IServiceProvider? serviceProvider, string? dataType = null) Parameters dataService IDataService The data service. entityMetadataService IEntityMetadataService The entity metadata service. serviceProvider IServiceProvider The service provider. dataType string Type of the data. Remarks Initializes a new instance of the MenuEditor class. See Also EntityEditorBaseClass<TEntity, TModel> Properties Icon Gets the icon. public override string Icon { get; } Property Value string The icon. Methods Convert(Menu, bool) Converts the model into the appropriate view model. protected override IEntity Convert(Menu model, bool full = true) Parameters model Menu The model. full bool if set to true [full]. Returns IEntity The view model FilterQueryBySearchQuery(IQueryable<Menu>?, string) Filters the query by search term. protected override IQueryable<Menu>? FilterQueryBySearchQuery(IQueryable<Menu>? query, string searchQuery) Parameters query IQueryable<Menu> The query. searchQuery string The search query. Returns IQueryable<Menu> The resulting query. See Also EntityEditorBaseClass<TEntity, TModel>"
  },
  "api/Mithril.Navigation.Admin.ViewModels.MenuItemVM.html": {
    "href": "api/Mithril.Navigation.Admin.ViewModels.MenuItemVM.html",
    "title": "Class MenuItemVM | Mithril API Reference",
    "keywords": "Class MenuItemVM Namespace Mithril.Navigation.Admin.ViewModels Assembly Mithril.Navigation.dll MenuItem VM public class MenuItemVM Inheritance object MenuItemVM Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods GenericExtensions.When<TObject>(TObject, bool, Func<TObject, TObject>) ExpandoObjectExtensions.ConvertToExpando(object?) Constructors MenuItemVM() Initializes a new instance of the MenuItemVM class. public MenuItemVM() MenuItemVM(MenuItem?) Initializes a new instance of the MenuItemVM class. public MenuItemVM(MenuItem? menuItem) Parameters menuItem MenuItem The menu item. Properties Description Gets or sets the description. [MaxLength(1024)] [Order(5)] public string? Description { get; set; } Property Value string The description. Display Gets or sets the display. [Required] [MaxLength(128)] [MinLength(1)] [Order(2)] public string? Display { get; set; } Property Value string The display. Icon Gets or sets the icon. [MaxLength(64)] [Order(4)] public string? Icon { get; set; } Property Value string The icon. Order Gets or sets the order. [Range(0, 2147483647)] [Order(1)] public int Order { get; set; } Property Value int The order. Url Gets or sets the URL. [MaxLength(1024)] [Order(3)] [Query(typeof(RouteDropDown), \"\")] public string? Url { get; set; } Property Value string The URL. WhoCanView Gets or sets the who can view. [Order(6)] public List<ClaimDropDownVM> WhoCanView { get; set; } Property Value List<ClaimDropDownVM> The who can view."
  },
  "api/Mithril.Navigation.Admin.ViewModels.MenuVM.html": {
    "href": "api/Mithril.Navigation.Admin.ViewModels.MenuVM.html",
    "title": "Class MenuVM | Mithril API Reference",
    "keywords": "Class MenuVM Namespace Mithril.Navigation.Admin.ViewModels Assembly Mithril.Navigation.dll Menu VM public class MenuVM : EntityBaseClass<Menu>, IEntity<Menu>, IEntity Inheritance object EntityBaseClass<Menu> MenuVM Implements IEntity<Menu> IEntity Inherited Members EntityBaseClass<Menu>.Active EntityBaseClass<Menu>.ID object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods GenericExtensions.When<TObject>(TObject, bool, Func<TObject, TObject>) ExpandoObjectExtensions.ConvertToExpando(object?) Constructors MenuVM() Initializes a new instance of the MenuVM class. public MenuVM() MenuVM(Menu?, bool) Initializes a new instance of the MenuVM class. public MenuVM(Menu? entity, bool full) Parameters entity Menu The entity. full bool if set to true [full]. Properties Display Gets or sets the display. [Order(1)] public string? Display { get; set; } Property Value string The display. Links Gets or sets the links. [Order(2)] public List<MenuItemVM> Links { get; set; } Property Value List<MenuItemVM> The links. WhoCanView Gets or sets the who can view. [Order(3)] public List<ClaimDropDownVM> WhoCanView { get; set; } Property Value List<ClaimDropDownVM> The who can view. Methods SaveAsync(long, IDataService?, IServiceProvider?, ClaimsPrincipal?) Saves the changes asynchronously. public override Task<Menu?> SaveAsync(long id, IDataService? dataService, IServiceProvider? serviceProvider, ClaimsPrincipal? currentUser) Parameters id long The identifier. dataService IDataService The data service. serviceProvider IServiceProvider The service provider. currentUser ClaimsPrincipal The current user. Returns Task<Menu> The async task. See Also EntityBaseClass<TEntity>"
  },
  "api/Mithril.Navigation.Admin.ViewModels.html": {
    "href": "api/Mithril.Navigation.Admin.ViewModels.html",
    "title": "Namespace Mithril.Navigation.Admin.ViewModels | Mithril API Reference",
    "keywords": "Namespace Mithril.Navigation.Admin.ViewModels Classes MenuItemVM MenuItem VM MenuVM Menu VM"
  },
  "api/Mithril.Navigation.Admin.html": {
    "href": "api/Mithril.Navigation.Admin.html",
    "title": "Namespace Mithril.Navigation.Admin | Mithril API Reference",
    "keywords": "Namespace Mithril.Navigation.Admin Classes MenuEditor Menu editor"
  },
  "api/Mithril.Navigation.Features.NavigationFeature.html": {
    "href": "api/Mithril.Navigation.Features.NavigationFeature.html",
    "title": "Class NavigationFeature | Mithril API Reference",
    "keywords": "Class NavigationFeature Namespace Mithril.Navigation.Features Assembly Mithril.Navigation.dll Navigation feature public class NavigationFeature : FeatureBaseClass<NavigationFeature>, IFeature, IEquatable<NavigationFeature> Inheritance object FeatureBaseClass<NavigationFeature> NavigationFeature Implements IFeature IEquatable<NavigationFeature> Inherited Members FeatureBaseClass<NavigationFeature>.Instance FeatureBaseClass<NavigationFeature>.Equals(object) FeatureBaseClass<NavigationFeature>.Equals(NavigationFeature) FeatureBaseClass<NavigationFeature>.GetHashCode() object.Equals(object, object) object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods GenericExtensions.When<TObject>(TObject, bool, Func<TObject, TObject>) ExpandoObjectExtensions.ConvertToExpando(object?) Properties Category The group (by category) that the feature belongs. If not provided, defaults to 'Uncategorized'. public override string Category { get; } Property Value string The category. Description Gets or sets the description. public override string Description { get; } Property Value string The description. Name Human-readable name of the feature. If not provided, the identifier will be used. public override string Name { get; } Property Value string The name. See Also FeatureBaseClass<TFeature>"
  },
  "api/Mithril.Navigation.Features.html": {
    "href": "api/Mithril.Navigation.Features.html",
    "title": "Namespace Mithril.Navigation.Features | Mithril API Reference",
    "keywords": "Namespace Mithril.Navigation.Features Classes NavigationFeature Navigation feature"
  },
  "api/Mithril.Navigation.Models.Mappings.MenuItemMapping.html": {
    "href": "api/Mithril.Navigation.Models.Mappings.MenuItemMapping.html",
    "title": "Class MenuItemMapping | Mithril API Reference",
    "keywords": "Class MenuItemMapping Namespace Mithril.Navigation.Models.Mappings Assembly Mithril.Navigation.dll Menu item mapping public class MenuItemMapping : MappingBaseClass<MenuItem, DefaultDatabase>, IMapping<MenuItem>, IMapping Inheritance object MappingBaseClass<MenuItem, DefaultDatabase> MenuItemMapping Implements IMapping<MenuItem> IMapping Inherited Members MappingBaseClass<MenuItem, DefaultDatabase>.AddAutoKey() MappingBaseClass<MenuItem, DefaultDatabase>.ContainsProperty(string) MappingBaseClass<MenuItem, DefaultDatabase>.Copy(IMapping) MappingBaseClass<MenuItem, DefaultDatabase>.CopyProperty(IIDProperty) MappingBaseClass<MenuItem, DefaultDatabase>.CopyProperty(IProperty) MappingBaseClass<MenuItem, DefaultDatabase>.CopyProperty(IMapProperty) MappingBaseClass<MenuItem, DefaultDatabase>.CopyProperty(IManyToOneProperty) MappingBaseClass<MenuItem, DefaultDatabase>.CopyProperty(IManyToManyProperty) MappingBaseClass<MenuItem, DefaultDatabase>.Equals(object) MappingBaseClass<MenuItem, DefaultDatabase>.GetColumnName(string) MappingBaseClass<MenuItem, DefaultDatabase>.GetHashCode() MappingBaseClass<MenuItem, DefaultDatabase>.ID<TDataType>(Expression<Func<MenuItem, TDataType>>) MappingBaseClass<MenuItem, DefaultDatabase>.ManyToMany<TDataType>(Expression<Func<MenuItem, IList<TDataType>>>) MappingBaseClass<MenuItem, DefaultDatabase>.ManyToOne<TDataType>(Expression<Func<MenuItem, IList<TDataType>>>) MappingBaseClass<MenuItem, DefaultDatabase>.ManyToOne<TDataType>(Expression<Func<MenuItem, TDataType>>) MappingBaseClass<MenuItem, DefaultDatabase>.Map<TDataType>(Expression<Func<MenuItem, TDataType>>) MappingBaseClass<MenuItem, DefaultDatabase>.Reduce(ILogger) MappingBaseClass<MenuItem, DefaultDatabase>.Reduce(IMapping, ILogger) MappingBaseClass<MenuItem, DefaultDatabase>.Reference<TDataType>(Expression<Func<MenuItem, TDataType>>) MappingBaseClass<MenuItem, DefaultDatabase>.SetQuery(QueryType, string, CommandType, params IParameter[]) MappingBaseClass<MenuItem, DefaultDatabase>.Setup() MappingBaseClass<MenuItem, DefaultDatabase>.ToString() MappingBaseClass<MenuItem, DefaultDatabase>.AutoIDProperties MappingBaseClass<MenuItem, DefaultDatabase>.DatabaseConfigType MappingBaseClass<MenuItem, DefaultDatabase>.IDProperties MappingBaseClass<MenuItem, DefaultDatabase>.ManyToManyProperties MappingBaseClass<MenuItem, DefaultDatabase>.ManyToOneProperties MappingBaseClass<MenuItem, DefaultDatabase>.MapProperties MappingBaseClass<MenuItem, DefaultDatabase>.Merge MappingBaseClass<MenuItem, DefaultDatabase>.ObjectType MappingBaseClass<MenuItem, DefaultDatabase>.Order MappingBaseClass<MenuItem, DefaultDatabase>.Prefix MappingBaseClass<MenuItem, DefaultDatabase>.Queries MappingBaseClass<MenuItem, DefaultDatabase>.ReferenceProperties MappingBaseClass<MenuItem, DefaultDatabase>.SchemaName MappingBaseClass<MenuItem, DefaultDatabase>.Suffix MappingBaseClass<MenuItem, DefaultDatabase>.TableName object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods GenericExtensions.When<TObject>(TObject, bool, Func<TObject, TObject>) ExpandoObjectExtensions.ConvertToExpando(object?) Constructors MenuItemMapping() Initializes a new instance of the MenuItemMapping class. public MenuItemMapping() See Also MappingBaseClass<TClassType, TDatabaseType>"
  },
  "api/Mithril.Navigation.Models.Mappings.MenuMapping.html": {
    "href": "api/Mithril.Navigation.Models.Mappings.MenuMapping.html",
    "title": "Class MenuMapping | Mithril API Reference",
    "keywords": "Class MenuMapping Namespace Mithril.Navigation.Models.Mappings Assembly Mithril.Navigation.dll Menu mapping public class MenuMapping : MappingBaseClass<Menu, DefaultDatabase>, IMapping<Menu>, IMapping Inheritance object MappingBaseClass<Menu, DefaultDatabase> MenuMapping Implements IMapping<Menu> IMapping Inherited Members MappingBaseClass<Menu, DefaultDatabase>.AddAutoKey() MappingBaseClass<Menu, DefaultDatabase>.ContainsProperty(string) MappingBaseClass<Menu, DefaultDatabase>.Copy(IMapping) MappingBaseClass<Menu, DefaultDatabase>.CopyProperty(IIDProperty) MappingBaseClass<Menu, DefaultDatabase>.CopyProperty(IProperty) MappingBaseClass<Menu, DefaultDatabase>.CopyProperty(IMapProperty) MappingBaseClass<Menu, DefaultDatabase>.CopyProperty(IManyToOneProperty) MappingBaseClass<Menu, DefaultDatabase>.CopyProperty(IManyToManyProperty) MappingBaseClass<Menu, DefaultDatabase>.Equals(object) MappingBaseClass<Menu, DefaultDatabase>.GetColumnName(string) MappingBaseClass<Menu, DefaultDatabase>.GetHashCode() MappingBaseClass<Menu, DefaultDatabase>.ID<TDataType>(Expression<Func<Menu, TDataType>>) MappingBaseClass<Menu, DefaultDatabase>.ManyToMany<TDataType>(Expression<Func<Menu, IList<TDataType>>>) MappingBaseClass<Menu, DefaultDatabase>.ManyToOne<TDataType>(Expression<Func<Menu, IList<TDataType>>>) MappingBaseClass<Menu, DefaultDatabase>.ManyToOne<TDataType>(Expression<Func<Menu, TDataType>>) MappingBaseClass<Menu, DefaultDatabase>.Map<TDataType>(Expression<Func<Menu, TDataType>>) MappingBaseClass<Menu, DefaultDatabase>.Reduce(ILogger) MappingBaseClass<Menu, DefaultDatabase>.Reduce(IMapping, ILogger) MappingBaseClass<Menu, DefaultDatabase>.Reference<TDataType>(Expression<Func<Menu, TDataType>>) MappingBaseClass<Menu, DefaultDatabase>.SetQuery(QueryType, string, CommandType, params IParameter[]) MappingBaseClass<Menu, DefaultDatabase>.Setup() MappingBaseClass<Menu, DefaultDatabase>.ToString() MappingBaseClass<Menu, DefaultDatabase>.AutoIDProperties MappingBaseClass<Menu, DefaultDatabase>.DatabaseConfigType MappingBaseClass<Menu, DefaultDatabase>.IDProperties MappingBaseClass<Menu, DefaultDatabase>.ManyToManyProperties MappingBaseClass<Menu, DefaultDatabase>.ManyToOneProperties MappingBaseClass<Menu, DefaultDatabase>.MapProperties MappingBaseClass<Menu, DefaultDatabase>.Merge MappingBaseClass<Menu, DefaultDatabase>.ObjectType MappingBaseClass<Menu, DefaultDatabase>.Order MappingBaseClass<Menu, DefaultDatabase>.Prefix MappingBaseClass<Menu, DefaultDatabase>.Queries MappingBaseClass<Menu, DefaultDatabase>.ReferenceProperties MappingBaseClass<Menu, DefaultDatabase>.SchemaName MappingBaseClass<Menu, DefaultDatabase>.Suffix MappingBaseClass<Menu, DefaultDatabase>.TableName object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods GenericExtensions.When<TObject>(TObject, bool, Func<TObject, TObject>) ExpandoObjectExtensions.ConvertToExpando(object?) Constructors MenuMapping() Initializes a new instance of the MenuMapping class. public MenuMapping() See Also MappingBaseClass<TClassType, TDatabaseType>"
  },
  "api/Mithril.Navigation.Models.Mappings.html": {
    "href": "api/Mithril.Navigation.Models.Mappings.html",
    "title": "Namespace Mithril.Navigation.Models.Mappings | Mithril API Reference",
    "keywords": "Namespace Mithril.Navigation.Models.Mappings Classes MenuItemMapping Menu item mapping MenuMapping Menu mapping"
  },
  "api/Mithril.Navigation.Models.Menu.html": {
    "href": "api/Mithril.Navigation.Models.Menu.html",
    "title": "Class Menu | Mithril API Reference",
    "keywords": "Class Menu Namespace Mithril.Navigation.Models Assembly Mithril.Navigation.dll Menu entry public class Menu : ModelBase<Menu>, IModel<Menu>, IModel, IEquatable<IModel>, IEquatable<IModel<Menu>>, IComparable, IComparable<Menu>, IEquatable<ModelBase<Menu>> Inheritance object ModelBase<Menu> Menu Implements IModel<Menu> IModel IEquatable<IModel> IEquatable<IModel<Menu>> IComparable IComparable<Menu> IEquatable<ModelBase<Menu>> Inherited Members ModelBase<Menu>.Active ModelBase<Menu>.Creator ModelBase<Menu>.DateCreated ModelBase<Menu>.DateModified ModelBase<Menu>.ID ModelBase<Menu>.Modifier ModelBase<Menu>.TenantID ModelBase<Menu>.All(IDataService) ModelBase<Menu>.AllActive(IDataService) ModelBase<Menu>.AllInactive(IDataService) ModelBase<Menu>.Load(long, IDataService) ModelBase<Menu>.Query(IDataService) ModelBase<Menu>.CanBeModifiedBy(ClaimsPrincipal) ModelBase<Menu>.CompareTo(object) ModelBase<Menu>.DeleteAsync(IDataService, ClaimsPrincipal, bool) ModelBase<Menu>.Equals(IModel) ModelBase<Menu>.Equals(IModel<Menu>) ModelBase<Menu>.Equals(ModelBase<Menu>) ModelBase<Menu>.SaveAsync(IDataService, ClaimsPrincipal) ModelBase<Menu>.SetupObject(IDataService, ClaimsPrincipal) ModelBase<Menu>.SetupObject(IDataService, IUser) ModelBase<Menu>.SetupObjectAndReturn(IDataService, ClaimsPrincipal) object.Equals(object, object) object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Extension Methods GenericExtensions.When<TObject>(TObject, bool, Func<TObject, TObject>) ExpandoObjectExtensions.ConvertToExpando(object?) Constructors Menu() Initializes a new instance of the Menu class. public Menu() Menu(string) Initializes a new instance of the Menu class. public Menu(string display) Parameters display string The display. Exceptions ArgumentNullException display ArgumentException display Properties Display Gets or sets the display name. [Required] [MinLength(1)] [MaxLength(64)] public string? Display { get; set; } Property Value string The display name. Items Gets or sets the items. public virtual IList<MenuItem> Items { get; set; } Property Value IList<MenuItem> The items. Permissions Gets or sets the permission. public virtual IPermission? Permissions { get; set; } Property Value IPermission The permission. Methods AddOrUpdateMenuItem(string?, string?, string?, string?, int, IPermission?) Adds the menu item. public MenuItem AddOrUpdateMenuItem(string? display, string? description, string? icon, string? url, int order = 0, IPermission? permission = null) Parameters display string The display. description string The description. icon string The icon. url string The URL. order int The order. permission IPermission The permission. Returns MenuItem Menu entry AddOrUpdateMenuItem(string, string, string, Uri, int, IPermission?) Adds the menu item. public void AddOrUpdateMenuItem(string display, string description, string icon, Uri url, int order = 0, IPermission? permission = null) Parameters display string The display. description string The description. icon string The icon. url Uri The URL. order int The order. permission IPermission The permission. CanBeViewedBy(ClaimsPrincipal?) Determines whether this instance [can be viewed by] the specified user. public override bool CanBeViewedBy(ClaimsPrincipal? user) Parameters user ClaimsPrincipal The user. Returns bool true if this instance [can be viewed by] the specified user; otherwise, false. CompareTo(Menu?) Compares the object to another object public override int CompareTo(Menu? other) Parameters other Menu Object to compare to Returns int 0 if they are equal, -1 if this is smaller, 1 if it is larger Equals(Menu) Indicates whether the current object is equal to another object of the same type. public bool Equals(Menu other) Parameters other Menu An object to compare with this object. Returns bool true if the current object is equal to the other parameter; otherwise, false. Equals(object?) Determines whether the specified object, is equal to this instance. public override bool Equals(object? obj) Parameters obj object The object to compare with this instance. Returns bool true if the specified object is equal to this instance; otherwise, false. GetHashCode() Returns a hash code for this instance. public override int GetHashCode() Returns int A hash code for this instance, suitable for use in hashing algorithms and data structures like a hash table. Load(string?, IDataService?) Loads the menu by input path. public static Menu? Load(string? display, IDataService? dataService) Parameters display string The display. dataService IDataService The data service. Returns Menu The route specified. LoadOrCreateAsync(string, IDataService?, ClaimsPrincipal?) Loads or creates the route. public static Task<Menu?> LoadOrCreateAsync(string display, IDataService? dataService, ClaimsPrincipal? user) Parameters display string The display. dataService IDataService The data service. user ClaimsPrincipal The user. Returns Task<Menu> The route entry. ToString() Converts to string. public override string ToString() Returns string A string that represents this instance. Operators operator ==(Menu, Menu) Implements the operator ==. public static bool operator ==(Menu first, Menu second) Parameters first Menu The first. second Menu The second. Returns bool The result of the operator. operator >(Menu, Menu) Implements the operator >. public static bool operator >(Menu left, Menu right) Parameters left Menu The left. right Menu The right. Returns bool The result of the operator. operator >=(Menu, Menu) Implements the operator >=. public static bool operator >=(Menu left, Menu right) Parameters left Menu The left. right Menu The right. Returns bool The result of the operator. operator !=(Menu, Menu) Implements the operator !=. public static bool operator !=(Menu left, Menu right) Parameters left Menu The left. right Menu The right. Returns bool The result of the operator. operator <(Menu, Menu) Implements the operator <. public static bool operator <(Menu left, Menu right) Parameters left Menu The left. right Menu The right. Returns bool The result of the operator. operator <=(Menu, Menu) Implements the operator <=. public static bool operator <=(Menu left, Menu right) Parameters left Menu The left. right Menu The right. Returns bool The result of the operator. See Also ModelBase<TClass>"
  },
  "api/Mithril.Navigation.Models.MenuItem.html": {
    "href": "api/Mithril.Navigation.Models.MenuItem.html",
    "title": "Class MenuItem | Mithril API Reference",
    "keywords": "Class MenuItem Namespace Mithril.Navigation.Models Assembly Mithril.Navigation.dll Menu item public class MenuItem : ModelBase<MenuItem>, IModel<MenuItem>, IModel, IEquatable<IModel>, IEquatable<IModel<MenuItem>>, IComparable, IComparable<MenuItem>, IEquatable<ModelBase<MenuItem>>, IEquatable<MenuItem> Inheritance object ModelBase<MenuItem> MenuItem Implements IModel<MenuItem> IModel IEquatable<IModel> IEquatable<IModel<MenuItem>> IComparable IComparable<MenuItem> IEquatable<ModelBase<MenuItem>> IEquatable<MenuItem> Inherited Members ModelBase<MenuItem>.Active ModelBase<MenuItem>.Creator ModelBase<MenuItem>.DateCreated ModelBase<MenuItem>.DateModified ModelBase<MenuItem>.ID ModelBase<MenuItem>.Modifier ModelBase<MenuItem>.TenantID ModelBase<MenuItem>.All(IDataService) ModelBase<MenuItem>.AllActive(IDataService) ModelBase<MenuItem>.AllInactive(IDataService) ModelBase<MenuItem>.Load(long, IDataService) ModelBase<MenuItem>.Query(IDataService) ModelBase<MenuItem>.CanBeModifiedBy(ClaimsPrincipal) ModelBase<MenuItem>.CompareTo(object) ModelBase<MenuItem>.DeleteAsync(IDataService, ClaimsPrincipal, bool) ModelBase<MenuItem>.Equals(IModel) ModelBase<MenuItem>.Equals(IModel<MenuItem>) ModelBase<MenuItem>.Equals(ModelBase<MenuItem>) ModelBase<MenuItem>.SaveAsync(IDataService, ClaimsPrincipal) ModelBase<MenuItem>.SetupObject(IDataService, ClaimsPrincipal) ModelBase<MenuItem>.SetupObject(IDataService, IUser) ModelBase<MenuItem>.SetupObjectAndReturn(IDataService, ClaimsPrincipal) object.Equals(object, object) object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Extension Methods GenericExtensions.When<TObject>(TObject, bool, Func<TObject, TObject>) ExpandoObjectExtensions.ConvertToExpando(object?) Properties Description Gets or sets the description. [MaxLength(1024)] public string? Description { get; set; } Property Value string The description. Display Gets or sets the display name. [Required] [MaxLength(128)] [MinLength(1)] public string? Display { get; set; } Property Value string The display name. Icon Gets or sets the icon. [MaxLength(64)] public string? Icon { get; set; } Property Value string The icon. Order Gets or sets the order. [Compare(0, ComparisonType.GreaterThanOrEqual, \"\")] public int Order { get; set; } Property Value int The order. Parent Gets or sets the parent. [Required] public virtual Menu? Parent { get; set; } Property Value Menu The parent. Permissions Gets or sets the permissions. public virtual IPermission? Permissions { get; set; } Property Value IPermission The permissions. Url Gets or sets the URL. [MaxLength(1024)] public string? Url { get; set; } Property Value string The URL. Methods CanBeViewedBy(ClaimsPrincipal?) Determines whether this instance [can be viewed by] the specified user. public override bool CanBeViewedBy(ClaimsPrincipal? user) Parameters user ClaimsPrincipal The user. Returns bool true if this instance [can be viewed by] the specified user; otherwise, false. CompareTo(MenuItem?) Compares the object to another object public override int CompareTo(MenuItem? other) Parameters other MenuItem Object to compare to Returns int 0 if they are equal, -1 if this is smaller, 1 if it is larger Equals(MenuItem?) Indicates whether the current object is equal to another object of the same type. public bool Equals(MenuItem? other) Parameters other MenuItem An object to compare with this object. Returns bool true if the current object is equal to the other parameter; otherwise, false. Equals(object?) Determines whether the specified object, is equal to this instance. public override bool Equals(object? obj) Parameters obj object The object to compare with this instance. Returns bool true if the specified object is equal to this instance; otherwise, false. GetHashCode() Returns a hash code for this instance. public override int GetHashCode() Returns int A hash code for this instance, suitable for use in hashing algorithms and data structures like a hash table. ToString() Returns a string that represents this instance. public override string ToString() Returns string A string that represents this instance. Operators operator ==(MenuItem, MenuItem) Implements the operator ==. public static bool operator ==(MenuItem first, MenuItem second) Parameters first MenuItem The first. second MenuItem The second. Returns bool The result of the operator. operator >(MenuItem, MenuItem) Implements the operator >. public static bool operator >(MenuItem left, MenuItem right) Parameters left MenuItem The left. right MenuItem The right. Returns bool The result of the operator. operator >=(MenuItem, MenuItem) Implements the operator >=. public static bool operator >=(MenuItem left, MenuItem right) Parameters left MenuItem The left. right MenuItem The right. Returns bool The result of the operator. operator !=(MenuItem, MenuItem) Implements the operator !=. public static bool operator !=(MenuItem left, MenuItem right) Parameters left MenuItem The left. right MenuItem The right. Returns bool The result of the operator. operator <(MenuItem, MenuItem) Implements the operator <. public static bool operator <(MenuItem left, MenuItem right) Parameters left MenuItem The left. right MenuItem The right. Returns bool The result of the operator. operator <=(MenuItem, MenuItem) Implements the operator <=. public static bool operator <=(MenuItem left, MenuItem right) Parameters left MenuItem The left. right MenuItem The right. Returns bool The result of the operator. See Also IEquatable<T> ModelBase<TClass>"
  },
  "api/Mithril.Navigation.Models.html": {
    "href": "api/Mithril.Navigation.Models.html",
    "title": "Namespace Mithril.Navigation.Models | Mithril API Reference",
    "keywords": "Namespace Mithril.Navigation.Models Classes Menu Menu entry MenuItem Menu item"
  },
  "api/Mithril.Navigation.NavigationModule.html": {
    "href": "api/Mithril.Navigation.NavigationModule.html",
    "title": "Class NavigationModule | Mithril API Reference",
    "keywords": "Class NavigationModule Namespace Mithril.Navigation Assembly Mithril.Navigation.dll Navigation module public class NavigationModule : ModuleBaseClass<NavigationModule>, IEquatable<NavigationModule>, IModule Inheritance object ModuleBaseClass<NavigationModule> NavigationModule Implements IEquatable<NavigationModule> IModule Inherited Members ModuleBaseClass<NavigationModule>.Category ModuleBaseClass<NavigationModule>.ContentPath ModuleBaseClass<NavigationModule>.ID ModuleBaseClass<NavigationModule>.LastModified ModuleBaseClass<NavigationModule>.Name ModuleBaseClass<NavigationModule>.Order ModuleBaseClass<NavigationModule>.Tags ModuleBaseClass<NavigationModule>.Version ModuleBaseClass<NavigationModule>.ConfigureApplication(IApplicationBuilder, IConfiguration, IHostEnvironment) ModuleBaseClass<NavigationModule>.ConfigureHostSettings(IHostBuilder, IConfiguration, IHostEnvironment) ModuleBaseClass<NavigationModule>.ConfigureLoggingSettings(ILoggingBuilder, IConfiguration, IHostEnvironment) ModuleBaseClass<NavigationModule>.ConfigureMVC(IMvcBuilder, IConfiguration, IHostEnvironment) ModuleBaseClass<NavigationModule>.ConfigureRoutes(IEndpointRouteBuilder, IConfiguration, IHostEnvironment) ModuleBaseClass<NavigationModule>.ConfigureWebHostSettings(IWebHostBuilder, IConfiguration, IHostEnvironment) ModuleBaseClass<NavigationModule>.Equals(object) ModuleBaseClass<NavigationModule>.Equals(NavigationModule) ModuleBaseClass<NavigationModule>.GetHashCode() ModuleBaseClass<NavigationModule>.InitializeDataAsync(IDataService, IServiceProvider) ModuleBaseClass<NavigationModule>.OnStarted() ModuleBaseClass<NavigationModule>.OnStopped() ModuleBaseClass<NavigationModule>.OnStopping() object.Equals(object, object) object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods GenericExtensions.When<TObject>(TObject, bool, Func<TObject, TObject>) ExpandoObjectExtensions.ConvertToExpando(object?) Properties Features Gets the features. public override IFeature[] Features { get; protected set; } Property Value IFeature[] The features. Methods ConfigureServices(IServiceCollection?, IConfiguration?, IHostEnvironment?) Configures the services for the module. public override IServiceCollection? ConfigureServices(IServiceCollection? services, IConfiguration? configuration, IHostEnvironment? environment) Parameters services IServiceCollection The services collection. configuration IConfiguration The configuration. environment IHostEnvironment The environment. Returns IServiceCollection Services See Also ModuleBaseClass<TModule>"
  },
  "api/Mithril.Navigation.Queries.MenuItemVM.html": {
    "href": "api/Mithril.Navigation.Queries.MenuItemVM.html",
    "title": "Class MenuItemVM | Mithril API Reference",
    "keywords": "Class MenuItemVM Namespace Mithril.Navigation.Queries Assembly Mithril.Navigation.dll MenuItemVM public class MenuItemVM Inheritance object MenuItemVM Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods GenericExtensions.When<TObject>(TObject, bool, Func<TObject, TObject>) ExpandoObjectExtensions.ConvertToExpando(object?) Constructors MenuItemVM(MenuItem?) Initializes a new instance of the MenuItemVM class. public MenuItemVM(MenuItem? data) Parameters data MenuItem The data. Properties Description Gets the description. public string? Description { get; } Property Value string The description. Display Gets the display. public string? Display { get; } Property Value string The display. Icon Gets the icon. public string? Icon { get; } Property Value string The icon. Order Gets the order. public int Order { get; } Property Value int The order. Url Gets the URL. public string? Url { get; } Property Value string The URL."
  },
  "api/Mithril.Navigation.Queries.MenuQuery.html": {
    "href": "api/Mithril.Navigation.Queries.MenuQuery.html",
    "title": "Class MenuQuery | Mithril API Reference",
    "keywords": "Class MenuQuery Namespace Mithril.Navigation.Queries Assembly Mithril.Navigation.dll Menu query public class MenuQuery : QueryBaseClass<MenuVM>, IQuery<MenuVM>, IQuery Inheritance object QueryBaseClass<MenuVM> MenuQuery Implements IQuery<MenuVM> IQuery Inherited Members QueryBaseClass<MenuVM>.DeprecationReason QueryBaseClass<MenuVM>.Description QueryBaseClass<MenuVM>.Features QueryBaseClass<MenuVM>.ReturnType QueryBaseClass<MenuVM>.Version QueryBaseClass<MenuVM>.FeatureManager QueryBaseClass<MenuVM>.Logger QueryBaseClass<MenuVM>.IsFeatureEnabled() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods GenericExtensions.When<TObject>(TObject, bool, Func<TObject, TObject>) ExpandoObjectExtensions.ConvertToExpando(object?) Remarks Initializes a new instance of the MenuQuery class. Constructors MenuQuery(ILogger<MenuQuery>?, IFeatureManager?, IDataService?) Menu query public MenuQuery(ILogger<MenuQuery>? logger, IFeatureManager? featureManager, IDataService? dataService) Parameters logger ILogger<MenuQuery> The logger. featureManager IFeatureManager The feature manager. dataService IDataService The data service. Remarks Initializes a new instance of the MenuQuery class. See Also QueryBaseClass<TClass> Properties Arguments Gets the arguments. public override IArgument[] Arguments { get; } Property Value IArgument[] The arguments. Name Gets the name. public override string Name { get; } Property Value string The name. Methods ResolveAsync(ClaimsPrincipal?, Arguments) Used to resolve the data asked for by the query. public override Task<MenuVM?> ResolveAsync(ClaimsPrincipal? user, Arguments arguments) Parameters user ClaimsPrincipal The user. arguments Arguments The arguments. Returns Task<MenuVM> The data specified. See Also QueryBaseClass<TClass>"
  },
  "api/Mithril.Navigation.Queries.MenuVM.html": {
    "href": "api/Mithril.Navigation.Queries.MenuVM.html",
    "title": "Class MenuVM | Mithril API Reference",
    "keywords": "Class MenuVM Namespace Mithril.Navigation.Queries Assembly Mithril.Navigation.dll MenuVM public class MenuVM Inheritance object MenuVM Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods GenericExtensions.When<TObject>(TObject, bool, Func<TObject, TObject>) ExpandoObjectExtensions.ConvertToExpando(object?) Constructors MenuVM(Menu?, ClaimsPrincipal?) Initializes a new instance of the MenuVM class. public MenuVM(Menu? data, ClaimsPrincipal? user) Parameters data Menu The data. user ClaimsPrincipal The user. Properties Display Gets the display. public string? Display { get; } Property Value string The display. MenuItems Gets the menu items. public List<MenuItemVM> MenuItems { get; } Property Value List<MenuItemVM> The menu items."
  },
  "api/Mithril.Navigation.Queries.html": {
    "href": "api/Mithril.Navigation.Queries.html",
    "title": "Namespace Mithril.Navigation.Queries | Mithril API Reference",
    "keywords": "Namespace Mithril.Navigation.Queries Classes MenuItemVM MenuItemVM MenuQuery Menu query MenuVM MenuVM"
  },
  "api/Mithril.Navigation.Services.MenuBuilder.html": {
    "href": "api/Mithril.Navigation.Services.MenuBuilder.html",
    "title": "Class MenuBuilder | Mithril API Reference",
    "keywords": "Class MenuBuilder Namespace Mithril.Navigation.Services Assembly Mithril.Navigation.dll Menu builder public class MenuBuilder : IMenuBuilder Inheritance object MenuBuilder Implements IMenuBuilder Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods GenericExtensions.When<TObject>(TObject, bool, Func<TObject, TObject>) ExpandoObjectExtensions.ConvertToExpando(object?) Remarks Initializes a new instance of the MenuBuilder class. Constructors MenuBuilder(string, IDataService?, ClaimsPrincipal?) Menu builder public MenuBuilder(string display, IDataService? dataService, ClaimsPrincipal? user) Parameters display string The display. dataService IDataService The data service. user ClaimsPrincipal The user. Remarks Initializes a new instance of the MenuBuilder class. See Also IMenuBuilder Properties Display Gets the display name of the menu. public string Display { get; } Property Value string The display name of the menu. Permissions Gets the permissions. public IPermission? Permissions { get; } Property Value IPermission The permissions. Methods AddOrUpdateMenuItem(string, string, string, string, int, IPermission?) Adds a menu item. public IMenuBuilder AddOrUpdateMenuItem(string display, string description, string icon, string url, int order = 0, IPermission? permission = null) Parameters display string The display. description string The description. icon string The icon. url string The URL. order int The order. permission IPermission The permission. Returns IMenuBuilder This BuildAsync() Builds this instance. public Task BuildAsync() Returns Task The async task. HasMenuItem(string) Determines whether [the menu] [has the menu item specified]. public bool HasMenuItem(string display) Parameters display string The display name. Returns bool true if it [has the menu item specified]; otherwise, false. SetSecurity(IPermission?) Sets the security. public IMenuBuilder SetSecurity(IPermission? permission) Parameters permission IPermission The permission. Returns IMenuBuilder This. See Also IMenuBuilder"
  },
  "api/Mithril.Navigation.Services.MenuService.html": {
    "href": "api/Mithril.Navigation.Services.MenuService.html",
    "title": "Class MenuService | Mithril API Reference",
    "keywords": "Class MenuService Namespace Mithril.Navigation.Services Assembly Mithril.Navigation.dll Menu service public class MenuService : IMenuService Inheritance object MenuService Implements IMenuService Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods GenericExtensions.When<TObject>(TObject, bool, Func<TObject, TObject>) ExpandoObjectExtensions.ConvertToExpando(object?) Remarks Initializes a new instance of the MenuService class. Constructors MenuService(IFeatureManager?, IDataService?) Menu service public MenuService(IFeatureManager? featureManager, IDataService? dataService) Parameters featureManager IFeatureManager The feature manager. dataService IDataService The data service. Remarks Initializes a new instance of the MenuService class. See Also IMenuService Methods CreateMenuBuilder(string, ClaimsPrincipal?) Creates a menu builder. public IMenuBuilder? CreateMenuBuilder(string display, ClaimsPrincipal? user) Parameters display string The display name of the menu. user ClaimsPrincipal The user. Returns IMenuBuilder The menu builder. See Also IMenuService"
  },
  "api/Mithril.Navigation.Services.html": {
    "href": "api/Mithril.Navigation.Services.html",
    "title": "Namespace Mithril.Navigation.Services | Mithril API Reference",
    "keywords": "Namespace Mithril.Navigation.Services Classes MenuBuilder Menu builder MenuService Menu service"
  },
  "api/Mithril.Navigation.html": {
    "href": "api/Mithril.Navigation.html",
    "title": "Namespace Mithril.Navigation | Mithril API Reference",
    "keywords": "Namespace Mithril.Navigation Classes NavigationModule Navigation module"
  },
  "api/Mithril.Program.html": {
    "href": "api/Mithril.Program.html",
    "title": "Class Program | Mithril API Reference",
    "keywords": "Class Program Namespace Mithril Assembly Mithril.dll Main program public static class Program Inheritance object Program Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Methods Main(string[]) Defines the entry point of the application. public static Task Main(string[] args) Parameters args string[] The arguments. Returns Task Main program"
  },
  "api/Mithril.Routing.Abstractions.Admin.DropDowns.RouteDropDown.html": {
    "href": "api/Mithril.Routing.Abstractions.Admin.DropDowns.RouteDropDown.html",
    "title": "Class RouteDropDown | Mithril API Reference",
    "keywords": "Class RouteDropDown Namespace Mithril.Routing.Abstractions.Admin.DropDowns Assembly Mithril.Routing.Abstractions.dll Route drop down public class RouteDropDown : DropDownBaseClass<IRoute>, IDropDownQuery Inheritance object DropDownBaseClass<IRoute> RouteDropDown Implements IDropDownQuery Inherited Members DropDownBaseClass<IRoute>.Name DropDownBaseClass<IRoute>.CanRun(string, ClaimsPrincipal) DropDownBaseClass<IRoute>.GetDataAsync(IDataService, string) DropDownBaseClass<IRoute>.GetValues(IDataService, string, int) DropDownBaseClass<IRoute>.GetKey(IRoute) object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods GenericExtensions.When<TObject>(TObject, bool, Func<TObject, TObject>) ExpandoObjectExtensions.ConvertToExpando(object?) Methods FilterQuery(IQueryable<IRoute>, string) Filters the query. protected override IQueryable<IRoute> FilterQuery(IQueryable<IRoute> query, string value) Parameters query IQueryable<IRoute> The query. value string The value. Returns IQueryable<IRoute> The filtered query See Also DropDownBaseClass<TModel>"
  },
  "api/Mithril.Routing.Abstractions.Admin.DropDowns.html": {
    "href": "api/Mithril.Routing.Abstractions.Admin.DropDowns.html",
    "title": "Namespace Mithril.Routing.Abstractions.Admin.DropDowns | Mithril API Reference",
    "keywords": "Namespace Mithril.Routing.Abstractions.Admin.DropDowns Classes RouteDropDown Route drop down"
  },
  "api/Mithril.Routing.Abstractions.Interfaces.IRoute.html": {
    "href": "api/Mithril.Routing.Abstractions.Interfaces.IRoute.html",
    "title": "Interface IRoute | Mithril API Reference",
    "keywords": "Interface IRoute Namespace Mithril.Routing.Abstractions.Interfaces Assembly Mithril.Routing.Abstractions.dll Route interface public interface IRoute : IModel, IEquatable<IModel> Inherited Members IModel.Active IModel.Creator IModel.DateCreated IModel.DateModified IModel.ID IModel.Modifier IModel.TenantID IModel.CanBeModifiedBy(ClaimsPrincipal) IModel.CanBeViewedBy(ClaimsPrincipal) IModel.DeleteAsync(IDataService, ClaimsPrincipal, bool) IModel.SaveAsync(IDataService, ClaimsPrincipal) IModel.SetupObject(IDataService, ClaimsPrincipal) IModel.SetupObject(IDataService, IUser) IEquatable<IModel>.Equals(IModel) Extension Methods GenericExtensions.When<TObject>(TObject, bool, Func<TObject, TObject>) ExpandoObjectExtensions.ConvertToExpando(object?) Properties InputPath Gets or sets the input path. [Required] [MaxLength(1024)] string? InputPath { get; set; } Property Value string The input path. OutputPath Gets or sets the output path. [Required] [MaxLength(1024)] string? OutputPath { get; set; } Property Value string The output path."
  },
  "api/Mithril.Routing.Abstractions.Interfaces.html": {
    "href": "api/Mithril.Routing.Abstractions.Interfaces.html",
    "title": "Namespace Mithril.Routing.Abstractions.Interfaces | Mithril API Reference",
    "keywords": "Namespace Mithril.Routing.Abstractions.Interfaces Interfaces IRoute Route interface"
  },
  "api/Mithril.Routing.Abstractions.Services.IRouteService.html": {
    "href": "api/Mithril.Routing.Abstractions.Services.IRouteService.html",
    "title": "Interface IRouteService | Mithril API Reference",
    "keywords": "Interface IRouteService Namespace Mithril.Routing.Abstractions.Services Assembly Mithril.Routing.Abstractions.dll Route manager public interface IRouteService Extension Methods GenericExtensions.When<TObject>(TObject, bool, Func<TObject, TObject>) ExpandoObjectExtensions.ConvertToExpando(object?) Methods AddRouteAsync(string, string) Adds the route. Task<IRouteService> AddRouteAsync(string inputPath, string outputPath) Parameters inputPath string The input path. outputPath string The output path. Returns Task<IRouteService> This. GetRoute(string?) Gets the route. IRoute? GetRoute(string? inputPath) Parameters inputPath string The input path. Returns IRoute The route specified."
  },
  "api/Mithril.Routing.Abstractions.Services.html": {
    "href": "api/Mithril.Routing.Abstractions.Services.html",
    "title": "Namespace Mithril.Routing.Abstractions.Services | Mithril API Reference",
    "keywords": "Namespace Mithril.Routing.Abstractions.Services Interfaces IRouteService Route manager"
  },
  "api/Mithril.Routing.Admin.RouteEditor.html": {
    "href": "api/Mithril.Routing.Admin.RouteEditor.html",
    "title": "Class RouteEditor | Mithril API Reference",
    "keywords": "Class RouteEditor Namespace Mithril.Routing.Admin Assembly Mithril.Routing.dll Route editor public class RouteEditor : EntityEditorBaseClass<RouteEntryVM, RouteEntry>, IEntityEditor, IEditor Inheritance object EntityEditorBaseClass<RouteEntryVM> EntityEditorBaseClass<RouteEntryVM, RouteEntry> RouteEditor Implements IEntityEditor IEditor Inherited Members EntityEditorBaseClass<RouteEntryVM, RouteEntry>.ActivateAsync(long, ClaimsPrincipal) EntityEditorBaseClass<RouteEntryVM, RouteEntry>.CanView(ClaimsPrincipal) EntityEditorBaseClass<RouteEntryVM, RouteEntry>.DeleteEntityAsync(long, ClaimsPrincipal) EntityEditorBaseClass<RouteEntryVM, RouteEntry>.Load(long, ExpandoObject, ClaimsPrincipal) EntityEditorBaseClass<RouteEntryVM, RouteEntry>.LoadPageAsync(int, int, string, bool, string, ClaimsPrincipal) EntityEditorBaseClass<RouteEntryVM, RouteEntry>.SaveEntityAsync(long, ExpandoObject, ClaimsPrincipal) EntityEditorBaseClass<RouteEntryVM, RouteEntry>.TotalActiveAsync(ClaimsPrincipal) EntityEditorBaseClass<RouteEntryVM, RouteEntry>.Convert(RouteEntry, bool) EntityEditorBaseClass<RouteEntryVM, RouteEntry>.FilterQueryBySearchQuery(IQueryable<RouteEntry>, string) EntityEditorBaseClass<RouteEntryVM, RouteEntry>.LoadModel(long) EntityEditorBaseClass<RouteEntryVM, RouteEntry>.MakeActiveAsync(RouteEntry) EntityEditorBaseClass<RouteEntryVM, RouteEntry>.MakeInactiveAsync(RouteEntry) EntityEditorBaseClass<RouteEntryVM>.Category EntityEditorBaseClass<RouteEntryVM>.ComponentDefinition EntityEditorBaseClass<RouteEntryVM>.Description EntityEditorBaseClass<RouteEntryVM>.EntityType EntityEditorBaseClass<RouteEntryVM>.Name EntityEditorBaseClass<RouteEntryVM>.DataService EntityEditorBaseClass<RouteEntryVM>.ServiceProvider EntityEditorBaseClass<RouteEntryVM>.ActivateAsync(long, ClaimsPrincipal) EntityEditorBaseClass<RouteEntryVM>.CanView(ClaimsPrincipal) EntityEditorBaseClass<RouteEntryVM>.DeleteEntityAsync(long, ClaimsPrincipal) EntityEditorBaseClass<RouteEntryVM>.Load(long, ExpandoObject, ClaimsPrincipal) EntityEditorBaseClass<RouteEntryVM>.LoadPageAsync(int, int, string, bool, string, ClaimsPrincipal) EntityEditorBaseClass<RouteEntryVM>.SaveEntityAsync(long, ExpandoObject, ClaimsPrincipal) EntityEditorBaseClass<RouteEntryVM>.TotalActiveAsync(ClaimsPrincipal) object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods GenericExtensions.When<TObject>(TObject, bool, Func<TObject, TObject>) ExpandoObjectExtensions.ConvertToExpando(object?) Remarks Initializes a new instance of the RouteEditor class. Constructors RouteEditor(IDataService?, IEntityMetadataService?, IServiceProvider?, string?) Route editor public RouteEditor(IDataService? dataService, IEntityMetadataService? entityMetadataService, IServiceProvider? serviceProvider, string? dataType = null) Parameters dataService IDataService The data service. entityMetadataService IEntityMetadataService The entity metadata service. serviceProvider IServiceProvider The service provider. dataType string Type of the data. Remarks Initializes a new instance of the RouteEditor class. See Also EntityEditorBaseClass<TEntity, TModel> Properties Icon Gets the icon. public override string Icon { get; } Property Value string The icon. Methods Convert(RouteEntry, bool) Converts the model into the appropriate view model. protected override IEntity Convert(RouteEntry model, bool full = true) Parameters model RouteEntry The model. full bool if set to true [full]. Returns IEntity The view model FilterQueryBySearchQuery(IQueryable<RouteEntry>?, string) Filters the query by search term. protected override IQueryable<RouteEntry>? FilterQueryBySearchQuery(IQueryable<RouteEntry>? query, string searchQuery) Parameters query IQueryable<RouteEntry> The query. searchQuery string The search query. Returns IQueryable<RouteEntry> The resulting query. See Also EntityEditorBaseClass<TEntity, TModel>"
  },
  "api/Mithril.Routing.Admin.ViewModels.RouteEntryVM.html": {
    "href": "api/Mithril.Routing.Admin.ViewModels.RouteEntryVM.html",
    "title": "Class RouteEntryVM | Mithril API Reference",
    "keywords": "Class RouteEntryVM Namespace Mithril.Routing.Admin.ViewModels Assembly Mithril.Routing.dll RouteEntry VM public class RouteEntryVM : EntityBaseClass<RouteEntry>, IEntity<RouteEntry>, IEntity Inheritance object EntityBaseClass<RouteEntry> RouteEntryVM Implements IEntity<RouteEntry> IEntity Inherited Members EntityBaseClass<RouteEntry>.Active EntityBaseClass<RouteEntry>.ID object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods GenericExtensions.When<TObject>(TObject, bool, Func<TObject, TObject>) ExpandoObjectExtensions.ConvertToExpando(object?) Constructors RouteEntryVM() Initializes a new instance of the RouteEntryVM class. public RouteEntryVM() RouteEntryVM(RouteEntry) Initializes a new instance of the RouteEntryVM class. public RouteEntryVM(RouteEntry model) Parameters model RouteEntry The model. Properties InputPath Gets or sets the input path. [Required] [MaxLength(1024)] public string? InputPath { get; set; } Property Value string The input path. OutputPath Gets or sets the output path. [Required] [MaxLength(1024)] public string? OutputPath { get; set; } Property Value string The output path. Methods SaveAsync(long, IDataService?, IServiceProvider?, ClaimsPrincipal?) Saves the changes asynchronously. public override Task<RouteEntry?> SaveAsync(long id, IDataService? dataService, IServiceProvider? serviceProvider, ClaimsPrincipal? currentUser) Parameters id long The identifier. dataService IDataService The data service. serviceProvider IServiceProvider The service provider. currentUser ClaimsPrincipal The current user. Returns Task<RouteEntry> The async task. See Also IEntity<TModel>"
  },
  "api/Mithril.Routing.Admin.ViewModels.html": {
    "href": "api/Mithril.Routing.Admin.ViewModels.html",
    "title": "Namespace Mithril.Routing.Admin.ViewModels | Mithril API Reference",
    "keywords": "Namespace Mithril.Routing.Admin.ViewModels Classes RouteEntryVM RouteEntry VM"
  },
  "api/Mithril.Routing.Admin.html": {
    "href": "api/Mithril.Routing.Admin.html",
    "title": "Namespace Mithril.Routing.Admin | Mithril API Reference",
    "keywords": "Namespace Mithril.Routing.Admin Classes RouteEditor Route editor"
  },
  "api/Mithril.Routing.Models.Mappings.IRouteMapping.html": {
    "href": "api/Mithril.Routing.Models.Mappings.IRouteMapping.html",
    "title": "Class IRouteMapping | Mithril API Reference",
    "keywords": "Class IRouteMapping Namespace Mithril.Routing.Models.Mappings Assembly Mithril.Routing.dll IRoute mapping public class IRouteMapping : MappingBaseClass<IRoute, DefaultDatabase>, IMapping<IRoute>, IMapping Inheritance object MappingBaseClass<IRoute, DefaultDatabase> IRouteMapping Implements IMapping<IRoute> IMapping Inherited Members MappingBaseClass<IRoute, DefaultDatabase>.AddAutoKey() MappingBaseClass<IRoute, DefaultDatabase>.ContainsProperty(string) MappingBaseClass<IRoute, DefaultDatabase>.Copy(IMapping) MappingBaseClass<IRoute, DefaultDatabase>.CopyProperty(IIDProperty) MappingBaseClass<IRoute, DefaultDatabase>.CopyProperty(IProperty) MappingBaseClass<IRoute, DefaultDatabase>.CopyProperty(IMapProperty) MappingBaseClass<IRoute, DefaultDatabase>.CopyProperty(IManyToOneProperty) MappingBaseClass<IRoute, DefaultDatabase>.CopyProperty(IManyToManyProperty) MappingBaseClass<IRoute, DefaultDatabase>.Equals(object) MappingBaseClass<IRoute, DefaultDatabase>.GetColumnName(string) MappingBaseClass<IRoute, DefaultDatabase>.GetHashCode() MappingBaseClass<IRoute, DefaultDatabase>.ID<TDataType>(Expression<Func<IRoute, TDataType>>) MappingBaseClass<IRoute, DefaultDatabase>.ManyToMany<TDataType>(Expression<Func<IRoute, IList<TDataType>>>) MappingBaseClass<IRoute, DefaultDatabase>.ManyToOne<TDataType>(Expression<Func<IRoute, IList<TDataType>>>) MappingBaseClass<IRoute, DefaultDatabase>.ManyToOne<TDataType>(Expression<Func<IRoute, TDataType>>) MappingBaseClass<IRoute, DefaultDatabase>.Map<TDataType>(Expression<Func<IRoute, TDataType>>) MappingBaseClass<IRoute, DefaultDatabase>.Reduce(ILogger) MappingBaseClass<IRoute, DefaultDatabase>.Reduce(IMapping, ILogger) MappingBaseClass<IRoute, DefaultDatabase>.Reference<TDataType>(Expression<Func<IRoute, TDataType>>) MappingBaseClass<IRoute, DefaultDatabase>.SetQuery(QueryType, string, CommandType, params IParameter[]) MappingBaseClass<IRoute, DefaultDatabase>.Setup() MappingBaseClass<IRoute, DefaultDatabase>.ToString() MappingBaseClass<IRoute, DefaultDatabase>.AutoIDProperties MappingBaseClass<IRoute, DefaultDatabase>.DatabaseConfigType MappingBaseClass<IRoute, DefaultDatabase>.IDProperties MappingBaseClass<IRoute, DefaultDatabase>.ManyToManyProperties MappingBaseClass<IRoute, DefaultDatabase>.ManyToOneProperties MappingBaseClass<IRoute, DefaultDatabase>.MapProperties MappingBaseClass<IRoute, DefaultDatabase>.Merge MappingBaseClass<IRoute, DefaultDatabase>.ObjectType MappingBaseClass<IRoute, DefaultDatabase>.Order MappingBaseClass<IRoute, DefaultDatabase>.Prefix MappingBaseClass<IRoute, DefaultDatabase>.Queries MappingBaseClass<IRoute, DefaultDatabase>.ReferenceProperties MappingBaseClass<IRoute, DefaultDatabase>.SchemaName MappingBaseClass<IRoute, DefaultDatabase>.Suffix MappingBaseClass<IRoute, DefaultDatabase>.TableName object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods GenericExtensions.When<TObject>(TObject, bool, Func<TObject, TObject>) ExpandoObjectExtensions.ConvertToExpando(object?) Constructors IRouteMapping() Initializes a new instance of the IRouteMapping class. public IRouteMapping() See Also MappingBaseClass<TClassType, TDatabaseType>"
  },
  "api/Mithril.Routing.Models.Mappings.RouteEntryMapping.html": {
    "href": "api/Mithril.Routing.Models.Mappings.RouteEntryMapping.html",
    "title": "Class RouteEntryMapping | Mithril API Reference",
    "keywords": "Class RouteEntryMapping Namespace Mithril.Routing.Models.Mappings Assembly Mithril.Routing.dll Route entry mapping public class RouteEntryMapping : MappingBaseClass<RouteEntry, DefaultDatabase>, IMapping<RouteEntry>, IMapping Inheritance object MappingBaseClass<RouteEntry, DefaultDatabase> RouteEntryMapping Implements IMapping<RouteEntry> IMapping Inherited Members MappingBaseClass<RouteEntry, DefaultDatabase>.AddAutoKey() MappingBaseClass<RouteEntry, DefaultDatabase>.ContainsProperty(string) MappingBaseClass<RouteEntry, DefaultDatabase>.Copy(IMapping) MappingBaseClass<RouteEntry, DefaultDatabase>.CopyProperty(IIDProperty) MappingBaseClass<RouteEntry, DefaultDatabase>.CopyProperty(IProperty) MappingBaseClass<RouteEntry, DefaultDatabase>.CopyProperty(IMapProperty) MappingBaseClass<RouteEntry, DefaultDatabase>.CopyProperty(IManyToOneProperty) MappingBaseClass<RouteEntry, DefaultDatabase>.CopyProperty(IManyToManyProperty) MappingBaseClass<RouteEntry, DefaultDatabase>.Equals(object) MappingBaseClass<RouteEntry, DefaultDatabase>.GetColumnName(string) MappingBaseClass<RouteEntry, DefaultDatabase>.GetHashCode() MappingBaseClass<RouteEntry, DefaultDatabase>.ID<TDataType>(Expression<Func<RouteEntry, TDataType>>) MappingBaseClass<RouteEntry, DefaultDatabase>.ManyToMany<TDataType>(Expression<Func<RouteEntry, IList<TDataType>>>) MappingBaseClass<RouteEntry, DefaultDatabase>.ManyToOne<TDataType>(Expression<Func<RouteEntry, IList<TDataType>>>) MappingBaseClass<RouteEntry, DefaultDatabase>.ManyToOne<TDataType>(Expression<Func<RouteEntry, TDataType>>) MappingBaseClass<RouteEntry, DefaultDatabase>.Map<TDataType>(Expression<Func<RouteEntry, TDataType>>) MappingBaseClass<RouteEntry, DefaultDatabase>.Reduce(ILogger) MappingBaseClass<RouteEntry, DefaultDatabase>.Reduce(IMapping, ILogger) MappingBaseClass<RouteEntry, DefaultDatabase>.Reference<TDataType>(Expression<Func<RouteEntry, TDataType>>) MappingBaseClass<RouteEntry, DefaultDatabase>.SetQuery(QueryType, string, CommandType, params IParameter[]) MappingBaseClass<RouteEntry, DefaultDatabase>.Setup() MappingBaseClass<RouteEntry, DefaultDatabase>.ToString() MappingBaseClass<RouteEntry, DefaultDatabase>.AutoIDProperties MappingBaseClass<RouteEntry, DefaultDatabase>.DatabaseConfigType MappingBaseClass<RouteEntry, DefaultDatabase>.IDProperties MappingBaseClass<RouteEntry, DefaultDatabase>.ManyToManyProperties MappingBaseClass<RouteEntry, DefaultDatabase>.ManyToOneProperties MappingBaseClass<RouteEntry, DefaultDatabase>.MapProperties MappingBaseClass<RouteEntry, DefaultDatabase>.Merge MappingBaseClass<RouteEntry, DefaultDatabase>.ObjectType MappingBaseClass<RouteEntry, DefaultDatabase>.Order MappingBaseClass<RouteEntry, DefaultDatabase>.Prefix MappingBaseClass<RouteEntry, DefaultDatabase>.Queries MappingBaseClass<RouteEntry, DefaultDatabase>.ReferenceProperties MappingBaseClass<RouteEntry, DefaultDatabase>.SchemaName MappingBaseClass<RouteEntry, DefaultDatabase>.Suffix MappingBaseClass<RouteEntry, DefaultDatabase>.TableName object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods GenericExtensions.When<TObject>(TObject, bool, Func<TObject, TObject>) ExpandoObjectExtensions.ConvertToExpando(object?) Constructors RouteEntryMapping() Initializes a new instance of the RouteEntryMapping class. public RouteEntryMapping() See Also MappingBaseClass<TClassType, TDatabaseType>"
  },
  "api/Mithril.Routing.Models.Mappings.html": {
    "href": "api/Mithril.Routing.Models.Mappings.html",
    "title": "Namespace Mithril.Routing.Models.Mappings | Mithril API Reference",
    "keywords": "Namespace Mithril.Routing.Models.Mappings Classes IRouteMapping IRoute mapping RouteEntryMapping Route entry mapping"
  },
  "api/Mithril.Routing.Models.RouteEntry.html": {
    "href": "api/Mithril.Routing.Models.RouteEntry.html",
    "title": "Class RouteEntry | Mithril API Reference",
    "keywords": "Class RouteEntry Namespace Mithril.Routing.Models Assembly Mithril.Routing.dll Route entry public class RouteEntry : ModelBase<RouteEntry>, IModel<RouteEntry>, IEquatable<IModel<RouteEntry>>, IComparable, IComparable<RouteEntry>, IEquatable<ModelBase<RouteEntry>>, IRoute, IModel, IEquatable<IModel> Inheritance object ModelBase<RouteEntry> RouteEntry Implements IModel<RouteEntry> IEquatable<IModel<RouteEntry>> IComparable IComparable<RouteEntry> IEquatable<ModelBase<RouteEntry>> IRoute IModel IEquatable<IModel> Inherited Members ModelBase<RouteEntry>.Active ModelBase<RouteEntry>.Creator ModelBase<RouteEntry>.DateCreated ModelBase<RouteEntry>.DateModified ModelBase<RouteEntry>.ID ModelBase<RouteEntry>.Modifier ModelBase<RouteEntry>.TenantID ModelBase<RouteEntry>.All(IDataService) ModelBase<RouteEntry>.AllActive(IDataService) ModelBase<RouteEntry>.AllInactive(IDataService) ModelBase<RouteEntry>.Load(long, IDataService) ModelBase<RouteEntry>.Query(IDataService) ModelBase<RouteEntry>.CanBeModifiedBy(ClaimsPrincipal) ModelBase<RouteEntry>.CanBeViewedBy(ClaimsPrincipal) ModelBase<RouteEntry>.CompareTo(object) ModelBase<RouteEntry>.DeleteAsync(IDataService, ClaimsPrincipal, bool) ModelBase<RouteEntry>.Equals(IModel) ModelBase<RouteEntry>.Equals(IModel<RouteEntry>) ModelBase<RouteEntry>.Equals(ModelBase<RouteEntry>) ModelBase<RouteEntry>.SaveAsync(IDataService, ClaimsPrincipal) ModelBase<RouteEntry>.SetupObject(IDataService, ClaimsPrincipal) ModelBase<RouteEntry>.SetupObject(IDataService, IUser) ModelBase<RouteEntry>.SetupObjectAndReturn(IDataService, ClaimsPrincipal) object.Equals(object, object) object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Extension Methods GenericExtensions.When<TObject>(TObject, bool, Func<TObject, TObject>) ExpandoObjectExtensions.ConvertToExpando(object?) Constructors RouteEntry() Initializes a new instance of the RouteEntry class. public RouteEntry() RouteEntry(string, string) Initializes a new instance of the RouteEntry class. public RouteEntry(string inputPath, string outputPath) Parameters inputPath string The input path. outputPath string The output path. Exceptions ArgumentNullException inputPath or outputPath ArgumentException inputPath or outputPath Properties InputPath Gets or sets the input path. [Required] [MaxLength(1024)] public string? InputPath { get; set; } Property Value string The input path. OutputPath Gets or sets the output path. [Required] [MaxLength(1024)] public string? OutputPath { get; set; } Property Value string The output path. Methods CompareTo(RouteEntry?) Compares the object to another object public override int CompareTo(RouteEntry? other) Parameters other RouteEntry Object to compare to Returns int 0 if they are equal, -1 if this is smaller, 1 if it is larger Equals(RouteEntry) Indicates whether the current object is equal to another object of the same type. public bool Equals(RouteEntry other) Parameters other RouteEntry An object to compare with this object. Returns bool true if the current object is equal to the other parameter; otherwise, false. Equals(object?) Determines whether the specified object, is equal to this instance. public override bool Equals(object? obj) Parameters obj object The object to compare with this instance. Returns bool true if the specified object is equal to this instance; otherwise, false. GetHashCode() Returns a hash code for this instance. public override int GetHashCode() Returns int A hash code for this instance, suitable for use in hashing algorithms and data structures like a hash table. Load(string?, IDataService?) Loads the route by input path. public static RouteEntry? Load(string? inputPath, IDataService? dataService) Parameters inputPath string The input path. dataService IDataService The data service. Returns RouteEntry The route specified. LoadOrCreateAsync(string, string, IDataService?, ClaimsPrincipal?) Loads or creates the route. public static Task<RouteEntry> LoadOrCreateAsync(string inputPath, string outputPath, IDataService? dataService, ClaimsPrincipal? user) Parameters inputPath string The input path. outputPath string The output path. dataService IDataService The data service. user ClaimsPrincipal The user. Returns Task<RouteEntry> The route entry. ToString() Converts to string. public override string ToString() Returns string A string that represents this instance. Operators operator ==(RouteEntry, RouteEntry) Implements the operator ==. public static bool operator ==(RouteEntry first, RouteEntry second) Parameters first RouteEntry The first. second RouteEntry The second. Returns bool The result of the operator. operator >(RouteEntry, RouteEntry) Implements the operator >. public static bool operator >(RouteEntry left, RouteEntry right) Parameters left RouteEntry The left. right RouteEntry The right. Returns bool The result of the operator. operator >=(RouteEntry, RouteEntry) Implements the operator >=. public static bool operator >=(RouteEntry left, RouteEntry right) Parameters left RouteEntry The left. right RouteEntry The right. Returns bool The result of the operator. operator !=(RouteEntry, RouteEntry) Implements the operator !=. public static bool operator !=(RouteEntry left, RouteEntry right) Parameters left RouteEntry The left. right RouteEntry The right. Returns bool The result of the operator. operator <(RouteEntry, RouteEntry) Implements the operator <. public static bool operator <(RouteEntry left, RouteEntry right) Parameters left RouteEntry The left. right RouteEntry The right. Returns bool The result of the operator. operator <=(RouteEntry, RouteEntry) Implements the operator <=. public static bool operator <=(RouteEntry left, RouteEntry right) Parameters left RouteEntry The left. right RouteEntry The right. Returns bool The result of the operator. See Also ModelBase<TClass> IRoute"
  },
  "api/Mithril.Routing.Models.html": {
    "href": "api/Mithril.Routing.Models.html",
    "title": "Namespace Mithril.Routing.Models | Mithril API Reference",
    "keywords": "Namespace Mithril.Routing.Models Classes RouteEntry Route entry"
  },
  "api/Mithril.Routing.RoutingModule.html": {
    "href": "api/Mithril.Routing.RoutingModule.html",
    "title": "Class RoutingModule | Mithril API Reference",
    "keywords": "Class RoutingModule Namespace Mithril.Routing Assembly Mithril.Routing.dll Routing module public class RoutingModule : ModuleBaseClass<RoutingModule>, IEquatable<RoutingModule>, IModule Inheritance object ModuleBaseClass<RoutingModule> RoutingModule Implements IEquatable<RoutingModule> IModule Inherited Members ModuleBaseClass<RoutingModule>.Category ModuleBaseClass<RoutingModule>.ContentPath ModuleBaseClass<RoutingModule>.Features ModuleBaseClass<RoutingModule>.ID ModuleBaseClass<RoutingModule>.LastModified ModuleBaseClass<RoutingModule>.Name ModuleBaseClass<RoutingModule>.Order ModuleBaseClass<RoutingModule>.Tags ModuleBaseClass<RoutingModule>.Version ModuleBaseClass<RoutingModule>.ConfigureApplication(IApplicationBuilder, IConfiguration, IHostEnvironment) ModuleBaseClass<RoutingModule>.ConfigureHostSettings(IHostBuilder, IConfiguration, IHostEnvironment) ModuleBaseClass<RoutingModule>.ConfigureLoggingSettings(ILoggingBuilder, IConfiguration, IHostEnvironment) ModuleBaseClass<RoutingModule>.ConfigureMVC(IMvcBuilder, IConfiguration, IHostEnvironment) ModuleBaseClass<RoutingModule>.ConfigureWebHostSettings(IWebHostBuilder, IConfiguration, IHostEnvironment) ModuleBaseClass<RoutingModule>.Equals(object) ModuleBaseClass<RoutingModule>.Equals(RoutingModule) ModuleBaseClass<RoutingModule>.GetHashCode() ModuleBaseClass<RoutingModule>.InitializeDataAsync(IDataService, IServiceProvider) ModuleBaseClass<RoutingModule>.OnStarted() ModuleBaseClass<RoutingModule>.OnStopped() ModuleBaseClass<RoutingModule>.OnStopping() object.Equals(object, object) object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods GenericExtensions.When<TObject>(TObject, bool, Func<TObject, TObject>) ExpandoObjectExtensions.ConvertToExpando(object?) Methods ConfigureRoutes(IEndpointRouteBuilder?, IConfiguration?, IHostEnvironment?) Configures the routes. public override IEndpointRouteBuilder? ConfigureRoutes(IEndpointRouteBuilder? endpoints, IConfiguration? configuration, IHostEnvironment? environment) Parameters endpoints IEndpointRouteBuilder The endpoints. configuration IConfiguration The configuration. environment IHostEnvironment The environment. Returns IEndpointRouteBuilder Endpoint route builder ConfigureServices(IServiceCollection?, IConfiguration?, IHostEnvironment?) Configures the services for the module. public override IServiceCollection? ConfigureServices(IServiceCollection? services, IConfiguration? configuration, IHostEnvironment? environment) Parameters services IServiceCollection The services collection. configuration IConfiguration The configuration. environment IHostEnvironment The environment. Returns IServiceCollection Services See Also ModuleBaseClass<TModule>"
  },
  "api/Mithril.Routing.Services.RouteService.html": {
    "href": "api/Mithril.Routing.Services.RouteService.html",
    "title": "Class RouteService | Mithril API Reference",
    "keywords": "Class RouteService Namespace Mithril.Routing.Services Assembly Mithril.Routing.dll Route service public class RouteService : IRouteService Inheritance object RouteService Implements IRouteService Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods GenericExtensions.When<TObject>(TObject, bool, Func<TObject, TObject>) ExpandoObjectExtensions.ConvertToExpando(object?) Remarks Initializes a new instance of the RouteService class. Constructors RouteService(IDataService?) Route service public RouteService(IDataService? dataService) Parameters dataService IDataService The data service. Remarks Initializes a new instance of the RouteService class. See Also IRouteService Methods AddRouteAsync(string, string) Adds the route. public Task<IRouteService> AddRouteAsync(string inputPath, string outputPath) Parameters inputPath string The input path. outputPath string The output path. Returns Task<IRouteService> This. GetRoute(string?) Gets the route. public IRoute? GetRoute(string? inputPath) Parameters inputPath string The input path. Returns IRoute The route specified. See Also IRouteService"
  },
  "api/Mithril.Routing.Services.html": {
    "href": "api/Mithril.Routing.Services.html",
    "title": "Namespace Mithril.Routing.Services | Mithril API Reference",
    "keywords": "Namespace Mithril.Routing.Services Classes RouteService Route service"
  },
  "api/Mithril.Routing.Transformers.RouteTransformer.html": {
    "href": "api/Mithril.Routing.Transformers.RouteTransformer.html",
    "title": "Class RouteTransformer | Mithril API Reference",
    "keywords": "Class RouteTransformer Namespace Mithril.Routing.Transformers Assembly Mithril.Routing.dll Route transformer public class RouteTransformer : DynamicRouteValueTransformer Inheritance object DynamicRouteValueTransformer RouteTransformer Inherited Members DynamicRouteValueTransformer.FilterAsync(HttpContext, RouteValueDictionary, IReadOnlyList<Endpoint>) DynamicRouteValueTransformer.State object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods GenericExtensions.When<TObject>(TObject, bool, Func<TObject, TObject>) ExpandoObjectExtensions.ConvertToExpando(object?) Remarks Initializes a new instance of the RouteTransformer class. Constructors RouteTransformer(IRouteService?) Route transformer public RouteTransformer(IRouteService? routeManager) Parameters routeManager IRouteService The route manager. Remarks Initializes a new instance of the RouteTransformer class. See Also DynamicRouteValueTransformer Properties RouteManager Gets the route manager. public IRouteService? RouteManager { get; } Property Value IRouteService The route manager. Methods TransformAsync(HttpContext, RouteValueDictionary) Creates a set of transformed route values that will be used to select an action. public override ValueTask<RouteValueDictionary> TransformAsync(HttpContext httpContext, RouteValueDictionary values) Parameters httpContext HttpContext The HttpContext associated with the current request. values RouteValueDictionary The route values associated with the current match. Implementations should not modify values. Returns ValueTask<RouteValueDictionary> A task which asynchronously returns a set of route values. See Also DynamicRouteValueTransformer"
  },
  "api/Mithril.Routing.Transformers.html": {
    "href": "api/Mithril.Routing.Transformers.html",
    "title": "Namespace Mithril.Routing.Transformers | Mithril API Reference",
    "keywords": "Namespace Mithril.Routing.Transformers Classes RouteTransformer Route transformer"
  },
  "api/Mithril.Routing.html": {
    "href": "api/Mithril.Routing.html",
    "title": "Namespace Mithril.Routing | Mithril API Reference",
    "keywords": "Namespace Mithril.Routing Classes RoutingModule Routing module"
  },
  "api/Mithril.Security.Abstractions.Admin.ViewModels.ClaimDropDownVM.html": {
    "href": "api/Mithril.Security.Abstractions.Admin.ViewModels.ClaimDropDownVM.html",
    "title": "Class ClaimDropDownVM | Mithril API Reference",
    "keywords": "Class ClaimDropDownVM Namespace Mithril.Security.Abstractions.Admin.ViewModels Assembly Mithril.Security.Abstractions.dll Claim Drop Down VM public class ClaimDropDownVM Inheritance object ClaimDropDownVM Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods GenericExtensions.When<TObject>(TObject, bool, Func<TObject, TObject>) ExpandoObjectExtensions.ConvertToExpando(object?) Constructors ClaimDropDownVM() Initializes a new instance of the ClaimDropDownVM class. public ClaimDropDownVM() ClaimDropDownVM(IUserClaim) Initializes a new instance of the ClaimDropDownVM class. public ClaimDropDownVM(IUserClaim claim) Parameters claim IUserClaim The claim. Properties Claim Gets or sets the claim. [Order(1)] [Select(typeof(UserClaimDropDown), \"\")] public long Claim { get; set; } Property Value long The claim."
  },
  "api/Mithril.Security.Abstractions.Admin.ViewModels.html": {
    "href": "api/Mithril.Security.Abstractions.Admin.ViewModels.html",
    "title": "Namespace Mithril.Security.Abstractions.Admin.ViewModels | Mithril API Reference",
    "keywords": "Namespace Mithril.Security.Abstractions.Admin.ViewModels Classes ClaimDropDownVM Claim Drop Down VM"
  },
  "api/Mithril.Security.Abstractions.Enums.PermissionType.html": {
    "href": "api/Mithril.Security.Abstractions.Enums.PermissionType.html",
    "title": "Enum PermissionType | Mithril API Reference",
    "keywords": "Enum PermissionType Namespace Mithril.Security.Abstractions.Enums Assembly Mithril.Security.Abstractions.dll Permission type public enum PermissionType Extension Methods GenericExtensions.When<TObject>(TObject, bool, Func<TObject, TObject>) ExpandoObjectExtensions.ConvertToExpando(object?) Fields All = 0 All claims must match in order to be true Any = 1 Any claims can match in order to be true"
  },
  "api/Mithril.Security.Abstractions.Enums.SystemPermissions.html": {
    "href": "api/Mithril.Security.Abstractions.Enums.SystemPermissions.html",
    "title": "Class SystemPermissions | Mithril API Reference",
    "keywords": "Class SystemPermissions Namespace Mithril.Security.Abstractions.Enums Assembly Mithril.Security.Abstractions.dll Common system permissions. public class SystemPermissions : StringEnumBaseClass<SystemPermissions> Inheritance object StringEnumBaseClass<SystemPermissions> SystemPermissions Inherited Members StringEnumBaseClass<SystemPermissions>.ToStringEnumBaseClass(string) StringEnumBaseClass<SystemPermissions>.ToString() StringEnumBaseClass<SystemPermissions>.Name object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Extension Methods GenericExtensions.When<TObject>(TObject, bool, Func<TObject, TObject>) ExpandoObjectExtensions.ConvertToExpando(object?) Constructors SystemPermissions() Initializes a new instance of the SystemPermissions class. public SystemPermissions() SystemPermissions(string) Initializes a new instance of the SystemPermissions class. public SystemPermissions(string name) Parameters name string The name. Properties AdminOnly Gets the admin only. public static SystemPermissions AdminOnly { get; } Property Value SystemPermissions The admin only. ContentEditor Gets the content editor. public static SystemPermissions ContentEditor { get; } Property Value SystemPermissions The content editor. DataEditor Gets the data editor. public static SystemPermissions DataEditor { get; } Property Value SystemPermissions The data editor. FormEditor Gets the form editor. public static SystemPermissions FormEditor { get; } Property Value SystemPermissions The form editor. ReportEditor Gets the report editor. public static SystemPermissions ReportEditor { get; } Property Value SystemPermissions The report editor. User Gets the user. public static SystemPermissions User { get; } Property Value SystemPermissions The user. See Also StringEnumBaseClass<TClass>"
  },
  "api/Mithril.Security.Abstractions.Enums.html": {
    "href": "api/Mithril.Security.Abstractions.Enums.html",
    "title": "Namespace Mithril.Security.Abstractions.Enums | Mithril API Reference",
    "keywords": "Namespace Mithril.Security.Abstractions.Enums Classes SystemPermissions Common system permissions. Enums PermissionType Permission type"
  },
  "api/Mithril.Security.Abstractions.Interfaces.IPermission.html": {
    "href": "api/Mithril.Security.Abstractions.Interfaces.IPermission.html",
    "title": "Interface IPermission | Mithril API Reference",
    "keywords": "Interface IPermission Namespace Mithril.Security.Abstractions.Interfaces Assembly Mithril.Security.Abstractions.dll Permission interface public interface IPermission : IModel, IEquatable<IModel>, IEquatable<IPermission> Inherited Members IModel.Active IModel.Creator IModel.DateCreated IModel.DateModified IModel.ID IModel.Modifier IModel.TenantID IModel.CanBeModifiedBy(ClaimsPrincipal) IModel.CanBeViewedBy(ClaimsPrincipal) IModel.DeleteAsync(IDataService, ClaimsPrincipal, bool) IModel.SaveAsync(IDataService, ClaimsPrincipal) IModel.SetupObject(IDataService, ClaimsPrincipal) IModel.SetupObject(IDataService, IUser) IEquatable<IModel>.Equals(IModel) IEquatable<IPermission>.Equals(IPermission) Extension Methods GenericExtensions.When<TObject>(TObject, bool, Func<TObject, TObject>) ExpandoObjectExtensions.ConvertToExpando(object?) Properties Claims Gets the claims. IList<IUserClaim> Claims { get; } Property Value IList<IUserClaim> The claims. DisplayName Gets or sets the display name. [Required] [MinLength(1)] [MaxLength(128)] string? DisplayName { get; set; } Property Value string The display name. Operand Gets or sets the operand. PermissionType Operand { get; set; } Property Value PermissionType The operand. Methods AddClaim(IUserClaim?) Adds the claim. IPermission AddClaim(IUserClaim? claim) Parameters claim IUserClaim The claim. Returns IPermission This. HasPermission(IUser?) Determines whether the specified user has permission. bool HasPermission(IUser? user) Parameters user IUser The user. Returns bool true if the specified user has permission; otherwise, false. HasPermission(ClaimsPrincipal?) Determines whether the specified user has permission. bool HasPermission(ClaimsPrincipal? user) Parameters user ClaimsPrincipal The user. Returns bool true if the specified user has permission; otherwise, false. RemoveClaim(IUserClaim?) Removes the claim. IPermission RemoveClaim(IUserClaim? claim) Parameters claim IUserClaim The claim. Returns IPermission This. ReplaceClaim(IUserClaim?, IUserClaim?) Replaces the claim. IPermission ReplaceClaim(IUserClaim? originalClaim, IUserClaim? newClaim) Parameters originalClaim IUserClaim The original claim. newClaim IUserClaim The new claim. Returns IPermission This See Also IModel"
  },
  "api/Mithril.Security.Abstractions.Interfaces.ITenant.html": {
    "href": "api/Mithril.Security.Abstractions.Interfaces.ITenant.html",
    "title": "Interface ITenant | Mithril API Reference",
    "keywords": "Interface ITenant Namespace Mithril.Security.Abstractions.Interfaces Assembly Mithril.Security.Abstractions.dll Tenant interface public interface ITenant : IModel, IEquatable<IModel>, IEquatable<ITenant> Inherited Members IModel.Active IModel.Creator IModel.DateCreated IModel.DateModified IModel.ID IModel.Modifier IModel.TenantID IModel.CanBeModifiedBy(ClaimsPrincipal) IModel.CanBeViewedBy(ClaimsPrincipal) IModel.DeleteAsync(IDataService, ClaimsPrincipal, bool) IModel.SaveAsync(IDataService, ClaimsPrincipal) IModel.SetupObject(IDataService, ClaimsPrincipal) IModel.SetupObject(IDataService, IUser) IEquatable<IModel>.Equals(IModel) IEquatable<ITenant>.Equals(ITenant) Extension Methods GenericExtensions.When<TObject>(TObject, bool, Func<TObject, TObject>) ExpandoObjectExtensions.ConvertToExpando(object?) Properties DisplayName Gets or sets the full name. string? DisplayName { get; set; } Property Value string The full name. Users Gets or sets the users. IList<IUser> Users { get; set; } Property Value IList<IUser> The users. See Also IModel"
  },
  "api/Mithril.Security.Abstractions.Interfaces.html": {
    "href": "api/Mithril.Security.Abstractions.Interfaces.html",
    "title": "Namespace Mithril.Security.Abstractions.Interfaces | Mithril API Reference",
    "keywords": "Namespace Mithril.Security.Abstractions.Interfaces Interfaces IPermission Permission interface ITenant Tenant interface"
  },
  "api/Mithril.Security.Abstractions.Services.ISecurityService.html": {
    "href": "api/Mithril.Security.Abstractions.Services.ISecurityService.html",
    "title": "Interface ISecurityService | Mithril API Reference",
    "keywords": "Interface ISecurityService Namespace Mithril.Security.Abstractions.Services Assembly Mithril.Security.Abstractions.dll Permission service public interface ISecurityService Extension Methods GenericExtensions.When<TObject>(TObject, bool, Func<TObject, TObject>) ExpandoObjectExtensions.ConvertToExpando(object?) Methods LoadAllTenants() Loads all tenants. IEnumerable<ITenant> LoadAllTenants() Returns IEnumerable<ITenant> All tenants. LoadAllUsers() Loads all users. IEnumerable<IUser> LoadAllUsers() Returns IEnumerable<IUser> All users. LoadAnonymousUserAccount() Loads the anonymous user account. IUser? LoadAnonymousUserAccount() Returns IUser The anonymous user account. LoadClaim(UserClaimTypes, string) Loads the user claim specified by the identifier. IUserClaim? LoadClaim(UserClaimTypes type, string value) Parameters type UserClaimTypes The type. value string The value. Returns IUserClaim The user claim specified. LoadClaim(long) Loads the user claim specified by the identifier. IUserClaim? LoadClaim(long id) Parameters id long The identifier. Returns IUserClaim The user claim specified. LoadCurrentUser() Loads the current user. IUser? LoadCurrentUser() Returns IUser The current user. LoadOrCreateClaimAsync(UserClaimTypes, string) Loads or creates the user claim asynchronously based on the type and value. Task<IUserClaim> LoadOrCreateClaimAsync(UserClaimTypes type, string value) Parameters type UserClaimTypes The type. value string The value. Returns Task<IUserClaim> The user claim specified. LoadOrCreatePermissionAsync(string, PermissionType, params IUserClaim[]) Loads or creates the permission asynchronously based on the display name. Task<IPermission> LoadOrCreatePermissionAsync(string displayName, PermissionType operand, params IUserClaim[] claims) Parameters displayName string The display name. operand PermissionType The operand. claims IUserClaim[] The claims. Returns Task<IPermission> The permission specified. LoadPermission(SystemPermissions) Loads the permission specified. IPermission? LoadPermission(SystemPermissions permission) Parameters permission SystemPermissions The permission. Returns IPermission The permission specified. LoadPermission(string) Loads the permission specified. IPermission? LoadPermission(string displayName) Parameters displayName string The display name. Returns IPermission The permission specified. LoadSystemAccount() Loads the system account. IUser? LoadSystemAccount() Returns IUser The system account. LoadSystemTenant() Loads the system tenant. ITenant? LoadSystemTenant() Returns ITenant The system tenant."
  },
  "api/Mithril.Security.Abstractions.Services.html": {
    "href": "api/Mithril.Security.Abstractions.Services.html",
    "title": "Namespace Mithril.Security.Abstractions.Services | Mithril API Reference",
    "keywords": "Namespace Mithril.Security.Abstractions.Services Interfaces ISecurityService Permission service"
  },
  "api/Mithril.Security.Abstractions.SystemAccounts.html": {
    "href": "api/Mithril.Security.Abstractions.SystemAccounts.html",
    "title": "Class SystemAccounts | Mithril API Reference",
    "keywords": "Class SystemAccounts Namespace Mithril.Security.Abstractions Assembly Mithril.Security.Abstractions.dll System accounts public class SystemAccounts Inheritance object SystemAccounts Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods GenericExtensions.When<TObject>(TObject, bool, Func<TObject, TObject>) ExpandoObjectExtensions.ConvertToExpando(object?) Constructors SystemAccounts() Initializes a new instance of the SystemAccounts class. public SystemAccounts() Properties AnonymousClaimsPrincipal Gets the anonymous claims principal. public ClaimsPrincipal AnonymousClaimsPrincipal { get; } Property Value ClaimsPrincipal The anonymous claims principal. SystemClaimsPrincipal Gets the system claims principal. public ClaimsPrincipal SystemClaimsPrincipal { get; } Property Value ClaimsPrincipal The system claims principal."
  },
  "api/Mithril.Security.Abstractions.html": {
    "href": "api/Mithril.Security.Abstractions.html",
    "title": "Namespace Mithril.Security.Abstractions | Mithril API Reference",
    "keywords": "Namespace Mithril.Security.Abstractions Classes SystemAccounts System accounts"
  },
  "api/Mithril.Security.Admin.DropDowns.ClaimTypesDropDown.html": {
    "href": "api/Mithril.Security.Admin.DropDowns.ClaimTypesDropDown.html",
    "title": "Class ClaimTypesDropDown | Mithril API Reference",
    "keywords": "Class ClaimTypesDropDown Namespace Mithril.Security.Admin.DropDowns Assembly Mithril.Security.dll Claim Types Drop Down public class ClaimTypesDropDown : IDropDownQuery Inheritance object ClaimTypesDropDown Implements IDropDownQuery Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods GenericExtensions.When<TObject>(TObject, bool, Func<TObject, TObject>) ExpandoObjectExtensions.ConvertToExpando(object?) Remarks Initializes a new instance of the ClaimTypesDropDown class. Constructors ClaimTypesDropDown(SQLHelper?) Claim Types Drop Down public ClaimTypesDropDown(SQLHelper? sQLHelper) Parameters sQLHelper SQLHelper The s ql helper. Remarks Initializes a new instance of the ClaimTypesDropDown class. See Also IDropDownQuery Properties Name Gets the name. public string Name { get; } Property Value string The name. Methods CanRun(string?, ClaimsPrincipal?) Determines whether this instance can run the specified data type. public bool CanRun(string? dataType, ClaimsPrincipal? user) Parameters dataType string Type of the data. user ClaimsPrincipal The user. Returns bool true if this instance can run the specified data type; otherwise, false. GetDataAsync(IDataService?, string?) Gets the data asynchronously. public Task<IEnumerable<DropDownVM<long>>?> GetDataAsync(IDataService? dataService, string? filter) Parameters dataService IDataService The data service. filter string The filter. Returns Task<IEnumerable<DropDownVM<long>>> The drop down items. See Also IDropDownQuery"
  },
  "api/Mithril.Security.Admin.DropDowns.TenantDropDown.html": {
    "href": "api/Mithril.Security.Admin.DropDowns.TenantDropDown.html",
    "title": "Class TenantDropDown | Mithril API Reference",
    "keywords": "Class TenantDropDown Namespace Mithril.Security.Admin.DropDowns Assembly Mithril.Security.dll Tenant drop down public class TenantDropDown : DropDownBaseClass<Tenant>, IDropDownQuery Inheritance object DropDownBaseClass<Tenant> TenantDropDown Implements IDropDownQuery Inherited Members DropDownBaseClass<Tenant>.Name DropDownBaseClass<Tenant>.CanRun(string, ClaimsPrincipal) DropDownBaseClass<Tenant>.GetDataAsync(IDataService, string) DropDownBaseClass<Tenant>.GetValues(IDataService, string, int) DropDownBaseClass<Tenant>.GetKey(Tenant) object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods GenericExtensions.When<TObject>(TObject, bool, Func<TObject, TObject>) ExpandoObjectExtensions.ConvertToExpando(object?) Methods FilterQuery(IQueryable<Tenant>, string) Filters the query. protected override IQueryable<Tenant> FilterQuery(IQueryable<Tenant> query, string value) Parameters query IQueryable<Tenant> The query. value string The value. Returns IQueryable<Tenant> The filtered query See Also DropDownBaseClass<TModel>"
  },
  "api/Mithril.Security.Admin.DropDowns.html": {
    "href": "api/Mithril.Security.Admin.DropDowns.html",
    "title": "Namespace Mithril.Security.Admin.DropDowns | Mithril API Reference",
    "keywords": "Namespace Mithril.Security.Admin.DropDowns Classes ClaimTypesDropDown Claim Types Drop Down TenantDropDown Tenant drop down"
  },
  "api/Mithril.Security.Admin.PermissionEditor.html": {
    "href": "api/Mithril.Security.Admin.PermissionEditor.html",
    "title": "Class PermissionEditor | Mithril API Reference",
    "keywords": "Class PermissionEditor Namespace Mithril.Security.Admin Assembly Mithril.Security.dll Permission editor service public class PermissionEditor : EntityEditorBaseClass<PermissionVM, Permission>, IEntityEditor, IEditor Inheritance object EntityEditorBaseClass<PermissionVM> EntityEditorBaseClass<PermissionVM, Permission> PermissionEditor Implements IEntityEditor IEditor Inherited Members EntityEditorBaseClass<PermissionVM, Permission>.ActivateAsync(long, ClaimsPrincipal) EntityEditorBaseClass<PermissionVM, Permission>.CanView(ClaimsPrincipal) EntityEditorBaseClass<PermissionVM, Permission>.DeleteEntityAsync(long, ClaimsPrincipal) EntityEditorBaseClass<PermissionVM, Permission>.Load(long, ExpandoObject, ClaimsPrincipal) EntityEditorBaseClass<PermissionVM, Permission>.LoadPageAsync(int, int, string, bool, string, ClaimsPrincipal) EntityEditorBaseClass<PermissionVM, Permission>.SaveEntityAsync(long, ExpandoObject, ClaimsPrincipal) EntityEditorBaseClass<PermissionVM, Permission>.TotalActiveAsync(ClaimsPrincipal) EntityEditorBaseClass<PermissionVM, Permission>.Convert(Permission, bool) EntityEditorBaseClass<PermissionVM, Permission>.FilterQueryBySearchQuery(IQueryable<Permission>, string) EntityEditorBaseClass<PermissionVM, Permission>.LoadModel(long) EntityEditorBaseClass<PermissionVM, Permission>.MakeActiveAsync(Permission) EntityEditorBaseClass<PermissionVM, Permission>.MakeInactiveAsync(Permission) EntityEditorBaseClass<PermissionVM>.Category EntityEditorBaseClass<PermissionVM>.ComponentDefinition EntityEditorBaseClass<PermissionVM>.Description EntityEditorBaseClass<PermissionVM>.EntityType EntityEditorBaseClass<PermissionVM>.Name EntityEditorBaseClass<PermissionVM>.DataService EntityEditorBaseClass<PermissionVM>.ServiceProvider EntityEditorBaseClass<PermissionVM>.ActivateAsync(long, ClaimsPrincipal) EntityEditorBaseClass<PermissionVM>.CanView(ClaimsPrincipal) EntityEditorBaseClass<PermissionVM>.DeleteEntityAsync(long, ClaimsPrincipal) EntityEditorBaseClass<PermissionVM>.Load(long, ExpandoObject, ClaimsPrincipal) EntityEditorBaseClass<PermissionVM>.LoadPageAsync(int, int, string, bool, string, ClaimsPrincipal) EntityEditorBaseClass<PermissionVM>.SaveEntityAsync(long, ExpandoObject, ClaimsPrincipal) EntityEditorBaseClass<PermissionVM>.TotalActiveAsync(ClaimsPrincipal) object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods GenericExtensions.When<TObject>(TObject, bool, Func<TObject, TObject>) ExpandoObjectExtensions.ConvertToExpando(object?) Remarks Initializes a new instance of the PermissionEditor class. Constructors PermissionEditor(IDataService?, IEntityMetadataService?, IServiceProvider?, string?) Permission editor service public PermissionEditor(IDataService? dataService, IEntityMetadataService? entityMetadataService, IServiceProvider? serviceProvider, string? dataType = null) Parameters dataService IDataService The data service. entityMetadataService IEntityMetadataService The entity metadata service. serviceProvider IServiceProvider The service provider. dataType string Type of the data. Remarks Initializes a new instance of the PermissionEditor class. See Also EntityEditorBaseClass<TEntity, TModel> Properties Icon Gets the icon. public override string Icon { get; } Property Value string The icon. Methods Convert(Permission, bool) Converts the model into the appropriate view model. protected override IEntity Convert(Permission model, bool full = true) Parameters model Permission The model. full bool if set to true [full]. Returns IEntity The view model FilterQueryBySearchQuery(IQueryable<Permission>?, string) Filters the query by search term. protected override IQueryable<Permission>? FilterQueryBySearchQuery(IQueryable<Permission>? query, string searchQuery) Parameters query IQueryable<Permission> The query. searchQuery string The search query. Returns IQueryable<Permission> The resulting query. See Also EntityEditorBaseClass<TEntity, TModel>"
  },
  "api/Mithril.Security.Admin.TenantEditor.html": {
    "href": "api/Mithril.Security.Admin.TenantEditor.html",
    "title": "Class TenantEditor | Mithril API Reference",
    "keywords": "Class TenantEditor Namespace Mithril.Security.Admin Assembly Mithril.Security.dll Tenant Editor public class TenantEditor : EntityEditorBaseClass<TenantVM, Tenant>, IEntityEditor, IEditor Inheritance object EntityEditorBaseClass<TenantVM> EntityEditorBaseClass<TenantVM, Tenant> TenantEditor Implements IEntityEditor IEditor Inherited Members EntityEditorBaseClass<TenantVM, Tenant>.ActivateAsync(long, ClaimsPrincipal) EntityEditorBaseClass<TenantVM, Tenant>.CanView(ClaimsPrincipal) EntityEditorBaseClass<TenantVM, Tenant>.DeleteEntityAsync(long, ClaimsPrincipal) EntityEditorBaseClass<TenantVM, Tenant>.Load(long, ExpandoObject, ClaimsPrincipal) EntityEditorBaseClass<TenantVM, Tenant>.LoadPageAsync(int, int, string, bool, string, ClaimsPrincipal) EntityEditorBaseClass<TenantVM, Tenant>.SaveEntityAsync(long, ExpandoObject, ClaimsPrincipal) EntityEditorBaseClass<TenantVM, Tenant>.TotalActiveAsync(ClaimsPrincipal) EntityEditorBaseClass<TenantVM, Tenant>.Convert(Tenant, bool) EntityEditorBaseClass<TenantVM, Tenant>.FilterQueryBySearchQuery(IQueryable<Tenant>, string) EntityEditorBaseClass<TenantVM, Tenant>.LoadModel(long) EntityEditorBaseClass<TenantVM, Tenant>.MakeActiveAsync(Tenant) EntityEditorBaseClass<TenantVM, Tenant>.MakeInactiveAsync(Tenant) EntityEditorBaseClass<TenantVM>.Category EntityEditorBaseClass<TenantVM>.ComponentDefinition EntityEditorBaseClass<TenantVM>.Description EntityEditorBaseClass<TenantVM>.EntityType EntityEditorBaseClass<TenantVM>.Name EntityEditorBaseClass<TenantVM>.DataService EntityEditorBaseClass<TenantVM>.ServiceProvider EntityEditorBaseClass<TenantVM>.ActivateAsync(long, ClaimsPrincipal) EntityEditorBaseClass<TenantVM>.CanView(ClaimsPrincipal) EntityEditorBaseClass<TenantVM>.DeleteEntityAsync(long, ClaimsPrincipal) EntityEditorBaseClass<TenantVM>.Load(long, ExpandoObject, ClaimsPrincipal) EntityEditorBaseClass<TenantVM>.LoadPageAsync(int, int, string, bool, string, ClaimsPrincipal) EntityEditorBaseClass<TenantVM>.SaveEntityAsync(long, ExpandoObject, ClaimsPrincipal) EntityEditorBaseClass<TenantVM>.TotalActiveAsync(ClaimsPrincipal) object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods GenericExtensions.When<TObject>(TObject, bool, Func<TObject, TObject>) ExpandoObjectExtensions.ConvertToExpando(object?) Remarks Initializes a new instance of the TenantEditor class. Constructors TenantEditor(IDataService?, IEntityMetadataService?, IServiceProvider?, string?) Tenant Editor public TenantEditor(IDataService? dataService, IEntityMetadataService? entityMetadataService, IServiceProvider? serviceProvider, string? dataType = null) Parameters dataService IDataService The data service. entityMetadataService IEntityMetadataService The entity metadata service. serviceProvider IServiceProvider The service provider. dataType string Type of the data. Remarks Initializes a new instance of the TenantEditor class. See Also EntityEditorBaseClass<TEntity, TModel> Properties Icon Gets the icon. public override string Icon { get; } Property Value string The icon. Methods Convert(Tenant, bool) Converts the model into the appropriate view model. protected override IEntity Convert(Tenant model, bool full = true) Parameters model Tenant The model. full bool if set to true [full]. Returns IEntity The view model FilterQueryBySearchQuery(IQueryable<Tenant>?, string) Filters the query by search term. protected override IQueryable<Tenant>? FilterQueryBySearchQuery(IQueryable<Tenant>? query, string searchQuery) Parameters query IQueryable<Tenant> The query. searchQuery string The search query. Returns IQueryable<Tenant> The resulting query. See Also EntityEditorBaseClass<TEntity, TModel>"
  },
  "api/Mithril.Security.Admin.UserClaimEditor.html": {
    "href": "api/Mithril.Security.Admin.UserClaimEditor.html",
    "title": "Class UserClaimEditor | Mithril API Reference",
    "keywords": "Class UserClaimEditor Namespace Mithril.Security.Admin Assembly Mithril.Security.dll User claim editor public class UserClaimEditor : EntityEditorBaseClass<UserClaimVM, UserClaim>, IEntityEditor, IEditor Inheritance object EntityEditorBaseClass<UserClaimVM> EntityEditorBaseClass<UserClaimVM, UserClaim> UserClaimEditor Implements IEntityEditor IEditor Inherited Members EntityEditorBaseClass<UserClaimVM, UserClaim>.ActivateAsync(long, ClaimsPrincipal) EntityEditorBaseClass<UserClaimVM, UserClaim>.CanView(ClaimsPrincipal) EntityEditorBaseClass<UserClaimVM, UserClaim>.DeleteEntityAsync(long, ClaimsPrincipal) EntityEditorBaseClass<UserClaimVM, UserClaim>.Load(long, ExpandoObject, ClaimsPrincipal) EntityEditorBaseClass<UserClaimVM, UserClaim>.LoadPageAsync(int, int, string, bool, string, ClaimsPrincipal) EntityEditorBaseClass<UserClaimVM, UserClaim>.SaveEntityAsync(long, ExpandoObject, ClaimsPrincipal) EntityEditorBaseClass<UserClaimVM, UserClaim>.TotalActiveAsync(ClaimsPrincipal) EntityEditorBaseClass<UserClaimVM, UserClaim>.Convert(UserClaim, bool) EntityEditorBaseClass<UserClaimVM, UserClaim>.FilterQueryBySearchQuery(IQueryable<UserClaim>, string) EntityEditorBaseClass<UserClaimVM, UserClaim>.LoadModel(long) EntityEditorBaseClass<UserClaimVM, UserClaim>.MakeActiveAsync(UserClaim) EntityEditorBaseClass<UserClaimVM, UserClaim>.MakeInactiveAsync(UserClaim) EntityEditorBaseClass<UserClaimVM>.Category EntityEditorBaseClass<UserClaimVM>.ComponentDefinition EntityEditorBaseClass<UserClaimVM>.Description EntityEditorBaseClass<UserClaimVM>.EntityType EntityEditorBaseClass<UserClaimVM>.Name EntityEditorBaseClass<UserClaimVM>.DataService EntityEditorBaseClass<UserClaimVM>.ServiceProvider EntityEditorBaseClass<UserClaimVM>.ActivateAsync(long, ClaimsPrincipal) EntityEditorBaseClass<UserClaimVM>.CanView(ClaimsPrincipal) EntityEditorBaseClass<UserClaimVM>.DeleteEntityAsync(long, ClaimsPrincipal) EntityEditorBaseClass<UserClaimVM>.Load(long, ExpandoObject, ClaimsPrincipal) EntityEditorBaseClass<UserClaimVM>.LoadPageAsync(int, int, string, bool, string, ClaimsPrincipal) EntityEditorBaseClass<UserClaimVM>.SaveEntityAsync(long, ExpandoObject, ClaimsPrincipal) EntityEditorBaseClass<UserClaimVM>.TotalActiveAsync(ClaimsPrincipal) object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods GenericExtensions.When<TObject>(TObject, bool, Func<TObject, TObject>) ExpandoObjectExtensions.ConvertToExpando(object?) Remarks Initializes a new instance of the UserClaimEditor class. Constructors UserClaimEditor(IDataService?, IEntityMetadataService?, IServiceProvider?, string?) User claim editor public UserClaimEditor(IDataService? dataService, IEntityMetadataService? entityMetadataService, IServiceProvider? serviceProvider, string? dataType = null) Parameters dataService IDataService The data service. entityMetadataService IEntityMetadataService The entity metadata service. serviceProvider IServiceProvider The service provider. dataType string Type of the data. Remarks Initializes a new instance of the UserClaimEditor class. See Also EntityEditorBaseClass<TEntity, TModel> Properties Icon Gets the icon. public override string Icon { get; } Property Value string The icon. Methods Convert(UserClaim, bool) Converts the model into the appropriate view model. protected override IEntity Convert(UserClaim model, bool full = true) Parameters model UserClaim The model. full bool if set to true [full]. Returns IEntity The view model FilterQueryBySearchQuery(IQueryable<UserClaim>?, string) Filters the query by search term. protected override IQueryable<UserClaim>? FilterQueryBySearchQuery(IQueryable<UserClaim>? query, string searchQuery) Parameters query IQueryable<UserClaim> The query. searchQuery string The search query. Returns IQueryable<UserClaim> The resulting query. See Also EntityEditorBaseClass<TEntity, TModel>"
  },
  "api/Mithril.Security.Admin.UserEditor.html": {
    "href": "api/Mithril.Security.Admin.UserEditor.html",
    "title": "Class UserEditor | Mithril API Reference",
    "keywords": "Class UserEditor Namespace Mithril.Security.Admin Assembly Mithril.Security.dll User editor public class UserEditor : EntityEditorBaseClass<UserVM, User>, IEntityEditor, IEditor Inheritance object EntityEditorBaseClass<UserVM> EntityEditorBaseClass<UserVM, User> UserEditor Implements IEntityEditor IEditor Inherited Members EntityEditorBaseClass<UserVM, User>.ActivateAsync(long, ClaimsPrincipal) EntityEditorBaseClass<UserVM, User>.CanView(ClaimsPrincipal) EntityEditorBaseClass<UserVM, User>.DeleteEntityAsync(long, ClaimsPrincipal) EntityEditorBaseClass<UserVM, User>.Load(long, ExpandoObject, ClaimsPrincipal) EntityEditorBaseClass<UserVM, User>.LoadPageAsync(int, int, string, bool, string, ClaimsPrincipal) EntityEditorBaseClass<UserVM, User>.SaveEntityAsync(long, ExpandoObject, ClaimsPrincipal) EntityEditorBaseClass<UserVM, User>.TotalActiveAsync(ClaimsPrincipal) EntityEditorBaseClass<UserVM, User>.Convert(User, bool) EntityEditorBaseClass<UserVM, User>.FilterQueryBySearchQuery(IQueryable<User>, string) EntityEditorBaseClass<UserVM, User>.LoadModel(long) EntityEditorBaseClass<UserVM, User>.MakeActiveAsync(User) EntityEditorBaseClass<UserVM, User>.MakeInactiveAsync(User) EntityEditorBaseClass<UserVM>.Category EntityEditorBaseClass<UserVM>.ComponentDefinition EntityEditorBaseClass<UserVM>.Description EntityEditorBaseClass<UserVM>.EntityType EntityEditorBaseClass<UserVM>.Name EntityEditorBaseClass<UserVM>.DataService EntityEditorBaseClass<UserVM>.ServiceProvider EntityEditorBaseClass<UserVM>.ActivateAsync(long, ClaimsPrincipal) EntityEditorBaseClass<UserVM>.CanView(ClaimsPrincipal) EntityEditorBaseClass<UserVM>.DeleteEntityAsync(long, ClaimsPrincipal) EntityEditorBaseClass<UserVM>.Load(long, ExpandoObject, ClaimsPrincipal) EntityEditorBaseClass<UserVM>.LoadPageAsync(int, int, string, bool, string, ClaimsPrincipal) EntityEditorBaseClass<UserVM>.SaveEntityAsync(long, ExpandoObject, ClaimsPrincipal) EntityEditorBaseClass<UserVM>.TotalActiveAsync(ClaimsPrincipal) object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods GenericExtensions.When<TObject>(TObject, bool, Func<TObject, TObject>) ExpandoObjectExtensions.ConvertToExpando(object?) Constructors UserEditor(IDataService?, IEntityMetadataService?, IServiceProvider?, string?) Initializes a new instance of the UserEditor class. public UserEditor(IDataService? dataService, IEntityMetadataService? entityMetadataService, IServiceProvider? serviceProvider, string? dataType = null) Parameters dataService IDataService The data service. entityMetadataService IEntityMetadataService The entity metadata service. serviceProvider IServiceProvider The service provider. dataType string Type of the data. Properties Icon Gets the icon. public override string Icon { get; } Property Value string The icon. Methods Convert(User, bool) Converts the model into the appropriate view model. protected override IEntity Convert(User model, bool full = true) Parameters model User The model. full bool if set to true [full]. Returns IEntity The view model FilterQueryBySearchQuery(IQueryable<User>?, string) Filters the query by search term. protected override IQueryable<User>? FilterQueryBySearchQuery(IQueryable<User>? query, string searchQuery) Parameters query IQueryable<User> The query. searchQuery string The search query. Returns IQueryable<User> The resulting query. See Also EntityEditorBaseClass<TEntity, TModel>"
  },
  "api/Mithril.Security.Admin.ViewModels.ContactInformationVM.html": {
    "href": "api/Mithril.Security.Admin.ViewModels.ContactInformationVM.html",
    "title": "Class ContactInformationVM | Mithril API Reference",
    "keywords": "Class ContactInformationVM Namespace Mithril.Security.Admin.ViewModels Assembly Mithril.Security.dll Contact Information VM public class ContactInformationVM Inheritance object ContactInformationVM Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods GenericExtensions.When<TObject>(TObject, bool, Func<TObject, TObject>) ExpandoObjectExtensions.ConvertToExpando(object?) Constructors ContactInformationVM() Initializes a new instance of the ContactInformationVM class. public ContactInformationVM() ContactInformationVM(ContactInfo?, LookUpType?) Initializes a new instance of the ContactInformationVM class. public ContactInformationVM(ContactInfo? model, LookUpType? contactInfoTypes) Parameters model ContactInfo The model. contactInfoTypes LookUpType The contact information types. Properties ContactType Gets or sets the type of the contact. [Select(typeof(LookUpDropDown), \"ContactInfo\")] public long? ContactType { get; set; } Property Value long? The type of the contact. Info Gets or sets the information. public string? Info { get; set; } Property Value string The information."
  },
  "api/Mithril.Security.Admin.ViewModels.PermissionVM.html": {
    "href": "api/Mithril.Security.Admin.ViewModels.PermissionVM.html",
    "title": "Class PermissionVM | Mithril API Reference",
    "keywords": "Class PermissionVM Namespace Mithril.Security.Admin.ViewModels Assembly Mithril.Security.dll Permission VM class public class PermissionVM : EntityBaseClass<Permission>, IEntity<Permission>, IEntity Inheritance object EntityBaseClass<Permission> PermissionVM Implements IEntity<Permission> IEntity Inherited Members EntityBaseClass<Permission>.Active EntityBaseClass<Permission>.ID object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods GenericExtensions.When<TObject>(TObject, bool, Func<TObject, TObject>) ExpandoObjectExtensions.ConvertToExpando(object?) Constructors PermissionVM() Initializes a new instance of the PermissionVM class. public PermissionVM() PermissionVM(Permission) Initializes a new instance of the PermissionVM class. public PermissionVM(Permission model) Parameters model Permission The model. Properties Claims Gets or sets the claims. [Order(3)] public List<ClaimDropDownVM> Claims { get; set; } Property Value List<ClaimDropDownVM> The claims. DisplayName Gets or sets the display name. [Required] [MinLength(1)] [MaxLength(128)] [Order(1)] public string? DisplayName { get; set; } Property Value string The display name. Operand Gets or sets the operand. [Order(2)] public PermissionType Operand { get; set; } Property Value PermissionType The operand. Methods SaveAsync(long, IDataService?, IServiceProvider?, ClaimsPrincipal?) Saves the changes asynchronously. public override Task<Permission?> SaveAsync(long id, IDataService? dataService, IServiceProvider? serviceProvider, ClaimsPrincipal? currentUser) Parameters id long The identifier. dataService IDataService The data service. serviceProvider IServiceProvider The service provider. currentUser ClaimsPrincipal The current user. Returns Task<Permission> The async task. See Also EntityBaseClass<TEntity>"
  },
  "api/Mithril.Security.Admin.ViewModels.TenantVM.html": {
    "href": "api/Mithril.Security.Admin.ViewModels.TenantVM.html",
    "title": "Class TenantVM | Mithril API Reference",
    "keywords": "Class TenantVM Namespace Mithril.Security.Admin.ViewModels Assembly Mithril.Security.dll Tenant view model public class TenantVM : EntityBaseClass<Tenant>, IEntity<Tenant>, IEntity Inheritance object EntityBaseClass<Tenant> TenantVM Implements IEntity<Tenant> IEntity Inherited Members EntityBaseClass<Tenant>.Active EntityBaseClass<Tenant>.ID object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods GenericExtensions.When<TObject>(TObject, bool, Func<TObject, TObject>) ExpandoObjectExtensions.ConvertToExpando(object?) Constructors TenantVM() Initializes a new instance of the TenantVM class. public TenantVM() TenantVM(Tenant) Initializes a new instance of the TenantVM class. public TenantVM(Tenant model) Parameters model Tenant Model data Properties DisplayName Gets or sets the display name. [Required] [MaxLength(100)] [MinLength(1)] public string? DisplayName { get; set; } Property Value string The display name. Methods SaveAsync(long, IDataService?, IServiceProvider?, ClaimsPrincipal?) Saves the changes asynchronously. public override Task<Tenant?> SaveAsync(long id, IDataService? dataService, IServiceProvider? serviceProvider, ClaimsPrincipal? currentUser) Parameters id long The identifier. dataService IDataService The data service. serviceProvider IServiceProvider The service provider. currentUser ClaimsPrincipal The current user. Returns Task<Tenant> The async task. See Also EntityBaseClass<TEntity>"
  },
  "api/Mithril.Security.Admin.ViewModels.UserClaimVM.html": {
    "href": "api/Mithril.Security.Admin.ViewModels.UserClaimVM.html",
    "title": "Class UserClaimVM | Mithril API Reference",
    "keywords": "Class UserClaimVM Namespace Mithril.Security.Admin.ViewModels Assembly Mithril.Security.dll User claim view model public class UserClaimVM : EntityBaseClass<UserClaim>, IEntity<UserClaim>, IEntity Inheritance object EntityBaseClass<UserClaim> UserClaimVM Implements IEntity<UserClaim> IEntity Inherited Members EntityBaseClass<UserClaim>.Active EntityBaseClass<UserClaim>.ID object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods GenericExtensions.When<TObject>(TObject, bool, Func<TObject, TObject>) ExpandoObjectExtensions.ConvertToExpando(object?) Constructors UserClaimVM() Initializes a new instance of the UserClaimVM class. public UserClaimVM() UserClaimVM(UserClaim) Initializes a new instance of the UserClaimVM class. public UserClaimVM(UserClaim model) Parameters model UserClaim The model. Properties ClaimType Gets or sets the type of the claim. [Required] [MinLength(1)] [MaxLength(128)] [Query(typeof(ClaimTypesDropDown), \"\")] [Order(1)] public string? ClaimType { get; set; } Property Value string The type of the claim. Value Gets or sets the value. [Required] [MinLength(1)] [Order(2)] public string? Value { get; set; } Property Value string The value. Methods SaveAsync(long, IDataService?, IServiceProvider?, ClaimsPrincipal?) Saves the changes asynchronously. public override Task<UserClaim?> SaveAsync(long id, IDataService? dataService, IServiceProvider? serviceProvider, ClaimsPrincipal? currentUser) Parameters id long The identifier. dataService IDataService The data service. serviceProvider IServiceProvider The service provider. currentUser ClaimsPrincipal The current user. Returns Task<UserClaim> The async task. See Also EntityBaseClass<TEntity>"
  },
  "api/Mithril.Security.Admin.ViewModels.UserVM.html": {
    "href": "api/Mithril.Security.Admin.ViewModels.UserVM.html",
    "title": "Class UserVM | Mithril API Reference",
    "keywords": "Class UserVM Namespace Mithril.Security.Admin.ViewModels Assembly Mithril.Security.dll User view model public class UserVM : EntityBaseClass<User>, IEntity<User>, IEntity Inheritance object EntityBaseClass<User> UserVM Implements IEntity<User> IEntity Inherited Members EntityBaseClass<User>.Active EntityBaseClass<User>.ID object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods GenericExtensions.When<TObject>(TObject, bool, Func<TObject, TObject>) ExpandoObjectExtensions.ConvertToExpando(object?) Constructors UserVM() Initializes a new instance of the UserVM class. public UserVM() UserVM(User, bool, LookUpType?) Initializes a new instance of the UserVM class. public UserVM(User model, bool full, LookUpType? contactInfoType) Parameters model User The model. full bool if set to true [full]. contactInfoType LookUpType Type of the contact information. Properties Claims Gets or sets the claims. [Order(11)] public List<ClaimDropDownVM> Claims { get; set; } Property Value List<ClaimDropDownVM> The claims. ContactInformation Gets or sets the contact information. [Order(10)] public List<ContactInformationVM> ContactInformation { get; set; } Property Value List<ContactInformationVM> The contact information. FirstName Gets or sets the first name. [Required] [MaxLength(100)] [MinLength(1)] [Order(3)] public string? FirstName { get; set; } Property Value string The first name. LastName Gets or sets the last name. [Required] [MaxLength(100)] [MinLength(1)] [Order(5)] public string? LastName { get; set; } Property Value string The last name. MiddleName Gets or sets the name of the middle. [MaxLength(100)] [Order(4)] public string? MiddleName { get; set; } Property Value string The name of the middle. NickName Gets or sets the nick name. [MaxLength(100)] [Order(7)] public string? NickName { get; set; } Property Value string The nick name. Prefix Gets or sets the prefix. [MaxLength(30)] [Order(2)] public string? Prefix { get; set; } Property Value string The prefix. Suffix Gets or sets the suffix. [MaxLength(30)] [Order(6)] public string? Suffix { get; set; } Property Value string The suffix. Tenant Gets or sets the tenant. [Select(typeof(TenantDropDown), \"\")] [Required] [Order(9)] public long Tenant { get; set; } Property Value long The tenant. Title Gets or sets the title. [MaxLength(100)] [Order(8)] public string? Title { get; set; } Property Value string The title. UserName Gets or sets the name of the user. [Required] [MaxLength(100)] [Order(1)] public string? UserName { get; set; } Property Value string The name of the user. Methods SaveAsync(long, IDataService?, IServiceProvider?, ClaimsPrincipal?) Saves the changes asynchronously. public override Task<User?> SaveAsync(long id, IDataService? dataService, IServiceProvider? serviceProvider, ClaimsPrincipal? currentUser) Parameters id long The identifier. dataService IDataService The data service. serviceProvider IServiceProvider The service provider. currentUser ClaimsPrincipal The current user. Returns Task<User> The async task. See Also EntityBaseClass<TEntity>"
  },
  "api/Mithril.Security.Admin.ViewModels.html": {
    "href": "api/Mithril.Security.Admin.ViewModels.html",
    "title": "Namespace Mithril.Security.Admin.ViewModels | Mithril API Reference",
    "keywords": "Namespace Mithril.Security.Admin.ViewModels Classes ContactInformationVM Contact Information VM PermissionVM Permission VM class TenantVM Tenant view model UserClaimVM User claim view model UserVM User view model"
  },
  "api/Mithril.Security.Admin.html": {
    "href": "api/Mithril.Security.Admin.html",
    "title": "Namespace Mithril.Security.Admin | Mithril API Reference",
    "keywords": "Namespace Mithril.Security.Admin Classes PermissionEditor Permission editor service TenantEditor Tenant Editor UserClaimEditor User claim editor UserEditor User editor"
  },
  "api/Mithril.Security.AuthenticationModule.html": {
    "href": "api/Mithril.Security.AuthenticationModule.html",
    "title": "Class AuthenticationModule | Mithril API Reference",
    "keywords": "Class AuthenticationModule Namespace Mithril.Security Assembly Mithril.Security.dll Windows Authentication module public class AuthenticationModule : ModuleBaseClass<AuthenticationModule>, IEquatable<AuthenticationModule>, IModule Inheritance object ModuleBaseClass<AuthenticationModule> AuthenticationModule Implements IEquatable<AuthenticationModule> IModule Inherited Members ModuleBaseClass<AuthenticationModule>.Category ModuleBaseClass<AuthenticationModule>.ContentPath ModuleBaseClass<AuthenticationModule>.Features ModuleBaseClass<AuthenticationModule>.ID ModuleBaseClass<AuthenticationModule>.LastModified ModuleBaseClass<AuthenticationModule>.Name ModuleBaseClass<AuthenticationModule>.Tags ModuleBaseClass<AuthenticationModule>.Version ModuleBaseClass<AuthenticationModule>.ConfigureHostSettings(IHostBuilder, IConfiguration, IHostEnvironment) ModuleBaseClass<AuthenticationModule>.ConfigureLoggingSettings(ILoggingBuilder, IConfiguration, IHostEnvironment) ModuleBaseClass<AuthenticationModule>.ConfigureMVC(IMvcBuilder, IConfiguration, IHostEnvironment) ModuleBaseClass<AuthenticationModule>.ConfigureRoutes(IEndpointRouteBuilder, IConfiguration, IHostEnvironment) ModuleBaseClass<AuthenticationModule>.ConfigureWebHostSettings(IWebHostBuilder, IConfiguration, IHostEnvironment) ModuleBaseClass<AuthenticationModule>.Equals(object) ModuleBaseClass<AuthenticationModule>.Equals(AuthenticationModule) ModuleBaseClass<AuthenticationModule>.GetHashCode() ModuleBaseClass<AuthenticationModule>.OnStarted() ModuleBaseClass<AuthenticationModule>.OnStopped() ModuleBaseClass<AuthenticationModule>.OnStopping() object.Equals(object, object) object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods GenericExtensions.When<TObject>(TObject, bool, Func<TObject, TObject>) ExpandoObjectExtensions.ConvertToExpando(object?) Constructors AuthenticationModule() Initializes a new instance of the AuthenticationModule class. public AuthenticationModule() Properties Order Gets the order that they are initialized in. public override int Order { get; } Property Value int The order that they are initialized in. Methods ConfigureApplication(IApplicationBuilder?, IConfiguration?, IHostEnvironment?) Configures the application. public override IApplicationBuilder? ConfigureApplication(IApplicationBuilder? app, IConfiguration? configuration, IHostEnvironment? environment) Parameters app IApplicationBuilder The application. configuration IConfiguration The configuration. environment IHostEnvironment The environment. Returns IApplicationBuilder Windows Authentication module ConfigureServices(IServiceCollection?, IConfiguration?, IHostEnvironment?) Configures the services for the module. public override IServiceCollection? ConfigureServices(IServiceCollection? services, IConfiguration? configuration, IHostEnvironment? env) Parameters services IServiceCollection The services collection. configuration IConfiguration The configuration. env IHostEnvironment Returns IServiceCollection Windows Authentication module InitializeDataAsync(IDataService?, IServiceProvider?) Initializes the data. public override Task InitializeDataAsync(IDataService? dataService, IServiceProvider? services) Parameters dataService IDataService The data service. services IServiceProvider The services for the application. Returns Task The async task. See Also ModuleBaseClass<TModule>"
  },
  "api/Mithril.Security.Models.Mappings.IPermissionMapping.html": {
    "href": "api/Mithril.Security.Models.Mappings.IPermissionMapping.html",
    "title": "Class IPermissionMapping | Mithril API Reference",
    "keywords": "Class IPermissionMapping Namespace Mithril.Security.Models.Mappings Assembly Mithril.Security.dll Permission mapping public class IPermissionMapping : MappingBaseClass<IPermission, DefaultDatabase>, IMapping<IPermission>, IMapping Inheritance object MappingBaseClass<IPermission, DefaultDatabase> IPermissionMapping Implements IMapping<IPermission> IMapping Inherited Members MappingBaseClass<IPermission, DefaultDatabase>.AddAutoKey() MappingBaseClass<IPermission, DefaultDatabase>.ContainsProperty(string) MappingBaseClass<IPermission, DefaultDatabase>.Copy(IMapping) MappingBaseClass<IPermission, DefaultDatabase>.CopyProperty(IIDProperty) MappingBaseClass<IPermission, DefaultDatabase>.CopyProperty(IProperty) MappingBaseClass<IPermission, DefaultDatabase>.CopyProperty(IMapProperty) MappingBaseClass<IPermission, DefaultDatabase>.CopyProperty(IManyToOneProperty) MappingBaseClass<IPermission, DefaultDatabase>.CopyProperty(IManyToManyProperty) MappingBaseClass<IPermission, DefaultDatabase>.Equals(object) MappingBaseClass<IPermission, DefaultDatabase>.GetColumnName(string) MappingBaseClass<IPermission, DefaultDatabase>.GetHashCode() MappingBaseClass<IPermission, DefaultDatabase>.ID<TDataType>(Expression<Func<IPermission, TDataType>>) MappingBaseClass<IPermission, DefaultDatabase>.ManyToMany<TDataType>(Expression<Func<IPermission, IList<TDataType>>>) MappingBaseClass<IPermission, DefaultDatabase>.ManyToOne<TDataType>(Expression<Func<IPermission, IList<TDataType>>>) MappingBaseClass<IPermission, DefaultDatabase>.ManyToOne<TDataType>(Expression<Func<IPermission, TDataType>>) MappingBaseClass<IPermission, DefaultDatabase>.Map<TDataType>(Expression<Func<IPermission, TDataType>>) MappingBaseClass<IPermission, DefaultDatabase>.Reduce(ILogger) MappingBaseClass<IPermission, DefaultDatabase>.Reduce(IMapping, ILogger) MappingBaseClass<IPermission, DefaultDatabase>.Reference<TDataType>(Expression<Func<IPermission, TDataType>>) MappingBaseClass<IPermission, DefaultDatabase>.SetQuery(QueryType, string, CommandType, params IParameter[]) MappingBaseClass<IPermission, DefaultDatabase>.Setup() MappingBaseClass<IPermission, DefaultDatabase>.ToString() MappingBaseClass<IPermission, DefaultDatabase>.AutoIDProperties MappingBaseClass<IPermission, DefaultDatabase>.DatabaseConfigType MappingBaseClass<IPermission, DefaultDatabase>.IDProperties MappingBaseClass<IPermission, DefaultDatabase>.ManyToManyProperties MappingBaseClass<IPermission, DefaultDatabase>.ManyToOneProperties MappingBaseClass<IPermission, DefaultDatabase>.MapProperties MappingBaseClass<IPermission, DefaultDatabase>.Merge MappingBaseClass<IPermission, DefaultDatabase>.ObjectType MappingBaseClass<IPermission, DefaultDatabase>.Order MappingBaseClass<IPermission, DefaultDatabase>.Prefix MappingBaseClass<IPermission, DefaultDatabase>.Queries MappingBaseClass<IPermission, DefaultDatabase>.ReferenceProperties MappingBaseClass<IPermission, DefaultDatabase>.SchemaName MappingBaseClass<IPermission, DefaultDatabase>.Suffix MappingBaseClass<IPermission, DefaultDatabase>.TableName object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods GenericExtensions.When<TObject>(TObject, bool, Func<TObject, TObject>) ExpandoObjectExtensions.ConvertToExpando(object?) Constructors IPermissionMapping() Initializes a new instance of the IPermissionMapping class. public IPermissionMapping() See Also MappingBaseClass<TClassType, TDatabaseType>"
  },
  "api/Mithril.Security.Models.Mappings.ITenantMapping.html": {
    "href": "api/Mithril.Security.Models.Mappings.ITenantMapping.html",
    "title": "Class ITenantMapping | Mithril API Reference",
    "keywords": "Class ITenantMapping Namespace Mithril.Security.Models.Mappings Assembly Mithril.Security.dll ITenant mapping public class ITenantMapping : MappingBaseClass<ITenant, DefaultDatabase>, IMapping<ITenant>, IMapping Inheritance object MappingBaseClass<ITenant, DefaultDatabase> ITenantMapping Implements IMapping<ITenant> IMapping Inherited Members MappingBaseClass<ITenant, DefaultDatabase>.AddAutoKey() MappingBaseClass<ITenant, DefaultDatabase>.ContainsProperty(string) MappingBaseClass<ITenant, DefaultDatabase>.Copy(IMapping) MappingBaseClass<ITenant, DefaultDatabase>.CopyProperty(IIDProperty) MappingBaseClass<ITenant, DefaultDatabase>.CopyProperty(IProperty) MappingBaseClass<ITenant, DefaultDatabase>.CopyProperty(IMapProperty) MappingBaseClass<ITenant, DefaultDatabase>.CopyProperty(IManyToOneProperty) MappingBaseClass<ITenant, DefaultDatabase>.CopyProperty(IManyToManyProperty) MappingBaseClass<ITenant, DefaultDatabase>.Equals(object) MappingBaseClass<ITenant, DefaultDatabase>.GetColumnName(string) MappingBaseClass<ITenant, DefaultDatabase>.GetHashCode() MappingBaseClass<ITenant, DefaultDatabase>.ID<TDataType>(Expression<Func<ITenant, TDataType>>) MappingBaseClass<ITenant, DefaultDatabase>.ManyToMany<TDataType>(Expression<Func<ITenant, IList<TDataType>>>) MappingBaseClass<ITenant, DefaultDatabase>.ManyToOne<TDataType>(Expression<Func<ITenant, IList<TDataType>>>) MappingBaseClass<ITenant, DefaultDatabase>.ManyToOne<TDataType>(Expression<Func<ITenant, TDataType>>) MappingBaseClass<ITenant, DefaultDatabase>.Map<TDataType>(Expression<Func<ITenant, TDataType>>) MappingBaseClass<ITenant, DefaultDatabase>.Reduce(ILogger) MappingBaseClass<ITenant, DefaultDatabase>.Reduce(IMapping, ILogger) MappingBaseClass<ITenant, DefaultDatabase>.Reference<TDataType>(Expression<Func<ITenant, TDataType>>) MappingBaseClass<ITenant, DefaultDatabase>.SetQuery(QueryType, string, CommandType, params IParameter[]) MappingBaseClass<ITenant, DefaultDatabase>.Setup() MappingBaseClass<ITenant, DefaultDatabase>.ToString() MappingBaseClass<ITenant, DefaultDatabase>.AutoIDProperties MappingBaseClass<ITenant, DefaultDatabase>.DatabaseConfigType MappingBaseClass<ITenant, DefaultDatabase>.IDProperties MappingBaseClass<ITenant, DefaultDatabase>.ManyToManyProperties MappingBaseClass<ITenant, DefaultDatabase>.ManyToOneProperties MappingBaseClass<ITenant, DefaultDatabase>.MapProperties MappingBaseClass<ITenant, DefaultDatabase>.Merge MappingBaseClass<ITenant, DefaultDatabase>.ObjectType MappingBaseClass<ITenant, DefaultDatabase>.Order MappingBaseClass<ITenant, DefaultDatabase>.Prefix MappingBaseClass<ITenant, DefaultDatabase>.Queries MappingBaseClass<ITenant, DefaultDatabase>.ReferenceProperties MappingBaseClass<ITenant, DefaultDatabase>.SchemaName MappingBaseClass<ITenant, DefaultDatabase>.Suffix MappingBaseClass<ITenant, DefaultDatabase>.TableName object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods GenericExtensions.When<TObject>(TObject, bool, Func<TObject, TObject>) ExpandoObjectExtensions.ConvertToExpando(object?) Constructors ITenantMapping() Initializes a new instance of the ITenantMapping class. public ITenantMapping() See Also MappingBaseClass<TClassType, TDatabaseType>"
  },
  "api/Mithril.Security.Models.Mappings.IUserClaimMapping.html": {
    "href": "api/Mithril.Security.Models.Mappings.IUserClaimMapping.html",
    "title": "Class IUserClaimMapping | Mithril API Reference",
    "keywords": "Class IUserClaimMapping Namespace Mithril.Security.Models.Mappings Assembly Mithril.Security.dll IUserClaim mapping public class IUserClaimMapping : MappingBaseClass<IUserClaim, DefaultDatabase>, IMapping<IUserClaim>, IMapping Inheritance object MappingBaseClass<IUserClaim, DefaultDatabase> IUserClaimMapping Implements IMapping<IUserClaim> IMapping Inherited Members MappingBaseClass<IUserClaim, DefaultDatabase>.AddAutoKey() MappingBaseClass<IUserClaim, DefaultDatabase>.ContainsProperty(string) MappingBaseClass<IUserClaim, DefaultDatabase>.Copy(IMapping) MappingBaseClass<IUserClaim, DefaultDatabase>.CopyProperty(IIDProperty) MappingBaseClass<IUserClaim, DefaultDatabase>.CopyProperty(IProperty) MappingBaseClass<IUserClaim, DefaultDatabase>.CopyProperty(IMapProperty) MappingBaseClass<IUserClaim, DefaultDatabase>.CopyProperty(IManyToOneProperty) MappingBaseClass<IUserClaim, DefaultDatabase>.CopyProperty(IManyToManyProperty) MappingBaseClass<IUserClaim, DefaultDatabase>.Equals(object) MappingBaseClass<IUserClaim, DefaultDatabase>.GetColumnName(string) MappingBaseClass<IUserClaim, DefaultDatabase>.GetHashCode() MappingBaseClass<IUserClaim, DefaultDatabase>.ID<TDataType>(Expression<Func<IUserClaim, TDataType>>) MappingBaseClass<IUserClaim, DefaultDatabase>.ManyToMany<TDataType>(Expression<Func<IUserClaim, IList<TDataType>>>) MappingBaseClass<IUserClaim, DefaultDatabase>.ManyToOne<TDataType>(Expression<Func<IUserClaim, IList<TDataType>>>) MappingBaseClass<IUserClaim, DefaultDatabase>.ManyToOne<TDataType>(Expression<Func<IUserClaim, TDataType>>) MappingBaseClass<IUserClaim, DefaultDatabase>.Map<TDataType>(Expression<Func<IUserClaim, TDataType>>) MappingBaseClass<IUserClaim, DefaultDatabase>.Reduce(ILogger) MappingBaseClass<IUserClaim, DefaultDatabase>.Reduce(IMapping, ILogger) MappingBaseClass<IUserClaim, DefaultDatabase>.Reference<TDataType>(Expression<Func<IUserClaim, TDataType>>) MappingBaseClass<IUserClaim, DefaultDatabase>.SetQuery(QueryType, string, CommandType, params IParameter[]) MappingBaseClass<IUserClaim, DefaultDatabase>.Setup() MappingBaseClass<IUserClaim, DefaultDatabase>.ToString() MappingBaseClass<IUserClaim, DefaultDatabase>.AutoIDProperties MappingBaseClass<IUserClaim, DefaultDatabase>.DatabaseConfigType MappingBaseClass<IUserClaim, DefaultDatabase>.IDProperties MappingBaseClass<IUserClaim, DefaultDatabase>.ManyToManyProperties MappingBaseClass<IUserClaim, DefaultDatabase>.ManyToOneProperties MappingBaseClass<IUserClaim, DefaultDatabase>.MapProperties MappingBaseClass<IUserClaim, DefaultDatabase>.Merge MappingBaseClass<IUserClaim, DefaultDatabase>.ObjectType MappingBaseClass<IUserClaim, DefaultDatabase>.Order MappingBaseClass<IUserClaim, DefaultDatabase>.Prefix MappingBaseClass<IUserClaim, DefaultDatabase>.Queries MappingBaseClass<IUserClaim, DefaultDatabase>.ReferenceProperties MappingBaseClass<IUserClaim, DefaultDatabase>.SchemaName MappingBaseClass<IUserClaim, DefaultDatabase>.Suffix MappingBaseClass<IUserClaim, DefaultDatabase>.TableName object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods GenericExtensions.When<TObject>(TObject, bool, Func<TObject, TObject>) ExpandoObjectExtensions.ConvertToExpando(object?) Constructors IUserClaimMapping() Initializes a new instance of the IUserClaimMapping class. public IUserClaimMapping() See Also MappingBaseClass<TClassType, TDatabaseType>"
  },
  "api/Mithril.Security.Models.Mappings.IUserMapping.html": {
    "href": "api/Mithril.Security.Models.Mappings.IUserMapping.html",
    "title": "Class IUserMapping | Mithril API Reference",
    "keywords": "Class IUserMapping Namespace Mithril.Security.Models.Mappings Assembly Mithril.Security.dll IUser mapping public class IUserMapping : MappingBaseClass<IUser, DefaultDatabase>, IMapping<IUser>, IMapping Inheritance object MappingBaseClass<IUser, DefaultDatabase> IUserMapping Implements IMapping<IUser> IMapping Inherited Members MappingBaseClass<IUser, DefaultDatabase>.AddAutoKey() MappingBaseClass<IUser, DefaultDatabase>.ContainsProperty(string) MappingBaseClass<IUser, DefaultDatabase>.Copy(IMapping) MappingBaseClass<IUser, DefaultDatabase>.CopyProperty(IIDProperty) MappingBaseClass<IUser, DefaultDatabase>.CopyProperty(IProperty) MappingBaseClass<IUser, DefaultDatabase>.CopyProperty(IMapProperty) MappingBaseClass<IUser, DefaultDatabase>.CopyProperty(IManyToOneProperty) MappingBaseClass<IUser, DefaultDatabase>.CopyProperty(IManyToManyProperty) MappingBaseClass<IUser, DefaultDatabase>.Equals(object) MappingBaseClass<IUser, DefaultDatabase>.GetColumnName(string) MappingBaseClass<IUser, DefaultDatabase>.GetHashCode() MappingBaseClass<IUser, DefaultDatabase>.ID<TDataType>(Expression<Func<IUser, TDataType>>) MappingBaseClass<IUser, DefaultDatabase>.ManyToMany<TDataType>(Expression<Func<IUser, IList<TDataType>>>) MappingBaseClass<IUser, DefaultDatabase>.ManyToOne<TDataType>(Expression<Func<IUser, IList<TDataType>>>) MappingBaseClass<IUser, DefaultDatabase>.ManyToOne<TDataType>(Expression<Func<IUser, TDataType>>) MappingBaseClass<IUser, DefaultDatabase>.Map<TDataType>(Expression<Func<IUser, TDataType>>) MappingBaseClass<IUser, DefaultDatabase>.Reduce(ILogger) MappingBaseClass<IUser, DefaultDatabase>.Reduce(IMapping, ILogger) MappingBaseClass<IUser, DefaultDatabase>.Reference<TDataType>(Expression<Func<IUser, TDataType>>) MappingBaseClass<IUser, DefaultDatabase>.SetQuery(QueryType, string, CommandType, params IParameter[]) MappingBaseClass<IUser, DefaultDatabase>.Setup() MappingBaseClass<IUser, DefaultDatabase>.ToString() MappingBaseClass<IUser, DefaultDatabase>.AutoIDProperties MappingBaseClass<IUser, DefaultDatabase>.DatabaseConfigType MappingBaseClass<IUser, DefaultDatabase>.IDProperties MappingBaseClass<IUser, DefaultDatabase>.ManyToManyProperties MappingBaseClass<IUser, DefaultDatabase>.ManyToOneProperties MappingBaseClass<IUser, DefaultDatabase>.MapProperties MappingBaseClass<IUser, DefaultDatabase>.Merge MappingBaseClass<IUser, DefaultDatabase>.ObjectType MappingBaseClass<IUser, DefaultDatabase>.Order MappingBaseClass<IUser, DefaultDatabase>.Prefix MappingBaseClass<IUser, DefaultDatabase>.Queries MappingBaseClass<IUser, DefaultDatabase>.ReferenceProperties MappingBaseClass<IUser, DefaultDatabase>.SchemaName MappingBaseClass<IUser, DefaultDatabase>.Suffix MappingBaseClass<IUser, DefaultDatabase>.TableName object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods GenericExtensions.When<TObject>(TObject, bool, Func<TObject, TObject>) ExpandoObjectExtensions.ConvertToExpando(object?) Constructors IUserMapping() Initializes a new instance of the IUserMapping class. public IUserMapping() See Also MappingBaseClass<TClassType, TDatabaseType>"
  },
  "api/Mithril.Security.Models.Mappings.PermissionMapping.html": {
    "href": "api/Mithril.Security.Models.Mappings.PermissionMapping.html",
    "title": "Class PermissionMapping | Mithril API Reference",
    "keywords": "Class PermissionMapping Namespace Mithril.Security.Models.Mappings Assembly Mithril.Security.dll Permission mapping public class PermissionMapping : MappingBaseClass<Permission, DefaultDatabase>, IMapping<Permission>, IMapping Inheritance object MappingBaseClass<Permission, DefaultDatabase> PermissionMapping Implements IMapping<Permission> IMapping Inherited Members MappingBaseClass<Permission, DefaultDatabase>.AddAutoKey() MappingBaseClass<Permission, DefaultDatabase>.ContainsProperty(string) MappingBaseClass<Permission, DefaultDatabase>.Copy(IMapping) MappingBaseClass<Permission, DefaultDatabase>.CopyProperty(IIDProperty) MappingBaseClass<Permission, DefaultDatabase>.CopyProperty(IProperty) MappingBaseClass<Permission, DefaultDatabase>.CopyProperty(IMapProperty) MappingBaseClass<Permission, DefaultDatabase>.CopyProperty(IManyToOneProperty) MappingBaseClass<Permission, DefaultDatabase>.CopyProperty(IManyToManyProperty) MappingBaseClass<Permission, DefaultDatabase>.Equals(object) MappingBaseClass<Permission, DefaultDatabase>.GetColumnName(string) MappingBaseClass<Permission, DefaultDatabase>.GetHashCode() MappingBaseClass<Permission, DefaultDatabase>.ID<TDataType>(Expression<Func<Permission, TDataType>>) MappingBaseClass<Permission, DefaultDatabase>.ManyToMany<TDataType>(Expression<Func<Permission, IList<TDataType>>>) MappingBaseClass<Permission, DefaultDatabase>.ManyToOne<TDataType>(Expression<Func<Permission, IList<TDataType>>>) MappingBaseClass<Permission, DefaultDatabase>.ManyToOne<TDataType>(Expression<Func<Permission, TDataType>>) MappingBaseClass<Permission, DefaultDatabase>.Map<TDataType>(Expression<Func<Permission, TDataType>>) MappingBaseClass<Permission, DefaultDatabase>.Reduce(ILogger) MappingBaseClass<Permission, DefaultDatabase>.Reduce(IMapping, ILogger) MappingBaseClass<Permission, DefaultDatabase>.Reference<TDataType>(Expression<Func<Permission, TDataType>>) MappingBaseClass<Permission, DefaultDatabase>.SetQuery(QueryType, string, CommandType, params IParameter[]) MappingBaseClass<Permission, DefaultDatabase>.Setup() MappingBaseClass<Permission, DefaultDatabase>.ToString() MappingBaseClass<Permission, DefaultDatabase>.AutoIDProperties MappingBaseClass<Permission, DefaultDatabase>.DatabaseConfigType MappingBaseClass<Permission, DefaultDatabase>.IDProperties MappingBaseClass<Permission, DefaultDatabase>.ManyToManyProperties MappingBaseClass<Permission, DefaultDatabase>.ManyToOneProperties MappingBaseClass<Permission, DefaultDatabase>.MapProperties MappingBaseClass<Permission, DefaultDatabase>.Merge MappingBaseClass<Permission, DefaultDatabase>.ObjectType MappingBaseClass<Permission, DefaultDatabase>.Order MappingBaseClass<Permission, DefaultDatabase>.Prefix MappingBaseClass<Permission, DefaultDatabase>.Queries MappingBaseClass<Permission, DefaultDatabase>.ReferenceProperties MappingBaseClass<Permission, DefaultDatabase>.SchemaName MappingBaseClass<Permission, DefaultDatabase>.Suffix MappingBaseClass<Permission, DefaultDatabase>.TableName object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods GenericExtensions.When<TObject>(TObject, bool, Func<TObject, TObject>) ExpandoObjectExtensions.ConvertToExpando(object?) Constructors PermissionMapping() Initializes a new instance of the PermissionMapping class. public PermissionMapping() See Also MappingBaseClass<TClassType, TDatabaseType>"
  },
  "api/Mithril.Security.Models.Mappings.TenantMapping.html": {
    "href": "api/Mithril.Security.Models.Mappings.TenantMapping.html",
    "title": "Class TenantMapping | Mithril API Reference",
    "keywords": "Class TenantMapping Namespace Mithril.Security.Models.Mappings Assembly Mithril.Security.dll Tenant mapping public class TenantMapping : MappingBaseClass<Tenant, DefaultDatabase>, IMapping<Tenant>, IMapping Inheritance object MappingBaseClass<Tenant, DefaultDatabase> TenantMapping Implements IMapping<Tenant> IMapping Inherited Members MappingBaseClass<Tenant, DefaultDatabase>.AddAutoKey() MappingBaseClass<Tenant, DefaultDatabase>.ContainsProperty(string) MappingBaseClass<Tenant, DefaultDatabase>.Copy(IMapping) MappingBaseClass<Tenant, DefaultDatabase>.CopyProperty(IIDProperty) MappingBaseClass<Tenant, DefaultDatabase>.CopyProperty(IProperty) MappingBaseClass<Tenant, DefaultDatabase>.CopyProperty(IMapProperty) MappingBaseClass<Tenant, DefaultDatabase>.CopyProperty(IManyToOneProperty) MappingBaseClass<Tenant, DefaultDatabase>.CopyProperty(IManyToManyProperty) MappingBaseClass<Tenant, DefaultDatabase>.Equals(object) MappingBaseClass<Tenant, DefaultDatabase>.GetColumnName(string) MappingBaseClass<Tenant, DefaultDatabase>.GetHashCode() MappingBaseClass<Tenant, DefaultDatabase>.ID<TDataType>(Expression<Func<Tenant, TDataType>>) MappingBaseClass<Tenant, DefaultDatabase>.ManyToMany<TDataType>(Expression<Func<Tenant, IList<TDataType>>>) MappingBaseClass<Tenant, DefaultDatabase>.ManyToOne<TDataType>(Expression<Func<Tenant, IList<TDataType>>>) MappingBaseClass<Tenant, DefaultDatabase>.ManyToOne<TDataType>(Expression<Func<Tenant, TDataType>>) MappingBaseClass<Tenant, DefaultDatabase>.Map<TDataType>(Expression<Func<Tenant, TDataType>>) MappingBaseClass<Tenant, DefaultDatabase>.Reduce(ILogger) MappingBaseClass<Tenant, DefaultDatabase>.Reduce(IMapping, ILogger) MappingBaseClass<Tenant, DefaultDatabase>.Reference<TDataType>(Expression<Func<Tenant, TDataType>>) MappingBaseClass<Tenant, DefaultDatabase>.SetQuery(QueryType, string, CommandType, params IParameter[]) MappingBaseClass<Tenant, DefaultDatabase>.Setup() MappingBaseClass<Tenant, DefaultDatabase>.ToString() MappingBaseClass<Tenant, DefaultDatabase>.AutoIDProperties MappingBaseClass<Tenant, DefaultDatabase>.DatabaseConfigType MappingBaseClass<Tenant, DefaultDatabase>.IDProperties MappingBaseClass<Tenant, DefaultDatabase>.ManyToManyProperties MappingBaseClass<Tenant, DefaultDatabase>.ManyToOneProperties MappingBaseClass<Tenant, DefaultDatabase>.MapProperties MappingBaseClass<Tenant, DefaultDatabase>.Merge MappingBaseClass<Tenant, DefaultDatabase>.ObjectType MappingBaseClass<Tenant, DefaultDatabase>.Order MappingBaseClass<Tenant, DefaultDatabase>.Prefix MappingBaseClass<Tenant, DefaultDatabase>.Queries MappingBaseClass<Tenant, DefaultDatabase>.ReferenceProperties MappingBaseClass<Tenant, DefaultDatabase>.SchemaName MappingBaseClass<Tenant, DefaultDatabase>.Suffix MappingBaseClass<Tenant, DefaultDatabase>.TableName object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods GenericExtensions.When<TObject>(TObject, bool, Func<TObject, TObject>) ExpandoObjectExtensions.ConvertToExpando(object?) Constructors TenantMapping() Initializes a new instance of the TenantMapping class. public TenantMapping() See Also MappingBaseClass<TClassType, TDatabaseType>"
  },
  "api/Mithril.Security.Models.Mappings.UserClaimMapping.html": {
    "href": "api/Mithril.Security.Models.Mappings.UserClaimMapping.html",
    "title": "Class UserClaimMapping | Mithril API Reference",
    "keywords": "Class UserClaimMapping Namespace Mithril.Security.Models.Mappings Assembly Mithril.Security.dll User claim mapping public class UserClaimMapping : MappingBaseClass<UserClaim, DefaultDatabase>, IMapping<UserClaim>, IMapping Inheritance object MappingBaseClass<UserClaim, DefaultDatabase> UserClaimMapping Implements IMapping<UserClaim> IMapping Inherited Members MappingBaseClass<UserClaim, DefaultDatabase>.AddAutoKey() MappingBaseClass<UserClaim, DefaultDatabase>.ContainsProperty(string) MappingBaseClass<UserClaim, DefaultDatabase>.Copy(IMapping) MappingBaseClass<UserClaim, DefaultDatabase>.CopyProperty(IIDProperty) MappingBaseClass<UserClaim, DefaultDatabase>.CopyProperty(IProperty) MappingBaseClass<UserClaim, DefaultDatabase>.CopyProperty(IMapProperty) MappingBaseClass<UserClaim, DefaultDatabase>.CopyProperty(IManyToOneProperty) MappingBaseClass<UserClaim, DefaultDatabase>.CopyProperty(IManyToManyProperty) MappingBaseClass<UserClaim, DefaultDatabase>.Equals(object) MappingBaseClass<UserClaim, DefaultDatabase>.GetColumnName(string) MappingBaseClass<UserClaim, DefaultDatabase>.GetHashCode() MappingBaseClass<UserClaim, DefaultDatabase>.ID<TDataType>(Expression<Func<UserClaim, TDataType>>) MappingBaseClass<UserClaim, DefaultDatabase>.ManyToMany<TDataType>(Expression<Func<UserClaim, IList<TDataType>>>) MappingBaseClass<UserClaim, DefaultDatabase>.ManyToOne<TDataType>(Expression<Func<UserClaim, IList<TDataType>>>) MappingBaseClass<UserClaim, DefaultDatabase>.ManyToOne<TDataType>(Expression<Func<UserClaim, TDataType>>) MappingBaseClass<UserClaim, DefaultDatabase>.Map<TDataType>(Expression<Func<UserClaim, TDataType>>) MappingBaseClass<UserClaim, DefaultDatabase>.Reduce(ILogger) MappingBaseClass<UserClaim, DefaultDatabase>.Reduce(IMapping, ILogger) MappingBaseClass<UserClaim, DefaultDatabase>.Reference<TDataType>(Expression<Func<UserClaim, TDataType>>) MappingBaseClass<UserClaim, DefaultDatabase>.SetQuery(QueryType, string, CommandType, params IParameter[]) MappingBaseClass<UserClaim, DefaultDatabase>.Setup() MappingBaseClass<UserClaim, DefaultDatabase>.ToString() MappingBaseClass<UserClaim, DefaultDatabase>.AutoIDProperties MappingBaseClass<UserClaim, DefaultDatabase>.DatabaseConfigType MappingBaseClass<UserClaim, DefaultDatabase>.IDProperties MappingBaseClass<UserClaim, DefaultDatabase>.ManyToManyProperties MappingBaseClass<UserClaim, DefaultDatabase>.ManyToOneProperties MappingBaseClass<UserClaim, DefaultDatabase>.MapProperties MappingBaseClass<UserClaim, DefaultDatabase>.Merge MappingBaseClass<UserClaim, DefaultDatabase>.ObjectType MappingBaseClass<UserClaim, DefaultDatabase>.Order MappingBaseClass<UserClaim, DefaultDatabase>.Prefix MappingBaseClass<UserClaim, DefaultDatabase>.Queries MappingBaseClass<UserClaim, DefaultDatabase>.ReferenceProperties MappingBaseClass<UserClaim, DefaultDatabase>.SchemaName MappingBaseClass<UserClaim, DefaultDatabase>.Suffix MappingBaseClass<UserClaim, DefaultDatabase>.TableName object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods GenericExtensions.When<TObject>(TObject, bool, Func<TObject, TObject>) ExpandoObjectExtensions.ConvertToExpando(object?) See Also MappingBaseClass<TClassType, TDatabaseType>"
  },
  "api/Mithril.Security.Models.Mappings.UserMapping.html": {
    "href": "api/Mithril.Security.Models.Mappings.UserMapping.html",
    "title": "Class UserMapping | Mithril API Reference",
    "keywords": "Class UserMapping Namespace Mithril.Security.Models.Mappings Assembly Mithril.Security.dll User mapping public class UserMapping : MappingBaseClass<User, DefaultDatabase>, IMapping<User>, IMapping Inheritance object MappingBaseClass<User, DefaultDatabase> UserMapping Implements IMapping<User> IMapping Inherited Members MappingBaseClass<User, DefaultDatabase>.AddAutoKey() MappingBaseClass<User, DefaultDatabase>.ContainsProperty(string) MappingBaseClass<User, DefaultDatabase>.Copy(IMapping) MappingBaseClass<User, DefaultDatabase>.CopyProperty(IIDProperty) MappingBaseClass<User, DefaultDatabase>.CopyProperty(IProperty) MappingBaseClass<User, DefaultDatabase>.CopyProperty(IMapProperty) MappingBaseClass<User, DefaultDatabase>.CopyProperty(IManyToOneProperty) MappingBaseClass<User, DefaultDatabase>.CopyProperty(IManyToManyProperty) MappingBaseClass<User, DefaultDatabase>.Equals(object) MappingBaseClass<User, DefaultDatabase>.GetColumnName(string) MappingBaseClass<User, DefaultDatabase>.GetHashCode() MappingBaseClass<User, DefaultDatabase>.ID<TDataType>(Expression<Func<User, TDataType>>) MappingBaseClass<User, DefaultDatabase>.ManyToMany<TDataType>(Expression<Func<User, IList<TDataType>>>) MappingBaseClass<User, DefaultDatabase>.ManyToOne<TDataType>(Expression<Func<User, IList<TDataType>>>) MappingBaseClass<User, DefaultDatabase>.ManyToOne<TDataType>(Expression<Func<User, TDataType>>) MappingBaseClass<User, DefaultDatabase>.Map<TDataType>(Expression<Func<User, TDataType>>) MappingBaseClass<User, DefaultDatabase>.Reduce(ILogger) MappingBaseClass<User, DefaultDatabase>.Reduce(IMapping, ILogger) MappingBaseClass<User, DefaultDatabase>.Reference<TDataType>(Expression<Func<User, TDataType>>) MappingBaseClass<User, DefaultDatabase>.SetQuery(QueryType, string, CommandType, params IParameter[]) MappingBaseClass<User, DefaultDatabase>.Setup() MappingBaseClass<User, DefaultDatabase>.ToString() MappingBaseClass<User, DefaultDatabase>.AutoIDProperties MappingBaseClass<User, DefaultDatabase>.DatabaseConfigType MappingBaseClass<User, DefaultDatabase>.IDProperties MappingBaseClass<User, DefaultDatabase>.ManyToManyProperties MappingBaseClass<User, DefaultDatabase>.ManyToOneProperties MappingBaseClass<User, DefaultDatabase>.MapProperties MappingBaseClass<User, DefaultDatabase>.Merge MappingBaseClass<User, DefaultDatabase>.ObjectType MappingBaseClass<User, DefaultDatabase>.Order MappingBaseClass<User, DefaultDatabase>.Prefix MappingBaseClass<User, DefaultDatabase>.Queries MappingBaseClass<User, DefaultDatabase>.ReferenceProperties MappingBaseClass<User, DefaultDatabase>.SchemaName MappingBaseClass<User, DefaultDatabase>.Suffix MappingBaseClass<User, DefaultDatabase>.TableName object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods GenericExtensions.When<TObject>(TObject, bool, Func<TObject, TObject>) ExpandoObjectExtensions.ConvertToExpando(object?) Constructors UserMapping() Initializes a new instance of the UserMapping class. public UserMapping() See Also MappingBaseClass<TClassType, TDatabaseType>"
  },
  "api/Mithril.Security.Models.Mappings.html": {
    "href": "api/Mithril.Security.Models.Mappings.html",
    "title": "Namespace Mithril.Security.Models.Mappings | Mithril API Reference",
    "keywords": "Namespace Mithril.Security.Models.Mappings Classes IPermissionMapping Permission mapping ITenantMapping ITenant mapping IUserClaimMapping IUserClaim mapping IUserMapping IUser mapping PermissionMapping Permission mapping TenantMapping Tenant mapping UserClaimMapping User claim mapping UserMapping User mapping"
  },
  "api/Mithril.Security.Models.Permission.html": {
    "href": "api/Mithril.Security.Models.Permission.html",
    "title": "Class Permission | Mithril API Reference",
    "keywords": "Class Permission Namespace Mithril.Security.Models Assembly Mithril.Security.dll Permission data holder public class Permission : ModelBase<Permission>, IModel<Permission>, IEquatable<IModel<Permission>>, IComparable, IComparable<Permission>, IEquatable<ModelBase<Permission>>, IPermission, IModel, IEquatable<IModel>, IEquatable<IPermission>, IEquatable<Permission> Inheritance object ModelBase<Permission> Permission Implements IModel<Permission> IEquatable<IModel<Permission>> IComparable IComparable<Permission> IEquatable<ModelBase<Permission>> IPermission IModel IEquatable<IModel> IEquatable<IPermission> IEquatable<Permission> Inherited Members ModelBase<Permission>.Active ModelBase<Permission>.Creator ModelBase<Permission>.DateCreated ModelBase<Permission>.DateModified ModelBase<Permission>.ID ModelBase<Permission>.Modifier ModelBase<Permission>.TenantID ModelBase<Permission>.All(IDataService) ModelBase<Permission>.AllActive(IDataService) ModelBase<Permission>.AllInactive(IDataService) ModelBase<Permission>.Load(long, IDataService) ModelBase<Permission>.Query(IDataService) ModelBase<Permission>.CanBeModifiedBy(ClaimsPrincipal) ModelBase<Permission>.CanBeViewedBy(ClaimsPrincipal) ModelBase<Permission>.CompareTo(object) ModelBase<Permission>.DeleteAsync(IDataService, ClaimsPrincipal, bool) ModelBase<Permission>.Equals(IModel) ModelBase<Permission>.Equals(IModel<Permission>) ModelBase<Permission>.Equals(ModelBase<Permission>) ModelBase<Permission>.SaveAsync(IDataService, ClaimsPrincipal) ModelBase<Permission>.SetupObject(IDataService, ClaimsPrincipal) ModelBase<Permission>.SetupObject(IDataService, IUser) ModelBase<Permission>.SetupObjectAndReturn(IDataService, ClaimsPrincipal) object.Equals(object, object) object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Extension Methods GenericExtensions.When<TObject>(TObject, bool, Func<TObject, TObject>) ExpandoObjectExtensions.ConvertToExpando(object?) Constructors Permission() Initializes a new instance of the Permission class. public Permission() Permission(string, PermissionType, params IUserClaim[]) Initializes a new instance of the Permission class. public Permission(string displayName, PermissionType operand, params IUserClaim[] claims) Parameters displayName string The display name. operand PermissionType The operand. claims IUserClaim[] The claims. Exceptions ArgumentNullException claims ArgumentException displayName Properties Claims Gets or sets the claims. public virtual IList<IUserClaim> Claims { get; set; } Property Value IList<IUserClaim> The claims. DisplayName Gets or sets the display name. public string? DisplayName { get; set; } Property Value string The display name. Operand Gets or sets the operand. public PermissionType Operand { get; set; } Property Value PermissionType The operand. Methods AddClaim(IUserClaim?) Adds the claim. public IPermission AddClaim(IUserClaim? claim) Parameters claim IUserClaim The claim. Returns IPermission This. CompareTo(Permission?) Compares the object to another object public override int CompareTo(Permission? other) Parameters other Permission Object to compare to Returns int 0 if they are equal, -1 if this is smaller, 1 if it is larger Equals(IPermission?) Indicates whether the current object is equal to another object of the same type. public bool Equals(IPermission? other) Parameters other IPermission An object to compare with this object. Returns bool true if the current object is equal to the other parameter; otherwise, false. Equals(Permission?) Indicates whether the current object is equal to another object of the same type. public bool Equals(Permission? other) Parameters other Permission An object to compare with this object. Returns bool true if the current object is equal to the other parameter; otherwise, false. Equals(object?) Determines whether the specified object, is equal to this instance. public override bool Equals(object? obj) Parameters obj object The object to compare with this instance. Returns bool true if the specified object is equal to this instance; otherwise, false. GetHashCode() Returns a hash code for this instance. public override int GetHashCode() Returns int A hash code for this instance, suitable for use in hashing algorithms and data structures like a hash table. HasPermission(IUser?) Determines whether the specified user has permission. public bool HasPermission(IUser? user) Parameters user IUser The user. Returns bool true if the specified user has permission; otherwise, false. HasPermission(ClaimsPrincipal?) Determines whether the specified user has permission. public bool HasPermission(ClaimsPrincipal? user) Parameters user ClaimsPrincipal The user. Returns bool true if the specified user has permission; otherwise, false. Load(string, IDataService?) Loads a specific permission public static Permission? Load(string displayName, IDataService? dataService) Parameters displayName string The display name. dataService IDataService The data service. Returns Permission Permission specified LoadOrCreateAsync(string, PermissionType, IUserClaim[], IDataService?, ClaimsPrincipal?) Loads a specific claim or creates it. public static Task<IPermission> LoadOrCreateAsync(string displayName, PermissionType operand, IUserClaim[] claims, IDataService? context, ClaimsPrincipal? user) Parameters displayName string The display name. operand PermissionType The operand. claims IUserClaim[] The claims. context IDataService The context. user ClaimsPrincipal The user. Returns Task<IPermission> The user claim specified. RemoveClaim(IUserClaim?) Removes the claim. public IPermission RemoveClaim(IUserClaim? claim) Parameters claim IUserClaim The claim. Returns IPermission This. ReplaceClaim(IUserClaim?, IUserClaim?) Replaces the claim. public IPermission ReplaceClaim(IUserClaim? originalClaim, IUserClaim? newClaim) Parameters originalClaim IUserClaim The original claim. newClaim IUserClaim The new claim. Returns IPermission This ToString() Returns a string that represents this instance. public override string ToString() Returns string A string that represents this instance. Operators operator ==(Permission?, Permission?) Implements the operator ==. public static bool operator ==(Permission? first, Permission? second) Parameters first Permission The first. second Permission The second. Returns bool The result of the operator. operator >(Permission?, Permission?) Implements the operator >. public static bool operator >(Permission? left, Permission? right) Parameters left Permission The left. right Permission The right. Returns bool The result of the operator. operator >=(Permission?, Permission?) Implements the operator >=. public static bool operator >=(Permission? left, Permission? right) Parameters left Permission The left. right Permission The right. Returns bool The result of the operator. operator !=(Permission?, Permission?) Implements the operator !=. public static bool operator !=(Permission? left, Permission? right) Parameters left Permission The left. right Permission The right. Returns bool The result of the operator. operator <(Permission?, Permission?) Implements the operator <. public static bool operator <(Permission? left, Permission? right) Parameters left Permission The left. right Permission The right. Returns bool The result of the operator. operator <=(Permission?, Permission?) Implements the operator <=. public static bool operator <=(Permission? left, Permission? right) Parameters left Permission The left. right Permission The right. Returns bool The result of the operator. See Also IPermission IEquatable<T> ModelBase<TClass>"
  },
  "api/Mithril.Security.Models.Tenant.html": {
    "href": "api/Mithril.Security.Models.Tenant.html",
    "title": "Class Tenant | Mithril API Reference",
    "keywords": "Class Tenant Namespace Mithril.Security.Models Assembly Mithril.Security.dll Tenant model class public class Tenant : ModelBase<Tenant>, IModel<Tenant>, IEquatable<IModel<Tenant>>, IComparable, IComparable<Tenant>, IEquatable<ModelBase<Tenant>>, ITenant, IModel, IEquatable<IModel>, IEquatable<ITenant>, IEquatable<Tenant> Inheritance object ModelBase<Tenant> Tenant Implements IModel<Tenant> IEquatable<IModel<Tenant>> IComparable IComparable<Tenant> IEquatable<ModelBase<Tenant>> ITenant IModel IEquatable<IModel> IEquatable<ITenant> IEquatable<Tenant> Inherited Members ModelBase<Tenant>.Active ModelBase<Tenant>.Creator ModelBase<Tenant>.DateCreated ModelBase<Tenant>.DateModified ModelBase<Tenant>.ID ModelBase<Tenant>.Modifier ModelBase<Tenant>.TenantID ModelBase<Tenant>.All(IDataService) ModelBase<Tenant>.AllActive(IDataService) ModelBase<Tenant>.AllInactive(IDataService) ModelBase<Tenant>.Load(long, IDataService) ModelBase<Tenant>.Query(IDataService) ModelBase<Tenant>.CanBeModifiedBy(ClaimsPrincipal) ModelBase<Tenant>.CanBeViewedBy(ClaimsPrincipal) ModelBase<Tenant>.CompareTo(object) ModelBase<Tenant>.DeleteAsync(IDataService, ClaimsPrincipal, bool) ModelBase<Tenant>.Equals(IModel) ModelBase<Tenant>.Equals(IModel<Tenant>) ModelBase<Tenant>.Equals(ModelBase<Tenant>) ModelBase<Tenant>.SaveAsync(IDataService, ClaimsPrincipal) ModelBase<Tenant>.SetupObject(IDataService, ClaimsPrincipal) ModelBase<Tenant>.SetupObject(IDataService, IUser) ModelBase<Tenant>.SetupObjectAndReturn(IDataService, ClaimsPrincipal) object.Equals(object, object) object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Extension Methods GenericExtensions.When<TObject>(TObject, bool, Func<TObject, TObject>) ExpandoObjectExtensions.ConvertToExpando(object?) Constructors Tenant() Initializes a new instance of the Tenant class. public Tenant() Tenant(string) Initializes a new instance of the Tenant class. public Tenant(string displayName) Parameters displayName string The display name. Exceptions ArgumentException displayName Properties DisplayName Gets or sets the display name. [Required] [MaxLength(100)] [MinLength(1)] public string? DisplayName { get; set; } Property Value string The display name. Users Gets or sets the users. public virtual IList<IUser> Users { get; set; } Property Value IList<IUser> The users. Methods CompareTo(Tenant?) Compares the object to another object public override int CompareTo(Tenant? other) Parameters other Tenant Object to compare to Returns int 0 if they are equal, -1 if this is smaller, 1 if it is larger Equals(ITenant?) Indicates whether the current object is equal to another object of the same type. public bool Equals(ITenant? other) Parameters other ITenant An object to compare with this object. Returns bool true if the current object is equal to the other parameter; otherwise, false. Equals(Tenant?) Indicates whether the current object is equal to another object of the same type. public bool Equals(Tenant? other) Parameters other Tenant An object to compare with this object. Returns bool true if the current object is equal to the other parameter; otherwise, false. Equals(object?) Determines whether the specified object, is equal to this instance. public override bool Equals(object? obj) Parameters obj object The object to compare with this instance. Returns bool true if the specified object is equal to this instance; otherwise, false. GetHashCode() Returns a hash code for this instance. public override int GetHashCode() Returns int A hash code for this instance, suitable for use in hashing algorithms and data structures like a hash table. Load(string, IDataService?) Loads the specified tenant by display name. public static Tenant? Load(string displayName, IDataService? dataService) Parameters displayName string The display name. dataService IDataService The data service. Returns Tenant The tenant specified. LoadOrCreateAsync(string, IDataService?, ClaimsPrincipal?) Loads or creates the Tenant if necessary. public static Task<Tenant> LoadOrCreateAsync(string displayName, IDataService? context, ClaimsPrincipal? user) Parameters displayName string The display name. context IDataService The context. user ClaimsPrincipal The user. Returns Task<Tenant> The Tenant specified. LoadOrCreateUserAsync(string, string, string, IDataService?, ClaimsPrincipal?, params IUserClaim[]) Loads the user or creates them asynchronously. public Task<User> LoadOrCreateUserAsync(string userName, string firstName, string lastName, IDataService? dataService, ClaimsPrincipal? user, params IUserClaim[] claims) Parameters userName string Name of the user. firstName string The first name. lastName string The last name. dataService IDataService The data service. user ClaimsPrincipal The user. claims IUserClaim[] The claims. Returns Task<User> The user specified. ToString() Returns a string that represents this instance. public override string ToString() Returns string A string that represents this instance. Operators operator ==(Tenant?, Tenant?) Implements the operator ==. public static bool operator ==(Tenant? first, Tenant? second) Parameters first Tenant The first. second Tenant The second. Returns bool The result of the operator. operator >(Tenant?, Tenant?) Implements the operator >. public static bool operator >(Tenant? left, Tenant? right) Parameters left Tenant The left. right Tenant The right. Returns bool The result of the operator. operator >=(Tenant?, Tenant?) Implements the operator >=. public static bool operator >=(Tenant? left, Tenant? right) Parameters left Tenant The left. right Tenant The right. Returns bool The result of the operator. operator !=(Tenant?, Tenant?) Implements the operator !=. public static bool operator !=(Tenant? left, Tenant? right) Parameters left Tenant The left. right Tenant The right. Returns bool The result of the operator. operator <(Tenant?, Tenant?) Implements the operator <. public static bool operator <(Tenant? left, Tenant? right) Parameters left Tenant The left. right Tenant The right. Returns bool The result of the operator. operator <=(Tenant?, Tenant?) Implements the operator <=. public static bool operator <=(Tenant? left, Tenant? right) Parameters left Tenant The left. right Tenant The right. Returns bool The result of the operator. See Also ITenant ModelBase<TClass> IEquatable<T>"
  },
  "api/Mithril.Security.Models.User.html": {
    "href": "api/Mithril.Security.Models.User.html",
    "title": "Class User | Mithril API Reference",
    "keywords": "Class User Namespace Mithril.Security.Models Assembly Mithril.Security.dll User model public class User : ModelBase<User>, IModel<User>, IEquatable<IModel<User>>, IComparable, IComparable<User>, IEquatable<ModelBase<User>>, IUser, IModel, IEquatable<IModel>, IEquatable<IUser>, IEquatable<User> Inheritance object ModelBase<User> User Implements IModel<User> IEquatable<IModel<User>> IComparable IComparable<User> IEquatable<ModelBase<User>> IUser IModel IEquatable<IModel> IEquatable<IUser> IEquatable<User> Inherited Members ModelBase<User>.Active ModelBase<User>.Creator ModelBase<User>.DateCreated ModelBase<User>.DateModified ModelBase<User>.ID ModelBase<User>.Modifier ModelBase<User>.TenantID ModelBase<User>.All(IDataService) ModelBase<User>.AllActive(IDataService) ModelBase<User>.AllInactive(IDataService) ModelBase<User>.Load(long, IDataService) ModelBase<User>.Query(IDataService) ModelBase<User>.CanBeModifiedBy(ClaimsPrincipal) ModelBase<User>.CanBeViewedBy(ClaimsPrincipal) ModelBase<User>.CompareTo(object) ModelBase<User>.DeleteAsync(IDataService, ClaimsPrincipal, bool) ModelBase<User>.Equals(IModel) ModelBase<User>.Equals(IModel<User>) ModelBase<User>.Equals(ModelBase<User>) ModelBase<User>.SaveAsync(IDataService, ClaimsPrincipal) ModelBase<User>.SetupObject(IDataService, ClaimsPrincipal) ModelBase<User>.SetupObject(IDataService, IUser) ModelBase<User>.SetupObjectAndReturn(IDataService, ClaimsPrincipal) object.Equals(object, object) object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Extension Methods GenericExtensions.When<TObject>(TObject, bool, Func<TObject, TObject>) ExpandoObjectExtensions.ConvertToExpando(object?) Constructors User() Initializes a new instance of the User class. public User() User(string, string, string, ITenant?) Initializes a new instance of the User class. public User(string userName, string firstName, string lastName, ITenant? tenant) Parameters userName string Name of the user. firstName string The first name. lastName string The last name. tenant ITenant The tenant. Exceptions ArgumentException userName or firstName or lastName ArgumentNullException firstName or lastName User(string, string, string, long?) Initializes a new instance of the User class. public User(string userName, string firstName, string lastName, long? tenant) Parameters userName string Name of the user. firstName string The first name. lastName string The last name. tenant long? The tenant. Exceptions ArgumentException userName or firstName or lastName ArgumentNullException firstName or lastName Properties Claims Gets or sets the claims. public virtual IList<IUserClaim> Claims { get; set; } Property Value IList<IUserClaim> The claims. ContactInformation Gets or sets the contact information. public virtual IList<ContactInfo> ContactInformation { get; set; } Property Value IList<ContactInfo> The contact information. FirstName Gets or sets the first name. [Required] [MaxLength(100)] [MinLength(1)] public string? FirstName { get; set; } Property Value string The first name. FullName Gets the full name. public string FullName { get; } Property Value string The full name. Initials Gets the initials. public string Initials { get; } Property Value string The initials. LastName Gets or sets the last name. [Required] [MaxLength(100)] [MinLength(1)] public string? LastName { get; set; } Property Value string The last name. MiddleName Gets or sets the name of the middle. [MaxLength(100)] public string? MiddleName { get; set; } Property Value string The name of the middle. NickName Gets or sets the nick name. [MaxLength(100)] public string? NickName { get; set; } Property Value string The nick name. Prefix Gets or sets the prefix. [MaxLength(30)] public string? Prefix { get; set; } Property Value string The prefix. ShortName Gets the short name. public string ShortName { get; } Property Value string The short name. Suffix Gets or sets the suffix. [MaxLength(30)] public string? Suffix { get; set; } Property Value string The suffix. Title Gets or sets the title. [MaxLength(100)] public string? Title { get; set; } Property Value string The title. UserName Gets or sets the name of the user. public string? UserName { get; set; } Property Value string The name of the user. Methods AddClaim(IUserClaim?) Adds the claim. public User AddClaim(IUserClaim? claim) Parameters claim IUserClaim The claim. Returns User This. CanAccess(string, string?) Determines whether this instance can access the specified type. public bool CanAccess(string type, string? name) Parameters type string The type. name string The value. Returns bool true if this instance can access the specified type; otherwise, false. CompareTo(User?) Compares the object to another object public override int CompareTo(User? other) Parameters other User Object to compare to Returns int 0 if they are equal, -1 if this is smaller, 1 if it is larger CreateOrUpdateContactInfoAsync(ContactInfoType, IDataService?, ClaimsPrincipal?, params string[]) Creates the contact info object or updates it asynchronously. public Task CreateOrUpdateContactInfoAsync(ContactInfoType type, IDataService? dataService, ClaimsPrincipal? user, params string[] value) Parameters type ContactInfoType The display name. dataService IDataService The data service. user ClaimsPrincipal The user. value string[] The value. Returns Task The async task CreateOrUpdateContactInfoAsync(ILookUp?, IDataService?, ClaimsPrincipal?, params string[]) Creates or updates contact information asynchronously. public Task CreateOrUpdateContactInfoAsync(ILookUp? type, IDataService? dataService, ClaimsPrincipal? user, params string[] value) Parameters type ILookUp The type. dataService IDataService The data service. user ClaimsPrincipal The user. value string[] The value. Returns Task The async task. Equals(IUser?) Indicates whether the current object is equal to another object of the same type. public bool Equals(IUser? other) Parameters other IUser An object to compare with this object. Returns bool true if the current object is equal to the other parameter; otherwise, false. Equals(User?) Indicates whether the current object is equal to another object of the same type. public bool Equals(User? other) Parameters other User An object to compare with this object. Returns bool true if the current object is equal to the other parameter; otherwise, false. Equals(object?) Determines whether the specified object, is equal to this instance. public override bool Equals(object? obj) Parameters obj object The object to compare with this instance. Returns bool true if the specified object is equal to this instance; otherwise, false. Equals(ClaimsPrincipal?) Determines if this user object is equal to the user specified. public bool Equals(ClaimsPrincipal? user) Parameters user ClaimsPrincipal The user. Returns bool True if they are the same, false otherwise. GetClaims(UserClaimTypes) Gets the claims of the type specified. public IEnumerable<IUserClaim> GetClaims(UserClaimTypes type) Parameters type UserClaimTypes The type. Returns IEnumerable<IUserClaim> The list of user claims specified. GetContactInfo(params ContactInfoType[]) Gets the contact information requested. public IEnumerable<ContactInfo> GetContactInfo(params ContactInfoType[] types) Parameters types ContactInfoType[] The display name. Returns IEnumerable<ContactInfo> The contact info specified. GetContactInfo(params ILookUp[]) Gets the contact information requested. public IEnumerable<ContactInfo> GetContactInfo(params ILookUp[] types) Parameters types ILookUp[] The lookup types. Returns IEnumerable<ContactInfo> The contact info specified. GetHashCode() Returns a hash code for this instance. public override int GetHashCode() Returns int A hash code for this instance, suitable for use in hashing algorithms and data structures like a hash table. Load(string, IDataService?) Loads the specified user name. public static User? Load(string userName, IDataService? dataService) Parameters userName string Name of the user. dataService IDataService The data service. Returns User The user specified. LoadCurrentUser(IDataService?) Loads the current user. public static User? LoadCurrentUser(IDataService? dataService) Parameters dataService IDataService The data service. Returns User The current user. ToString() Returns a string that represents this instance. public override string ToString() Returns string A string that represents this instance. Operators operator ==(User?, User?) Implements the operator ==. public static bool operator ==(User? first, User? second) Parameters first User The first. second User The second. Returns bool The result of the operator. operator >(User?, User?) Implements the operator >. public static bool operator >(User? left, User? right) Parameters left User The left. right User The right. Returns bool The result of the operator. operator >=(User?, User?) Implements the operator >=. public static bool operator >=(User? left, User? right) Parameters left User The left. right User The right. Returns bool The result of the operator. operator !=(User?, User?) Implements the operator !=. public static bool operator !=(User? left, User? right) Parameters left User The left. right User The right. Returns bool The result of the operator. operator <(User?, User?) Implements the operator <. public static bool operator <(User? left, User? right) Parameters left User The left. right User The right. Returns bool The result of the operator. operator <=(User?, User?) Implements the operator <=. public static bool operator <=(User? left, User? right) Parameters left User The left. right User The right. Returns bool The result of the operator. See Also ModelBase<TClass> IUser"
  },
  "api/Mithril.Security.Models.UserClaim.html": {
    "href": "api/Mithril.Security.Models.UserClaim.html",
    "title": "Class UserClaim | Mithril API Reference",
    "keywords": "Class UserClaim Namespace Mithril.Security.Models Assembly Mithril.Security.dll User claim public class UserClaim : ModelBase<UserClaim>, IModel<UserClaim>, IEquatable<IModel<UserClaim>>, IComparable, IComparable<UserClaim>, IEquatable<ModelBase<UserClaim>>, IUserClaim, IModel, IEquatable<IModel>, IEquatable<IUserClaim>, IEquatable<UserClaim> Inheritance object ModelBase<UserClaim> UserClaim Implements IModel<UserClaim> IEquatable<IModel<UserClaim>> IComparable IComparable<UserClaim> IEquatable<ModelBase<UserClaim>> IUserClaim IModel IEquatable<IModel> IEquatable<IUserClaim> IEquatable<UserClaim> Inherited Members ModelBase<UserClaim>.Active ModelBase<UserClaim>.Creator ModelBase<UserClaim>.DateCreated ModelBase<UserClaim>.DateModified ModelBase<UserClaim>.ID ModelBase<UserClaim>.Modifier ModelBase<UserClaim>.TenantID ModelBase<UserClaim>.All(IDataService) ModelBase<UserClaim>.AllActive(IDataService) ModelBase<UserClaim>.AllInactive(IDataService) ModelBase<UserClaim>.Load(long, IDataService) ModelBase<UserClaim>.Query(IDataService) ModelBase<UserClaim>.CanBeModifiedBy(ClaimsPrincipal) ModelBase<UserClaim>.CanBeViewedBy(ClaimsPrincipal) ModelBase<UserClaim>.CompareTo(object) ModelBase<UserClaim>.DeleteAsync(IDataService, ClaimsPrincipal, bool) ModelBase<UserClaim>.Equals(IModel) ModelBase<UserClaim>.Equals(IModel<UserClaim>) ModelBase<UserClaim>.Equals(ModelBase<UserClaim>) ModelBase<UserClaim>.SaveAsync(IDataService, ClaimsPrincipal) ModelBase<UserClaim>.SetupObject(IDataService, ClaimsPrincipal) ModelBase<UserClaim>.SetupObject(IDataService, IUser) ModelBase<UserClaim>.SetupObjectAndReturn(IDataService, ClaimsPrincipal) object.Equals(object, object) object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Extension Methods GenericExtensions.When<TObject>(TObject, bool, Func<TObject, TObject>) ExpandoObjectExtensions.ConvertToExpando(object?) Constructors UserClaim() Initializes a new instance of the UserClaim class. public UserClaim() UserClaim(UserClaimTypes?, string, params IUser[]) Initializes a new instance of the UserClaim class. public UserClaim(UserClaimTypes? type, string value, params IUser[] users) Parameters type UserClaimTypes The type. value string The value. users IUser[] The users. Properties Type Gets or sets the type. public string? Type { get; set; } Property Value string The type. Users Gets or sets the users. public virtual IList<IUser> Users { get; set; } Property Value IList<IUser> The users. Value Gets or sets the value. public string? Value { get; set; } Property Value string The value. Methods CanAccess(IUser) Determines whether this instance can access the specified user. public bool CanAccess(IUser user) Parameters user IUser The user. Returns bool true if this instance can access the specified user; otherwise, false. CanAccess(ClaimsPrincipal?) Determines whether this instance can access the specified user. public bool CanAccess(ClaimsPrincipal? user) Parameters user ClaimsPrincipal The user. Returns bool true if this instance can access the specified user; otherwise, false. CanAccess(string, string?) Determines whether this instance can access the specified type. public bool CanAccess(string type, string? value) Parameters type string The type. value string The value. Returns bool true if this instance can access the specified type; otherwise, false. CompareTo(UserClaim?) Compares the object to another object public override int CompareTo(UserClaim? other) Parameters other UserClaim Object to compare to Returns int 0 if they are equal, -1 if this is smaller, 1 if it is larger Equals(IUserClaim?) Indicates whether the current object is equal to another object of the same type. public bool Equals(IUserClaim? other) Parameters other IUserClaim An object to compare with this object. Returns bool true if the current object is equal to the other parameter; otherwise, false. Equals(UserClaim?) Indicates whether the current object is equal to another object of the same type. public bool Equals(UserClaim? other) Parameters other UserClaim An object to compare with this object. Returns bool true if the current object is equal to the other parameter; otherwise, false. Equals(object?) Determines whether the specified object, is equal to this instance. public override bool Equals(object? obj) Parameters obj object The object to compare with this instance. Returns bool true if the specified object is equal to this instance; otherwise, false. GetHashCode() Returns a hash code for this instance. public override int GetHashCode() Returns int A hash code for this instance, suitable for use in hashing algorithms and data structures like a hash table. Load(UserClaimTypes, string, IDataService?) Loads a specific claim public static UserClaim? Load(UserClaimTypes type, string value, IDataService? dataService) Parameters type UserClaimTypes The type. value string The value. dataService IDataService The data service. Returns UserClaim User claim specified LoadOrCreateAsync(UserClaimTypes, string, IDataService?, ClaimsPrincipal?) Loads a specific claim or creates it. public static Task<IUserClaim> LoadOrCreateAsync(UserClaimTypes type, string value, IDataService? context, ClaimsPrincipal? user) Parameters type UserClaimTypes The type. value string The value. context IDataService The context. user ClaimsPrincipal The user. Returns Task<IUserClaim> The user claim specified. ToString() Returns a string that represents this instance. public override string ToString() Returns string A string that represents this instance. Operators operator ==(UserClaim?, UserClaim?) Implements the operator ==. public static bool operator ==(UserClaim? first, UserClaim? second) Parameters first UserClaim The first. second UserClaim The second. Returns bool The result of the operator. operator >(UserClaim?, UserClaim?) Implements the operator >. public static bool operator >(UserClaim? left, UserClaim? right) Parameters left UserClaim The left. right UserClaim The right. Returns bool The result of the operator. operator >=(UserClaim?, UserClaim?) Implements the operator >=. public static bool operator >=(UserClaim? left, UserClaim? right) Parameters left UserClaim The left. right UserClaim The right. Returns bool The result of the operator. operator !=(UserClaim?, UserClaim?) Implements the operator !=. public static bool operator !=(UserClaim? left, UserClaim? right) Parameters left UserClaim The left. right UserClaim The right. Returns bool The result of the operator. operator <(UserClaim?, UserClaim?) Implements the operator <. public static bool operator <(UserClaim? left, UserClaim? right) Parameters left UserClaim The left. right UserClaim The right. Returns bool The result of the operator. operator <=(UserClaim?, UserClaim?) Implements the operator <=. public static bool operator <=(UserClaim? left, UserClaim? right) Parameters left UserClaim The left. right UserClaim The right. Returns bool The result of the operator. See Also IUserClaim IEquatable<T> ModelBase<TClass>"
  },
  "api/Mithril.Security.Models.html": {
    "href": "api/Mithril.Security.Models.html",
    "title": "Namespace Mithril.Security.Models | Mithril API Reference",
    "keywords": "Namespace Mithril.Security.Models Classes Permission Permission data holder Tenant Tenant model class User User model UserClaim User claim"
  },
  "api/Mithril.Security.Services.SecurityService.html": {
    "href": "api/Mithril.Security.Services.SecurityService.html",
    "title": "Class SecurityService | Mithril API Reference",
    "keywords": "Class SecurityService Namespace Mithril.Security.Services Assembly Mithril.Security.dll Security service public class SecurityService : ISecurityService Inheritance object SecurityService Implements ISecurityService Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods GenericExtensions.When<TObject>(TObject, bool, Func<TObject, TObject>) ExpandoObjectExtensions.ConvertToExpando(object?) Remarks Initializes a new instance of the SecurityService class. Constructors SecurityService(IDataService?, SystemAccounts?) Security service public SecurityService(IDataService? dataService, SystemAccounts? systemAccounts) Parameters dataService IDataService The data service. systemAccounts SystemAccounts The system accounts. Remarks Initializes a new instance of the SecurityService class. See Also ISecurityService Methods LoadAllTenants() Loads all tenants. public IEnumerable<ITenant> LoadAllTenants() Returns IEnumerable<ITenant> All tenants. LoadAllUsers() Loads all users. public IEnumerable<IUser> LoadAllUsers() Returns IEnumerable<IUser> The users. LoadAnonymousUserAccount() Loads the anonymous user account. public IUser? LoadAnonymousUserAccount() Returns IUser The anonymous user account. LoadClaim(UserClaimTypes, string) Loads the user claim specified by the identifier. public IUserClaim? LoadClaim(UserClaimTypes type, string value) Parameters type UserClaimTypes The type. value string The value. Returns IUserClaim The user claim specified. LoadClaim(long) Loads the user claim specified by the identifier. public IUserClaim? LoadClaim(long id) Parameters id long The identifier. Returns IUserClaim The user claim specified. LoadCurrentUser() Loads the current user. public IUser? LoadCurrentUser() Returns IUser The current user. LoadOrCreateClaimAsync(UserClaimTypes, string) Loads or creates the user claim asynchronously based on the type and value. public Task<IUserClaim> LoadOrCreateClaimAsync(UserClaimTypes type, string value) Parameters type UserClaimTypes The type. value string The value. Returns Task<IUserClaim> The user claim specified. LoadOrCreatePermissionAsync(string, PermissionType, params IUserClaim[]) Loads or creates the permission asynchronously based on the display name. public Task<IPermission> LoadOrCreatePermissionAsync(string displayName, PermissionType operand, params IUserClaim[] claims) Parameters displayName string The display name. operand PermissionType The operand. claims IUserClaim[] The claims. Returns Task<IPermission> The permission specified. LoadPermission(SystemPermissions) Loads the permission specified. public IPermission? LoadPermission(SystemPermissions permission) Parameters permission SystemPermissions The permission. Returns IPermission The permission specified. LoadPermission(string) Loads the permission specified. public IPermission? LoadPermission(string displayName) Parameters displayName string The display name. Returns IPermission The permission specified. LoadSystemAccount() Loads the system account. public IUser? LoadSystemAccount() Returns IUser The system account. LoadSystemTenant() Loads the system tenant. public ITenant? LoadSystemTenant() Returns ITenant The system tenant. LoadUser(long) Loads the user. public IUser? LoadUser(long id) Parameters id long The identifier. Returns IUser The user specified. LoadUser(string) Loads the user by username. public IUser? LoadUser(string username) Parameters username string The username. Returns IUser The user specified. See Also ISecurityService"
  },
  "api/Mithril.Security.Services.UserClaimsTransformer.html": {
    "href": "api/Mithril.Security.Services.UserClaimsTransformer.html",
    "title": "Class UserClaimsTransformer | Mithril API Reference",
    "keywords": "Class UserClaimsTransformer Namespace Mithril.Security.Services Assembly Mithril.Security.dll User claims transformer (adds claims to the ClaimsPrincipal object so we can use the system built into ASP.Net Core instead of our own) public class UserClaimsTransformer : IClaimsTransformation Inheritance object UserClaimsTransformer Implements IClaimsTransformation Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods GenericExtensions.When<TObject>(TObject, bool, Func<TObject, TObject>) ExpandoObjectExtensions.ConvertToExpando(object?) Remarks Initializes a new instance of the UserClaimsTransformer class. Constructors UserClaimsTransformer(IDataService?) User claims transformer (adds claims to the ClaimsPrincipal object so we can use the system built into ASP.Net Core instead of our own) public UserClaimsTransformer(IDataService? dataService) Parameters dataService IDataService The data service. Remarks Initializes a new instance of the UserClaimsTransformer class. See Also IClaimsTransformation Methods TransformAsync(ClaimsPrincipal) Provides a central transformation point to change the specified principal. Note: this will be run on each AuthenticateAsync call, so its safer to return a new ClaimsPrincipal if your transformation is not idempotent. public Task<ClaimsPrincipal> TransformAsync(ClaimsPrincipal principal) Parameters principal ClaimsPrincipal The ClaimsPrincipal to transform. Returns Task<ClaimsPrincipal> The transformed principal. See Also IClaimsTransformation"
  },
  "api/Mithril.Security.Services.html": {
    "href": "api/Mithril.Security.Services.html",
    "title": "Namespace Mithril.Security.Services | Mithril API Reference",
    "keywords": "Namespace Mithril.Security.Services Classes SecurityService Security service UserClaimsTransformer User claims transformer (adds claims to the ClaimsPrincipal object so we can use the system built into ASP.Net Core instead of our own)"
  },
  "api/Mithril.Security.Windows.WindowsAuthenticationModule.html": {
    "href": "api/Mithril.Security.Windows.WindowsAuthenticationModule.html",
    "title": "Class WindowsAuthenticationModule | Mithril API Reference",
    "keywords": "Class WindowsAuthenticationModule Namespace Mithril.Security.Windows Assembly Mithril.Security.Windows.dll Windows Authentication module public class WindowsAuthenticationModule : ModuleBaseClass<WindowsAuthenticationModule>, IEquatable<WindowsAuthenticationModule>, IModule Inheritance object ModuleBaseClass<WindowsAuthenticationModule> WindowsAuthenticationModule Implements IEquatable<WindowsAuthenticationModule> IModule Inherited Members ModuleBaseClass<WindowsAuthenticationModule>.Category ModuleBaseClass<WindowsAuthenticationModule>.ContentPath ModuleBaseClass<WindowsAuthenticationModule>.Features ModuleBaseClass<WindowsAuthenticationModule>.ID ModuleBaseClass<WindowsAuthenticationModule>.LastModified ModuleBaseClass<WindowsAuthenticationModule>.Name ModuleBaseClass<WindowsAuthenticationModule>.Order ModuleBaseClass<WindowsAuthenticationModule>.Tags ModuleBaseClass<WindowsAuthenticationModule>.Version ModuleBaseClass<WindowsAuthenticationModule>.ConfigureApplication(IApplicationBuilder, IConfiguration, IHostEnvironment) ModuleBaseClass<WindowsAuthenticationModule>.ConfigureHostSettings(IHostBuilder, IConfiguration, IHostEnvironment) ModuleBaseClass<WindowsAuthenticationModule>.ConfigureLoggingSettings(ILoggingBuilder, IConfiguration, IHostEnvironment) ModuleBaseClass<WindowsAuthenticationModule>.ConfigureMVC(IMvcBuilder, IConfiguration, IHostEnvironment) ModuleBaseClass<WindowsAuthenticationModule>.ConfigureRoutes(IEndpointRouteBuilder, IConfiguration, IHostEnvironment) ModuleBaseClass<WindowsAuthenticationModule>.ConfigureWebHostSettings(IWebHostBuilder, IConfiguration, IHostEnvironment) ModuleBaseClass<WindowsAuthenticationModule>.Equals(object) ModuleBaseClass<WindowsAuthenticationModule>.Equals(WindowsAuthenticationModule) ModuleBaseClass<WindowsAuthenticationModule>.GetHashCode() ModuleBaseClass<WindowsAuthenticationModule>.InitializeDataAsync(IDataService, IServiceProvider) ModuleBaseClass<WindowsAuthenticationModule>.OnStarted() ModuleBaseClass<WindowsAuthenticationModule>.OnStopped() ModuleBaseClass<WindowsAuthenticationModule>.OnStopping() object.Equals(object, object) object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods GenericExtensions.When<TObject>(TObject, bool, Func<TObject, TObject>) ExpandoObjectExtensions.ConvertToExpando(object?) Constructors WindowsAuthenticationModule() Initializes a new instance of the WindowsAuthenticationModule class. public WindowsAuthenticationModule() Methods ConfigureServices(IServiceCollection?, IConfiguration?, IHostEnvironment?) Configures the services for the module. public override IServiceCollection? ConfigureServices(IServiceCollection? services, IConfiguration? configuration, IHostEnvironment? env) Parameters services IServiceCollection The services collection. configuration IConfiguration The configuration. env IHostEnvironment Returns IServiceCollection Windows Authentication module See Also ModuleBaseClass<TModule>"
  },
  "api/Mithril.Security.Windows.html": {
    "href": "api/Mithril.Security.Windows.html",
    "title": "Namespace Mithril.Security.Windows | Mithril API Reference",
    "keywords": "Namespace Mithril.Security.Windows Classes WindowsAuthenticationModule Windows Authentication module"
  },
  "api/Mithril.Security.html": {
    "href": "api/Mithril.Security.html",
    "title": "Namespace Mithril.Security | Mithril API Reference",
    "keywords": "Namespace Mithril.Security Classes AuthenticationModule Windows Authentication module"
  },
  "api/Mithril.Tests.Helpers.TestBaseClass-1.html": {
    "href": "api/Mithril.Tests.Helpers.TestBaseClass-1.html",
    "title": "Class TestBaseClass<TTestObject> | Mithril API Reference",
    "keywords": "Class TestBaseClass<TTestObject> Namespace Mithril.Tests.Helpers Assembly Mithril.Tests.Helpers.dll Test base class public abstract class TestBaseClass<TTestObject> : TestBaseClass Type Parameters TTestObject The type of the test object. Inheritance object TestBaseClass TestBaseClass<TTestObject> Inherited Members TestBaseClass.IgnoreMethod TestBaseClass.ExceptionsToIgnore TestBaseClass.MaxDuration TestBaseClass.BreakType() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods GenericExtensions.When<TObject>(TObject, bool, Func<TObject, TObject>) ExpandoObjectExtensions.ConvertToExpando(object?) Constructors TestBaseClass() Initializes a new instance of the TestBaseClass<TTestObject> class. protected TestBaseClass() Properties DiscoverInheritedMethods Gets or sets a value indicating whether [discover inherited methods]. protected bool DiscoverInheritedMethods { get; set; } Property Value bool true if [discover inherited methods]; otherwise, false. ObjectType Gets the type of the object. protected override Type? ObjectType { get; set; } Property Value Type The type of the object. TestObject Gets or sets the test object. protected TTestObject? TestObject { get; set; } Property Value TTestObject The test object. Methods BreakObject() Attempts to break the object. [Fact] public Task BreakObject() Returns Task The async task."
  },
  "api/Mithril.Tests.Helpers.TestBaseClass.html": {
    "href": "api/Mithril.Tests.Helpers.TestBaseClass.html",
    "title": "Class TestBaseClass | Mithril API Reference",
    "keywords": "Class TestBaseClass Namespace Mithril.Tests.Helpers Assembly Mithril.Tests.Helpers.dll Test base class public abstract class TestBaseClass Inheritance object TestBaseClass Derived TestBaseClass<TTestObject> Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods GenericExtensions.When<TObject>(TObject, bool, Func<TObject, TObject>) ExpandoObjectExtensions.ConvertToExpando(object?) Constructors TestBaseClass() Initializes a new instance of the TestBaseClass<TTestObject> class. protected TestBaseClass() Properties ExceptionsToIgnore Gets or sets the exceptions to ignore. protected Type[] ExceptionsToIgnore { get; set; } Property Value Type[] The exceptions to ignore. IgnoreMethod Gets the ignore method. protected static MethodInfo? IgnoreMethod { get; } Property Value MethodInfo The ignore method. MaxDuration Gets or sets the maximum duration. protected int MaxDuration { get; set; } Property Value int The maximum duration. ObjectType Gets the type of the object. protected abstract Type? ObjectType { get; set; } Property Value Type The type of the object. Methods BreakType() Attempts to break the object. [Fact] public Task BreakType() Returns Task The async task."
  },
  "api/Mithril.Tests.Helpers.html": {
    "href": "api/Mithril.Tests.Helpers.html",
    "title": "Namespace Mithril.Tests.Helpers | Mithril API Reference",
    "keywords": "Namespace Mithril.Tests.Helpers Classes TestBaseClass Test base class TestBaseClass<TTestObject> Test base class"
  },
  "api/Mithril.Theme.Default.DefaultTheme.html": {
    "href": "api/Mithril.Theme.Default.DefaultTheme.html",
    "title": "Class DefaultTheme | Mithril API Reference",
    "keywords": "Class DefaultTheme Namespace Mithril.Theme.Default Assembly Mithril.Theme.Default.dll Default theme public class DefaultTheme : ThemeBaseClass<DefaultTheme>, ITheme Inheritance object ThemeBaseClass<DefaultTheme> DefaultTheme Implements ITheme Inherited Members ThemeBaseClass<DefaultTheme>.Name ThemeBaseClass<DefaultTheme>.Zones object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods GenericExtensions.When<TObject>(TObject, bool, Func<TObject, TObject>) ExpandoObjectExtensions.ConvertToExpando(object?)"
  },
  "api/Mithril.Theme.Default.DefaultThemeModule.html": {
    "href": "api/Mithril.Theme.Default.DefaultThemeModule.html",
    "title": "Class DefaultThemeModule | Mithril API Reference",
    "keywords": "Class DefaultThemeModule Namespace Mithril.Theme.Default Assembly Mithril.Theme.Default.dll Default theme module public class DefaultThemeModule : ModuleBaseClass<DefaultThemeModule>, IEquatable<DefaultThemeModule>, IModule Inheritance object ModuleBaseClass<DefaultThemeModule> DefaultThemeModule Implements IEquatable<DefaultThemeModule> IModule Inherited Members ModuleBaseClass<DefaultThemeModule>.Category ModuleBaseClass<DefaultThemeModule>.ContentPath ModuleBaseClass<DefaultThemeModule>.Features ModuleBaseClass<DefaultThemeModule>.ID ModuleBaseClass<DefaultThemeModule>.LastModified ModuleBaseClass<DefaultThemeModule>.Name ModuleBaseClass<DefaultThemeModule>.Order ModuleBaseClass<DefaultThemeModule>.Tags ModuleBaseClass<DefaultThemeModule>.Version ModuleBaseClass<DefaultThemeModule>.ConfigureApplication(IApplicationBuilder, IConfiguration, IHostEnvironment) ModuleBaseClass<DefaultThemeModule>.ConfigureHostSettings(IHostBuilder, IConfiguration, IHostEnvironment) ModuleBaseClass<DefaultThemeModule>.ConfigureLoggingSettings(ILoggingBuilder, IConfiguration, IHostEnvironment) ModuleBaseClass<DefaultThemeModule>.ConfigureMVC(IMvcBuilder, IConfiguration, IHostEnvironment) ModuleBaseClass<DefaultThemeModule>.ConfigureRoutes(IEndpointRouteBuilder, IConfiguration, IHostEnvironment) ModuleBaseClass<DefaultThemeModule>.ConfigureServices(IServiceCollection, IConfiguration, IHostEnvironment) ModuleBaseClass<DefaultThemeModule>.ConfigureWebHostSettings(IWebHostBuilder, IConfiguration, IHostEnvironment) ModuleBaseClass<DefaultThemeModule>.Equals(object) ModuleBaseClass<DefaultThemeModule>.Equals(DefaultThemeModule) ModuleBaseClass<DefaultThemeModule>.GetHashCode() ModuleBaseClass<DefaultThemeModule>.InitializeDataAsync(IDataService, IServiceProvider) ModuleBaseClass<DefaultThemeModule>.OnStarted() ModuleBaseClass<DefaultThemeModule>.OnStopped() ModuleBaseClass<DefaultThemeModule>.OnStopping() object.Equals(object, object) object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods GenericExtensions.When<TObject>(TObject, bool, Func<TObject, TObject>) ExpandoObjectExtensions.ConvertToExpando(object?)"
  },
  "api/Mithril.Theme.Default.html": {
    "href": "api/Mithril.Theme.Default.html",
    "title": "Namespace Mithril.Theme.Default | Mithril API Reference",
    "keywords": "Namespace Mithril.Theme.Default Classes DefaultTheme Default theme DefaultThemeModule Default theme module"
  },
  "api/Mithril.Themes.Abstractions.BaseClasses.ThemeBaseClass-1.html": {
    "href": "api/Mithril.Themes.Abstractions.BaseClasses.ThemeBaseClass-1.html",
    "title": "Class ThemeBaseClass<TTheme> | Mithril API Reference",
    "keywords": "Class ThemeBaseClass<TTheme> Namespace Mithril.Themes.Abstractions.BaseClasses Assembly Mithril.Themes.Abstractions.dll Theme base class public abstract class ThemeBaseClass<TTheme> : ITheme where TTheme : ThemeBaseClass<TTheme> Type Parameters TTheme The type of the theme. Inheritance object ThemeBaseClass<TTheme> Implements ITheme Derived DefaultTheme Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods GenericExtensions.When<TObject>(TObject, bool, Func<TObject, TObject>) ExpandoObjectExtensions.ConvertToExpando(object?) Constructors ThemeBaseClass() Initializes a new instance of the ThemeBaseClass<TTheme> class. protected ThemeBaseClass() Properties Name Gets the name. public string Name { get; } Property Value string The name. Zones Gets the zones. public IEnumerable<string> Zones { get; } Property Value IEnumerable<string> The zones. See Also ITheme"
  },
  "api/Mithril.Themes.Abstractions.BaseClasses.ThemedRazorPage-1.html": {
    "href": "api/Mithril.Themes.Abstractions.BaseClasses.ThemedRazorPage-1.html",
    "title": "Class ThemedRazorPage<TModel> | Mithril API Reference",
    "keywords": "Class ThemedRazorPage<TModel> Namespace Mithril.Themes.Abstractions.BaseClasses Assembly Mithril.Themes.Abstractions.dll Themed Razor page public abstract class ThemedRazorPage<TModel> : RazorPage<TModel>, IRazorPage Type Parameters TModel The type of the model. Inheritance object RazorPageBase RazorPage RazorPage<TModel> ThemedRazorPage<TModel> Implements IRazorPage Inherited Members RazorPage<TModel>.Model RazorPage<TModel>.ViewData RazorPage.RenderBody() RazorPage.IgnoreBody() RazorPage.DefineSection(string, RenderAsyncDelegate) RazorPage.IsSectionDefined(string) RazorPage.RenderSection(string) RazorPage.RenderSection(string, bool) RazorPage.RenderSectionAsync(string) RazorPage.RenderSectionAsync(string, bool) RazorPage.IgnoreSection(string) RazorPage.EnsureRenderedBodyOrSections() RazorPage.BeginContext(int, int, bool) RazorPage.EndContext() RazorPage.Context RazorPageBase.CreateTagHelper<TTagHelper>() RazorPageBase.StartTagHelperWritingScope(HtmlEncoder) RazorPageBase.EndTagHelperWritingScope() RazorPageBase.BeginWriteTagHelperAttribute() RazorPageBase.EndWriteTagHelperAttribute() RazorPageBase.PushWriter(TextWriter) RazorPageBase.PopWriter() RazorPageBase.Href(string) RazorPageBase.Write(object) RazorPageBase.Write(string) RazorPageBase.WriteLiteral(object) RazorPageBase.WriteLiteral(string) RazorPageBase.BeginWriteAttribute(string, string, int, string, int, int) RazorPageBase.WriteAttributeValue(string, int, object, int, int, bool) RazorPageBase.EndWriteAttribute() RazorPageBase.BeginAddHtmlAttributeValues(TagHelperExecutionContext, string, int, HtmlAttributeValueStyle) RazorPageBase.AddHtmlAttributeValue(string, int, object, int, int, bool) RazorPageBase.EndAddHtmlAttributeValues(TagHelperExecutionContext) RazorPageBase.FlushAsync() RazorPageBase.SetAntiforgeryCookieAndHeader() RazorPageBase.ViewContext RazorPageBase.Layout RazorPageBase.Output RazorPageBase.Path RazorPageBase.SectionWriters RazorPageBase.ViewBag RazorPageBase.IsLayoutBeingRendered RazorPageBase.BodyContent RazorPageBase.PreviousSectionWriters RazorPageBase.DiagnosticSource RazorPageBase.HtmlEncoder RazorPageBase.User RazorPageBase.TempData object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods GenericExtensions.When<TObject>(TObject, bool, Func<TObject, TObject>) ExpandoObjectExtensions.ConvertToExpando(object?) Constructors ThemedRazorPage() Initializes a new instance of the ThemedRazorPage<TModel> class. protected ThemedRazorPage() Properties CurrentTheme Gets the current theme. protected ITheme? CurrentTheme { get; } Property Value ITheme The current theme. Debug Gets a value indicating whether this ThemedRazorPage<TModel> is in debug mode. protected bool Debug { get; } Property Value bool true if debug; otherwise, false. ResourceHolder Gets the resource holder. protected IResourceService? ResourceHolder { get; } Property Value IResourceService The resource holder. ThemeService Gets the theme service. public IThemeService? ThemeService { get; } Property Value IThemeService The theme service. Methods ExecuteAsync() Executes the page asynchronously. public override Task ExecuteAsync() Returns Task The async task. GetService<TService>() Gets a service. protected TService? GetService<TService>() Returns TService The service specified. Type Parameters TService The type of the service. See Also RazorPage<TModel>"
  },
  "api/Mithril.Themes.Abstractions.BaseClasses.html": {
    "href": "api/Mithril.Themes.Abstractions.BaseClasses.html",
    "title": "Namespace Mithril.Themes.Abstractions.BaseClasses | Mithril API Reference",
    "keywords": "Namespace Mithril.Themes.Abstractions.BaseClasses Classes ThemeBaseClass<TTheme> Theme base class ThemedRazorPage<TModel> Themed Razor page"
  },
  "api/Mithril.Themes.Abstractions.Enums.ResourceType.html": {
    "href": "api/Mithril.Themes.Abstractions.Enums.ResourceType.html",
    "title": "Enum ResourceType | Mithril API Reference",
    "keywords": "Enum ResourceType Namespace Mithril.Themes.Abstractions.Enums Assembly Mithril.Themes.Abstractions.dll Resource type public enum ResourceType Extension Methods GenericExtensions.When<TObject>(TObject, bool, Func<TObject, TObject>) ExpandoObjectExtensions.ConvertToExpando(object?) Fields CSS = 1 The CSS JavaScript = 0 The JavaScript Meta = 2 The meta"
  },
  "api/Mithril.Themes.Abstractions.Enums.html": {
    "href": "api/Mithril.Themes.Abstractions.Enums.html",
    "title": "Namespace Mithril.Themes.Abstractions.Enums | Mithril API Reference",
    "keywords": "Namespace Mithril.Themes.Abstractions.Enums Enums ResourceType Resource type"
  },
  "api/Mithril.Themes.Abstractions.Interfaces.IResource.html": {
    "href": "api/Mithril.Themes.Abstractions.Interfaces.IResource.html",
    "title": "Interface IResource | Mithril API Reference",
    "keywords": "Interface IResource Namespace Mithril.Themes.Abstractions.Interfaces Assembly Mithril.Themes.Abstractions.dll Resource interface public interface IResource Extension Methods GenericExtensions.When<TObject>(TObject, bool, Func<TObject, TObject>) ExpandoObjectExtensions.ConvertToExpando(object?) Properties Location Gets the location. string? Location { get; } Property Value string The location. Order Gets the order. int Order { get; } Property Value int The order. Methods GetHtmlContent() Gets the content of the resource as an IHtmlContent item. IHtmlContent GetHtmlContent() Returns IHtmlContent The content."
  },
  "api/Mithril.Themes.Abstractions.Interfaces.ITheme.html": {
    "href": "api/Mithril.Themes.Abstractions.Interfaces.ITheme.html",
    "title": "Interface ITheme | Mithril API Reference",
    "keywords": "Interface ITheme Namespace Mithril.Themes.Abstractions.Interfaces Assembly Mithril.Themes.Abstractions.dll Theme interface public interface ITheme Extension Methods GenericExtensions.When<TObject>(TObject, bool, Func<TObject, TObject>) ExpandoObjectExtensions.ConvertToExpando(object?) Properties Name Gets the name. string Name { get; } Property Value string The name. Zones Gets the zones. IEnumerable<string> Zones { get; } Property Value IEnumerable<string> The zones."
  },
  "api/Mithril.Themes.Abstractions.Interfaces.html": {
    "href": "api/Mithril.Themes.Abstractions.Interfaces.html",
    "title": "Namespace Mithril.Themes.Abstractions.Interfaces | Mithril API Reference",
    "keywords": "Namespace Mithril.Themes.Abstractions.Interfaces Interfaces IResource Resource interface ITheme Theme interface"
  },
  "api/Mithril.Themes.Abstractions.Services.IResourceService.html": {
    "href": "api/Mithril.Themes.Abstractions.Services.IResourceService.html",
    "title": "Interface IResourceService | Mithril API Reference",
    "keywords": "Interface IResourceService Namespace Mithril.Themes.Abstractions.Services Assembly Mithril.Themes.Abstractions.dll Resource service interface public interface IResourceService Extension Methods GenericExtensions.When<TObject>(TObject, bool, Func<TObject, TObject>) ExpandoObjectExtensions.ConvertToExpando(object?) Methods AddLinkResource(string?, string?, string?, string?, string?, string?, string?, string?, string?, string?, int, string?) Adds the link resource. bool AddLinkResource(string? href, string? rel, string? type, string? crossOrigin, string? hreflang, string? media, string? sizes, string? charset, string? rev, string? target, int tagOrder, string? location) Parameters href string The href. rel string The relative. type string The type. crossOrigin string The cross origin. hreflang string The hreflang. media string The media. sizes string The sizes. charset string The charset. rev string The rev. target string The target. tagOrder int The tag order. location string The location. Returns bool True if it is successfully added, false otherwise. AddMetaResource(string?, string?, string?, string?, string?, string?, int) Adds a meta resource. bool AddMetaResource(string? name, string? scheme, string? httpEquiv, string? content, string? charset, string? property, int tagOrder) Parameters name string The name. scheme string The scheme. httpEquiv string The HTTP equiv. content string The content. charset string The charset. property string The property. tagOrder int The tag order. Returns bool True if it is successfully added, false otherwise. AddResource(ResourceType, IResource) Adds the resource. bool AddResource(ResourceType type, IResource resource) Parameters type ResourceType The type. resource IResource The resource. Returns bool True if it is successfully added, false otherwise. AddScriptContentResource(string?, string?, string?, string?, string?, string?, int, string?, string?, string?, string?) Adds the script content resource. bool AddScriptContentResource(string? content, string? async, string? charset, string? defer, string? type, string? xMLSpace, int tagOrder, string? location, string? integrity, string? crossOrigin, string? referrerPolicy) Parameters content string The content. async string The asynchronous. charset string The charset. defer string The defer. type string The type. xMLSpace string The xml:space. tagOrder int The tag order. location string The location. integrity string The integrity. crossOrigin string The cross origin. referrerPolicy string The referrer policy. Returns bool True if it is successfully added, false otherwise. AddScriptFileResource(string?, string?, string?, string?, string?, string?, int, string?, string?, string?, string?) Adds the script file resource. bool AddScriptFileResource(string? file, string? async, string? charset, string? defer, string? type, string? xMLSpace, int tagOrder, string? location, string? integrity, string? crossOrigin, string? referrerPolicy) Parameters file string The file. async string The asynchronous. charset string The charset. defer string The defer. type string The type. xMLSpace string The x ml space. tagOrder int The tag order. location string The location. integrity string The integrity. crossOrigin string The cross origin. referrerPolicy string The referrer policy. Returns bool True if it is successfully added, false otherwise. AddStyleResource(string?, string?, string?, int, string?) Adds the style resource. bool AddStyleResource(string? content, string? media, string? type, int tagOrder, string? location) Parameters content string The content. media string The media. type string The type. tagOrder int The tag order. location string The location. Returns bool True if it is successfully added, false otherwise. NextOrderValue(ResourceType) Nexts the order value. int NextOrderValue(ResourceType type) Parameters type ResourceType The type. Returns int Render(ResourceType, string) Renders the specified type. IHtmlContent Render(ResourceType type, string location = \"\") Parameters type ResourceType The type. location string The location. Returns IHtmlContent The HTML content."
  },
  "api/Mithril.Themes.Abstractions.Services.IThemeService.html": {
    "href": "api/Mithril.Themes.Abstractions.Services.IThemeService.html",
    "title": "Interface IThemeService | Mithril API Reference",
    "keywords": "Interface IThemeService Namespace Mithril.Themes.Abstractions.Services Assembly Mithril.Themes.Abstractions.dll Theme manager interface public interface IThemeService Extension Methods GenericExtensions.When<TObject>(TObject, bool, Func<TObject, TObject>) ExpandoObjectExtensions.ConvertToExpando(object?) Methods GetAvailableThemes() Gets the themes. IEnumerable<ITheme> GetAvailableThemes() Returns IEnumerable<ITheme> The themes available. LoadTheme(string?) Loads the theme based on the name. ITheme? LoadTheme(string? themeName = \"Default\") Parameters themeName string Name of the theme. Returns ITheme The theme associated with the name. SetDefaultThemeAsync(ITheme?, ClaimsPrincipal?) Sets the default theme. Task<IThemeService> SetDefaultThemeAsync(ITheme? theme, ClaimsPrincipal? user) Parameters theme ITheme The theme. user ClaimsPrincipal The user. Returns Task<IThemeService> This. SetThemeAlias(string?, ITheme?) Sets an alias for a theme IThemeService SetThemeAlias(string? themeName, ITheme? theme) Parameters themeName string The alias name theme ITheme The theme Returns IThemeService This."
  },
  "api/Mithril.Themes.Abstractions.Services.html": {
    "href": "api/Mithril.Themes.Abstractions.Services.html",
    "title": "Namespace Mithril.Themes.Abstractions.Services | Mithril API Reference",
    "keywords": "Namespace Mithril.Themes.Abstractions.Services Interfaces IResourceService Resource service interface IThemeService Theme manager interface"
  },
  "api/Mithril.Themes.Abstractions.TagHelpers.LinkTagHelper.html": {
    "href": "api/Mithril.Themes.Abstractions.TagHelpers.LinkTagHelper.html",
    "title": "Class LinkTagHelper | Mithril API Reference",
    "keywords": "Class LinkTagHelper Namespace Mithril.Themes.Abstractions.TagHelpers Assembly Mithril.Themes.Abstractions.dll Link tag helper public class LinkTagHelper : TagHelper, ITagHelper, ITagHelperComponent Inheritance object TagHelper LinkTagHelper Implements ITagHelper ITagHelperComponent Inherited Members TagHelper.Init(TagHelperContext) TagHelper.Process(TagHelperContext, TagHelperOutput) TagHelper.Order object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods GenericExtensions.When<TObject>(TObject, bool, Func<TObject, TObject>) ExpandoObjectExtensions.ConvertToExpando(object?) Remarks Initializes a new instance of the LinkTagHelper class. Constructors LinkTagHelper(IResourceService?) Link tag helper public LinkTagHelper(IResourceService? resources) Parameters resources IResourceService The resources. Remarks Initializes a new instance of the LinkTagHelper class. See Also TagHelper Properties Resources Gets the resources. public IResourceService? Resources { get; } Property Value IResourceService The resources. Methods ProcessAsync(TagHelperContext, TagHelperOutput) Synchronously executes the TagHelper with the given context and output. public override Task ProcessAsync(TagHelperContext context, TagHelperOutput output) Parameters context TagHelperContext Contains information associated with the current HTML tag. output TagHelperOutput A stateful HTML element used to generate an HTML tag. Returns Task Link tag helper See Also TagHelper"
  },
  "api/Mithril.Themes.Abstractions.TagHelpers.MetaTagHelper.html": {
    "href": "api/Mithril.Themes.Abstractions.TagHelpers.MetaTagHelper.html",
    "title": "Class MetaTagHelper | Mithril API Reference",
    "keywords": "Class MetaTagHelper Namespace Mithril.Themes.Abstractions.TagHelpers Assembly Mithril.Themes.Abstractions.dll Meta tag helper public class MetaTagHelper : TagHelper, ITagHelper, ITagHelperComponent Inheritance object TagHelper MetaTagHelper Implements ITagHelper ITagHelperComponent Inherited Members TagHelper.Init(TagHelperContext) TagHelper.Process(TagHelperContext, TagHelperOutput) TagHelper.Order object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods GenericExtensions.When<TObject>(TObject, bool, Func<TObject, TObject>) ExpandoObjectExtensions.ConvertToExpando(object?) Remarks Initializes a new instance of the MetaTagHelper class. Constructors MetaTagHelper(IResourceService?) Meta tag helper public MetaTagHelper(IResourceService? resources) Parameters resources IResourceService The resources. Remarks Initializes a new instance of the MetaTagHelper class. See Also TagHelper Properties Resources Gets the resources. public IResourceService? Resources { get; } Property Value IResourceService The resources. Methods ProcessAsync(TagHelperContext, TagHelperOutput) Synchronously executes the TagHelper with the given context and output. public override Task ProcessAsync(TagHelperContext context, TagHelperOutput output) Parameters context TagHelperContext Contains information associated with the current HTML tag. output TagHelperOutput A stateful HTML element used to generate an HTML tag. Returns Task Meta tag helper See Also TagHelper"
  },
  "api/Mithril.Themes.Abstractions.TagHelpers.ScriptTagHelper.html": {
    "href": "api/Mithril.Themes.Abstractions.TagHelpers.ScriptTagHelper.html",
    "title": "Class ScriptTagHelper | Mithril API Reference",
    "keywords": "Class ScriptTagHelper Namespace Mithril.Themes.Abstractions.TagHelpers Assembly Mithril.Themes.Abstractions.dll Resource tag helper public class ScriptTagHelper : TagHelper, ITagHelper, ITagHelperComponent Inheritance object TagHelper ScriptTagHelper Implements ITagHelper ITagHelperComponent Inherited Members TagHelper.Init(TagHelperContext) TagHelper.Process(TagHelperContext, TagHelperOutput) TagHelper.Order object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods GenericExtensions.When<TObject>(TObject, bool, Func<TObject, TObject>) ExpandoObjectExtensions.ConvertToExpando(object?) Remarks Initializes a new instance of the ScriptTagHelper class. Constructors ScriptTagHelper(IResourceService?) Resource tag helper public ScriptTagHelper(IResourceService? resources) Parameters resources IResourceService The resources. Remarks Initializes a new instance of the ScriptTagHelper class. See Also TagHelper Properties Resources Gets the resources. public IResourceService? Resources { get; } Property Value IResourceService The resources. Methods ProcessAsync(TagHelperContext, TagHelperOutput) Synchronously executes the TagHelper with the given values for context and output. public override Task ProcessAsync(TagHelperContext context, TagHelperOutput output) Parameters context TagHelperContext Contains information associated with the current HTML tag. output TagHelperOutput A stateful HTML element used to generate an HTML tag. Returns Task Resource tag helper See Also TagHelper"
  },
  "api/Mithril.Themes.Abstractions.TagHelpers.StyleTagHelper.html": {
    "href": "api/Mithril.Themes.Abstractions.TagHelpers.StyleTagHelper.html",
    "title": "Class StyleTagHelper | Mithril API Reference",
    "keywords": "Class StyleTagHelper Namespace Mithril.Themes.Abstractions.TagHelpers Assembly Mithril.Themes.Abstractions.dll Style tag helper public class StyleTagHelper : TagHelper, ITagHelper, ITagHelperComponent Inheritance object TagHelper StyleTagHelper Implements ITagHelper ITagHelperComponent Inherited Members TagHelper.Init(TagHelperContext) TagHelper.Process(TagHelperContext, TagHelperOutput) TagHelper.Order object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods GenericExtensions.When<TObject>(TObject, bool, Func<TObject, TObject>) ExpandoObjectExtensions.ConvertToExpando(object?) Remarks Initializes a new instance of the StyleTagHelper class. Constructors StyleTagHelper(IResourceService?) Style tag helper public StyleTagHelper(IResourceService? resources) Parameters resources IResourceService The resources. Remarks Initializes a new instance of the StyleTagHelper class. See Also TagHelper Properties Resources Gets the resources. public IResourceService? Resources { get; } Property Value IResourceService The resources. Methods ProcessAsync(TagHelperContext, TagHelperOutput) Synchronously executes the TagHelper with the given context and output. public override Task ProcessAsync(TagHelperContext context, TagHelperOutput output) Parameters context TagHelperContext Contains information associated with the current HTML tag. output TagHelperOutput A stateful HTML element used to generate an HTML tag. Returns Task Style tag helper See Also TagHelper"
  },
  "api/Mithril.Themes.Abstractions.TagHelpers.html": {
    "href": "api/Mithril.Themes.Abstractions.TagHelpers.html",
    "title": "Namespace Mithril.Themes.Abstractions.TagHelpers | Mithril API Reference",
    "keywords": "Namespace Mithril.Themes.Abstractions.TagHelpers Classes LinkTagHelper Link tag helper MetaTagHelper Meta tag helper ScriptTagHelper Resource tag helper StyleTagHelper Style tag helper"
  },
  "api/Mithril.Themes.Admin.DropDowns.ThemeList.html": {
    "href": "api/Mithril.Themes.Admin.DropDowns.ThemeList.html",
    "title": "Class ThemeList | Mithril API Reference",
    "keywords": "Class ThemeList Namespace Mithril.Themes.Admin.DropDowns Assembly Mithril.Themes.dll Theme list public class ThemeList : DropDownBaseClass<Theme>, IDropDownQuery Inheritance object DropDownBaseClass<Theme> ThemeList Implements IDropDownQuery Inherited Members DropDownBaseClass<Theme>.Name DropDownBaseClass<Theme>.CanRun(string, ClaimsPrincipal) DropDownBaseClass<Theme>.GetDataAsync(IDataService, string) DropDownBaseClass<Theme>.GetValues(IDataService, string, int) DropDownBaseClass<Theme>.GetKey(Theme) object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods GenericExtensions.When<TObject>(TObject, bool, Func<TObject, TObject>) ExpandoObjectExtensions.ConvertToExpando(object?) Methods FilterQuery(IQueryable<Theme>, string) Filters the query. protected override IQueryable<Theme> FilterQuery(IQueryable<Theme> query, string value) Parameters query IQueryable<Theme> The query. value string The value. Returns IQueryable<Theme> The filtered query See Also DropDownBaseClass<TModel>"
  },
  "api/Mithril.Themes.Admin.DropDowns.html": {
    "href": "api/Mithril.Themes.Admin.DropDowns.html",
    "title": "Namespace Mithril.Themes.Admin.DropDowns | Mithril API Reference",
    "keywords": "Namespace Mithril.Themes.Admin.DropDowns Classes ThemeList Theme list"
  },
  "api/Mithril.Themes.Admin.ThemeEditor.html": {
    "href": "api/Mithril.Themes.Admin.ThemeEditor.html",
    "title": "Class ThemeEditor | Mithril API Reference",
    "keywords": "Class ThemeEditor Namespace Mithril.Themes.Admin Assembly Mithril.Themes.dll Theme editor public class ThemeEditor : SettingsEditorBaseClass<ThemeSettingsVM>, IEntityEditor, IEditor Inheritance object EntityEditorBaseClass<ThemeSettingsVM> SettingsEditorBaseClass<ThemeSettingsVM> ThemeEditor Implements IEntityEditor IEditor Inherited Members SettingsEditorBaseClass<ThemeSettingsVM>.Category SettingsEditorBaseClass<ThemeSettingsVM>.ActivateAsync(long, ClaimsPrincipal) SettingsEditorBaseClass<ThemeSettingsVM>.DeleteEntityAsync(long, ClaimsPrincipal) SettingsEditorBaseClass<ThemeSettingsVM>.LoadPageAsync(int, int, string, bool, string, ClaimsPrincipal) SettingsEditorBaseClass<ThemeSettingsVM>.SaveEntityAsync(long, ExpandoObject, ClaimsPrincipal) SettingsEditorBaseClass<ThemeSettingsVM>.TotalActiveAsync(ClaimsPrincipal) EntityEditorBaseClass<ThemeSettingsVM>.ComponentDefinition EntityEditorBaseClass<ThemeSettingsVM>.Description EntityEditorBaseClass<ThemeSettingsVM>.EntityType EntityEditorBaseClass<ThemeSettingsVM>.Name EntityEditorBaseClass<ThemeSettingsVM>.DataService EntityEditorBaseClass<ThemeSettingsVM>.ServiceProvider EntityEditorBaseClass<ThemeSettingsVM>.CanView(ClaimsPrincipal) object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods GenericExtensions.When<TObject>(TObject, bool, Func<TObject, TObject>) ExpandoObjectExtensions.ConvertToExpando(object?) Remarks Initializes a new instance of the ThemeEditor class. Constructors ThemeEditor(IThemeService?, IDataService?, IEntityMetadataService?, IServiceProvider?) Theme editor public ThemeEditor(IThemeService? themeService, IDataService? dataService, IEntityMetadataService? entityMetadataService, IServiceProvider? serviceProvider) Parameters themeService IThemeService The theme service. dataService IDataService The data service. entityMetadataService IEntityMetadataService The entity metadata service. serviceProvider IServiceProvider The service provider. Remarks Initializes a new instance of the ThemeEditor class. See Also SettingsEditorBaseClass<TEntity> Properties Icon Gets the icon. public override string Icon { get; } Property Value string The icon. Methods Load(long, ExpandoObject?, ClaimsPrincipal?) Loads the specified identifier. public override IEntity? Load(long id, ExpandoObject? model, ClaimsPrincipal? currentUser) Parameters id long The identifier. model ExpandoObject The model. currentUser ClaimsPrincipal Returns IEntity The entity specified. SaveEntityAsync(long, ThemeSettingsVM?, ClaimsPrincipal?) Saves the entity asynchronous. protected override Task<bool> SaveEntityAsync(long id, ThemeSettingsVM? entity, ClaimsPrincipal? currentUser) Parameters id long The identifier. entity ThemeSettingsVM The entity. currentUser ClaimsPrincipal The current user. Returns Task<bool> See Also SettingsEditorBaseClass<TEntity>"
  },
  "api/Mithril.Themes.Admin.ViewModels.ThemeSettingsVM.html": {
    "href": "api/Mithril.Themes.Admin.ViewModels.ThemeSettingsVM.html",
    "title": "Class ThemeSettingsVM | Mithril API Reference",
    "keywords": "Class ThemeSettingsVM Namespace Mithril.Themes.Admin.ViewModels Assembly Mithril.Themes.dll Theme settings VM public class ThemeSettingsVM : SettingsBaseClass, IEntity Inheritance object SettingsBaseClass ThemeSettingsVM Implements IEntity Inherited Members SettingsBaseClass.Active SettingsBaseClass.ID object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods GenericExtensions.When<TObject>(TObject, bool, Func<TObject, TObject>) ExpandoObjectExtensions.ConvertToExpando(object?) Constructors ThemeSettingsVM() Initializes a new instance of the ThemeSettingsVM class. public ThemeSettingsVM() ThemeSettingsVM(IThemeService?, IDataService?) Initializes a new instance of the ThemeSettingsVM class. public ThemeSettingsVM(IThemeService? themes, IDataService? dataService) Parameters themes IThemeService The themes. dataService IDataService The data service. Properties CurrentTheme Gets or sets the current theme. [Select(typeof(ThemeList), \"\")] public long CurrentTheme { get; set; } Property Value long The current theme. See Also IEntity"
  },
  "api/Mithril.Themes.Admin.ViewModels.html": {
    "href": "api/Mithril.Themes.Admin.ViewModels.html",
    "title": "Namespace Mithril.Themes.Admin.ViewModels | Mithril API Reference",
    "keywords": "Namespace Mithril.Themes.Admin.ViewModels Classes ThemeSettingsVM Theme settings VM"
  },
  "api/Mithril.Themes.Admin.html": {
    "href": "api/Mithril.Themes.Admin.html",
    "title": "Namespace Mithril.Themes.Admin | Mithril API Reference",
    "keywords": "Namespace Mithril.Themes.Admin Classes ThemeEditor Theme editor"
  },
  "api/Mithril.Themes.Commands.SetThemeCommandHandler.html": {
    "href": "api/Mithril.Themes.Commands.SetThemeCommandHandler.html",
    "title": "Class SetThemeCommandHandler | Mithril API Reference",
    "keywords": "Class SetThemeCommandHandler Namespace Mithril.Themes.Commands Assembly Mithril.Themes.dll Set theme command handler public class SetThemeCommandHandler : CommandHandlerBaseClass<SetThemeCommand, SetThemeCommandVM>, ICommandHandler<SetThemeCommandVM>, ICommandHandler Inheritance object CommandHandlerBaseClass<SetThemeCommand, SetThemeCommandVM> SetThemeCommandHandler Implements ICommandHandler<SetThemeCommandVM> ICommandHandler Inherited Members CommandHandlerBaseClass<SetThemeCommand, SetThemeCommandVM>.CommandName CommandHandlerBaseClass<SetThemeCommand, SetThemeCommandVM>.ContentTypeAccepts CommandHandlerBaseClass<SetThemeCommand, SetThemeCommandVM>.Features CommandHandlerBaseClass<SetThemeCommand, SetThemeCommandVM>.Tags CommandHandlerBaseClass<SetThemeCommand, SetThemeCommandVM>.Version CommandHandlerBaseClass<SetThemeCommand, SetThemeCommandVM>.ViewModelType CommandHandlerBaseClass<SetThemeCommand, SetThemeCommandVM>.FeatureManager CommandHandlerBaseClass<SetThemeCommand, SetThemeCommandVM>.Logger CommandHandlerBaseClass<SetThemeCommand, SetThemeCommandVM>.CanHandle(ICommand) CommandHandlerBaseClass<SetThemeCommand, SetThemeCommandVM>.CreateAsync(SetThemeCommandVM, ClaimsPrincipal) CommandHandlerBaseClass<SetThemeCommand, SetThemeCommandVM>.HandleCommandAsync(params ICommand[]) CommandHandlerBaseClass<SetThemeCommand, SetThemeCommandVM>.HandleCommandAsync(SetThemeCommand[]) CommandHandlerBaseClass<SetThemeCommand, SetThemeCommandVM>.IsFeatureEnabled() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods GenericExtensions.When<TObject>(TObject, bool, Func<TObject, TObject>) ExpandoObjectExtensions.ConvertToExpando(object?) Remarks Initializes a new instance of the SetThemeCommandHandler class. Constructors SetThemeCommandHandler(ILogger<SetThemeCommandHandler>?, IFeatureManager?, IDataService?, IThemeService?, IEnumerable<ITheme>) Set theme command handler public SetThemeCommandHandler(ILogger<SetThemeCommandHandler>? logger, IFeatureManager? featureManager, IDataService? dataService, IThemeService? themeService, IEnumerable<ITheme> themes) Parameters logger ILogger<SetThemeCommandHandler> The logger. featureManager IFeatureManager The feature manager. dataService IDataService Data service. themeService IThemeService Theme service. themes IEnumerable<ITheme> Themes in the system. Remarks Initializes a new instance of the SetThemeCommandHandler class. See Also CommandHandlerBaseClass<TCommand, TViewModel> Properties CommandName Gets the command type accepted. public override string CommandName { get; } Property Value string The command type accepted. Tags Gets the tags (Used by OpenAPI, etc). public override string[] Tags { get; } Property Value string[] The tags (Used by OpenAPI, etc). Methods CreateAsync(SetThemeCommandVM?, ClaimsPrincipal) Creates the specified value. public override ValueTask<CommandCreationResult?> CreateAsync(SetThemeCommandVM? value, ClaimsPrincipal user) Parameters value SetThemeCommandVM The value. user ClaimsPrincipal The user. Returns ValueTask<CommandCreationResult> A command value converted from the ExpandoObject. HandleCommandAsync(SetThemeCommand?[]?) Handles the command. protected override Task<IEvent[]> HandleCommandAsync(SetThemeCommand?[]? args) Parameters args SetThemeCommand[] The arguments. Returns Task<IEvent[]> The events generated by the command. See Also CommandHandlerBaseClass<TCommand, TViewModel>"
  },
  "api/Mithril.Themes.Commands.ThemeChangedEventDefaultHandler.html": {
    "href": "api/Mithril.Themes.Commands.ThemeChangedEventDefaultHandler.html",
    "title": "Class ThemeChangedEventDefaultHandler | Mithril API Reference",
    "keywords": "Class ThemeChangedEventDefaultHandler Namespace Mithril.Themes.Commands Assembly Mithril.Themes.dll Theme changed event default handler public class ThemeChangedEventDefaultHandler : EventHandlerBaseClass<ThemeChangedEventDefaultHandler, ThemeChangedEvent>, IEventHandler Inheritance object EventHandlerBaseClass<ThemeChangedEventDefaultHandler, ThemeChangedEvent> ThemeChangedEventDefaultHandler Implements IEventHandler Inherited Members EventHandlerBaseClass<ThemeChangedEventDefaultHandler, ThemeChangedEvent>.Features EventHandlerBaseClass<ThemeChangedEventDefaultHandler, ThemeChangedEvent>.Name EventHandlerBaseClass<ThemeChangedEventDefaultHandler, ThemeChangedEvent>.FeatureManager EventHandlerBaseClass<ThemeChangedEventDefaultHandler, ThemeChangedEvent>.Logger EventHandlerBaseClass<ThemeChangedEventDefaultHandler, ThemeChangedEvent>.Accepts(IEvent) EventHandlerBaseClass<ThemeChangedEventDefaultHandler, ThemeChangedEvent>.Handle(IEvent) EventHandlerBaseClass<ThemeChangedEventDefaultHandler, ThemeChangedEvent>.Handle(ThemeChangedEvent) EventHandlerBaseClass<ThemeChangedEventDefaultHandler, ThemeChangedEvent>.IsFeatureEnabled() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods GenericExtensions.When<TObject>(TObject, bool, Func<TObject, TObject>) ExpandoObjectExtensions.ConvertToExpando(object?) Remarks Initializes a new instance of the ThemeChangedEventDefaultHandler class. Constructors ThemeChangedEventDefaultHandler(ILogger<ThemeChangedEventDefaultHandler>?, IFeatureManager?) Theme changed event default handler public ThemeChangedEventDefaultHandler(ILogger<ThemeChangedEventDefaultHandler>? logger, IFeatureManager? featureManager) Parameters logger ILogger<ThemeChangedEventDefaultHandler> The logger. featureManager IFeatureManager The feature manager. Remarks Initializes a new instance of the ThemeChangedEventDefaultHandler class. Methods Handle(ThemeChangedEvent) Handles the specified argument. protected override EventResult Handle(ThemeChangedEvent arg) Parameters arg ThemeChangedEvent The argument. Returns EventResult The result from processing the event."
  },
  "api/Mithril.Themes.Commands.ViewModels.SetThemeCommandVM.html": {
    "href": "api/Mithril.Themes.Commands.ViewModels.SetThemeCommandVM.html",
    "title": "Class SetThemeCommandVM | Mithril API Reference",
    "keywords": "Class SetThemeCommandVM Namespace Mithril.Themes.Commands.ViewModels Assembly Mithril.Themes.dll Set theme command VM public class SetThemeCommandVM Inheritance object SetThemeCommandVM Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods GenericExtensions.When<TObject>(TObject, bool, Func<TObject, TObject>) ExpandoObjectExtensions.ConvertToExpando(object?) Properties Name Gets or sets the name. public string? Name { get; set; } Property Value string The name."
  },
  "api/Mithril.Themes.Commands.ViewModels.html": {
    "href": "api/Mithril.Themes.Commands.ViewModels.html",
    "title": "Namespace Mithril.Themes.Commands.ViewModels | Mithril API Reference",
    "keywords": "Namespace Mithril.Themes.Commands.ViewModels Classes SetThemeCommandVM Set theme command VM"
  },
  "api/Mithril.Themes.Commands.html": {
    "href": "api/Mithril.Themes.Commands.html",
    "title": "Namespace Mithril.Themes.Commands | Mithril API Reference",
    "keywords": "Namespace Mithril.Themes.Commands Classes SetThemeCommandHandler Set theme command handler ThemeChangedEventDefaultHandler Theme changed event default handler"
  },
  "api/Mithril.Themes.LocationExpanders.CompositeViewLocationExpanderProvider.html": {
    "href": "api/Mithril.Themes.LocationExpanders.CompositeViewLocationExpanderProvider.html",
    "title": "Class CompositeViewLocationExpanderProvider | Mithril API Reference",
    "keywords": "Class CompositeViewLocationExpanderProvider Namespace Mithril.Themes.LocationExpanders Assembly Mithril.Themes.dll Composite view location expander provider. public class CompositeViewLocationExpanderProvider : IViewLocationExpanderProvider, IViewLocationExpander Inheritance object CompositeViewLocationExpanderProvider Implements IViewLocationExpanderProvider IViewLocationExpander Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods GenericExtensions.When<TObject>(TObject, bool, Func<TObject, TObject>) ExpandoObjectExtensions.ConvertToExpando(object?) Properties Priority Gets the priority. public int Priority { get; } Property Value int The priority. Methods ExpandViewLocations(ViewLocationExpanderContext, IEnumerable<string>) Invoked by a RazorViewEngine to determine potential locations for a view. public IEnumerable<string> ExpandViewLocations(ViewLocationExpanderContext context, IEnumerable<string> viewLocations) Parameters context ViewLocationExpanderContext The ViewLocationExpanderContext for the current view location expansion operation. viewLocations IEnumerable<string> The sequence of view locations to expand. Returns IEnumerable<string> A list of expanded view locations. PopulateValues(ViewLocationExpanderContext) Invoked by a RazorViewEngine to determine the values that would be consumed by this instance of IViewLocationExpander. The calculated values are used to determine if the view location has changed since the last time it was located. public void PopulateValues(ViewLocationExpanderContext context) Parameters context ViewLocationExpanderContext The ViewLocationExpanderContext for the current view location expansion operation. See Also IViewLocationExpanderProvider"
  },
  "api/Mithril.Themes.LocationExpanders.DefaultViewLocationExpanderProvider.html": {
    "href": "api/Mithril.Themes.LocationExpanders.DefaultViewLocationExpanderProvider.html",
    "title": "Class DefaultViewLocationExpanderProvider | Mithril API Reference",
    "keywords": "Class DefaultViewLocationExpanderProvider Namespace Mithril.Themes.LocationExpanders Assembly Mithril.Themes.dll Default view location expander public class DefaultViewLocationExpanderProvider : IViewLocationExpanderProvider, IViewLocationExpander Inheritance object DefaultViewLocationExpanderProvider Implements IViewLocationExpanderProvider IViewLocationExpander Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods GenericExtensions.When<TObject>(TObject, bool, Func<TObject, TObject>) ExpandoObjectExtensions.ConvertToExpando(object?) Properties Priority Gets the priority. public int Priority { get; } Property Value int The priority. Methods ExpandViewLocations(ViewLocationExpanderContext, IEnumerable<string>) Invoked by a RazorViewEngine to determine potential locations for a view. public virtual IEnumerable<string> ExpandViewLocations(ViewLocationExpanderContext context, IEnumerable<string> viewLocations) Parameters context ViewLocationExpanderContext The ViewLocationExpanderContext for the current view location expansion operation. viewLocations IEnumerable<string> The sequence of view locations to expand. Returns IEnumerable<string> A list of expanded view locations. PopulateValues(ViewLocationExpanderContext) Invoked by a RazorViewEngine to determine the values that would be consumed by this instance of IViewLocationExpander. The calculated values are used to determine if the view location has changed since the last time it was located. public void PopulateValues(ViewLocationExpanderContext context) Parameters context ViewLocationExpanderContext The ViewLocationExpanderContext for the current view location expansion operation. See Also IViewLocationExpanderProvider"
  },
  "api/Mithril.Themes.LocationExpanders.Interfaces.IViewLocationExpanderProvider.html": {
    "href": "api/Mithril.Themes.LocationExpanders.Interfaces.IViewLocationExpanderProvider.html",
    "title": "Interface IViewLocationExpanderProvider | Mithril API Reference",
    "keywords": "Interface IViewLocationExpanderProvider Namespace Mithril.Themes.LocationExpanders.Interfaces Assembly Mithril.Themes.dll View location expander provider interface public interface IViewLocationExpanderProvider : IViewLocationExpander Inherited Members IViewLocationExpander.PopulateValues(ViewLocationExpanderContext) IViewLocationExpander.ExpandViewLocations(ViewLocationExpanderContext, IEnumerable<string>) Extension Methods GenericExtensions.When<TObject>(TObject, bool, Func<TObject, TObject>) ExpandoObjectExtensions.ConvertToExpando(object?) Properties Priority Gets the priority. int Priority { get; } Property Value int The priority. See Also IViewLocationExpander"
  },
  "api/Mithril.Themes.LocationExpanders.Interfaces.html": {
    "href": "api/Mithril.Themes.LocationExpanders.Interfaces.html",
    "title": "Namespace Mithril.Themes.LocationExpanders.Interfaces | Mithril API Reference",
    "keywords": "Namespace Mithril.Themes.LocationExpanders.Interfaces Interfaces IViewLocationExpanderProvider View location expander provider interface"
  },
  "api/Mithril.Themes.LocationExpanders.ModuleViewLocationExpanderProvider.html": {
    "href": "api/Mithril.Themes.LocationExpanders.ModuleViewLocationExpanderProvider.html",
    "title": "Class ModuleViewLocationExpanderProvider | Mithril API Reference",
    "keywords": "Class ModuleViewLocationExpanderProvider Namespace Mithril.Themes.LocationExpanders Assembly Mithril.Themes.dll Module view location expander provider public class ModuleViewLocationExpanderProvider : IViewLocationExpanderProvider, IViewLocationExpander Inheritance object ModuleViewLocationExpanderProvider Implements IViewLocationExpanderProvider IViewLocationExpander Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods GenericExtensions.When<TObject>(TObject, bool, Func<TObject, TObject>) ExpandoObjectExtensions.ConvertToExpando(object?) Constructors ModuleViewLocationExpanderProvider(IThemeService?) Initializes a new instance of the ModuleViewLocationExpanderProvider class. public ModuleViewLocationExpanderProvider(IThemeService? themeManager) Parameters themeManager IThemeService The theme manager. Properties Priority Gets the priority. public int Priority { get; } Property Value int The priority. Methods ExpandViewLocations(ViewLocationExpanderContext, IEnumerable<string>) Invoked by a RazorViewEngine to determine potential locations for a view. public virtual IEnumerable<string> ExpandViewLocations(ViewLocationExpanderContext context, IEnumerable<string> viewLocations) Parameters context ViewLocationExpanderContext The ViewLocationExpanderContext for the current view location expansion operation. viewLocations IEnumerable<string> The sequence of view locations to expand. Returns IEnumerable<string> A list of expanded view locations. PopulateValues(ViewLocationExpanderContext) Invoked by a RazorViewEngine to determine the values that would be consumed by this instance of IViewLocationExpander. The calculated values are used to determine if the view location has changed since the last time it was located. public void PopulateValues(ViewLocationExpanderContext context) Parameters context ViewLocationExpanderContext The ViewLocationExpanderContext for the current view location expansion operation. See Also IViewLocationExpanderProvider"
  },
  "api/Mithril.Themes.LocationExpanders.html": {
    "href": "api/Mithril.Themes.LocationExpanders.html",
    "title": "Namespace Mithril.Themes.LocationExpanders | Mithril API Reference",
    "keywords": "Namespace Mithril.Themes.LocationExpanders Classes CompositeViewLocationExpanderProvider Composite view location expander provider. DefaultViewLocationExpanderProvider Default view location expander ModuleViewLocationExpanderProvider Module view location expander provider"
  },
  "api/Mithril.Themes.Models.Mappings.SetThemeCommandMapping.html": {
    "href": "api/Mithril.Themes.Models.Mappings.SetThemeCommandMapping.html",
    "title": "Class SetThemeCommandMapping | Mithril API Reference",
    "keywords": "Class SetThemeCommandMapping Namespace Mithril.Themes.Models.Mappings Assembly Mithril.Themes.dll Set theme command mapping public class SetThemeCommandMapping : MappingBaseClass<SetThemeCommand, DefaultDatabase>, IMapping<SetThemeCommand>, IMapping Inheritance object MappingBaseClass<SetThemeCommand, DefaultDatabase> SetThemeCommandMapping Implements IMapping<SetThemeCommand> IMapping Inherited Members MappingBaseClass<SetThemeCommand, DefaultDatabase>.AddAutoKey() MappingBaseClass<SetThemeCommand, DefaultDatabase>.ContainsProperty(string) MappingBaseClass<SetThemeCommand, DefaultDatabase>.Copy(IMapping) MappingBaseClass<SetThemeCommand, DefaultDatabase>.CopyProperty(IIDProperty) MappingBaseClass<SetThemeCommand, DefaultDatabase>.CopyProperty(IProperty) MappingBaseClass<SetThemeCommand, DefaultDatabase>.CopyProperty(IMapProperty) MappingBaseClass<SetThemeCommand, DefaultDatabase>.CopyProperty(IManyToOneProperty) MappingBaseClass<SetThemeCommand, DefaultDatabase>.CopyProperty(IManyToManyProperty) MappingBaseClass<SetThemeCommand, DefaultDatabase>.Equals(object) MappingBaseClass<SetThemeCommand, DefaultDatabase>.GetColumnName(string) MappingBaseClass<SetThemeCommand, DefaultDatabase>.GetHashCode() MappingBaseClass<SetThemeCommand, DefaultDatabase>.ID<TDataType>(Expression<Func<SetThemeCommand, TDataType>>) MappingBaseClass<SetThemeCommand, DefaultDatabase>.ManyToMany<TDataType>(Expression<Func<SetThemeCommand, IList<TDataType>>>) MappingBaseClass<SetThemeCommand, DefaultDatabase>.ManyToOne<TDataType>(Expression<Func<SetThemeCommand, IList<TDataType>>>) MappingBaseClass<SetThemeCommand, DefaultDatabase>.ManyToOne<TDataType>(Expression<Func<SetThemeCommand, TDataType>>) MappingBaseClass<SetThemeCommand, DefaultDatabase>.Map<TDataType>(Expression<Func<SetThemeCommand, TDataType>>) MappingBaseClass<SetThemeCommand, DefaultDatabase>.Reduce(ILogger) MappingBaseClass<SetThemeCommand, DefaultDatabase>.Reduce(IMapping, ILogger) MappingBaseClass<SetThemeCommand, DefaultDatabase>.Reference<TDataType>(Expression<Func<SetThemeCommand, TDataType>>) MappingBaseClass<SetThemeCommand, DefaultDatabase>.SetQuery(QueryType, string, CommandType, params IParameter[]) MappingBaseClass<SetThemeCommand, DefaultDatabase>.Setup() MappingBaseClass<SetThemeCommand, DefaultDatabase>.ToString() MappingBaseClass<SetThemeCommand, DefaultDatabase>.AutoIDProperties MappingBaseClass<SetThemeCommand, DefaultDatabase>.DatabaseConfigType MappingBaseClass<SetThemeCommand, DefaultDatabase>.IDProperties MappingBaseClass<SetThemeCommand, DefaultDatabase>.ManyToManyProperties MappingBaseClass<SetThemeCommand, DefaultDatabase>.ManyToOneProperties MappingBaseClass<SetThemeCommand, DefaultDatabase>.MapProperties MappingBaseClass<SetThemeCommand, DefaultDatabase>.Merge MappingBaseClass<SetThemeCommand, DefaultDatabase>.ObjectType MappingBaseClass<SetThemeCommand, DefaultDatabase>.Order MappingBaseClass<SetThemeCommand, DefaultDatabase>.Prefix MappingBaseClass<SetThemeCommand, DefaultDatabase>.Queries MappingBaseClass<SetThemeCommand, DefaultDatabase>.ReferenceProperties MappingBaseClass<SetThemeCommand, DefaultDatabase>.SchemaName MappingBaseClass<SetThemeCommand, DefaultDatabase>.Suffix MappingBaseClass<SetThemeCommand, DefaultDatabase>.TableName object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods GenericExtensions.When<TObject>(TObject, bool, Func<TObject, TObject>) ExpandoObjectExtensions.ConvertToExpando(object?) Constructors SetThemeCommandMapping() Initializes a new instance of the SetThemeCommandMapping class. public SetThemeCommandMapping() See Also MappingBaseClass<TClassType, TDatabaseType>"
  },
  "api/Mithril.Themes.Models.Mappings.ThemeChangedEventMapping.html": {
    "href": "api/Mithril.Themes.Models.Mappings.ThemeChangedEventMapping.html",
    "title": "Class ThemeChangedEventMapping | Mithril API Reference",
    "keywords": "Class ThemeChangedEventMapping Namespace Mithril.Themes.Models.Mappings Assembly Mithril.Themes.dll Theme change event mapping public class ThemeChangedEventMapping : MappingBaseClass<ThemeChangedEvent, DefaultDatabase>, IMapping<ThemeChangedEvent>, IMapping Inheritance object MappingBaseClass<ThemeChangedEvent, DefaultDatabase> ThemeChangedEventMapping Implements IMapping<ThemeChangedEvent> IMapping Inherited Members MappingBaseClass<ThemeChangedEvent, DefaultDatabase>.AddAutoKey() MappingBaseClass<ThemeChangedEvent, DefaultDatabase>.ContainsProperty(string) MappingBaseClass<ThemeChangedEvent, DefaultDatabase>.Copy(IMapping) MappingBaseClass<ThemeChangedEvent, DefaultDatabase>.CopyProperty(IIDProperty) MappingBaseClass<ThemeChangedEvent, DefaultDatabase>.CopyProperty(IProperty) MappingBaseClass<ThemeChangedEvent, DefaultDatabase>.CopyProperty(IMapProperty) MappingBaseClass<ThemeChangedEvent, DefaultDatabase>.CopyProperty(IManyToOneProperty) MappingBaseClass<ThemeChangedEvent, DefaultDatabase>.CopyProperty(IManyToManyProperty) MappingBaseClass<ThemeChangedEvent, DefaultDatabase>.Equals(object) MappingBaseClass<ThemeChangedEvent, DefaultDatabase>.GetColumnName(string) MappingBaseClass<ThemeChangedEvent, DefaultDatabase>.GetHashCode() MappingBaseClass<ThemeChangedEvent, DefaultDatabase>.ID<TDataType>(Expression<Func<ThemeChangedEvent, TDataType>>) MappingBaseClass<ThemeChangedEvent, DefaultDatabase>.ManyToMany<TDataType>(Expression<Func<ThemeChangedEvent, IList<TDataType>>>) MappingBaseClass<ThemeChangedEvent, DefaultDatabase>.ManyToOne<TDataType>(Expression<Func<ThemeChangedEvent, IList<TDataType>>>) MappingBaseClass<ThemeChangedEvent, DefaultDatabase>.ManyToOne<TDataType>(Expression<Func<ThemeChangedEvent, TDataType>>) MappingBaseClass<ThemeChangedEvent, DefaultDatabase>.Map<TDataType>(Expression<Func<ThemeChangedEvent, TDataType>>) MappingBaseClass<ThemeChangedEvent, DefaultDatabase>.Reduce(ILogger) MappingBaseClass<ThemeChangedEvent, DefaultDatabase>.Reduce(IMapping, ILogger) MappingBaseClass<ThemeChangedEvent, DefaultDatabase>.Reference<TDataType>(Expression<Func<ThemeChangedEvent, TDataType>>) MappingBaseClass<ThemeChangedEvent, DefaultDatabase>.SetQuery(QueryType, string, CommandType, params IParameter[]) MappingBaseClass<ThemeChangedEvent, DefaultDatabase>.Setup() MappingBaseClass<ThemeChangedEvent, DefaultDatabase>.ToString() MappingBaseClass<ThemeChangedEvent, DefaultDatabase>.AutoIDProperties MappingBaseClass<ThemeChangedEvent, DefaultDatabase>.DatabaseConfigType MappingBaseClass<ThemeChangedEvent, DefaultDatabase>.IDProperties MappingBaseClass<ThemeChangedEvent, DefaultDatabase>.ManyToManyProperties MappingBaseClass<ThemeChangedEvent, DefaultDatabase>.ManyToOneProperties MappingBaseClass<ThemeChangedEvent, DefaultDatabase>.MapProperties MappingBaseClass<ThemeChangedEvent, DefaultDatabase>.Merge MappingBaseClass<ThemeChangedEvent, DefaultDatabase>.ObjectType MappingBaseClass<ThemeChangedEvent, DefaultDatabase>.Order MappingBaseClass<ThemeChangedEvent, DefaultDatabase>.Prefix MappingBaseClass<ThemeChangedEvent, DefaultDatabase>.Queries MappingBaseClass<ThemeChangedEvent, DefaultDatabase>.ReferenceProperties MappingBaseClass<ThemeChangedEvent, DefaultDatabase>.SchemaName MappingBaseClass<ThemeChangedEvent, DefaultDatabase>.Suffix MappingBaseClass<ThemeChangedEvent, DefaultDatabase>.TableName object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods GenericExtensions.When<TObject>(TObject, bool, Func<TObject, TObject>) ExpandoObjectExtensions.ConvertToExpando(object?) Constructors ThemeChangedEventMapping() Initializes a new instance of the ThemeChangedEventMapping class. public ThemeChangedEventMapping()"
  },
  "api/Mithril.Themes.Models.Mappings.ThemeMapping.html": {
    "href": "api/Mithril.Themes.Models.Mappings.ThemeMapping.html",
    "title": "Class ThemeMapping | Mithril API Reference",
    "keywords": "Class ThemeMapping Namespace Mithril.Themes.Models.Mappings Assembly Mithril.Themes.dll Theme mapping public class ThemeMapping : MappingBaseClass<Theme, DefaultDatabase>, IMapping<Theme>, IMapping Inheritance object MappingBaseClass<Theme, DefaultDatabase> ThemeMapping Implements IMapping<Theme> IMapping Inherited Members MappingBaseClass<Theme, DefaultDatabase>.AddAutoKey() MappingBaseClass<Theme, DefaultDatabase>.ContainsProperty(string) MappingBaseClass<Theme, DefaultDatabase>.Copy(IMapping) MappingBaseClass<Theme, DefaultDatabase>.CopyProperty(IIDProperty) MappingBaseClass<Theme, DefaultDatabase>.CopyProperty(IProperty) MappingBaseClass<Theme, DefaultDatabase>.CopyProperty(IMapProperty) MappingBaseClass<Theme, DefaultDatabase>.CopyProperty(IManyToOneProperty) MappingBaseClass<Theme, DefaultDatabase>.CopyProperty(IManyToManyProperty) MappingBaseClass<Theme, DefaultDatabase>.Equals(object) MappingBaseClass<Theme, DefaultDatabase>.GetColumnName(string) MappingBaseClass<Theme, DefaultDatabase>.GetHashCode() MappingBaseClass<Theme, DefaultDatabase>.ID<TDataType>(Expression<Func<Theme, TDataType>>) MappingBaseClass<Theme, DefaultDatabase>.ManyToMany<TDataType>(Expression<Func<Theme, IList<TDataType>>>) MappingBaseClass<Theme, DefaultDatabase>.ManyToOne<TDataType>(Expression<Func<Theme, IList<TDataType>>>) MappingBaseClass<Theme, DefaultDatabase>.ManyToOne<TDataType>(Expression<Func<Theme, TDataType>>) MappingBaseClass<Theme, DefaultDatabase>.Map<TDataType>(Expression<Func<Theme, TDataType>>) MappingBaseClass<Theme, DefaultDatabase>.Reduce(ILogger) MappingBaseClass<Theme, DefaultDatabase>.Reduce(IMapping, ILogger) MappingBaseClass<Theme, DefaultDatabase>.Reference<TDataType>(Expression<Func<Theme, TDataType>>) MappingBaseClass<Theme, DefaultDatabase>.SetQuery(QueryType, string, CommandType, params IParameter[]) MappingBaseClass<Theme, DefaultDatabase>.Setup() MappingBaseClass<Theme, DefaultDatabase>.ToString() MappingBaseClass<Theme, DefaultDatabase>.AutoIDProperties MappingBaseClass<Theme, DefaultDatabase>.DatabaseConfigType MappingBaseClass<Theme, DefaultDatabase>.IDProperties MappingBaseClass<Theme, DefaultDatabase>.ManyToManyProperties MappingBaseClass<Theme, DefaultDatabase>.ManyToOneProperties MappingBaseClass<Theme, DefaultDatabase>.MapProperties MappingBaseClass<Theme, DefaultDatabase>.Merge MappingBaseClass<Theme, DefaultDatabase>.ObjectType MappingBaseClass<Theme, DefaultDatabase>.Order MappingBaseClass<Theme, DefaultDatabase>.Prefix MappingBaseClass<Theme, DefaultDatabase>.Queries MappingBaseClass<Theme, DefaultDatabase>.ReferenceProperties MappingBaseClass<Theme, DefaultDatabase>.SchemaName MappingBaseClass<Theme, DefaultDatabase>.Suffix MappingBaseClass<Theme, DefaultDatabase>.TableName object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods GenericExtensions.When<TObject>(TObject, bool, Func<TObject, TObject>) ExpandoObjectExtensions.ConvertToExpando(object?) Constructors ThemeMapping() Initializes a new instance of the ThemeMapping class. public ThemeMapping() See Also MappingBaseClass<TClassType, TDatabaseType>"
  },
  "api/Mithril.Themes.Models.Mappings.html": {
    "href": "api/Mithril.Themes.Models.Mappings.html",
    "title": "Namespace Mithril.Themes.Models.Mappings | Mithril API Reference",
    "keywords": "Namespace Mithril.Themes.Models.Mappings Classes SetThemeCommandMapping Set theme command mapping ThemeChangedEventMapping Theme change event mapping ThemeMapping Theme mapping"
  },
  "api/Mithril.Themes.Models.SetThemeCommand.html": {
    "href": "api/Mithril.Themes.Models.SetThemeCommand.html",
    "title": "Class SetThemeCommand | Mithril API Reference",
    "keywords": "Class SetThemeCommand Namespace Mithril.Themes.Models Assembly Mithril.Themes.dll Set theme command public class SetThemeCommand : CommandBaseClass<SetThemeCommand>, IModel<SetThemeCommand>, IEquatable<IModel<SetThemeCommand>>, IComparable, IComparable<SetThemeCommand>, IEquatable<ModelBase<SetThemeCommand>>, ICommand, IEquatable<ICommand>, IModel, IEquatable<IModel>, IEquatable<CommandBaseClass<SetThemeCommand>> Inheritance object ModelBase<SetThemeCommand> CommandBaseClass<SetThemeCommand> SetThemeCommand Implements IModel<SetThemeCommand> IEquatable<IModel<SetThemeCommand>> IComparable IComparable<SetThemeCommand> IEquatable<ModelBase<SetThemeCommand>> ICommand IEquatable<ICommand> IModel IEquatable<IModel> IEquatable<CommandBaseClass<SetThemeCommand>> Inherited Members CommandBaseClass<SetThemeCommand>.Name CommandBaseClass<SetThemeCommand>.CompareTo(CommandBaseClass<SetThemeCommand>) CommandBaseClass<SetThemeCommand>.Equals(CommandBaseClass<SetThemeCommand>) CommandBaseClass<SetThemeCommand>.Equals(ICommand) CommandBaseClass<SetThemeCommand>.ToString() ModelBase<SetThemeCommand>.Active ModelBase<SetThemeCommand>.Creator ModelBase<SetThemeCommand>.DateCreated ModelBase<SetThemeCommand>.DateModified ModelBase<SetThemeCommand>.ID ModelBase<SetThemeCommand>.Modifier ModelBase<SetThemeCommand>.TenantID ModelBase<SetThemeCommand>.All(IDataService) ModelBase<SetThemeCommand>.AllActive(IDataService) ModelBase<SetThemeCommand>.AllInactive(IDataService) ModelBase<SetThemeCommand>.Load(long, IDataService) ModelBase<SetThemeCommand>.Query(IDataService) ModelBase<SetThemeCommand>.CanBeModifiedBy(ClaimsPrincipal) ModelBase<SetThemeCommand>.CanBeViewedBy(ClaimsPrincipal) ModelBase<SetThemeCommand>.CompareTo(object) ModelBase<SetThemeCommand>.DeleteAsync(IDataService, ClaimsPrincipal, bool) ModelBase<SetThemeCommand>.Equals(IModel) ModelBase<SetThemeCommand>.Equals(IModel<SetThemeCommand>) ModelBase<SetThemeCommand>.Equals(ModelBase<SetThemeCommand>) ModelBase<SetThemeCommand>.SaveAsync(IDataService, ClaimsPrincipal) ModelBase<SetThemeCommand>.SetupObject(IDataService, ClaimsPrincipal) ModelBase<SetThemeCommand>.SetupObject(IDataService, IUser) ModelBase<SetThemeCommand>.SetupObjectAndReturn(IDataService, ClaimsPrincipal) object.Equals(object, object) object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Extension Methods GenericExtensions.When<TObject>(TObject, bool, Func<TObject, TObject>) ExpandoObjectExtensions.ConvertToExpando(object?) Constructors SetThemeCommand() Initializes a new instance of the SetThemeCommand class. public SetThemeCommand() SetThemeCommand(string?) Initializes a new instance of the SetThemeCommand class. public SetThemeCommand(string? themeName) Parameters themeName string Theme name Properties ThemeName Gets the theme name. [MaxLength(64)] [Required] [MinLength(1)] public string? ThemeName { get; set; } Property Value string The theme name. Methods CompareTo(SetThemeCommand?) Compares the object to another object public override int CompareTo(SetThemeCommand? other) Parameters other SetThemeCommand Object to compare to Returns int 0 if they are equal, -1 if this is smaller, 1 if it is larger Equals(SetThemeCommand) Indicates whether the current object is equal to another object of the same type. public bool Equals(SetThemeCommand other) Parameters other SetThemeCommand An object to compare with this object. Returns bool true if the current object is equal to the other parameter; otherwise, false. Equals(object?) Determines whether the specified object, is equal to this instance. public override bool Equals(object? obj) Parameters obj object The object to compare with this instance. Returns bool true if the specified object is equal to this instance; otherwise, false. GetHashCode() Returns a hash code for this instance. public override int GetHashCode() Returns int A hash code for this instance, suitable for use in hashing algorithms and data structures like a hash table. Operators operator ==(SetThemeCommand, SetThemeCommand) Implements the operator ==. public static bool operator ==(SetThemeCommand first, SetThemeCommand second) Parameters first SetThemeCommand The first. second SetThemeCommand The second. Returns bool The result of the operator. operator >(SetThemeCommand, SetThemeCommand) Implements the operator >. public static bool operator >(SetThemeCommand left, SetThemeCommand right) Parameters left SetThemeCommand The left. right SetThemeCommand The right. Returns bool The result of the operator. operator >=(SetThemeCommand, SetThemeCommand) Implements the operator >=. public static bool operator >=(SetThemeCommand left, SetThemeCommand right) Parameters left SetThemeCommand The left. right SetThemeCommand The right. Returns bool The result of the operator. operator !=(SetThemeCommand, SetThemeCommand) Implements the operator !=. public static bool operator !=(SetThemeCommand left, SetThemeCommand right) Parameters left SetThemeCommand The left. right SetThemeCommand The right. Returns bool The result of the operator. operator <(SetThemeCommand, SetThemeCommand) Implements the operator <. public static bool operator <(SetThemeCommand left, SetThemeCommand right) Parameters left SetThemeCommand The left. right SetThemeCommand The right. Returns bool The result of the operator. operator <=(SetThemeCommand, SetThemeCommand) Implements the operator <=. public static bool operator <=(SetThemeCommand left, SetThemeCommand right) Parameters left SetThemeCommand The left. right SetThemeCommand The right. Returns bool The result of the operator. See Also CommandBaseClass<TCommand>"
  },
  "api/Mithril.Themes.Models.Theme.html": {
    "href": "api/Mithril.Themes.Models.Theme.html",
    "title": "Class Theme | Mithril API Reference",
    "keywords": "Class Theme Namespace Mithril.Themes.Models Assembly Mithril.Themes.dll Theme model public class Theme : ModelBase<Theme>, IModel<Theme>, IModel, IEquatable<IModel>, IEquatable<IModel<Theme>>, IComparable, IComparable<Theme>, IEquatable<ModelBase<Theme>> Inheritance object ModelBase<Theme> Theme Implements IModel<Theme> IModel IEquatable<IModel> IEquatable<IModel<Theme>> IComparable IComparable<Theme> IEquatable<ModelBase<Theme>> Inherited Members ModelBase<Theme>.Active ModelBase<Theme>.Creator ModelBase<Theme>.DateCreated ModelBase<Theme>.DateModified ModelBase<Theme>.ID ModelBase<Theme>.Modifier ModelBase<Theme>.TenantID ModelBase<Theme>.All(IDataService) ModelBase<Theme>.AllActive(IDataService) ModelBase<Theme>.AllInactive(IDataService) ModelBase<Theme>.Load(long, IDataService) ModelBase<Theme>.Query(IDataService) ModelBase<Theme>.CanBeModifiedBy(ClaimsPrincipal) ModelBase<Theme>.CanBeViewedBy(ClaimsPrincipal) ModelBase<Theme>.CompareTo(object) ModelBase<Theme>.DeleteAsync(IDataService, ClaimsPrincipal, bool) ModelBase<Theme>.Equals(IModel) ModelBase<Theme>.Equals(IModel<Theme>) ModelBase<Theme>.Equals(ModelBase<Theme>) ModelBase<Theme>.SaveAsync(IDataService, ClaimsPrincipal) ModelBase<Theme>.SetupObject(IDataService, ClaimsPrincipal) ModelBase<Theme>.SetupObject(IDataService, IUser) ModelBase<Theme>.SetupObjectAndReturn(IDataService, ClaimsPrincipal) object.Equals(object, object) object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Extension Methods GenericExtensions.When<TObject>(TObject, bool, Func<TObject, TObject>) ExpandoObjectExtensions.ConvertToExpando(object?) Constructors Theme() Initializes a new instance of the Theme class. public Theme() Theme(string) Initializes a new instance of the Theme class. public Theme(string name) Parameters name string The name. Exceptions ArgumentNullException name ArgumentException name Properties IsDefault Gets or sets a value indicating whether this instance is default. public bool IsDefault { get; set; } Property Value bool true if this instance is default; otherwise, false. Name Gets or sets the input path. [MaxLength(64)] [MinLength(1)] [Required] public string? Name { get; set; } Property Value string The input path. Methods CompareTo(Theme?) Compares the object to another object public override int CompareTo(Theme? other) Parameters other Theme Object to compare to Returns int 0 if they are equal, -1 if this is smaller, 1 if it is larger Equals(Theme) Indicates whether the current object is equal to another object of the same type. public bool Equals(Theme other) Parameters other Theme An object to compare with this object. Returns bool true if the current object is equal to the other parameter; otherwise, false. Equals(object?) Determines whether the specified object, is equal to this instance. public override bool Equals(object? obj) Parameters obj object The object to compare with this instance. Returns bool true if the specified object is equal to this instance; otherwise, false. GetHashCode() Returns a hash code for this instance. public override int GetHashCode() Returns int A hash code for this instance, suitable for use in hashing algorithms and data structures like a hash table. Load(string?, IDataService?) Loads the theme by name. public static Theme? Load(string? name, IDataService? dataService) Parameters name string The name. dataService IDataService The data service. Returns Theme The route specified. LoadOrCreateAsync(string, IDataService?, ClaimsPrincipal?) Loads or creates the route. public static Task<Theme> LoadOrCreateAsync(string name, IDataService? dataService, ClaimsPrincipal? user) Parameters name string The name. dataService IDataService The data service. user ClaimsPrincipal The user. Returns Task<Theme> The route entry. ToString() Converts to string. public override string ToString() Returns string A string that represents this instance. Operators operator ==(Theme, Theme) Implements the operator ==. public static bool operator ==(Theme first, Theme second) Parameters first Theme The first. second Theme The second. Returns bool The result of the operator. operator >(Theme, Theme) Implements the operator >. public static bool operator >(Theme left, Theme right) Parameters left Theme The left. right Theme The right. Returns bool The result of the operator. operator >=(Theme, Theme) Implements the operator >=. public static bool operator >=(Theme left, Theme right) Parameters left Theme The left. right Theme The right. Returns bool The result of the operator. operator !=(Theme, Theme) Implements the operator !=. public static bool operator !=(Theme left, Theme right) Parameters left Theme The left. right Theme The right. Returns bool The result of the operator. operator <(Theme, Theme) Implements the operator <. public static bool operator <(Theme left, Theme right) Parameters left Theme The left. right Theme The right. Returns bool The result of the operator. operator <=(Theme, Theme) Implements the operator <=. public static bool operator <=(Theme left, Theme right) Parameters left Theme The left. right Theme The right. Returns bool The result of the operator. See Also ModelBase<TClass>"
  },
  "api/Mithril.Themes.Models.ThemeChangedEvent.html": {
    "href": "api/Mithril.Themes.Models.ThemeChangedEvent.html",
    "title": "Class ThemeChangedEvent | Mithril API Reference",
    "keywords": "Class ThemeChangedEvent Namespace Mithril.Themes.Models Assembly Mithril.Themes.dll Theme changed event public class ThemeChangedEvent : EventBaseClass<ThemeChangedEvent>, IModel<ThemeChangedEvent>, IEquatable<IModel<ThemeChangedEvent>>, IComparable, IComparable<ThemeChangedEvent>, IEquatable<ModelBase<ThemeChangedEvent>>, IEvent, IEquatable<IEvent>, IModel, IEquatable<IModel>, IEquatable<EventBaseClass<ThemeChangedEvent>> Inheritance object ModelBase<ThemeChangedEvent> EventBaseClass<ThemeChangedEvent> ThemeChangedEvent Implements IModel<ThemeChangedEvent> IEquatable<IModel<ThemeChangedEvent>> IComparable IComparable<ThemeChangedEvent> IEquatable<ModelBase<ThemeChangedEvent>> IEvent IEquatable<IEvent> IModel IEquatable<IModel> IEquatable<EventBaseClass<ThemeChangedEvent>> Inherited Members EventBaseClass<ThemeChangedEvent>.Name EventBaseClass<ThemeChangedEvent>.RetryCount EventBaseClass<ThemeChangedEvent>.State EventBaseClass<ThemeChangedEvent>.CanRun() EventBaseClass<ThemeChangedEvent>.CompareTo(EventBaseClass<ThemeChangedEvent>) EventBaseClass<ThemeChangedEvent>.Equals(EventBaseClass<ThemeChangedEvent>) EventBaseClass<ThemeChangedEvent>.Equals(IEvent) EventBaseClass<ThemeChangedEvent>.ToString() ModelBase<ThemeChangedEvent>.Active ModelBase<ThemeChangedEvent>.Creator ModelBase<ThemeChangedEvent>.DateCreated ModelBase<ThemeChangedEvent>.DateModified ModelBase<ThemeChangedEvent>.ID ModelBase<ThemeChangedEvent>.Modifier ModelBase<ThemeChangedEvent>.TenantID ModelBase<ThemeChangedEvent>.All(IDataService) ModelBase<ThemeChangedEvent>.AllActive(IDataService) ModelBase<ThemeChangedEvent>.AllInactive(IDataService) ModelBase<ThemeChangedEvent>.Load(long, IDataService) ModelBase<ThemeChangedEvent>.Query(IDataService) ModelBase<ThemeChangedEvent>.CanBeModifiedBy(ClaimsPrincipal) ModelBase<ThemeChangedEvent>.CanBeViewedBy(ClaimsPrincipal) ModelBase<ThemeChangedEvent>.CompareTo(object) ModelBase<ThemeChangedEvent>.DeleteAsync(IDataService, ClaimsPrincipal, bool) ModelBase<ThemeChangedEvent>.Equals(IModel) ModelBase<ThemeChangedEvent>.Equals(IModel<ThemeChangedEvent>) ModelBase<ThemeChangedEvent>.Equals(ModelBase<ThemeChangedEvent>) ModelBase<ThemeChangedEvent>.SaveAsync(IDataService, ClaimsPrincipal) ModelBase<ThemeChangedEvent>.SetupObject(IDataService, ClaimsPrincipal) ModelBase<ThemeChangedEvent>.SetupObject(IDataService, IUser) ModelBase<ThemeChangedEvent>.SetupObjectAndReturn(IDataService, ClaimsPrincipal) object.Equals(object, object) object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Extension Methods GenericExtensions.When<TObject>(TObject, bool, Func<TObject, TObject>) ExpandoObjectExtensions.ConvertToExpando(object?) Constructors ThemeChangedEvent() Initializes a new instance of the ThemeChangedEvent class. public ThemeChangedEvent() ThemeChangedEvent(string) Initializes a new instance of the ThemeChangedEvent class. public ThemeChangedEvent(string name) Parameters name string The name. Properties ThemeName Gets or sets the message. [MaxLength(64)] public string? ThemeName { get; set; } Property Value string The message. Methods CompareTo(ThemeChangedEvent?) Compares the object to another object public override int CompareTo(ThemeChangedEvent? other) Parameters other ThemeChangedEvent Object to compare to Returns int 0 if they are equal, -1 if this is smaller, 1 if it is larger Equals(ThemeChangedEvent) Indicates whether the current object is equal to another object of the same type. public bool Equals(ThemeChangedEvent other) Parameters other ThemeChangedEvent An object to compare with this object. Returns bool true if the current object is equal to the other parameter; otherwise, false. Equals(object?) Determines whether the specified object, is equal to this instance. public override bool Equals(object? obj) Parameters obj object The object to compare with this instance. Returns bool true if the specified object is equal to this instance; otherwise, false. GetData() Gets the data within the event. public override ExpandoObject GetData() Returns ExpandoObject The data from the event. GetHashCode() Returns a hash code for this instance. public override int GetHashCode() Returns int A hash code for this instance, suitable for use in hashing algorithms and data structures like a hash table. GetSchema() Gets the schema. public override string GetSchema() Returns string The data schema. Operators operator ==(ThemeChangedEvent, ThemeChangedEvent) Implements the operator ==. public static bool operator ==(ThemeChangedEvent first, ThemeChangedEvent second) Parameters first ThemeChangedEvent The first. second ThemeChangedEvent The second. Returns bool The result of the operator. operator >(ThemeChangedEvent, ThemeChangedEvent) Implements the operator >. public static bool operator >(ThemeChangedEvent left, ThemeChangedEvent right) Parameters left ThemeChangedEvent The left. right ThemeChangedEvent The right. Returns bool The result of the operator. operator >=(ThemeChangedEvent, ThemeChangedEvent) Implements the operator >=. public static bool operator >=(ThemeChangedEvent left, ThemeChangedEvent right) Parameters left ThemeChangedEvent The left. right ThemeChangedEvent The right. Returns bool The result of the operator. operator !=(ThemeChangedEvent, ThemeChangedEvent) Implements the operator !=. public static bool operator !=(ThemeChangedEvent left, ThemeChangedEvent right) Parameters left ThemeChangedEvent The left. right ThemeChangedEvent The right. Returns bool The result of the operator. operator <(ThemeChangedEvent, ThemeChangedEvent) Implements the operator <. public static bool operator <(ThemeChangedEvent left, ThemeChangedEvent right) Parameters left ThemeChangedEvent The left. right ThemeChangedEvent The right. Returns bool The result of the operator. operator <=(ThemeChangedEvent, ThemeChangedEvent) Implements the operator <=. public static bool operator <=(ThemeChangedEvent left, ThemeChangedEvent right) Parameters left ThemeChangedEvent The left. right ThemeChangedEvent The right. Returns bool The result of the operator. See Also EventBaseClass<TEvent>"
  },
  "api/Mithril.Themes.Models.html": {
    "href": "api/Mithril.Themes.Models.html",
    "title": "Namespace Mithril.Themes.Models | Mithril API Reference",
    "keywords": "Namespace Mithril.Themes.Models Classes SetThemeCommand Set theme command Theme Theme model ThemeChangedEvent Theme changed event"
  },
  "api/Mithril.Themes.Resources.LinkResource.html": {
    "href": "api/Mithril.Themes.Resources.LinkResource.html",
    "title": "Class LinkResource | Mithril API Reference",
    "keywords": "Class LinkResource Namespace Mithril.Themes.Resources Assembly Mithril.Themes.dll Link resource public class LinkResource : IResource, IEquatable<LinkResource> Inheritance object LinkResource Implements IResource IEquatable<LinkResource> Inherited Members object.Equals(object, object) object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods GenericExtensions.When<TObject>(TObject, bool, Func<TObject, TObject>) ExpandoObjectExtensions.ConvertToExpando(object?) Constructors LinkResource(string?, string?, string?, string?, string?, string?, string?, string?, string?, string?, int, string?) Initializes a new instance of the LinkResource class. public LinkResource(string? source, string? charset, string? crossOrigin, string? hrefLang, string? media, string? rel, string? rev, string? sizes, string? target, string? type, int order, string? location) Parameters source string The source. charset string The charset. crossOrigin string The cross origin. hrefLang string The href language. media string The media. rel string The relative. rev string The rev. sizes string The sizes. target string The target. type string The type. order int The order. location string The location. Properties Charset Gets the charset. public string Charset { get; } Property Value string The charset. CrossOrigin Gets the cross origin. public string CrossOrigin { get; } Property Value string The cross origin. HrefLang Gets the href language. public string HrefLang { get; } Property Value string The href language. Location Gets the location. public string Location { get; } Property Value string The location. Media Gets the media. public string Media { get; } Property Value string The media. Order Gets the order. public int Order { get; set; } Property Value int The order. Rel Gets or sets the relative. public string Rel { get; set; } Property Value string The relative. Rev Gets the rev. public string Rev { get; } Property Value string The rev. Sizes Gets the sizes. public string Sizes { get; } Property Value string The sizes. Source Gets or sets the source. public string Source { get; set; } Property Value string The source. Target Gets the target. public string Target { get; } Property Value string The target. Type Gets or sets the type. public string Type { get; set; } Property Value string The type. Version Gets the version. public string Version { get; } Property Value string The version. Methods Equals(LinkResource?) Indicates whether the current object is equal to another object of the same type. public bool Equals(LinkResource? other) Parameters other LinkResource An object to compare with this object. Returns bool true if the current object is equal to the other parameter; otherwise, false. Equals(object?) Determines whether the specified object, is equal to this instance. public override bool Equals(object? obj) Parameters obj object The object to compare with this instance. Returns bool true if the specified object is equal to this instance; otherwise, false. GetHashCode() Returns a hash code for this instance. public override int GetHashCode() Returns int A hash code for this instance, suitable for use in hashing algorithms and data structures like a hash table. GetHtmlContent() Gets the content of the resource as an IHtmlContent item. public IHtmlContent GetHtmlContent() Returns IHtmlContent The content. Operators operator ==(LinkResource?, LinkResource?) Implements the operator ==. public static bool operator ==(LinkResource? resource1, LinkResource? resource2) Parameters resource1 LinkResource The resource1. resource2 LinkResource The resource2. Returns bool The result of the operator. operator !=(LinkResource?, LinkResource?) Implements the operator !=. public static bool operator !=(LinkResource? resource1, LinkResource? resource2) Parameters resource1 LinkResource The resource1. resource2 LinkResource The resource2. Returns bool The result of the operator. See Also IResource IEquatable<T>"
  },
  "api/Mithril.Themes.Resources.MetaResource.html": {
    "href": "api/Mithril.Themes.Resources.MetaResource.html",
    "title": "Class MetaResource | Mithril API Reference",
    "keywords": "Class MetaResource Namespace Mithril.Themes.Resources Assembly Mithril.Themes.dll Meta resource public class MetaResource : IResource, IEquatable<MetaResource> Inheritance object MetaResource Implements IResource IEquatable<MetaResource> Inherited Members object.Equals(object, object) object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods GenericExtensions.When<TObject>(TObject, bool, Func<TObject, TObject>) ExpandoObjectExtensions.ConvertToExpando(object?) Remarks Initializes a new instance of the MetaResource class. Constructors MetaResource(string?, string?, string?, string?, string?, string?, int) Meta resource public MetaResource(string? name, string? scheme, string? httpEquiv, string? content, string? charset, string? property, int order) Parameters name string The name. scheme string The schema. httpEquiv string The HTTP equiv. content string The content. charset string The charset. property string The property. order int The order. Remarks Initializes a new instance of the MetaResource class. See Also IResource IEquatable<T> Properties Charset Gets the charset. public string? Charset { get; } Property Value string The charset. Content Gets the content. public string? Content { get; } Property Value string The content. HttpEquiv Gets the HTTP equiv. public string? HttpEquiv { get; } Property Value string The HTTP equiv. Location Gets the location. public string Location { get; } Property Value string The location. Name Gets the name. public string? Name { get; } Property Value string The name. Order Gets the order. public int Order { get; set; } Property Value int The order. Property Gets the property. public string? Property { get; } Property Value string The property. Scheme Gets the schema. public string? Scheme { get; } Property Value string The schema. Methods Equals(MetaResource?) Indicates whether the current object is equal to another object of the same type. public bool Equals(MetaResource? other) Parameters other MetaResource An object to compare with this object. Returns bool true if the current object is equal to the other parameter; otherwise, false. Equals(object?) Determines whether the specified object, is equal to this instance. public override bool Equals(object? obj) Parameters obj object The object to compare with this instance. Returns bool true if the specified object is equal to this instance; otherwise, false. GetHashCode() Returns a hash code for this instance. public override int GetHashCode() Returns int A hash code for this instance, suitable for use in hashing algorithms and data structures like a hash table. GetHtmlContent() Gets the content of the resource as an IHtmlContent item. public IHtmlContent GetHtmlContent() Returns IHtmlContent The content. Operators operator ==(MetaResource?, MetaResource?) Implements the operator ==. public static bool operator ==(MetaResource? resource1, MetaResource? resource2) Parameters resource1 MetaResource The resource1. resource2 MetaResource The resource2. Returns bool The result of the operator. operator !=(MetaResource?, MetaResource?) Implements the operator !=. public static bool operator !=(MetaResource? resource1, MetaResource? resource2) Parameters resource1 MetaResource The resource1. resource2 MetaResource The resource2. Returns bool The result of the operator. See Also IResource IEquatable<T>"
  },
  "api/Mithril.Themes.Resources.ScriptContentResource.html": {
    "href": "api/Mithril.Themes.Resources.ScriptContentResource.html",
    "title": "Class ScriptContentResource | Mithril API Reference",
    "keywords": "Class ScriptContentResource Namespace Mithril.Themes.Resources Assembly Mithril.Themes.dll Script content resource public class ScriptContentResource : IResource, IEquatable<ScriptContentResource> Inheritance object ScriptContentResource Implements IResource IEquatable<ScriptContentResource> Inherited Members object.Equals(object, object) object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods GenericExtensions.When<TObject>(TObject, bool, Func<TObject, TObject>) ExpandoObjectExtensions.ConvertToExpando(object?) Remarks Initializes a new instance of the ScriptContentResource class. Constructors ScriptContentResource(string?, string?, string?, string?, string?, string?, int, string?, string?, string?, string?) Script content resource public ScriptContentResource(string? content, string? async, string? charset, string? defer, string? type, string? xMLSpace, int tagOrder, string? location, string? integrity, string? crossOrigin, string? referrerPolicy) Parameters content string The content. async string The asynchronous. charset string The charset. defer string The defer. type string The type. xMLSpace string The x ml space. tagOrder int The tag order. location string The position. integrity string The integrity. crossOrigin string The cross origin. referrerPolicy string The referrer policy. Remarks Initializes a new instance of the ScriptContentResource class. See Also IResource IEquatable<T> Properties Async Gets the asynchronous. public string Async { get; } Property Value string The asynchronous. Charset Gets the charset. public string Charset { get; } Property Value string The charset. Content Gets or sets the source. public string Content { get; set; } Property Value string The source. CrossOrigin Gets the crossorigin. public string CrossOrigin { get; } Property Value string The crossorigin. Defer Gets the defer. public bool Defer { get; } Property Value bool The defer. Integrity Gets the integrity. public string Integrity { get; } Property Value string The integrity. Location Gets the position. public string Location { get; } Property Value string The position. Order Gets the order. public int Order { get; set; } Property Value int The order. ReferrerPolicy Gets the referrerpolicy. public string ReferrerPolicy { get; } Property Value string The referrerpolicy. Type Gets the type. public string Type { get; } Property Value string The type. XMLSpace Gets the XML space. public string XMLSpace { get; } Property Value string The XML space. Methods Equals(ScriptContentResource?) Indicates whether the current object is equal to another object of the same type. public bool Equals(ScriptContentResource? other) Parameters other ScriptContentResource An object to compare with this object. Returns bool true if the current object is equal to the other parameter; otherwise, false. Equals(object?) Determines whether the specified object, is equal to this instance. public override bool Equals(object? obj) Parameters obj object The object to compare with this instance. Returns bool true if the specified object is equal to this instance; otherwise, false. GetHashCode() Returns a hash code for this instance. public override int GetHashCode() Returns int A hash code for this instance, suitable for use in hashing algorithms and data structures like a hash table. GetHtmlContent() Gets the content of the resource as an IHtmlContent item. public IHtmlContent GetHtmlContent() Returns IHtmlContent The content. Operators operator ==(ScriptContentResource?, ScriptContentResource?) Implements the operator ==. public static bool operator ==(ScriptContentResource? resource1, ScriptContentResource? resource2) Parameters resource1 ScriptContentResource The resource1. resource2 ScriptContentResource The resource2. Returns bool The result of the operator. operator !=(ScriptContentResource?, ScriptContentResource?) Implements the operator !=. public static bool operator !=(ScriptContentResource? resource1, ScriptContentResource? resource2) Parameters resource1 ScriptContentResource The resource1. resource2 ScriptContentResource The resource2. Returns bool The result of the operator. See Also IResource IEquatable<T>"
  },
  "api/Mithril.Themes.Resources.ScriptFileResource.html": {
    "href": "api/Mithril.Themes.Resources.ScriptFileResource.html",
    "title": "Class ScriptFileResource | Mithril API Reference",
    "keywords": "Class ScriptFileResource Namespace Mithril.Themes.Resources Assembly Mithril.Themes.dll Script file resource. public class ScriptFileResource : IResource, IEquatable<ScriptFileResource> Inheritance object ScriptFileResource Implements IResource IEquatable<ScriptFileResource> Inherited Members object.Equals(object, object) object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods GenericExtensions.When<TObject>(TObject, bool, Func<TObject, TObject>) ExpandoObjectExtensions.ConvertToExpando(object?) Constructors ScriptFileResource(string?, string?, string?, string?, string?, string?, int, string?, string?, string?, string?) Initializes a new instance of the ScriptFileResource class. public ScriptFileResource(string? source, string? async, string? charset, string? defer, string? type, string? xMLSpace, int order, string? location, string? integrity, string? crossOrigin, string? referrerPolicy) Parameters source string The source. async string The asynchronous. charset string The charset. defer string The defer. type string The type. xMLSpace string The xml space. order int The order. location string The location. integrity string The integrity. crossOrigin string The cross origin. referrerPolicy string The referrer policy. Properties Async Gets the asynchronous. public string Async { get; } Property Value string The asynchronous. Charset Gets the charset. public string Charset { get; } Property Value string The charset. CrossOrigin Gets the crossorigin. public string CrossOrigin { get; } Property Value string The crossorigin. Defer Gets the defer. public bool Defer { get; } Property Value bool The defer. Integrity Gets the integrity. public string Integrity { get; } Property Value string The integrity. Location Gets the location. public string Location { get; } Property Value string The location. Order Gets the order. public int Order { get; set; } Property Value int The order. ReferrerPolicy Gets the referrerpolicy. public string ReferrerPolicy { get; } Property Value string The referrerpolicy. Source Gets or sets the source. public string Source { get; set; } Property Value string The source. Type Gets the type. public string Type { get; } Property Value string The type. Version Gets the version. public string Version { get; } Property Value string The version. XMLSpace Gets the XML space. public string XMLSpace { get; } Property Value string The XML space. Methods Equals(ScriptFileResource?) Indicates whether the current object is equal to another object of the same type. public bool Equals(ScriptFileResource? other) Parameters other ScriptFileResource An object to compare with this object. Returns bool true if the current object is equal to the other parameter; otherwise, false. Equals(object?) Determines whether the specified object, is equal to this instance. public override bool Equals(object? obj) Parameters obj object The object to compare with this instance. Returns bool true if the specified object is equal to this instance; otherwise, false. GetHashCode() Returns a hash code for this instance. public override int GetHashCode() Returns int A hash code for this instance, suitable for use in hashing algorithms and data structures like a hash table. GetHtmlContent() Gets the content of the resource as an IHtmlContent item. public IHtmlContent GetHtmlContent() Returns IHtmlContent The content. Operators operator ==(ScriptFileResource?, ScriptFileResource?) Implements the operator ==. public static bool operator ==(ScriptFileResource? resource1, ScriptFileResource? resource2) Parameters resource1 ScriptFileResource The resource1. resource2 ScriptFileResource The resource2. Returns bool The result of the operator. operator !=(ScriptFileResource?, ScriptFileResource?) Implements the operator !=. public static bool operator !=(ScriptFileResource? resource1, ScriptFileResource? resource2) Parameters resource1 ScriptFileResource The resource1. resource2 ScriptFileResource The resource2. Returns bool The result of the operator. See Also IEquatable<T> IResource"
  },
  "api/Mithril.Themes.Resources.StyleResource.html": {
    "href": "api/Mithril.Themes.Resources.StyleResource.html",
    "title": "Class StyleResource | Mithril API Reference",
    "keywords": "Class StyleResource Namespace Mithril.Themes.Resources Assembly Mithril.Themes.dll Style resource public class StyleResource : IResource, IEquatable<StyleResource> Inheritance object StyleResource Implements IResource IEquatable<StyleResource> Inherited Members object.Equals(object, object) object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods GenericExtensions.When<TObject>(TObject, bool, Func<TObject, TObject>) ExpandoObjectExtensions.ConvertToExpando(object?) Remarks Initializes a new instance of the StyleResource class. Constructors StyleResource(string?, string?, string?, int, string?) Style resource public StyleResource(string? content, string? media, string? type, int order, string? location) Parameters content string The content. media string The media. type string The type. order int The order. location string The location. Remarks Initializes a new instance of the StyleResource class. See Also IEquatable<T> IResource Properties Content Gets or sets the source. public string Content { get; set; } Property Value string The source. Location Gets the location. public string? Location { get; } Property Value string The location. Media Gets or sets the media. public string? Media { get; set; } Property Value string The media. Order Gets the order. public int Order { get; set; } Property Value int The order. Type Gets or sets the type. public string? Type { get; set; } Property Value string The type. Methods Equals(StyleResource?) Indicates whether the current object is equal to another object of the same type. public bool Equals(StyleResource? other) Parameters other StyleResource An object to compare with this object. Returns bool true if the current object is equal to the other parameter; otherwise, false. Equals(object?) Determines whether the specified object, is equal to this instance. public override bool Equals(object? obj) Parameters obj object The object to compare with this instance. Returns bool true if the specified object is equal to this instance; otherwise, false. GetHashCode() Returns a hash code for this instance. public override int GetHashCode() Returns int A hash code for this instance, suitable for use in hashing algorithms and data structures like a hash table. GetHtmlContent() Gets the content of the resource as an IHtmlContent item. public IHtmlContent GetHtmlContent() Returns IHtmlContent The content. Operators operator ==(StyleResource?, StyleResource?) Implements the operator ==. public static bool operator ==(StyleResource? resource1, StyleResource? resource2) Parameters resource1 StyleResource The resource1. resource2 StyleResource The resource2. Returns bool The result of the operator. operator !=(StyleResource?, StyleResource?) Implements the operator !=. public static bool operator !=(StyleResource? resource1, StyleResource? resource2) Parameters resource1 StyleResource The resource1. resource2 StyleResource The resource2. Returns bool The result of the operator. See Also IEquatable<T> IResource"
  },
  "api/Mithril.Themes.Resources.html": {
    "href": "api/Mithril.Themes.Resources.html",
    "title": "Namespace Mithril.Themes.Resources | Mithril API Reference",
    "keywords": "Namespace Mithril.Themes.Resources Classes LinkResource Link resource MetaResource Meta resource ScriptContentResource Script content resource ScriptFileResource Script file resource. StyleResource Style resource"
  },
  "api/Mithril.Themes.Services.ResourceService.html": {
    "href": "api/Mithril.Themes.Services.ResourceService.html",
    "title": "Class ResourceService | Mithril API Reference",
    "keywords": "Class ResourceService Namespace Mithril.Themes.Services Assembly Mithril.Themes.dll Resource service public class ResourceService : IResourceService Inheritance object ResourceService Implements IResourceService Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods GenericExtensions.When<TObject>(TObject, bool, Func<TObject, TObject>) ExpandoObjectExtensions.ConvertToExpando(object?) Properties Resources Gets or sets the resources. public ListMapping<ResourceType, IResource> Resources { get; } Property Value ListMapping<ResourceType, IResource> The resources. Methods AddLinkResource(string?, string?, string?, string?, string?, string?, string?, string?, string?, string?, int, string?) Adds the link resource. public bool AddLinkResource(string? href, string? rel, string? type, string? crossOrigin, string? hreflang, string? media, string? sizes, string? charset, string? rev, string? target, int tagOrder, string? location) Parameters href string The href. rel string The relative. type string The type. crossOrigin string The cross origin. hreflang string The hreflang. media string The media. sizes string The sizes. charset string The charset. rev string The rev. target string The target. tagOrder int The tag order. location string The location. Returns bool True if it is successfully added, false otherwise. AddMetaResource(string?, string?, string?, string?, string?, string?, int) Adds the meta resource. public bool AddMetaResource(string? name, string? scheme, string? httpEquiv, string? content, string? charset, string? property, int tagOrder) Parameters name string The name. scheme string The scheme. httpEquiv string The HTTP equiv. content string The content. charset string The charset. property string The property. tagOrder int The tag order. Returns bool True if it is successfully added, false otherwise. AddResource(ResourceType, IResource) Adds the resource. public bool AddResource(ResourceType type, IResource resource) Parameters type ResourceType The type. resource IResource The resource. Returns bool True if it is successfully added, false otherwise. AddScriptContentResource(string?, string?, string?, string?, string?, string?, int, string?, string?, string?, string?) Adds the script content resource. public bool AddScriptContentResource(string? content, string? async, string? charset, string? defer, string? type, string? xMLSpace, int tagOrder, string? location, string? integrity, string? crossOrigin, string? referrerPolicy) Parameters content string The content. async string The asynchronous. charset string The charset. defer string The defer. type string The type. xMLSpace string The xml:space. tagOrder int The tag order. location string The position. integrity string The integrity. crossOrigin string The cross origin. referrerPolicy string The referrer policy. Returns bool True if it is successfully added, false otherwise. AddScriptFileResource(string?, string?, string?, string?, string?, string?, int, string?, string?, string?, string?) Adds the script file resource. public bool AddScriptFileResource(string? file, string? async, string? charset, string? defer, string? type, string? xMLSpace, int tagOrder, string? location, string? integrity, string? crossOrigin, string? referrerPolicy) Parameters file string The file. async string The asynchronous. charset string The charset. defer string The defer. type string The type. xMLSpace string The x ml space. tagOrder int The tag order. location string The position. integrity string The integrity. crossOrigin string The cross origin. referrerPolicy string The referrer policy. Returns bool True if it is successfully added, false otherwise. AddStyleResource(string?, string?, string?, int, string?) Adds the style resource. public bool AddStyleResource(string? content, string? media, string? type, int tagOrder, string? location) Parameters content string The content. media string The media. type string The type. tagOrder int The tag order. location string Returns bool True if it is successfully added, false otherwise. NextOrderValue(ResourceType) Nexts the order value. public int NextOrderValue(ResourceType type) Parameters type ResourceType The type. Returns int The next order value Render(ResourceType, string) Renders the specified type. public IHtmlContent Render(ResourceType type, string location = \"\") Parameters type ResourceType The type. location string The location. Returns IHtmlContent The HTML content. See Also IResourceService"
  },
  "api/Mithril.Themes.Services.ThemeService.html": {
    "href": "api/Mithril.Themes.Services.ThemeService.html",
    "title": "Class ThemeService | Mithril API Reference",
    "keywords": "Class ThemeService Namespace Mithril.Themes.Services Assembly Mithril.Themes.dll Theme manager public class ThemeService : IThemeService Inheritance object ThemeService Implements IThemeService Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods GenericExtensions.When<TObject>(TObject, bool, Func<TObject, TObject>) ExpandoObjectExtensions.ConvertToExpando(object?) Constructors ThemeService(IEnumerable<ITheme>, IDataService?) Initializes a new instance of the ThemeService class. public ThemeService(IEnumerable<ITheme> themes, IDataService? dataService) Parameters themes IEnumerable<ITheme> The themes. dataService IDataService The data service. Methods GetAvailableThemes() Gets the themes. public IEnumerable<ITheme> GetAvailableThemes() Returns IEnumerable<ITheme> The themes available. LoadTheme(string?) Loads the theme based on the name. public ITheme? LoadTheme(string? themeName = \"Default\") Parameters themeName string Name of the theme. Returns ITheme The theme associated with the name. SetDefaultThemeAsync(ITheme?, ClaimsPrincipal?) Sets the default theme. public Task<IThemeService> SetDefaultThemeAsync(ITheme? theme, ClaimsPrincipal? user) Parameters theme ITheme The theme. user ClaimsPrincipal The user. Returns Task<IThemeService> This. SetThemeAlias(string?, ITheme?) Set an alias for a theme public IThemeService SetThemeAlias(string? themeName, ITheme? theme) Parameters themeName string Theme alias name theme ITheme Theme Returns IThemeService This. See Also IThemeService"
  },
  "api/Mithril.Themes.Services.html": {
    "href": "api/Mithril.Themes.Services.html",
    "title": "Namespace Mithril.Themes.Services | Mithril API Reference",
    "keywords": "Namespace Mithril.Themes.Services Classes ResourceService Resource service ThemeService Theme manager"
  },
  "api/Mithril.Themes.ThemesModule.html": {
    "href": "api/Mithril.Themes.ThemesModule.html",
    "title": "Class ThemesModule | Mithril API Reference",
    "keywords": "Class ThemesModule Namespace Mithril.Themes Assembly Mithril.Themes.dll Themes module public class ThemesModule : ModuleBaseClass<ThemesModule>, IEquatable<ThemesModule>, IModule Inheritance object ModuleBaseClass<ThemesModule> ThemesModule Implements IEquatable<ThemesModule> IModule Inherited Members ModuleBaseClass<ThemesModule>.Category ModuleBaseClass<ThemesModule>.ContentPath ModuleBaseClass<ThemesModule>.Features ModuleBaseClass<ThemesModule>.ID ModuleBaseClass<ThemesModule>.LastModified ModuleBaseClass<ThemesModule>.Name ModuleBaseClass<ThemesModule>.Order ModuleBaseClass<ThemesModule>.Tags ModuleBaseClass<ThemesModule>.Version ModuleBaseClass<ThemesModule>.ConfigureApplication(IApplicationBuilder, IConfiguration, IHostEnvironment) ModuleBaseClass<ThemesModule>.ConfigureHostSettings(IHostBuilder, IConfiguration, IHostEnvironment) ModuleBaseClass<ThemesModule>.ConfigureLoggingSettings(ILoggingBuilder, IConfiguration, IHostEnvironment) ModuleBaseClass<ThemesModule>.ConfigureMVC(IMvcBuilder, IConfiguration, IHostEnvironment) ModuleBaseClass<ThemesModule>.ConfigureRoutes(IEndpointRouteBuilder, IConfiguration, IHostEnvironment) ModuleBaseClass<ThemesModule>.ConfigureWebHostSettings(IWebHostBuilder, IConfiguration, IHostEnvironment) ModuleBaseClass<ThemesModule>.Equals(object) ModuleBaseClass<ThemesModule>.Equals(ThemesModule) ModuleBaseClass<ThemesModule>.GetHashCode() ModuleBaseClass<ThemesModule>.OnStarted() ModuleBaseClass<ThemesModule>.OnStopped() ModuleBaseClass<ThemesModule>.OnStopping() object.Equals(object, object) object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Extension Methods GenericExtensions.When<TObject>(TObject, bool, Func<TObject, TObject>) ExpandoObjectExtensions.ConvertToExpando(object?) Methods ConfigureServices(IServiceCollection?, IConfiguration?, IHostEnvironment?) Configures the services for the module. public override IServiceCollection? ConfigureServices(IServiceCollection? services, IConfiguration? configuration, IHostEnvironment? environment) Parameters services IServiceCollection The services collection. configuration IConfiguration The configuration. environment IHostEnvironment The environment. Returns IServiceCollection Services InitializeDataAsync(IDataService?, IServiceProvider?) Initializes the data. public override Task InitializeDataAsync(IDataService? dataService, IServiceProvider? services) Parameters dataService IDataService The data service. services IServiceProvider The services for the application. Returns Task Themes module See Also ModuleBaseClass<TModule>"
  },
  "api/Mithril.Themes.html": {
    "href": "api/Mithril.Themes.html",
    "title": "Namespace Mithril.Themes | Mithril API Reference",
    "keywords": "Namespace Mithril.Themes Classes ThemesModule Themes module"
  },
  "api/Mithril.html": {
    "href": "api/Mithril.html",
    "title": "Namespace Mithril | Mithril API Reference",
    "keywords": "Namespace Mithril Classes Program Main program"
  },
  "api/index.html": {
    "href": "api/index.html",
    "title": "Welcome | Mithril API Reference",
    "keywords": "Welcome Welcome to the API browser."
  },
  "articles/intro.html": {
    "href": "articles/intro.html",
    "title": "Code | Mithril API Reference",
    "keywords": "Code using Mithril.Core.Extensions; using Serilog; namespace Mithril { /// <summary> /// Main program /// </summary> public static class Program { /// <summary> /// Defines the entry point of the application. /// </summary> /// <param name=\"args\">The arguments.</param> public static async Task Main(string[] args) { try { WebApplicationBuilder? Builder = WebApplication.CreateBuilder(args); await (Builder.SetupMithril()?.RunAsync() ?? Task.CompletedTask).ConfigureAwait(false); } catch (Exception Ex) { Log.Fatal(Ex, \"Host terminated unexpectedly\"); } finally { Log.CloseAndFlush(); } } } }"
  },
  "index.html": {
    "href": "index.html",
    "title": "Mithril | Mithril API Reference",
    "keywords": "Mithril"
  }
}