{
  "api/Microsoft.AspNetCore.Builder.WebApplicationBuilderExtensions.html": {
    "href": "api/Microsoft.AspNetCore.Builder.WebApplicationBuilderExtensions.html",
    "title": "Class WebApplicationBuilderExtensions | Mithril API Reference",
    "keywords": "Class WebApplicationBuilderExtensions Web application builder extensions Inheritance object WebApplicationBuilderExtensions Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Microsoft.AspNetCore.Builder Assembly: Mithril.Core.dll Syntax public static class WebApplicationBuilderExtensions Methods | Improve this Doc View Source SetupMithril(WebApplicationBuilder?) Sets up mithril framework and gets the system ready for use. Declaration public static WebApplication? SetupMithril(this WebApplicationBuilder? webApplicationBuilder) Parameters Type Name Description WebApplicationBuilder webApplicationBuilder The web application builder. Returns Type Description WebApplication The web application."
  },
  "api/Microsoft.AspNetCore.Builder.html": {
    "href": "api/Microsoft.AspNetCore.Builder.html",
    "title": "Namespace Microsoft.AspNetCore.Builder | Mithril API Reference",
    "keywords": "Namespace Microsoft.AspNetCore.Builder Classes WebApplicationBuilderExtensions Web application builder extensions"
  },
  "api/Microsoft.Extensions.DependencyInjection.IMvcBuilderExtensions.html": {
    "href": "api/Microsoft.Extensions.DependencyInjection.IMvcBuilderExtensions.html",
    "title": "Class IMvcBuilderExtensions | Mithril API Reference",
    "keywords": "Class IMvcBuilderExtensions IMvcBuilder extensions Inheritance object IMvcBuilderExtensions Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Microsoft.Extensions.DependencyInjection Assembly: Mithril.Core.dll Syntax public static class IMvcBuilderExtensions Methods | Improve this Doc View Source AddCspMediaType(IMvcBuilder?) Adds the CSP media type. Declaration public static IMvcBuilder? AddCspMediaType(this IMvcBuilder? mvcBuilder) Parameters Type Name Description IMvcBuilder mvcBuilder The MVC builder. Returns Type Description IMvcBuilder The MVC builder"
  },
  "api/Microsoft.Extensions.DependencyInjection.html": {
    "href": "api/Microsoft.Extensions.DependencyInjection.html",
    "title": "Namespace Microsoft.Extensions.DependencyInjection | Mithril API Reference",
    "keywords": "Namespace Microsoft.Extensions.DependencyInjection Classes IMvcBuilderExtensions IMvcBuilder extensions"
  },
  "api/Mithril.API.Abstractions.Attributes.ApiAllowAnonymousAttribute.html": {
    "href": "api/Mithril.API.Abstractions.Attributes.ApiAllowAnonymousAttribute.html",
    "title": "Class ApiAllowAnonymousAttribute | Mithril API Reference",
    "keywords": "Class ApiAllowAnonymousAttribute Allow anonymous access attribute Inheritance object Attribute ApiAllowAnonymousAttribute Inherited Members Attribute.Equals(object) Attribute.GetCustomAttribute(Assembly, Type) Attribute.GetCustomAttribute(Assembly, Type, bool) Attribute.GetCustomAttribute(MemberInfo, Type) Attribute.GetCustomAttribute(MemberInfo, Type, bool) Attribute.GetCustomAttribute(Module, Type) Attribute.GetCustomAttribute(Module, Type, bool) Attribute.GetCustomAttribute(ParameterInfo, Type) Attribute.GetCustomAttribute(ParameterInfo, Type, bool) Attribute.GetCustomAttributes(Assembly) Attribute.GetCustomAttributes(Assembly, bool) Attribute.GetCustomAttributes(Assembly, Type) Attribute.GetCustomAttributes(Assembly, Type, bool) Attribute.GetCustomAttributes(MemberInfo) Attribute.GetCustomAttributes(MemberInfo, bool) Attribute.GetCustomAttributes(MemberInfo, Type) Attribute.GetCustomAttributes(MemberInfo, Type, bool) Attribute.GetCustomAttributes(Module) Attribute.GetCustomAttributes(Module, bool) Attribute.GetCustomAttributes(Module, Type) Attribute.GetCustomAttributes(Module, Type, bool) Attribute.GetCustomAttributes(ParameterInfo) Attribute.GetCustomAttributes(ParameterInfo, bool) Attribute.GetCustomAttributes(ParameterInfo, Type) Attribute.GetCustomAttributes(ParameterInfo, Type, bool) Attribute.GetHashCode() Attribute.IsDefaultAttribute() Attribute.IsDefined(Assembly, Type) Attribute.IsDefined(Assembly, Type, bool) Attribute.IsDefined(MemberInfo, Type) Attribute.IsDefined(MemberInfo, Type, bool) Attribute.IsDefined(Module, Type) Attribute.IsDefined(Module, Type, bool) Attribute.IsDefined(ParameterInfo, Type) Attribute.IsDefined(ParameterInfo, Type, bool) Attribute.Match(object) Attribute.TypeId object.Equals(object, object) object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Mithril.API.Abstractions.Attributes Assembly: Mithril.API.Abstractions.dll Syntax [AttributeUsage(AttributeTargets.Class|AttributeTargets.Method|AttributeTargets.Property|AttributeTargets.Interface)] public class ApiAllowAnonymousAttribute : Attribute Extension Methods ExpandoObjectExtensions.ConvertToExpando<TEntity>(TEntity?) GenericExtensions.When<TObject>(TObject, bool, Func<TObject, TObject>) See Also Attribute"
  },
  "api/Mithril.API.Abstractions.Attributes.ApiAuthorizeAttribute.html": {
    "href": "api/Mithril.API.Abstractions.Attributes.ApiAuthorizeAttribute.html",
    "title": "Class ApiAuthorizeAttribute | Mithril API Reference",
    "keywords": "Class ApiAuthorizeAttribute API authorize Inheritance object Attribute ApiAuthorizeAttribute Inherited Members Attribute.Equals(object) Attribute.GetCustomAttribute(Assembly, Type) Attribute.GetCustomAttribute(Assembly, Type, bool) Attribute.GetCustomAttribute(MemberInfo, Type) Attribute.GetCustomAttribute(MemberInfo, Type, bool) Attribute.GetCustomAttribute(Module, Type) Attribute.GetCustomAttribute(Module, Type, bool) Attribute.GetCustomAttribute(ParameterInfo, Type) Attribute.GetCustomAttribute(ParameterInfo, Type, bool) Attribute.GetCustomAttributes(Assembly) Attribute.GetCustomAttributes(Assembly, bool) Attribute.GetCustomAttributes(Assembly, Type) Attribute.GetCustomAttributes(Assembly, Type, bool) Attribute.GetCustomAttributes(MemberInfo) Attribute.GetCustomAttributes(MemberInfo, bool) Attribute.GetCustomAttributes(MemberInfo, Type) Attribute.GetCustomAttributes(MemberInfo, Type, bool) Attribute.GetCustomAttributes(Module) Attribute.GetCustomAttributes(Module, bool) Attribute.GetCustomAttributes(Module, Type) Attribute.GetCustomAttributes(Module, Type, bool) Attribute.GetCustomAttributes(ParameterInfo) Attribute.GetCustomAttributes(ParameterInfo, bool) Attribute.GetCustomAttributes(ParameterInfo, Type) Attribute.GetCustomAttributes(ParameterInfo, Type, bool) Attribute.GetHashCode() Attribute.IsDefaultAttribute() Attribute.IsDefined(Assembly, Type) Attribute.IsDefined(Assembly, Type, bool) Attribute.IsDefined(MemberInfo, Type) Attribute.IsDefined(MemberInfo, Type, bool) Attribute.IsDefined(Module, Type) Attribute.IsDefined(Module, Type, bool) Attribute.IsDefined(ParameterInfo, Type) Attribute.IsDefined(ParameterInfo, Type, bool) Attribute.Match(object) Attribute.TypeId object.Equals(object, object) object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Mithril.API.Abstractions.Attributes Assembly: Mithril.API.Abstractions.dll Syntax [AttributeUsage(AttributeTargets.Class|AttributeTargets.Method|AttributeTargets.Property|AttributeTargets.Interface)] public class ApiAuthorizeAttribute : Attribute Constructors | Improve this Doc View Source ApiAuthorizeAttribute() Initializes a new instance of the ApiAuthorizeAttribute class. Declaration public ApiAuthorizeAttribute() See Also Attribute | Improve this Doc View Source ApiAuthorizeAttribute(string) Initializes a new instance of the ApiAuthorizeAttribute class. Declaration public ApiAuthorizeAttribute(string policyName) Parameters Type Name Description string policyName Name of the policy. See Also Attribute Properties | Improve this Doc View Source PolicyName Gets or sets the name of the policy. Declaration public string? PolicyName { get; } Property Value Type Description string The name of the policy. See Also Attribute | Improve this Doc View Source Roles Gets or sets the roles. Declaration public string? Roles { get; } Property Value Type Description string The roles. See Also Attribute Extension Methods ExpandoObjectExtensions.ConvertToExpando<TEntity>(TEntity?) GenericExtensions.When<TObject>(TObject, bool, Func<TObject, TObject>) See Also Attribute"
  },
  "api/Mithril.API.Abstractions.Attributes.ApiDepricationReasonAttribute.html": {
    "href": "api/Mithril.API.Abstractions.Attributes.ApiDepricationReasonAttribute.html",
    "title": "Class ApiDepricationReasonAttribute | Mithril API Reference",
    "keywords": "Class ApiDepricationReasonAttribute API Deprication attribute. Inheritance object Attribute ApiDepricationReasonAttribute Inherited Members Attribute.Equals(object) Attribute.GetCustomAttribute(Assembly, Type) Attribute.GetCustomAttribute(Assembly, Type, bool) Attribute.GetCustomAttribute(MemberInfo, Type) Attribute.GetCustomAttribute(MemberInfo, Type, bool) Attribute.GetCustomAttribute(Module, Type) Attribute.GetCustomAttribute(Module, Type, bool) Attribute.GetCustomAttribute(ParameterInfo, Type) Attribute.GetCustomAttribute(ParameterInfo, Type, bool) Attribute.GetCustomAttributes(Assembly) Attribute.GetCustomAttributes(Assembly, bool) Attribute.GetCustomAttributes(Assembly, Type) Attribute.GetCustomAttributes(Assembly, Type, bool) Attribute.GetCustomAttributes(MemberInfo) Attribute.GetCustomAttributes(MemberInfo, bool) Attribute.GetCustomAttributes(MemberInfo, Type) Attribute.GetCustomAttributes(MemberInfo, Type, bool) Attribute.GetCustomAttributes(Module) Attribute.GetCustomAttributes(Module, bool) Attribute.GetCustomAttributes(Module, Type) Attribute.GetCustomAttributes(Module, Type, bool) Attribute.GetCustomAttributes(ParameterInfo) Attribute.GetCustomAttributes(ParameterInfo, bool) Attribute.GetCustomAttributes(ParameterInfo, Type) Attribute.GetCustomAttributes(ParameterInfo, Type, bool) Attribute.GetHashCode() Attribute.IsDefaultAttribute() Attribute.IsDefined(Assembly, Type) Attribute.IsDefined(Assembly, Type, bool) Attribute.IsDefined(MemberInfo, Type) Attribute.IsDefined(MemberInfo, Type, bool) Attribute.IsDefined(Module, Type) Attribute.IsDefined(Module, Type, bool) Attribute.IsDefined(ParameterInfo, Type) Attribute.IsDefined(ParameterInfo, Type, bool) Attribute.Match(object) Attribute.TypeId object.Equals(object, object) object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Mithril.API.Abstractions.Attributes Assembly: Mithril.API.Abstractions.dll Syntax [AttributeUsage(AttributeTargets.Class|AttributeTargets.Method|AttributeTargets.Property|AttributeTargets.Interface)] public class ApiDepricationReasonAttribute : Attribute Constructors | Improve this Doc View Source ApiDepricationReasonAttribute() Initializes a new instance of the ApiDepricationReasonAttribute class. Declaration public ApiDepricationReasonAttribute() See Also Attribute | Improve this Doc View Source ApiDepricationReasonAttribute(string) Initializes a new instance of the ApiDepricationReasonAttribute class. Declaration public ApiDepricationReasonAttribute(string depricationReason) Parameters Type Name Description string depricationReason The deprication reason. See Also Attribute Properties | Improve this Doc View Source DepricationReason Gets the Deprication. Declaration public string? DepricationReason { get; } Property Value Type Description string The Deprication. See Also Attribute Extension Methods ExpandoObjectExtensions.ConvertToExpando<TEntity>(TEntity?) GenericExtensions.When<TObject>(TObject, bool, Func<TObject, TObject>) See Also Attribute"
  },
  "api/Mithril.API.Abstractions.Attributes.ApiDescriptionAttribute.html": {
    "href": "api/Mithril.API.Abstractions.Attributes.ApiDescriptionAttribute.html",
    "title": "Class ApiDescriptionAttribute | Mithril API Reference",
    "keywords": "Class ApiDescriptionAttribute API Description attribute. Inheritance object Attribute ApiDescriptionAttribute Inherited Members Attribute.Equals(object) Attribute.GetCustomAttribute(Assembly, Type) Attribute.GetCustomAttribute(Assembly, Type, bool) Attribute.GetCustomAttribute(MemberInfo, Type) Attribute.GetCustomAttribute(MemberInfo, Type, bool) Attribute.GetCustomAttribute(Module, Type) Attribute.GetCustomAttribute(Module, Type, bool) Attribute.GetCustomAttribute(ParameterInfo, Type) Attribute.GetCustomAttribute(ParameterInfo, Type, bool) Attribute.GetCustomAttributes(Assembly) Attribute.GetCustomAttributes(Assembly, bool) Attribute.GetCustomAttributes(Assembly, Type) Attribute.GetCustomAttributes(Assembly, Type, bool) Attribute.GetCustomAttributes(MemberInfo) Attribute.GetCustomAttributes(MemberInfo, bool) Attribute.GetCustomAttributes(MemberInfo, Type) Attribute.GetCustomAttributes(MemberInfo, Type, bool) Attribute.GetCustomAttributes(Module) Attribute.GetCustomAttributes(Module, bool) Attribute.GetCustomAttributes(Module, Type) Attribute.GetCustomAttributes(Module, Type, bool) Attribute.GetCustomAttributes(ParameterInfo) Attribute.GetCustomAttributes(ParameterInfo, bool) Attribute.GetCustomAttributes(ParameterInfo, Type) Attribute.GetCustomAttributes(ParameterInfo, Type, bool) Attribute.GetHashCode() Attribute.IsDefaultAttribute() Attribute.IsDefined(Assembly, Type) Attribute.IsDefined(Assembly, Type, bool) Attribute.IsDefined(MemberInfo, Type) Attribute.IsDefined(MemberInfo, Type, bool) Attribute.IsDefined(Module, Type) Attribute.IsDefined(Module, Type, bool) Attribute.IsDefined(ParameterInfo, Type) Attribute.IsDefined(ParameterInfo, Type, bool) Attribute.Match(object) Attribute.TypeId object.Equals(object, object) object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Mithril.API.Abstractions.Attributes Assembly: Mithril.API.Abstractions.dll Syntax [AttributeUsage(AttributeTargets.Class|AttributeTargets.Method|AttributeTargets.Property|AttributeTargets.Interface)] public class ApiDescriptionAttribute : Attribute Constructors | Improve this Doc View Source ApiDescriptionAttribute() Initializes a new instance of the ApiDescriptionAttribute class. Declaration public ApiDescriptionAttribute() See Also Attribute | Improve this Doc View Source ApiDescriptionAttribute(string) Initializes a new instance of the ApiDescriptionAttribute class. Declaration public ApiDescriptionAttribute(string description) Parameters Type Name Description string description The description. See Also Attribute Properties | Improve this Doc View Source Description Gets the description. Declaration public string? Description { get; } Property Value Type Description string The description. See Also Attribute Extension Methods ExpandoObjectExtensions.ConvertToExpando<TEntity>(TEntity?) GenericExtensions.When<TObject>(TObject, bool, Func<TObject, TObject>) See Also Attribute"
  },
  "api/Mithril.API.Abstractions.Attributes.ApiIgnoreAttribute.html": {
    "href": "api/Mithril.API.Abstractions.Attributes.ApiIgnoreAttribute.html",
    "title": "Class ApiIgnoreAttribute | Mithril API Reference",
    "keywords": "Class ApiIgnoreAttribute Used to signify that a property should be ignored by the API. Inheritance object Attribute ApiIgnoreAttribute Inherited Members Attribute.Equals(object) Attribute.GetCustomAttribute(Assembly, Type) Attribute.GetCustomAttribute(Assembly, Type, bool) Attribute.GetCustomAttribute(MemberInfo, Type) Attribute.GetCustomAttribute(MemberInfo, Type, bool) Attribute.GetCustomAttribute(Module, Type) Attribute.GetCustomAttribute(Module, Type, bool) Attribute.GetCustomAttribute(ParameterInfo, Type) Attribute.GetCustomAttribute(ParameterInfo, Type, bool) Attribute.GetCustomAttributes(Assembly) Attribute.GetCustomAttributes(Assembly, bool) Attribute.GetCustomAttributes(Assembly, Type) Attribute.GetCustomAttributes(Assembly, Type, bool) Attribute.GetCustomAttributes(MemberInfo) Attribute.GetCustomAttributes(MemberInfo, bool) Attribute.GetCustomAttributes(MemberInfo, Type) Attribute.GetCustomAttributes(MemberInfo, Type, bool) Attribute.GetCustomAttributes(Module) Attribute.GetCustomAttributes(Module, bool) Attribute.GetCustomAttributes(Module, Type) Attribute.GetCustomAttributes(Module, Type, bool) Attribute.GetCustomAttributes(ParameterInfo) Attribute.GetCustomAttributes(ParameterInfo, bool) Attribute.GetCustomAttributes(ParameterInfo, Type) Attribute.GetCustomAttributes(ParameterInfo, Type, bool) Attribute.GetHashCode() Attribute.IsDefaultAttribute() Attribute.IsDefined(Assembly, Type) Attribute.IsDefined(Assembly, Type, bool) Attribute.IsDefined(MemberInfo, Type) Attribute.IsDefined(MemberInfo, Type, bool) Attribute.IsDefined(Module, Type) Attribute.IsDefined(Module, Type, bool) Attribute.IsDefined(ParameterInfo, Type) Attribute.IsDefined(ParameterInfo, Type, bool) Attribute.Match(object) Attribute.TypeId object.Equals(object, object) object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Mithril.API.Abstractions.Attributes Assembly: Mithril.API.Abstractions.dll Syntax [AttributeUsage(AttributeTargets.Class|AttributeTargets.Method|AttributeTargets.Property)] public class ApiIgnoreAttribute : Attribute Extension Methods ExpandoObjectExtensions.ConvertToExpando<TEntity>(TEntity?) GenericExtensions.When<TObject>(TObject, bool, Func<TObject, TObject>) See Also Attribute"
  },
  "api/Mithril.API.Abstractions.Attributes.html": {
    "href": "api/Mithril.API.Abstractions.Attributes.html",
    "title": "Namespace Mithril.API.Abstractions.Attributes | Mithril API Reference",
    "keywords": "Namespace Mithril.API.Abstractions.Attributes Classes ApiAllowAnonymousAttribute Allow anonymous access attribute ApiAuthorizeAttribute API authorize ApiDepricationReasonAttribute API Deprication attribute. ApiDescriptionAttribute API Description attribute. ApiIgnoreAttribute Used to signify that a property should be ignored by the API."
  },
  "api/Mithril.API.Abstractions.Commands.BaseClasses.CommandBaseClass-1.html": {
    "href": "api/Mithril.API.Abstractions.Commands.BaseClasses.CommandBaseClass-1.html",
    "title": "Class CommandBaseClass<TCommand> | Mithril API Reference",
    "keywords": "Class CommandBaseClass<TCommand> Command base class Inheritance object ModelBase<TCommand> CommandBaseClass<TCommand> SaveModelCommand SendMessageCommand ToggleFeatureCommand LogCommand SetThemeCommand Implements IModel<TCommand> IEquatable<IModel<TCommand>> IComparable IComparable<TCommand> IEquatable<ModelBase<TCommand>> ICommand IEquatable<ICommand> IModel IEquatable<IModel> IEquatable<CommandBaseClass<TCommand>> Inherited Members ModelBase<TCommand>.Active ModelBase<TCommand>.Creator ModelBase<TCommand>.DateCreated ModelBase<TCommand>.DateModified ModelBase<TCommand>.ID ModelBase<TCommand>.Modifier ModelBase<TCommand>.TenantID ModelBase<TCommand>.All(IDataService) ModelBase<TCommand>.AllActive(IDataService) ModelBase<TCommand>.AllInactive(IDataService) ModelBase<TCommand>.Load(long, IDataService) ModelBase<TCommand>.Query(IDataService) ModelBase<TCommand>.CanBeModifiedBy(ClaimsPrincipal) ModelBase<TCommand>.CanBeViewedBy(ClaimsPrincipal) ModelBase<TCommand>.CompareTo(object) ModelBase<TCommand>.CompareTo(TCommand) ModelBase<TCommand>.DeleteAsync(IDataService, ClaimsPrincipal, bool) ModelBase<TCommand>.Equals(IModel) ModelBase<TCommand>.Equals(IModel<TCommand>) ModelBase<TCommand>.Equals(ModelBase<TCommand>) ModelBase<TCommand>.SaveAsync(IDataService, ClaimsPrincipal) ModelBase<TCommand>.SetupObject(IDataService, ClaimsPrincipal) ModelBase<TCommand>.SetupObject(IDataService, IUser) ModelBase<TCommand>.SetupObjectAndReturn(IDataService, ClaimsPrincipal) object.Equals(object, object) object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Namespace: Mithril.API.Abstractions.Commands.BaseClasses Assembly: Mithril.API.Abstractions.dll Syntax public abstract class CommandBaseClass<TCommand> : ModelBase<TCommand>, IModel<TCommand>, IEquatable<IModel<TCommand>>, IComparable, IComparable<TCommand>, IEquatable<ModelBase<TCommand>>, ICommand, IEquatable<ICommand>, IModel, IEquatable<IModel>, IEquatable<CommandBaseClass<TCommand>> where TCommand : CommandBaseClass<TCommand>, new() Type Parameters Name Description TCommand The type of the command. Constructors | Improve this Doc View Source CommandBaseClass() Initializes a new instance of the CommandBaseClass<TCommand> class. Declaration protected CommandBaseClass() See Also ModelBase<TClass> ICommand Properties | Improve this Doc View Source Name Gets the name. Declaration public string Name { get; } Property Value Type Description string The name. See Also ModelBase<TClass> ICommand Methods | Improve this Doc View Source CompareTo(CommandBaseClass<TCommand>?) Compares the object to another object Declaration public int CompareTo(CommandBaseClass<TCommand>? other) Parameters Type Name Description CommandBaseClass<TCommand> other Object to compare to Returns Type Description int 0 if they are equal, -1 if this is smaller, 1 if it is larger See Also ModelBase<TClass> ICommand | Improve this Doc View Source Equals(CommandBaseClass<TCommand>?) Indicates whether the current object is equal to another object of the same type. Declaration public bool Equals(CommandBaseClass<TCommand>? other) Parameters Type Name Description CommandBaseClass<TCommand> other An object to compare with this object. Returns Type Description bool true if the current object is equal to the other parameter; otherwise, false. See Also ModelBase<TClass> ICommand | Improve this Doc View Source Equals(ICommand?) Indicates whether the current object is equal to another object of the same type. Declaration public bool Equals(ICommand? other) Parameters Type Name Description ICommand other An object to compare with this object. Returns Type Description bool true if the current object is equal to the other parameter; otherwise, false. See Also ModelBase<TClass> ICommand | Improve this Doc View Source Equals(object?) Determines whether the specified object, is equal to this instance. Declaration public override bool Equals(object? obj) Parameters Type Name Description object obj The object to compare with this instance. Returns Type Description bool true if the specified object is equal to this instance; otherwise, false. Overrides ModelBase<TCommand>.Equals(object) See Also ModelBase<TClass> ICommand | Improve this Doc View Source GetHashCode() Returns a hash code for this instance. Declaration public override int GetHashCode() Returns Type Description int A hash code for this instance, suitable for use in hashing algorithms and data structures like a hash table. Overrides Mithril.Data.Abstractions.BaseClasses.ModelBase<TCommand>.GetHashCode() See Also ModelBase<TClass> ICommand | Improve this Doc View Source ToString() Returns a string that represents this instance. Declaration public override string ToString() Returns Type Description string A string that represents this instance. Overrides object.ToString() See Also ModelBase<TClass> ICommand Operators | Improve this Doc View Source operator ==(CommandBaseClass<TCommand>, CommandBaseClass<TCommand>) Implements the operator ==. Declaration public static bool operator ==(CommandBaseClass<TCommand> first, CommandBaseClass<TCommand> second) Parameters Type Name Description CommandBaseClass<TCommand> first The first. CommandBaseClass<TCommand> second The second. Returns Type Description bool The result of the operator. See Also ModelBase<TClass> ICommand | Improve this Doc View Source operator >(CommandBaseClass<TCommand>, CommandBaseClass<TCommand>) Implements the operator >. Declaration public static bool operator >(CommandBaseClass<TCommand> left, CommandBaseClass<TCommand> right) Parameters Type Name Description CommandBaseClass<TCommand> left The left. CommandBaseClass<TCommand> right The right. Returns Type Description bool The result of the operator. See Also ModelBase<TClass> ICommand | Improve this Doc View Source operator >=(CommandBaseClass<TCommand>, CommandBaseClass<TCommand>) Implements the operator >=. Declaration public static bool operator >=(CommandBaseClass<TCommand> left, CommandBaseClass<TCommand> right) Parameters Type Name Description CommandBaseClass<TCommand> left The left. CommandBaseClass<TCommand> right The right. Returns Type Description bool The result of the operator. See Also ModelBase<TClass> ICommand | Improve this Doc View Source operator !=(CommandBaseClass<TCommand>, CommandBaseClass<TCommand>) Implements the operator !=. Declaration public static bool operator !=(CommandBaseClass<TCommand> left, CommandBaseClass<TCommand> right) Parameters Type Name Description CommandBaseClass<TCommand> left The left. CommandBaseClass<TCommand> right The right. Returns Type Description bool The result of the operator. See Also ModelBase<TClass> ICommand | Improve this Doc View Source operator <(CommandBaseClass<TCommand>, CommandBaseClass<TCommand>) Implements the operator <. Declaration public static bool operator <(CommandBaseClass<TCommand> left, CommandBaseClass<TCommand> right) Parameters Type Name Description CommandBaseClass<TCommand> left The left. CommandBaseClass<TCommand> right The right. Returns Type Description bool The result of the operator. See Also ModelBase<TClass> ICommand | Improve this Doc View Source operator <=(CommandBaseClass<TCommand>, CommandBaseClass<TCommand>) Implements the operator <=. Declaration public static bool operator <=(CommandBaseClass<TCommand> left, CommandBaseClass<TCommand> right) Parameters Type Name Description CommandBaseClass<TCommand> left The left. CommandBaseClass<TCommand> right The right. Returns Type Description bool The result of the operator. See Also ModelBase<TClass> ICommand Implements IModel<TClass> IEquatable<T> IComparable IComparable<T> IEquatable<T> ICommand IEquatable<T> IModel IEquatable<T> IEquatable<T> Extension Methods ExpandoObjectExtensions.ConvertToExpando<TEntity>(TEntity?) GenericExtensions.When<TObject>(TObject, bool, Func<TObject, TObject>) See Also ModelBase<TClass> ICommand"
  },
  "api/Mithril.API.Abstractions.Commands.BaseClasses.CommandHandlerBaseClass-2.html": {
    "href": "api/Mithril.API.Abstractions.Commands.BaseClasses.CommandHandlerBaseClass-2.html",
    "title": "Class CommandHandlerBaseClass<TCommand, TViewModel> | Mithril API Reference",
    "keywords": "Class CommandHandlerBaseClass<TCommand, TViewModel> Command handler base class Inheritance object CommandHandlerBaseClass<TCommand, TViewModel> SaveModelCommandHandler SendMessageCommandHandler ToggleFeatureCommandHandler CSPLogCommandHandler LogCommandHandler SetThemeCommandHandler Implements ICommandHandler<TViewModel> ICommandHandler Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Mithril.API.Abstractions.Commands.BaseClasses Assembly: Mithril.API.Abstractions.dll Syntax public abstract class CommandHandlerBaseClass<TCommand, TViewModel> : ICommandHandler<TViewModel>, ICommandHandler where TCommand : class Type Parameters Name Description TCommand The type of the command. TViewModel The type of the view model. Constructors | Improve this Doc View Source CommandHandlerBaseClass(ILogger?, IFeatureManager?) Initializes a new instance of the CommandHandlerBaseClass<TCommand, TViewModel> class. Declaration protected CommandHandlerBaseClass(ILogger? logger, IFeatureManager? featureManager) Parameters Type Name Description ILogger logger IFeatureManager featureManager See Also ICommandHandler<TViewModel> Properties | Improve this Doc View Source CommandName Gets the command type accepted. Declaration public virtual string CommandName { get; } Property Value Type Description string The command type accepted. See Also ICommandHandler<TViewModel> | Improve this Doc View Source ContentTypeAccepts Gets the content type accepted by command handler. Declaration public virtual string[] ContentTypeAccepts { get; } Property Value Type Description string[] The content type accepted by command handler. See Also ICommandHandler<TViewModel> | Improve this Doc View Source FeatureManager Gets the feature manager. Declaration protected IFeatureManager? FeatureManager { get; } Property Value Type Description IFeatureManager The feature manager. See Also ICommandHandler<TViewModel> | Improve this Doc View Source Features Gets the features associated with this command. Declaration public virtual IFeature[] Features { get; } Property Value Type Description IFeature[] The features associated with this command. See Also ICommandHandler<TViewModel> | Improve this Doc View Source Logger Gets the logger. Declaration protected ILogger? Logger { get; } Property Value Type Description ILogger The logger. See Also ICommandHandler<TViewModel> | Improve this Doc View Source Tags Gets the tags (Used by OpenAPI, etc). Declaration public virtual string[] Tags { get; } Property Value Type Description string[] The tags (Used by OpenAPI, etc). See Also ICommandHandler<TViewModel> | Improve this Doc View Source Version Gets the version. Declaration public virtual string? Version { get; } Property Value Type Description string The version. See Also ICommandHandler<TViewModel> | Improve this Doc View Source ViewModelType Gets the type of the view model it accepts. Declaration public Type ViewModelType { get; } Property Value Type Description Type The type of the view model it accepts. See Also ICommandHandler<TViewModel> Methods | Improve this Doc View Source CanHandle(ICommand) Determines whether this instance can handle the specified command. Declaration public virtual bool CanHandle(ICommand command) Parameters Type Name Description ICommand command The command. Returns Type Description bool true if this instance can handle the specified command; otherwise, false. See Also ICommandHandler<TViewModel> | Improve this Doc View Source CreateAsync(TViewModel?, ClaimsPrincipal) Creates the specified value. Declaration public abstract ValueTask<CommandCreationResult?> CreateAsync(TViewModel? value, ClaimsPrincipal user) Parameters Type Name Description TViewModel value The value. ClaimsPrincipal user The user. Returns Type Description ValueTask<CommandCreationResult> A command value converted from the view model. See Also ICommandHandler<TViewModel> | Improve this Doc View Source HandleCommandAsync(params ICommand[]) Handles the Command. Declaration public Task<IEvent[]> HandleCommandAsync(params ICommand[] arg) Parameters Type Name Description ICommand[] arg The argument. Returns Type Description Task<IEvent[]> Any events that are spawned by the command. See Also ICommandHandler<TViewModel> | Improve this Doc View Source HandleCommandAsync(TCommand?[]?) Handles the command. Declaration protected abstract Task<IEvent[]> HandleCommandAsync(TCommand?[]? args) Parameters Type Name Description TCommand[] args The arguments. Returns Type Description Task<IEvent[]> The events generated by the command. See Also ICommandHandler<TViewModel> | Improve this Doc View Source IsFeatureEnabled() Determines whether the associated features are enabled. Declaration protected bool IsFeatureEnabled() Returns Type Description bool true if all features are enabled; otherwise, false. See Also ICommandHandler<TViewModel> Implements ICommandHandler<TViewModel> ICommandHandler Extension Methods ExpandoObjectExtensions.ConvertToExpando<TEntity>(TEntity?) GenericExtensions.When<TObject>(TObject, bool, Func<TObject, TObject>) See Also ICommandHandler<TViewModel>"
  },
  "api/Mithril.API.Abstractions.Commands.BaseClasses.EventBaseClass-1.html": {
    "href": "api/Mithril.API.Abstractions.Commands.BaseClasses.EventBaseClass-1.html",
    "title": "Class EventBaseClass<TEvent> | Mithril API Reference",
    "keywords": "Class EventBaseClass<TEvent> Event base class Inheritance object ModelBase<TEvent> EventBaseClass<TEvent> ModelSavedEvent MessageSentEvent FeatureToggledEvent ThemeChangedEvent Implements IModel<TEvent> IEquatable<IModel<TEvent>> IComparable IComparable<TEvent> IEquatable<ModelBase<TEvent>> IEvent IEquatable<IEvent> IModel IEquatable<IModel> IEquatable<EventBaseClass<TEvent>> Inherited Members ModelBase<TEvent>.Active ModelBase<TEvent>.Creator ModelBase<TEvent>.DateCreated ModelBase<TEvent>.DateModified ModelBase<TEvent>.ID ModelBase<TEvent>.Modifier ModelBase<TEvent>.TenantID ModelBase<TEvent>.All(IDataService) ModelBase<TEvent>.AllActive(IDataService) ModelBase<TEvent>.AllInactive(IDataService) ModelBase<TEvent>.Load(long, IDataService) ModelBase<TEvent>.Query(IDataService) ModelBase<TEvent>.CanBeModifiedBy(ClaimsPrincipal) ModelBase<TEvent>.CanBeViewedBy(ClaimsPrincipal) ModelBase<TEvent>.CompareTo(object) ModelBase<TEvent>.CompareTo(TEvent) ModelBase<TEvent>.DeleteAsync(IDataService, ClaimsPrincipal, bool) ModelBase<TEvent>.Equals(IModel) ModelBase<TEvent>.Equals(IModel<TEvent>) ModelBase<TEvent>.Equals(ModelBase<TEvent>) ModelBase<TEvent>.SaveAsync(IDataService, ClaimsPrincipal) ModelBase<TEvent>.SetupObject(IDataService, ClaimsPrincipal) ModelBase<TEvent>.SetupObject(IDataService, IUser) ModelBase<TEvent>.SetupObjectAndReturn(IDataService, ClaimsPrincipal) object.Equals(object, object) object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Namespace: Mithril.API.Abstractions.Commands.BaseClasses Assembly: Mithril.API.Abstractions.dll Syntax public abstract class EventBaseClass<TEvent> : ModelBase<TEvent>, IModel<TEvent>, IEquatable<IModel<TEvent>>, IComparable, IComparable<TEvent>, IEquatable<ModelBase<TEvent>>, IEvent, IEquatable<IEvent>, IModel, IEquatable<IModel>, IEquatable<EventBaseClass<TEvent>> where TEvent : EventBaseClass<TEvent>, new() Type Parameters Name Description TEvent The type of the event. Constructors | Improve this Doc View Source EventBaseClass() Initializes a new instance of the EventBaseClass<TEvent> class. Declaration protected EventBaseClass() See Also ModelBase<TClass> IEvent Properties | Improve this Doc View Source Name Gets the name. Declaration public string Name { get; } Property Value Type Description string The name. See Also ModelBase<TClass> IEvent | Improve this Doc View Source RetryCount Gets or sets the retry count. Declaration public int RetryCount { get; set; } Property Value Type Description int The retry count. See Also ModelBase<TClass> IEvent | Improve this Doc View Source State Gets or sets the state. Declaration [MaxLength(20)] public string? State { get; set; } Property Value Type Description string The state. See Also ModelBase<TClass> IEvent Methods | Improve this Doc View Source CanRun() Determines whether this instance can run. Declaration public virtual bool CanRun() Returns Type Description bool true if this instance can run; otherwise, false. See Also ModelBase<TClass> IEvent | Improve this Doc View Source CompareTo(EventBaseClass<TEvent>?) Compares the object to another object Declaration public int CompareTo(EventBaseClass<TEvent>? other) Parameters Type Name Description EventBaseClass<TEvent> other Object to compare to Returns Type Description int 0 if they are equal, -1 if this is smaller, 1 if it is larger See Also ModelBase<TClass> IEvent | Improve this Doc View Source Equals(EventBaseClass<TEvent>?) Indicates whether the current object is equal to another object of the same type. Declaration public bool Equals(EventBaseClass<TEvent>? other) Parameters Type Name Description EventBaseClass<TEvent> other An object to compare with this object. Returns Type Description bool true if the current object is equal to the other parameter; otherwise, false. See Also ModelBase<TClass> IEvent | Improve this Doc View Source Equals(IEvent?) Indicates whether the current object is equal to another object of the same type. Declaration public bool Equals(IEvent? other) Parameters Type Name Description IEvent other An object to compare with this object. Returns Type Description bool true if the current object is equal to the other parameter; otherwise, false. See Also ModelBase<TClass> IEvent | Improve this Doc View Source Equals(object?) Determines whether the specified object, is equal to this instance. Declaration public override bool Equals(object? obj) Parameters Type Name Description object obj The object to compare with this instance. Returns Type Description bool true if the specified object is equal to this instance; otherwise, false. Overrides ModelBase<TEvent>.Equals(object) See Also ModelBase<TClass> IEvent | Improve this Doc View Source GetData() Gets the data within the event. Declaration public abstract ExpandoObject GetData() Returns Type Description ExpandoObject The data from the event. See Also ModelBase<TClass> IEvent | Improve this Doc View Source GetHashCode() Returns a hash code for this instance. Declaration public override int GetHashCode() Returns Type Description int A hash code for this instance, suitable for use in hashing algorithms and data structures like a hash table. Overrides Mithril.Data.Abstractions.BaseClasses.ModelBase<TEvent>.GetHashCode() See Also ModelBase<TClass> IEvent | Improve this Doc View Source GetSchema() Gets the schema. Declaration public abstract string GetSchema() Returns Type Description string The data schema. See Also ModelBase<TClass> IEvent | Improve this Doc View Source ToString() Returns a string that represents this instance. Declaration public override string ToString() Returns Type Description string A string that represents this instance. Overrides object.ToString() See Also ModelBase<TClass> IEvent Operators | Improve this Doc View Source operator ==(EventBaseClass<TEvent>, EventBaseClass<TEvent>) Implements the operator ==. Declaration public static bool operator ==(EventBaseClass<TEvent> first, EventBaseClass<TEvent> second) Parameters Type Name Description EventBaseClass<TEvent> first The first. EventBaseClass<TEvent> second The second. Returns Type Description bool The result of the operator. See Also ModelBase<TClass> IEvent | Improve this Doc View Source operator >(EventBaseClass<TEvent>, EventBaseClass<TEvent>) Implements the operator >. Declaration public static bool operator >(EventBaseClass<TEvent> left, EventBaseClass<TEvent> right) Parameters Type Name Description EventBaseClass<TEvent> left The left. EventBaseClass<TEvent> right The right. Returns Type Description bool The result of the operator. See Also ModelBase<TClass> IEvent | Improve this Doc View Source operator >=(EventBaseClass<TEvent>, EventBaseClass<TEvent>) Implements the operator >=. Declaration public static bool operator >=(EventBaseClass<TEvent> left, EventBaseClass<TEvent> right) Parameters Type Name Description EventBaseClass<TEvent> left The left. EventBaseClass<TEvent> right The right. Returns Type Description bool The result of the operator. See Also ModelBase<TClass> IEvent | Improve this Doc View Source operator !=(EventBaseClass<TEvent>, EventBaseClass<TEvent>) Implements the operator !=. Declaration public static bool operator !=(EventBaseClass<TEvent> left, EventBaseClass<TEvent> right) Parameters Type Name Description EventBaseClass<TEvent> left The left. EventBaseClass<TEvent> right The right. Returns Type Description bool The result of the operator. See Also ModelBase<TClass> IEvent | Improve this Doc View Source operator <(EventBaseClass<TEvent>, EventBaseClass<TEvent>) Implements the operator <. Declaration public static bool operator <(EventBaseClass<TEvent> left, EventBaseClass<TEvent> right) Parameters Type Name Description EventBaseClass<TEvent> left The left. EventBaseClass<TEvent> right The right. Returns Type Description bool The result of the operator. See Also ModelBase<TClass> IEvent | Improve this Doc View Source operator <=(EventBaseClass<TEvent>, EventBaseClass<TEvent>) Implements the operator <=. Declaration public static bool operator <=(EventBaseClass<TEvent> left, EventBaseClass<TEvent> right) Parameters Type Name Description EventBaseClass<TEvent> left The left. EventBaseClass<TEvent> right The right. Returns Type Description bool The result of the operator. See Also ModelBase<TClass> IEvent Implements IModel<TClass> IEquatable<T> IComparable IComparable<T> IEquatable<T> IEvent IEquatable<T> IModel IEquatable<T> IEquatable<T> Extension Methods ExpandoObjectExtensions.ConvertToExpando<TEntity>(TEntity?) GenericExtensions.When<TObject>(TObject, bool, Func<TObject, TObject>) See Also ModelBase<TClass> IEvent"
  },
  "api/Mithril.API.Abstractions.Commands.BaseClasses.EventHandlerBaseClass-2.html": {
    "href": "api/Mithril.API.Abstractions.Commands.BaseClasses.EventHandlerBaseClass-2.html",
    "title": "Class EventHandlerBaseClass<THandler, TEvent> | Mithril API Reference",
    "keywords": "Class EventHandlerBaseClass<THandler, TEvent> Event handler base class Inheritance object EventHandlerBaseClass<THandler, TEvent> MessageSentDefaultEventHandler ThemeChangedEventDefaultHandler Implements IEventHandler Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Mithril.API.Abstractions.Commands.BaseClasses Assembly: Mithril.API.Abstractions.dll Syntax public abstract class EventHandlerBaseClass<THandler, TEvent> : IEventHandler where THandler : EventHandlerBaseClass<THandler, TEvent> where TEvent : IEvent Type Parameters Name Description THandler TEvent Constructors | Improve this Doc View Source EventHandlerBaseClass(ILogger<THandler>?, IFeatureManager?) Initializes a new instance of the EventHandlerBaseClass<THandler, TEvent> class. Declaration protected EventHandlerBaseClass(ILogger<THandler>? logger, IFeatureManager? featureManager) Parameters Type Name Description ILogger<THandler> logger The logger. IFeatureManager featureManager The feature manager. See Also IEventHandler Properties | Improve this Doc View Source FeatureManager Gets the feature manager. Declaration protected IFeatureManager? FeatureManager { get; } Property Value Type Description IFeatureManager The feature manager. See Also IEventHandler | Improve this Doc View Source Features Gets the features associated with this command. Declaration public virtual IFeature[] Features { get; } Property Value Type Description IFeature[] The features associated with this command. See Also IEventHandler | Improve this Doc View Source Logger Gets the logger. Declaration protected ILogger<THandler>? Logger { get; } Property Value Type Description ILogger<THandler> The logger. See Also IEventHandler | Improve this Doc View Source Name Gets the name. Declaration public virtual string Name { get; } Property Value Type Description string The name. See Also IEventHandler Methods | Improve this Doc View Source Accepts(IEvent) Determines if this event handler accepts the event. Declaration public virtual bool Accepts(IEvent arg) Parameters Type Name Description IEvent arg The argument. Returns Type Description bool True if it accepts it, false otherwise. See Also IEventHandler | Improve this Doc View Source Handle(IEvent) Handles the event. Declaration public EventResult Handle(IEvent arg) Parameters Type Name Description IEvent arg The argument. Returns Type Description EventResult The result from processing the event. See Also IEventHandler | Improve this Doc View Source Handle(TEvent) Handles the specified argument. Declaration protected abstract EventResult Handle(TEvent arg) Parameters Type Name Description TEvent arg The argument. Returns Type Description EventResult The result from processing the event. See Also IEventHandler | Improve this Doc View Source IsFeatureEnabled() Determines whether the associated features are enabled. Declaration protected bool IsFeatureEnabled() Returns Type Description bool true if all features are enabled; otherwise, false. See Also IEventHandler Implements IEventHandler Extension Methods ExpandoObjectExtensions.ConvertToExpando<TEntity>(TEntity?) GenericExtensions.When<TObject>(TObject, bool, Func<TObject, TObject>) See Also IEventHandler"
  },
  "api/Mithril.API.Abstractions.Commands.BaseClasses.html": {
    "href": "api/Mithril.API.Abstractions.Commands.BaseClasses.html",
    "title": "Namespace Mithril.API.Abstractions.Commands.BaseClasses | Mithril API Reference",
    "keywords": "Namespace Mithril.API.Abstractions.Commands.BaseClasses Classes CommandBaseClass<TCommand> Command base class CommandHandlerBaseClass<TCommand, TViewModel> Command handler base class EventBaseClass<TEvent> Event base class EventHandlerBaseClass<THandler, TEvent> Event handler base class"
  },
  "api/Mithril.API.Abstractions.Commands.CommandCreationResult.html": {
    "href": "api/Mithril.API.Abstractions.Commands.CommandCreationResult.html",
    "title": "Class CommandCreationResult | Mithril API Reference",
    "keywords": "Class CommandCreationResult Command creation result. Inheritance object GenericResult CommandCreationResult Implements IEquatable<GenericResult> IEquatable<CommandCreationResult> Inherited Members GenericResult.Message GenericResult.Exception GenericResult.IsErrorState object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Mithril.API.Abstractions.Commands Assembly: Mithril.API.Abstractions.dll Syntax public record CommandCreationResult : GenericResult, IEquatable<GenericResult>, IEquatable<CommandCreationResult> Constructors | Improve this Doc View Source CommandCreationResult(ICommand?, Exception?, string?, int) Command creation result. Declaration public CommandCreationResult(ICommand? Command, Exception? Exception = null, string? ResultText = \"Success\", int ReturnCode = 200) Parameters Type Name Description ICommand Command Exception Exception string ResultText int ReturnCode See Also IEquatable<T> Properties | Improve this Doc View Source Command Declaration public ICommand? Command { get; init; } Property Value Type Description ICommand See Also IEquatable<T> | Improve this Doc View Source ResultText Declaration public string? ResultText { get; init; } Property Value Type Description string See Also IEquatable<T> | Improve this Doc View Source ReturnCode Declaration public int ReturnCode { get; init; } Property Value Type Description int See Also IEquatable<T> Implements IEquatable<T> IEquatable<T> Extension Methods ExpandoObjectExtensions.ConvertToExpando<TEntity>(TEntity?) GenericExtensions.When<TObject>(TObject, bool, Func<TObject, TObject>) See Also IEquatable<T>"
  },
  "api/Mithril.API.Abstractions.Commands.Enums.EventStateTypes.html": {
    "href": "api/Mithril.API.Abstractions.Commands.Enums.EventStateTypes.html",
    "title": "Class EventStateTypes | Mithril API Reference",
    "keywords": "Class EventStateTypes Event state types Inheritance object StringEnumBaseClass<EventStateTypes> LookUpEnumBaseClass<EventStateTypes> EventStateTypes Inherited Members LookUpEnumBaseClass<EventStateTypes>.Icon LookUpEnumBaseClass<EventStateTypes>.NameMapping LookUpEnumBaseClass<EventStateTypes>.GetEnum(string) LookUpEnumBaseClass<EventStateTypes>.GetEnums() StringEnumBaseClass<EventStateTypes>.ToStringEnumBaseClass(string) StringEnumBaseClass<EventStateTypes>.ToString() StringEnumBaseClass<EventStateTypes>.Name object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Namespace: Mithril.API.Abstractions.Commands.Enums Assembly: Mithril.API.Abstractions.dll Syntax public class EventStateTypes : LookUpEnumBaseClass<EventStateTypes> Constructors | Improve this Doc View Source EventStateTypes() Initializes a new instance of the UserClaimTypes class. Declaration public EventStateTypes() See Also StringEnumBaseClass<TClass> | Improve this Doc View Source EventStateTypes(string) Initializes a new instance of the UserClaimTypes class. Declaration public EventStateTypes(string name) Parameters Type Name Description string name The name. See Also StringEnumBaseClass<TClass> Properties | Improve this Doc View Source Completed Gets the completed. Declaration public static EventStateTypes Completed { get; } Property Value Type Description EventStateTypes The completed. See Also StringEnumBaseClass<TClass> | Improve this Doc View Source Created Gets the created state. Declaration public static EventStateTypes Created { get; } Property Value Type Description EventStateTypes The created state. See Also StringEnumBaseClass<TClass> | Improve this Doc View Source Error Gets the error state. Declaration public static EventStateTypes Error { get; } Property Value Type Description EventStateTypes The error state. See Also StringEnumBaseClass<TClass> | Improve this Doc View Source Retrying Gets the retrying state. Declaration public static EventStateTypes Retrying { get; } Property Value Type Description EventStateTypes The retrying state. See Also StringEnumBaseClass<TClass> Extension Methods ExpandoObjectExtensions.ConvertToExpando<TEntity>(TEntity?) GenericExtensions.When<TObject>(TObject, bool, Func<TObject, TObject>) See Also StringEnumBaseClass<TClass>"
  },
  "api/Mithril.API.Abstractions.Commands.Enums.html": {
    "href": "api/Mithril.API.Abstractions.Commands.Enums.html",
    "title": "Namespace Mithril.API.Abstractions.Commands.Enums | Mithril API Reference",
    "keywords": "Namespace Mithril.API.Abstractions.Commands.Enums Classes EventStateTypes Event state types"
  },
  "api/Mithril.API.Abstractions.Commands.EventResult.html": {
    "href": "api/Mithril.API.Abstractions.Commands.EventResult.html",
    "title": "Class EventResult | Mithril API Reference",
    "keywords": "Class EventResult Event result Inheritance object GenericResult EventResult Implements IEquatable<GenericResult> IEquatable<EventResult> Inherited Members GenericResult.Message GenericResult.Exception object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Mithril.API.Abstractions.Commands Assembly: Mithril.API.Abstractions.dll Syntax public record EventResult : GenericResult, IEquatable<GenericResult>, IEquatable<EventResult> Constructors | Improve this Doc View Source EventResult(IEvent?, EventStateTypes, IEventHandler, Exception?) Event result Declaration public EventResult(IEvent? Event, EventStateTypes NewState, IEventHandler EventHandler, Exception? Exception = null) Parameters Type Name Description IEvent Event EventStateTypes NewState IEventHandler EventHandler Exception Exception See Also IEquatable<T> Properties | Improve this Doc View Source Event Declaration public IEvent? Event { get; init; } Property Value Type Description IEvent See Also IEquatable<T> | Improve this Doc View Source EventHandler Declaration public IEventHandler EventHandler { get; init; } Property Value Type Description IEventHandler See Also IEquatable<T> | Improve this Doc View Source IsErrorState Gets a value indicating whether this instance is error state. Declaration public override bool IsErrorState { get; } Property Value Type Description bool true if this instance is error state; otherwise, false. Overrides GenericResult.IsErrorState See Also IEquatable<T> | Improve this Doc View Source NewState Declaration public EventStateTypes NewState { get; init; } Property Value Type Description EventStateTypes See Also IEquatable<T> Implements IEquatable<T> IEquatable<T> Extension Methods ExpandoObjectExtensions.ConvertToExpando<TEntity>(TEntity?) GenericExtensions.When<TObject>(TObject, bool, Func<TObject, TObject>) See Also IEquatable<T>"
  },
  "api/Mithril.API.Abstractions.Commands.Interfaces.ICommand.html": {
    "href": "api/Mithril.API.Abstractions.Commands.Interfaces.ICommand.html",
    "title": "Interface ICommand | Mithril API Reference",
    "keywords": "Interface ICommand Command interface Inherited Members IEquatable<ICommand>.Equals(ICommand) IModel.Active IModel.Creator IModel.DateCreated IModel.DateModified IModel.ID IModel.Modifier IModel.TenantID IModel.CanBeModifiedBy(ClaimsPrincipal) IModel.CanBeViewedBy(ClaimsPrincipal) IModel.DeleteAsync(IDataService, ClaimsPrincipal, bool) IModel.SaveAsync(IDataService, ClaimsPrincipal) IModel.SetupObject(IDataService, ClaimsPrincipal) IModel.SetupObject(IDataService, IUser) IEquatable<IModel>.Equals(IModel) Namespace: Mithril.API.Abstractions.Commands.Interfaces Assembly: Mithril.API.Abstractions.dll Syntax public interface ICommand : IEquatable<ICommand>, IModel, IEquatable<IModel> Extension Methods ExpandoObjectExtensions.ConvertToExpando<TEntity>(TEntity?) GenericExtensions.When<TObject>(TObject, bool, Func<TObject, TObject>)"
  },
  "api/Mithril.API.Abstractions.Commands.Interfaces.ICommandHandler-1.html": {
    "href": "api/Mithril.API.Abstractions.Commands.Interfaces.ICommandHandler-1.html",
    "title": "Interface ICommandHandler<TViewModel> | Mithril API Reference",
    "keywords": "Interface ICommandHandler<TViewModel> Command handler interface Inherited Members ICommandHandler.CommandName ICommandHandler.ContentTypeAccepts ICommandHandler.Features ICommandHandler.Tags ICommandHandler.Version ICommandHandler.ViewModelType ICommandHandler.CanHandle(ICommand) ICommandHandler.HandleCommandAsync(params ICommand[]) Namespace: Mithril.API.Abstractions.Commands.Interfaces Assembly: Mithril.API.Abstractions.dll Syntax public interface ICommandHandler<TViewModel> : ICommandHandler Type Parameters Name Description TViewModel The type of the view model. Methods | Improve this Doc View Source CreateAsync(TViewModel?, ClaimsPrincipal) Creates the specified value. Declaration ValueTask<CommandCreationResult?> CreateAsync(TViewModel? value, ClaimsPrincipal user) Parameters Type Name Description TViewModel value The value. ClaimsPrincipal user The user. Returns Type Description ValueTask<CommandCreationResult> A command value converted from the view model. Extension Methods ExpandoObjectExtensions.ConvertToExpando<TEntity>(TEntity?) GenericExtensions.When<TObject>(TObject, bool, Func<TObject, TObject>)"
  },
  "api/Mithril.API.Abstractions.Commands.Interfaces.ICommandHandler.html": {
    "href": "api/Mithril.API.Abstractions.Commands.Interfaces.ICommandHandler.html",
    "title": "Interface ICommandHandler | Mithril API Reference",
    "keywords": "Interface ICommandHandler Command handler interface Namespace: Mithril.API.Abstractions.Commands.Interfaces Assembly: Mithril.API.Abstractions.dll Syntax public interface ICommandHandler Properties | Improve this Doc View Source CommandName Gets the command type accepted. Declaration string CommandName { get; } Property Value Type Description string The command type accepted. | Improve this Doc View Source ContentTypeAccepts Gets the content type accepted by command handler. Declaration string[] ContentTypeAccepts { get; } Property Value Type Description string[] The content type accepted by command handler. | Improve this Doc View Source Features Gets the features associated with this command. Declaration IFeature[] Features { get; } Property Value Type Description IFeature[] The features associated with this command. | Improve this Doc View Source Tags Gets the tags (Used by OpenAPI, etc). Declaration string[] Tags { get; } Property Value Type Description string[] The tags (Used by OpenAPI, etc). | Improve this Doc View Source Version Gets the version (not guaranteed to be used in all query providers, but defaults to \"v1\"). Declaration string? Version { get; } Property Value Type Description string The version. | Improve this Doc View Source ViewModelType Gets the type of the view model it accepts. Declaration Type ViewModelType { get; } Property Value Type Description Type The type of the view model it accepts. Methods | Improve this Doc View Source CanHandle(ICommand) Determines whether this instance can handle the specified command. Declaration bool CanHandle(ICommand command) Parameters Type Name Description ICommand command The command. Returns Type Description bool true if this instance can handle the specified command; otherwise, false. | Improve this Doc View Source HandleCommandAsync(params ICommand[]) Handles the Command. Declaration Task<IEvent[]> HandleCommandAsync(params ICommand[] arg) Parameters Type Name Description ICommand[] arg The argument. Returns Type Description Task<IEvent[]> Any events that are spawned by the command. Extension Methods ExpandoObjectExtensions.ConvertToExpando<TEntity>(TEntity?) GenericExtensions.When<TObject>(TObject, bool, Func<TObject, TObject>)"
  },
  "api/Mithril.API.Abstractions.Commands.Interfaces.IEvent.html": {
    "href": "api/Mithril.API.Abstractions.Commands.Interfaces.IEvent.html",
    "title": "Interface IEvent | Mithril API Reference",
    "keywords": "Interface IEvent Event interface Inherited Members IEquatable<IEvent>.Equals(IEvent) IModel.Active IModel.Creator IModel.DateCreated IModel.DateModified IModel.ID IModel.Modifier IModel.TenantID IModel.CanBeModifiedBy(ClaimsPrincipal) IModel.CanBeViewedBy(ClaimsPrincipal) IModel.DeleteAsync(IDataService, ClaimsPrincipal, bool) IModel.SaveAsync(IDataService, ClaimsPrincipal) IModel.SetupObject(IDataService, ClaimsPrincipal) IModel.SetupObject(IDataService, IUser) IEquatable<IModel>.Equals(IModel) Namespace: Mithril.API.Abstractions.Commands.Interfaces Assembly: Mithril.API.Abstractions.dll Syntax public interface IEvent : IEquatable<IEvent>, IModel, IEquatable<IModel> Properties | Improve this Doc View Source Name Gets the name. Declaration string Name { get; } Property Value Type Description string The name. See Also IModel | Improve this Doc View Source RetryCount Gets or sets the retry count. Declaration int RetryCount { get; set; } Property Value Type Description int The retry count. See Also IModel | Improve this Doc View Source State Gets or sets the state. Declaration [MaxLength(20)] string? State { get; set; } Property Value Type Description string The state. See Also IModel Methods | Improve this Doc View Source CanRun() Determines whether this instance can run. Declaration bool CanRun() Returns Type Description bool true if this instance can run; otherwise, false. See Also IModel | Improve this Doc View Source GetData() Gets the data within the event. Declaration ExpandoObject GetData() Returns Type Description ExpandoObject The data from the event. See Also IModel | Improve this Doc View Source GetSchema() Gets the schema. Declaration string GetSchema() Returns Type Description string The data schema. See Also IModel Extension Methods ExpandoObjectExtensions.ConvertToExpando<TEntity>(TEntity?) GenericExtensions.When<TObject>(TObject, bool, Func<TObject, TObject>) See Also IModel"
  },
  "api/Mithril.API.Abstractions.Commands.Interfaces.IEventHandler.html": {
    "href": "api/Mithril.API.Abstractions.Commands.Interfaces.IEventHandler.html",
    "title": "Interface IEventHandler | Mithril API Reference",
    "keywords": "Interface IEventHandler Event handler interface Namespace: Mithril.API.Abstractions.Commands.Interfaces Assembly: Mithril.API.Abstractions.dll Syntax public interface IEventHandler Properties | Improve this Doc View Source Features Gets the features associated with this command. Declaration IFeature[] Features { get; } Property Value Type Description IFeature[] The features associated with this command. | Improve this Doc View Source Name Gets the name. Declaration string Name { get; } Property Value Type Description string The name. Methods | Improve this Doc View Source Accepts(IEvent) Determines if this event handler accepts the event. Declaration bool Accepts(IEvent arg) Parameters Type Name Description IEvent arg The argument. Returns Type Description bool True if it accepts it, false otherwise. | Improve this Doc View Source Handle(IEvent) Handles the event. Declaration EventResult Handle(IEvent arg) Parameters Type Name Description IEvent arg The argument. Returns Type Description EventResult The result from processing the event. Extension Methods ExpandoObjectExtensions.ConvertToExpando<TEntity>(TEntity?) GenericExtensions.When<TObject>(TObject, bool, Func<TObject, TObject>)"
  },
  "api/Mithril.API.Abstractions.Commands.Interfaces.html": {
    "href": "api/Mithril.API.Abstractions.Commands.Interfaces.html",
    "title": "Namespace Mithril.API.Abstractions.Commands.Interfaces | Mithril API Reference",
    "keywords": "Namespace Mithril.API.Abstractions.Commands.Interfaces Interfaces ICommand Command interface ICommandHandler Command handler interface ICommandHandler<TViewModel> Command handler interface IEvent Event interface IEventHandler Event handler interface"
  },
  "api/Mithril.API.Abstractions.Commands.Mappings.ICommandMapping.html": {
    "href": "api/Mithril.API.Abstractions.Commands.Mappings.ICommandMapping.html",
    "title": "Class ICommandMapping | Mithril API Reference",
    "keywords": "Class ICommandMapping Command mapping Inheritance object MappingBaseClass<ICommand, DefaultDatabase> ICommandMapping Implements IMapping<ICommand> IMapping Inherited Members MappingBaseClass<ICommand, DefaultDatabase>.AddAutoKey() MappingBaseClass<ICommand, DefaultDatabase>.ContainsProperty(string) MappingBaseClass<ICommand, DefaultDatabase>.Copy(IMapping) MappingBaseClass<ICommand, DefaultDatabase>.CopyProperty(IIDProperty) MappingBaseClass<ICommand, DefaultDatabase>.CopyProperty(IProperty) MappingBaseClass<ICommand, DefaultDatabase>.CopyProperty(IMapProperty) MappingBaseClass<ICommand, DefaultDatabase>.CopyProperty(IManyToOneProperty) MappingBaseClass<ICommand, DefaultDatabase>.CopyProperty(IManyToManyProperty) MappingBaseClass<ICommand, DefaultDatabase>.Equals(object) MappingBaseClass<ICommand, DefaultDatabase>.GetColumnName(string) MappingBaseClass<ICommand, DefaultDatabase>.GetHashCode() MappingBaseClass<ICommand, DefaultDatabase>.ID<TDataType>(Expression<Func<ICommand, TDataType>>) MappingBaseClass<ICommand, DefaultDatabase>.ManyToMany<TDataType>(Expression<Func<ICommand, IList<TDataType>>>) MappingBaseClass<ICommand, DefaultDatabase>.ManyToOne<TDataType>(Expression<Func<ICommand, IList<TDataType>>>) MappingBaseClass<ICommand, DefaultDatabase>.ManyToOne<TDataType>(Expression<Func<ICommand, TDataType>>) MappingBaseClass<ICommand, DefaultDatabase>.Map<TDataType>(Expression<Func<ICommand, TDataType>>) MappingBaseClass<ICommand, DefaultDatabase>.Reduce(ILogger) MappingBaseClass<ICommand, DefaultDatabase>.Reduce(IMapping, ILogger) MappingBaseClass<ICommand, DefaultDatabase>.Reference<TDataType>(Expression<Func<ICommand, TDataType>>) MappingBaseClass<ICommand, DefaultDatabase>.SetQuery(QueryType, string, CommandType, params IParameter[]) MappingBaseClass<ICommand, DefaultDatabase>.Setup() MappingBaseClass<ICommand, DefaultDatabase>.ToString() MappingBaseClass<ICommand, DefaultDatabase>.AutoIDProperties MappingBaseClass<ICommand, DefaultDatabase>.DatabaseConfigType MappingBaseClass<ICommand, DefaultDatabase>.IDProperties MappingBaseClass<ICommand, DefaultDatabase>.ManyToManyProperties MappingBaseClass<ICommand, DefaultDatabase>.ManyToOneProperties MappingBaseClass<ICommand, DefaultDatabase>.MapProperties MappingBaseClass<ICommand, DefaultDatabase>.Merge MappingBaseClass<ICommand, DefaultDatabase>.ObjectType MappingBaseClass<ICommand, DefaultDatabase>.Order MappingBaseClass<ICommand, DefaultDatabase>.Prefix MappingBaseClass<ICommand, DefaultDatabase>.Queries MappingBaseClass<ICommand, DefaultDatabase>.ReferenceProperties MappingBaseClass<ICommand, DefaultDatabase>.SchemaName MappingBaseClass<ICommand, DefaultDatabase>.Suffix MappingBaseClass<ICommand, DefaultDatabase>.TableName object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Mithril.API.Abstractions.Commands.Mappings Assembly: Mithril.API.Abstractions.dll Syntax public class ICommandMapping : MappingBaseClass<ICommand, DefaultDatabase>, IMapping<ICommand>, IMapping Constructors | Improve this Doc View Source ICommandMapping() Initializes a new instance of the ICommandMapping class. Declaration public ICommandMapping() See Also MappingBaseClass<TClassType, TDatabaseType> Implements IMapping<TClassType> IMapping Extension Methods ExpandoObjectExtensions.ConvertToExpando<TEntity>(TEntity?) GenericExtensions.When<TObject>(TObject, bool, Func<TObject, TObject>) See Also MappingBaseClass<TClassType, TDatabaseType>"
  },
  "api/Mithril.API.Abstractions.Commands.Mappings.IEventMapping.html": {
    "href": "api/Mithril.API.Abstractions.Commands.Mappings.IEventMapping.html",
    "title": "Class IEventMapping | Mithril API Reference",
    "keywords": "Class IEventMapping Event mapping Inheritance object MappingBaseClass<IEvent, DefaultDatabase> IEventMapping Implements IMapping<IEvent> IMapping Inherited Members MappingBaseClass<IEvent, DefaultDatabase>.AddAutoKey() MappingBaseClass<IEvent, DefaultDatabase>.ContainsProperty(string) MappingBaseClass<IEvent, DefaultDatabase>.Copy(IMapping) MappingBaseClass<IEvent, DefaultDatabase>.CopyProperty(IIDProperty) MappingBaseClass<IEvent, DefaultDatabase>.CopyProperty(IProperty) MappingBaseClass<IEvent, DefaultDatabase>.CopyProperty(IMapProperty) MappingBaseClass<IEvent, DefaultDatabase>.CopyProperty(IManyToOneProperty) MappingBaseClass<IEvent, DefaultDatabase>.CopyProperty(IManyToManyProperty) MappingBaseClass<IEvent, DefaultDatabase>.Equals(object) MappingBaseClass<IEvent, DefaultDatabase>.GetColumnName(string) MappingBaseClass<IEvent, DefaultDatabase>.GetHashCode() MappingBaseClass<IEvent, DefaultDatabase>.ID<TDataType>(Expression<Func<IEvent, TDataType>>) MappingBaseClass<IEvent, DefaultDatabase>.ManyToMany<TDataType>(Expression<Func<IEvent, IList<TDataType>>>) MappingBaseClass<IEvent, DefaultDatabase>.ManyToOne<TDataType>(Expression<Func<IEvent, IList<TDataType>>>) MappingBaseClass<IEvent, DefaultDatabase>.ManyToOne<TDataType>(Expression<Func<IEvent, TDataType>>) MappingBaseClass<IEvent, DefaultDatabase>.Map<TDataType>(Expression<Func<IEvent, TDataType>>) MappingBaseClass<IEvent, DefaultDatabase>.Reduce(ILogger) MappingBaseClass<IEvent, DefaultDatabase>.Reduce(IMapping, ILogger) MappingBaseClass<IEvent, DefaultDatabase>.Reference<TDataType>(Expression<Func<IEvent, TDataType>>) MappingBaseClass<IEvent, DefaultDatabase>.SetQuery(QueryType, string, CommandType, params IParameter[]) MappingBaseClass<IEvent, DefaultDatabase>.Setup() MappingBaseClass<IEvent, DefaultDatabase>.ToString() MappingBaseClass<IEvent, DefaultDatabase>.AutoIDProperties MappingBaseClass<IEvent, DefaultDatabase>.DatabaseConfigType MappingBaseClass<IEvent, DefaultDatabase>.IDProperties MappingBaseClass<IEvent, DefaultDatabase>.ManyToManyProperties MappingBaseClass<IEvent, DefaultDatabase>.ManyToOneProperties MappingBaseClass<IEvent, DefaultDatabase>.MapProperties MappingBaseClass<IEvent, DefaultDatabase>.Merge MappingBaseClass<IEvent, DefaultDatabase>.ObjectType MappingBaseClass<IEvent, DefaultDatabase>.Order MappingBaseClass<IEvent, DefaultDatabase>.Prefix MappingBaseClass<IEvent, DefaultDatabase>.Queries MappingBaseClass<IEvent, DefaultDatabase>.ReferenceProperties MappingBaseClass<IEvent, DefaultDatabase>.SchemaName MappingBaseClass<IEvent, DefaultDatabase>.Suffix MappingBaseClass<IEvent, DefaultDatabase>.TableName object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Mithril.API.Abstractions.Commands.Mappings Assembly: Mithril.API.Abstractions.dll Syntax public class IEventMapping : MappingBaseClass<IEvent, DefaultDatabase>, IMapping<IEvent>, IMapping Constructors | Improve this Doc View Source IEventMapping() Initializes a new instance of the IEventMapping class. Declaration public IEventMapping() See Also MappingBaseClass<TClassType, TDatabaseType> Implements IMapping<TClassType> IMapping Extension Methods ExpandoObjectExtensions.ConvertToExpando<TEntity>(TEntity?) GenericExtensions.When<TObject>(TObject, bool, Func<TObject, TObject>) See Also MappingBaseClass<TClassType, TDatabaseType>"
  },
  "api/Mithril.API.Abstractions.Commands.Mappings.html": {
    "href": "api/Mithril.API.Abstractions.Commands.Mappings.html",
    "title": "Namespace Mithril.API.Abstractions.Commands.Mappings | Mithril API Reference",
    "keywords": "Namespace Mithril.API.Abstractions.Commands.Mappings Classes ICommandMapping Command mapping IEventMapping Event mapping"
  },
  "api/Mithril.API.Abstractions.Commands.html": {
    "href": "api/Mithril.API.Abstractions.Commands.html",
    "title": "Namespace Mithril.API.Abstractions.Commands | Mithril API Reference",
    "keywords": "Namespace Mithril.API.Abstractions.Commands Classes CommandCreationResult Command creation result. EventResult Event result"
  },
  "api/Mithril.API.Abstractions.Configuration.APIOptions.html": {
    "href": "api/Mithril.API.Abstractions.Configuration.APIOptions.html",
    "title": "Class APIOptions | Mithril API Reference",
    "keywords": "Class APIOptions API configuration information Inheritance object APIOptions Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Mithril.API.Abstractions.Configuration Assembly: Mithril.API.Abstractions.dll Syntax public class APIOptions Properties | Improve this Doc View Source AllowAnonymous Gets or sets the allow anonymous users access (defaults to false). Declaration public bool? AllowAnonymous { get; set; } Property Value Type Description bool? The allow anonymous users access. | Improve this Doc View Source AuthorizationPolicy Gets or sets the authorization policy (if empty then just Authorize called). Declaration public string? AuthorizationPolicy { get; set; } Property Value Type Description string The authorization policy. | Improve this Doc View Source CommandBatchSize Gets or sets the size of the command batch. Declaration public int? CommandBatchSize { get; set; } Property Value Type Description int? The size of the command batch. | Improve this Doc View Source CommandEndpoint Gets or sets the command endpoint. Declaration public string? CommandEndpoint { get; set; } Property Value Type Description string The command endpoint. | Improve this Doc View Source CommandRunFrequency Gets or sets the command run frequency (in seconds). If set to 0, then command processing will not run. Declaration public int? CommandRunFrequency { get; set; } Property Value Type Description int? The command run frequency (in seconds). | Improve this Doc View Source EventBatchSize Gets or sets the size of the event batch. Declaration public int? EventBatchSize { get; set; } Property Value Type Description int? The size of the event batch. | Improve this Doc View Source EventRunFrequency Gets or sets the event run frequency (in seconds). If set to 0, then event processing will not run. Declaration public int? EventRunFrequency { get; set; } Property Value Type Description int? The event run frequency (in seconds). | Improve this Doc View Source MaxCommandProcessTime Gets or sets the maximum command processing time (in ms). Declaration public int? MaxCommandProcessTime { get; set; } Property Value Type Description int? The maximum command processing time (in ms). | Improve this Doc View Source MaxEventProcessTime Gets or sets the maximum event processing time (in ms). Declaration public int? MaxEventProcessTime { get; set; } Property Value Type Description int? The maximum event processing time (in ms). | Improve this Doc View Source OpenAPIEndpoint Gets or sets the open API endpoint. Declaration public string? OpenAPIEndpoint { get; set; } Property Value Type Description string The open API endpoint. | Improve this Doc View Source QueryEndpoint Gets or sets the query endpoint. Declaration public string? QueryEndpoint { get; set; } Property Value Type Description string The query endpoint. Extension Methods ExpandoObjectExtensions.ConvertToExpando<TEntity>(TEntity?) GenericExtensions.When<TObject>(TObject, bool, Func<TObject, TObject>)"
  },
  "api/Mithril.API.Abstractions.Configuration.html": {
    "href": "api/Mithril.API.Abstractions.Configuration.html",
    "title": "Namespace Mithril.API.Abstractions.Configuration | Mithril API Reference",
    "keywords": "Namespace Mithril.API.Abstractions.Configuration Classes APIOptions API configuration information"
  },
  "api/Mithril.API.Abstractions.ExtensionMethods.StringExtensions.html": {
    "href": "api/Mithril.API.Abstractions.ExtensionMethods.StringExtensions.html",
    "title": "Class StringExtensions | Mithril API Reference",
    "keywords": "Class StringExtensions String extensions Inheritance object StringExtensions Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Mithril.API.Abstractions.ExtensionMethods Assembly: Mithril.API.Abstractions.dll Syntax public static class StringExtensions Methods | Improve this Doc View Source SplitCamelCase(string?) Splits the camel case. Declaration public static string SplitCamelCase(this string? input) Parameters Type Name Description string input The input. Returns Type Description string"
  },
  "api/Mithril.API.Abstractions.ExtensionMethods.html": {
    "href": "api/Mithril.API.Abstractions.ExtensionMethods.html",
    "title": "Namespace Mithril.API.Abstractions.ExtensionMethods | Mithril API Reference",
    "keywords": "Namespace Mithril.API.Abstractions.ExtensionMethods Classes StringExtensions String extensions"
  },
  "api/Mithril.API.Abstractions.Modules.APIModule.html": {
    "href": "api/Mithril.API.Abstractions.Modules.APIModule.html",
    "title": "Class APIModule | Mithril API Reference",
    "keywords": "Class APIModule API Module to register config information. Inheritance object ModuleBaseClass<APIModule> APIModule Implements IEquatable<APIModule> IModule Inherited Members ModuleBaseClass<APIModule>.Category ModuleBaseClass<APIModule>.ContentPath ModuleBaseClass<APIModule>.Features ModuleBaseClass<APIModule>.ID ModuleBaseClass<APIModule>.LastModified ModuleBaseClass<APIModule>.Name ModuleBaseClass<APIModule>.Order ModuleBaseClass<APIModule>.Tags ModuleBaseClass<APIModule>.Version ModuleBaseClass<APIModule>.ConfigureApplication(IApplicationBuilder, IConfiguration, IHostEnvironment) ModuleBaseClass<APIModule>.ConfigureHostSettings(IHostBuilder, IConfiguration, IHostEnvironment) ModuleBaseClass<APIModule>.ConfigureLoggingSettings(ILoggingBuilder, IConfiguration, IHostEnvironment) ModuleBaseClass<APIModule>.ConfigureMVC(IMvcBuilder, IConfiguration, IHostEnvironment) ModuleBaseClass<APIModule>.ConfigureRoutes(IEndpointRouteBuilder, IConfiguration, IHostEnvironment) ModuleBaseClass<APIModule>.ConfigureWebHostSettings(IWebHostBuilder, IConfiguration, IHostEnvironment) ModuleBaseClass<APIModule>.Equals(object) ModuleBaseClass<APIModule>.Equals(APIModule) ModuleBaseClass<APIModule>.GetHashCode() ModuleBaseClass<APIModule>.InitializeDataAsync(IDataService, IServiceProvider) ModuleBaseClass<APIModule>.OnStarted() ModuleBaseClass<APIModule>.OnStopped() ModuleBaseClass<APIModule>.OnStopping() object.Equals(object, object) object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Mithril.API.Abstractions.Modules Assembly: Mithril.API.Abstractions.dll Syntax public class APIModule : ModuleBaseClass<APIModule>, IEquatable<APIModule>, IModule Methods | Improve this Doc View Source ConfigureServices(IServiceCollection?, IConfiguration?, IHostEnvironment?) Configures the services for the module. Declaration public override IServiceCollection? ConfigureServices(IServiceCollection? services, IConfiguration? configuration, IHostEnvironment? environment) Parameters Type Name Description IServiceCollection services The services collection. IConfiguration configuration The configuration. IHostEnvironment environment The environment. Returns Type Description IServiceCollection Services Overrides ModuleBaseClass<APIModule>.ConfigureServices(IServiceCollection, IConfiguration, IHostEnvironment) See Also ModuleBaseClass<TModule> Implements IEquatable<T> IModule Extension Methods ExpandoObjectExtensions.ConvertToExpando<TEntity>(TEntity?) GenericExtensions.When<TObject>(TObject, bool, Func<TObject, TObject>) See Also ModuleBaseClass<TModule>"
  },
  "api/Mithril.API.Abstractions.Modules.html": {
    "href": "api/Mithril.API.Abstractions.Modules.html",
    "title": "Namespace Mithril.API.Abstractions.Modules | Mithril API Reference",
    "keywords": "Namespace Mithril.API.Abstractions.Modules Classes APIModule API Module to register config information."
  },
  "api/Mithril.API.Abstractions.Query.Argument-1.html": {
    "href": "api/Mithril.API.Abstractions.Query.Argument-1.html",
    "title": "Class Argument<TValue> | Mithril API Reference",
    "keywords": "Class Argument<TValue> Argument that the query accepts Inheritance object Argument<TValue> Implements IArgument Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Namespace: Mithril.API.Abstractions.Query Assembly: Mithril.API.Abstractions.dll Syntax public class Argument<TValue> : IArgument Type Parameters Name Description TValue The type of the value expected. Properties | Improve this Doc View Source ArgumentType Gets the type of the argument. Declaration public Type ArgumentType { get; } Property Value Type Description Type The type of the argument. See Also IArgument | Improve this Doc View Source DefaultValue Gets or sets the default value. Declaration public object? DefaultValue { get; set; } Property Value Type Description object The default value. See Also IArgument | Improve this Doc View Source Description Gets or sets the description. Declaration public string? Description { get; set; } Property Value Type Description string The description. See Also IArgument | Improve this Doc View Source Name Gets or sets the name. Declaration public string? Name { get; set; } Property Value Type Description string The name. See Also IArgument Methods | Improve this Doc View Source ToString() Converts to string. Declaration public override string ToString() Returns Type Description string A string that represents this instance. Overrides object.ToString() See Also IArgument Implements IArgument Extension Methods ExpandoObjectExtensions.ConvertToExpando<TEntity>(TEntity?) GenericExtensions.When<TObject>(TObject, bool, Func<TObject, TObject>) IArgumentExtensions.CreateArgument(IArgument) See Also IArgument"
  },
  "api/Mithril.API.Abstractions.Query.Arguments.html": {
    "href": "api/Mithril.API.Abstractions.Query.Arguments.html",
    "title": "Class Arguments | Mithril API Reference",
    "keywords": "Class Arguments Arguments Inheritance object Dictionary<string, object> Arguments Implements IDictionary<string, object> ICollection<KeyValuePair<string, object>> IReadOnlyDictionary<string, object> IReadOnlyCollection<KeyValuePair<string, object>> IEnumerable<KeyValuePair<string, object>> IDictionary ICollection IEnumerable IDeserializationCallback ISerializable Inherited Members Dictionary<string, object>.Add(string, object) Dictionary<string, object>.Clear() Dictionary<string, object>.ContainsKey(string) Dictionary<string, object>.ContainsValue(object) Dictionary<string, object>.EnsureCapacity(int) Dictionary<string, object>.GetEnumerator() Dictionary<string, object>.GetObjectData(SerializationInfo, StreamingContext) Dictionary<string, object>.OnDeserialization(object) Dictionary<string, object>.Remove(string) Dictionary<string, object>.Remove(string, out object) Dictionary<string, object>.TrimExcess() Dictionary<string, object>.TrimExcess(int) Dictionary<string, object>.TryAdd(string, object) Dictionary<string, object>.TryGetValue(string, out object) Dictionary<string, object>.Comparer Dictionary<string, object>.Count Dictionary<string, object>.this[string] Dictionary<string, object>.Keys Dictionary<string, object>.Values object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Mithril.API.Abstractions.Query Assembly: Mithril.API.Abstractions.dll Syntax public class Arguments : Dictionary<string, object?>, IDictionary<string, object?>, ICollection<KeyValuePair<string, object?>>, IReadOnlyDictionary<string, object?>, IReadOnlyCollection<KeyValuePair<string, object?>>, IEnumerable<KeyValuePair<string, object?>>, IDictionary, ICollection, IEnumerable, IDeserializationCallback, ISerializable Constructors | Improve this Doc View Source Arguments() Initializes a new instance of the Arguments class. Declaration public Arguments() Methods | Improve this Doc View Source GetValue<TValue>(string?) Gets the value. Declaration public TValue? GetValue<TValue>(string? key) Parameters Type Name Description string key The key. Returns Type Description TValue The value specified. Type Parameters Name Description TValue The type of the value. | Improve this Doc View Source TryGetValue<TValue>(string?, out TValue?) Tries to get the value. Declaration public bool TryGetValue<TValue>(string? key, out TValue? value) Parameters Type Name Description string key The key. TValue value The value. Returns Type Description bool True if it is found, false otherwise. Type Parameters Name Description TValue The type of the value. Implements IDictionary<TKey, TValue> ICollection<T> IReadOnlyDictionary<TKey, TValue> IReadOnlyCollection<T> IEnumerable<T> IDictionary ICollection IEnumerable IDeserializationCallback ISerializable Extension Methods ExpandoObjectExtensions.ConvertToExpando<TEntity>(TEntity?) GenericExtensions.When<TObject>(TObject, bool, Func<TObject, TObject>)"
  },
  "api/Mithril.API.Abstractions.Query.BaseClasses.DropDownBaseClass-1.html": {
    "href": "api/Mithril.API.Abstractions.Query.BaseClasses.DropDownBaseClass-1.html",
    "title": "Class DropDownBaseClass<TModel> | Mithril API Reference",
    "keywords": "Class DropDownBaseClass<TModel> Model query base class Inheritance object DropDownBaseClass<TModel> UserClaimDropDown ThemeList Implements IDropDownQuery Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Mithril.API.Abstractions.Query.BaseClasses Assembly: Mithril.API.Abstractions.dll Syntax public abstract class DropDownBaseClass<TModel> : IDropDownQuery where TModel : class, IModel Type Parameters Name Description TModel The type of the model. Constructors | Improve this Doc View Source DropDownBaseClass() Initializes a new instance of the DropDownBaseClass class. Declaration protected DropDownBaseClass() Properties | Improve this Doc View Source Name Gets the name. Declaration public virtual string Name { get; } Property Value Type Description string The name. Methods | Improve this Doc View Source CanRun(string?, ClaimsPrincipal?) Determines whether this instance can run the specified data type. Declaration public virtual bool CanRun(string? dataType, ClaimsPrincipal? user) Parameters Type Name Description string dataType Type of the data. ClaimsPrincipal user The user. Returns Type Description bool true if this instance can run the specified data type; otherwise, false. | Improve this Doc View Source FilterQuery(IQueryable<TModel>, string) Filters the query. Declaration protected abstract IQueryable<TModel> FilterQuery(IQueryable<TModel> query, string value) Parameters Type Name Description IQueryable<TModel> query The query. string value The value. Returns Type Description IQueryable<TModel> The filtered query | Improve this Doc View Source GetDataAsync(string?) Gets the data. Declaration public Task<IEnumerable<DropDownVM<long>>> GetDataAsync(string? filter) Parameters Type Name Description string filter The filter. Returns Type Description Task<IEnumerable<DropDownVM<long>>> The drop down data. | Improve this Doc View Source GetKey(TModel) Gets the key for the dropdown. Declaration protected virtual long GetKey(TModel model) Parameters Type Name Description TModel model The model. Returns Type Description long The key. | Improve this Doc View Source GetValues(string?, int) Gets all values that start with the value sent in. Declaration public IEnumerable<TModel> GetValues(string? value, int count = -1) Parameters Type Name Description string value The value. int count The count. Returns Type Description IEnumerable<TModel> The values Implements IDropDownQuery Extension Methods ExpandoObjectExtensions.ConvertToExpando<TEntity>(TEntity?) GenericExtensions.When<TObject>(TObject, bool, Func<TObject, TObject>)"
  },
  "api/Mithril.API.Abstractions.Query.BaseClasses.DropDownBaseClass.html": {
    "href": "api/Mithril.API.Abstractions.Query.BaseClasses.DropDownBaseClass.html",
    "title": "Class DropDownBaseClass | Mithril API Reference",
    "keywords": "Class DropDownBaseClass Drop down base class Inheritance object DropDownBaseClass Implements IDropDownQuery Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Mithril.API.Abstractions.Query.BaseClasses Assembly: Mithril.API.Abstractions.dll Syntax public abstract class DropDownBaseClass : IDropDownQuery Constructors | Improve this Doc View Source DropDownBaseClass(SQLHelper) Initializes a new instance of the DropDownBaseClass class. Declaration protected DropDownBaseClass(SQLHelper helper) Parameters Type Name Description SQLHelper helper The helper. See Also IDropDownQuery Properties | Improve this Doc View Source Helper Gets the helper. Declaration protected SQLHelper Helper { get; } Property Value Type Description SQLHelper The helper. See Also IDropDownQuery | Improve this Doc View Source Name Gets the name. Declaration public abstract string Name { get; } Property Value Type Description string The name. See Also IDropDownQuery Methods | Improve this Doc View Source CanRun(string?, ClaimsPrincipal?) Determines whether this instance can run the specified data type. Declaration public virtual bool CanRun(string? dataType, ClaimsPrincipal? user) Parameters Type Name Description string dataType Type of the data. ClaimsPrincipal user The user. Returns Type Description bool true if this instance can run the specified data type; otherwise, false. See Also IDropDownQuery | Improve this Doc View Source GetDataAsync(string?) Gets the data. Declaration public abstract Task<IEnumerable<DropDownVM<long>>> GetDataAsync(string? filter) Parameters Type Name Description string filter The filter. Returns Type Description Task<IEnumerable<DropDownVM<long>>> The drop down data. See Also IDropDownQuery Implements IDropDownQuery Extension Methods ExpandoObjectExtensions.ConvertToExpando<TEntity>(TEntity?) GenericExtensions.When<TObject>(TObject, bool, Func<TObject, TObject>) See Also IDropDownQuery"
  },
  "api/Mithril.API.Abstractions.Query.BaseClasses.QueryBaseClass-1.html": {
    "href": "api/Mithril.API.Abstractions.Query.BaseClasses.QueryBaseClass-1.html",
    "title": "Class QueryBaseClass<TClass> | Mithril API Reference",
    "keywords": "Class QueryBaseClass<TClass> Query base class Inheritance object QueryBaseClass<TClass> DropDownQuery EditorListingQuery EntitiesQuery EntityQuery RequestTraceQuery FeaturesQuery TestQuery MenuQuery Implements IQuery<TClass> IQuery Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Mithril.API.Abstractions.Query.BaseClasses Assembly: Mithril.API.Abstractions.dll Syntax public abstract class QueryBaseClass<TClass> : IQuery<TClass>, IQuery where TClass : class Type Parameters Name Description TClass The type of the class. Constructors | Improve this Doc View Source QueryBaseClass(ILogger?, IFeatureManager?) Initializes a new instance of the QueryBaseClass<TClass> class. Declaration protected QueryBaseClass(ILogger? logger, IFeatureManager? featureManager) Parameters Type Name Description ILogger logger The logger. IFeatureManager featureManager The feature manager. See Also IQuery<TClass> Properties | Improve this Doc View Source Arguments Gets the arguments. Declaration public virtual IArgument[] Arguments { get; } Property Value Type Description IArgument[] The arguments. See Also IQuery<TClass> | Improve this Doc View Source DeprecationReason Gets the deprecation reason. Declaration public virtual string? DeprecationReason { get; } Property Value Type Description string The deprecation reason. See Also IQuery<TClass> | Improve this Doc View Source Description Gets the description. Declaration public virtual string? Description { get; } Property Value Type Description string The description. See Also IQuery<TClass> | Improve this Doc View Source FeatureManager Gets the feature manager. Declaration protected IFeatureManager? FeatureManager { get; } Property Value Type Description IFeatureManager The feature manager. See Also IQuery<TClass> | Improve this Doc View Source Features Gets the features associated with this command. Declaration public virtual IFeature[] Features { get; } Property Value Type Description IFeature[] The features associated with this command. See Also IQuery<TClass> | Improve this Doc View Source Logger Gets the logger. Declaration protected ILogger? Logger { get; } Property Value Type Description ILogger The logger. See Also IQuery<TClass> | Improve this Doc View Source Name Gets the name. Declaration public virtual string Name { get; } Property Value Type Description string The name. See Also IQuery<TClass> | Improve this Doc View Source ReturnType Gets the type of the return. Declaration public Type ReturnType { get; } Property Value Type Description Type The type of the return. See Also IQuery<TClass> | Improve this Doc View Source Version Gets the version. Declaration public virtual string? Version { get; } Property Value Type Description string The version. See Also IQuery<TClass> Methods | Improve this Doc View Source IsFeatureEnabled() Determines whether the associated features are enabled. Declaration protected bool IsFeatureEnabled() Returns Type Description bool true if all features are enabled; otherwise, false. See Also IQuery<TClass> | Improve this Doc View Source ResolveAsync(ClaimsPrincipal?, Arguments) Used to resolve the data asked for by the query. Declaration public abstract Task<TClass?> ResolveAsync(ClaimsPrincipal? user, Arguments arguments) Parameters Type Name Description ClaimsPrincipal user The user. Arguments arguments The arguments. Returns Type Description Task<TClass> The data specified. See Also IQuery<TClass> Implements IQuery<TClass> IQuery Extension Methods ExpandoObjectExtensions.ConvertToExpando<TEntity>(TEntity?) GenericExtensions.When<TObject>(TObject, bool, Func<TObject, TObject>) See Also IQuery<TClass>"
  },
  "api/Mithril.API.Abstractions.Query.BaseClasses.html": {
    "href": "api/Mithril.API.Abstractions.Query.BaseClasses.html",
    "title": "Namespace Mithril.API.Abstractions.Query.BaseClasses | Mithril API Reference",
    "keywords": "Namespace Mithril.API.Abstractions.Query.BaseClasses Classes DropDownBaseClass Drop down base class DropDownBaseClass<TModel> Model query base class QueryBaseClass<TClass> Query base class"
  },
  "api/Mithril.API.Abstractions.Query.Interfaces.IArgument.html": {
    "href": "api/Mithril.API.Abstractions.Query.Interfaces.IArgument.html",
    "title": "Interface IArgument | Mithril API Reference",
    "keywords": "Interface IArgument Argument interface Namespace: Mithril.API.Abstractions.Query.Interfaces Assembly: Mithril.API.Abstractions.dll Syntax public interface IArgument Properties | Improve this Doc View Source ArgumentType Gets the type of the argument. Declaration Type ArgumentType { get; } Property Value Type Description Type The type of the argument. | Improve this Doc View Source DefaultValue Gets or sets the default value. Declaration object? DefaultValue { get; set; } Property Value Type Description object The default value. | Improve this Doc View Source Description Gets or sets the description. Declaration string? Description { get; set; } Property Value Type Description string The description. | Improve this Doc View Source Name Gets or sets the name. Declaration string? Name { get; set; } Property Value Type Description string The name. Extension Methods IArgumentExtensions.CreateArgument(IArgument) ExpandoObjectExtensions.ConvertToExpando<TEntity>(TEntity?) GenericExtensions.When<TObject>(TObject, bool, Func<TObject, TObject>)"
  },
  "api/Mithril.API.Abstractions.Query.Interfaces.IDropDownQuery.html": {
    "href": "api/Mithril.API.Abstractions.Query.Interfaces.IDropDownQuery.html",
    "title": "Interface IDropDownQuery | Mithril API Reference",
    "keywords": "Interface IDropDownQuery Drop down query interface Namespace: Mithril.API.Abstractions.Query.Interfaces Assembly: Mithril.API.Abstractions.dll Syntax public interface IDropDownQuery Properties | Improve this Doc View Source Name Gets the name. Declaration string Name { get; } Property Value Type Description string The name. Methods | Improve this Doc View Source CanRun(string?, ClaimsPrincipal?) Determines whether this instance can run the specified data type. Declaration bool CanRun(string? dataType, ClaimsPrincipal? user) Parameters Type Name Description string dataType Type of the data. ClaimsPrincipal user The user. Returns Type Description bool true if this instance can run the specified data type; otherwise, false. | Improve this Doc View Source GetDataAsync(string?) Gets the data asynchronously. Declaration Task<IEnumerable<DropDownVM<long>>> GetDataAsync(string? filter) Parameters Type Name Description string filter The filter. Returns Type Description Task<IEnumerable<DropDownVM<long>>> The drop down items. Extension Methods ExpandoObjectExtensions.ConvertToExpando<TEntity>(TEntity?) GenericExtensions.When<TObject>(TObject, bool, Func<TObject, TObject>)"
  },
  "api/Mithril.API.Abstractions.Query.Interfaces.IQuery-1.html": {
    "href": "api/Mithril.API.Abstractions.Query.Interfaces.IQuery-1.html",
    "title": "Interface IQuery<TClass> | Mithril API Reference",
    "keywords": "Interface IQuery<TClass> Query interface Inherited Members IQuery.Arguments IQuery.DeprecationReason IQuery.Description IQuery.Features IQuery.Name IQuery.ReturnType IQuery.Version Namespace: Mithril.API.Abstractions.Query.Interfaces Assembly: Mithril.API.Abstractions.dll Syntax public interface IQuery<TClass> : IQuery where TClass : class Type Parameters Name Description TClass The type of the class. Methods | Improve this Doc View Source ResolveAsync(ClaimsPrincipal?, Arguments) Used to resolve the data asked for by the query. Declaration Task<TClass?> ResolveAsync(ClaimsPrincipal? user, Arguments arguments) Parameters Type Name Description ClaimsPrincipal user The user. Arguments arguments The arguments. Returns Type Description Task<TClass> The data specified. Extension Methods ExpandoObjectExtensions.ConvertToExpando<TEntity>(TEntity?) GenericExtensions.When<TObject>(TObject, bool, Func<TObject, TObject>)"
  },
  "api/Mithril.API.Abstractions.Query.Interfaces.IQuery.html": {
    "href": "api/Mithril.API.Abstractions.Query.Interfaces.IQuery.html",
    "title": "Interface IQuery | Mithril API Reference",
    "keywords": "Interface IQuery Query interface Namespace: Mithril.API.Abstractions.Query.Interfaces Assembly: Mithril.API.Abstractions.dll Syntax public interface IQuery Properties | Improve this Doc View Source Arguments Gets the arguments. Declaration IArgument[] Arguments { get; } Property Value Type Description IArgument[] The arguments. | Improve this Doc View Source DeprecationReason Gets the deprecation reason. Declaration string? DeprecationReason { get; } Property Value Type Description string The deprecation reason. | Improve this Doc View Source Description Gets the description. Declaration string? Description { get; } Property Value Type Description string The description. | Improve this Doc View Source Features Gets the features associated with this command. Declaration IFeature[] Features { get; } Property Value Type Description IFeature[] The features associated with this command. | Improve this Doc View Source Name Gets the name. Declaration string Name { get; } Property Value Type Description string The name. | Improve this Doc View Source ReturnType Gets the type of the return. Declaration Type ReturnType { get; } Property Value Type Description Type The type of the return. | Improve this Doc View Source Version Gets the version (not guaranteed to be used in all query providers, but defaults to \"v1\"). Declaration string? Version { get; } Property Value Type Description string The version. Extension Methods ExpandoObjectExtensions.ConvertToExpando<TEntity>(TEntity?) GenericExtensions.When<TObject>(TObject, bool, Func<TObject, TObject>)"
  },
  "api/Mithril.API.Abstractions.Query.Interfaces.html": {
    "href": "api/Mithril.API.Abstractions.Query.Interfaces.html",
    "title": "Namespace Mithril.API.Abstractions.Query.Interfaces | Mithril API Reference",
    "keywords": "Namespace Mithril.API.Abstractions.Query.Interfaces Interfaces IArgument Argument interface IDropDownQuery Drop down query interface IQuery Query interface IQuery<TClass> Query interface"
  },
  "api/Mithril.API.Abstractions.Query.ViewModels.DropDownVM-1.html": {
    "href": "api/Mithril.API.Abstractions.Query.ViewModels.DropDownVM-1.html",
    "title": "Class DropDownVM<TKey> | Mithril API Reference",
    "keywords": "Class DropDownVM<TKey> Drop down VM Inheritance object DropDownVM<TKey> Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Mithril.API.Abstractions.Query.ViewModels Assembly: Mithril.API.Abstractions.dll Syntax public class DropDownVM<TKey> Type Parameters Name Description TKey Constructors | Improve this Doc View Source DropDownVM(TKey, string?) Initializes a new instance of the DropDownVM<TKey> class. Declaration public DropDownVM(TKey key, string? value) Parameters Type Name Description TKey key The key. string value The value. Properties | Improve this Doc View Source Key Gets or sets the key. Declaration public TKey Key { get; set; } Property Value Type Description TKey The key. | Improve this Doc View Source Value Gets or sets the value. Declaration public string? Value { get; set; } Property Value Type Description string The value. Extension Methods ExpandoObjectExtensions.ConvertToExpando<TEntity>(TEntity?) GenericExtensions.When<TObject>(TObject, bool, Func<TObject, TObject>)"
  },
  "api/Mithril.API.Abstractions.Query.ViewModels.PagedDataVM-1.html": {
    "href": "api/Mithril.API.Abstractions.Query.ViewModels.PagedDataVM-1.html",
    "title": "Class PagedDataVM<TData> | Mithril API Reference",
    "keywords": "Class PagedDataVM<TData> Paged data view model Inheritance object PagedDataVM<TData> Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Mithril.API.Abstractions.Query.ViewModels Assembly: Mithril.API.Abstractions.dll Syntax public class PagedDataVM<TData> Type Parameters Name Description TData The type of the data. Constructors | Improve this Doc View Source PagedDataVM(int, int, int, int, List<TData>) Initializes a new instance of the PagedDataVM<TData> class. Declaration public PagedDataVM(int page, int pageSize, int total, int session, List<TData> values) Parameters Type Name Description int page The page. int pageSize Size of the page. int total The total. int session The session. List<TData> values The values. Properties | Improve this Doc View Source Page Gets or sets the page. Declaration public int Page { get; set; } Property Value Type Description int The page. | Improve this Doc View Source PageSize Gets or sets the size of the page. Declaration public int PageSize { get; set; } Property Value Type Description int The size of the page. | Improve this Doc View Source Session Gets or sets the session. Declaration public int Session { get; set; } Property Value Type Description int The session. | Improve this Doc View Source Total Gets or sets the key. Declaration public int Total { get; set; } Property Value Type Description int The key. | Improve this Doc View Source Values Gets or sets the values. Declaration public List<TData>? Values { get; set; } Property Value Type Description List<TData> The values. Extension Methods ExpandoObjectExtensions.ConvertToExpando<TEntity>(TEntity?) GenericExtensions.When<TObject>(TObject, bool, Func<TObject, TObject>)"
  },
  "api/Mithril.API.Abstractions.Query.ViewModels.html": {
    "href": "api/Mithril.API.Abstractions.Query.ViewModels.html",
    "title": "Namespace Mithril.API.Abstractions.Query.ViewModels | Mithril API Reference",
    "keywords": "Namespace Mithril.API.Abstractions.Query.ViewModels Classes DropDownVM<TKey> Drop down VM PagedDataVM<TData> Paged data view model"
  },
  "api/Mithril.API.Abstractions.Query.html": {
    "href": "api/Mithril.API.Abstractions.Query.html",
    "title": "Namespace Mithril.API.Abstractions.Query | Mithril API Reference",
    "keywords": "Namespace Mithril.API.Abstractions.Query Classes Argument<TValue> Argument that the query accepts Arguments Arguments"
  },
  "api/Mithril.API.Abstractions.Services.ICommandService.html": {
    "href": "api/Mithril.API.Abstractions.Services.ICommandService.html",
    "title": "Interface ICommandService | Mithril API Reference",
    "keywords": "Interface ICommandService Command service interface Namespace: Mithril.API.Abstractions.Services Assembly: Mithril.API.Abstractions.dll Syntax public interface ICommandService Methods | Improve this Doc View Source ProcessAsync() Processes any new commands. Declaration Task ProcessAsync() Returns Type Description Task The async task. Extension Methods ExpandoObjectExtensions.ConvertToExpando<TEntity>(TEntity?) GenericExtensions.When<TObject>(TObject, bool, Func<TObject, TObject>)"
  },
  "api/Mithril.API.Abstractions.Services.IDropDownQueryService.html": {
    "href": "api/Mithril.API.Abstractions.Services.IDropDownQueryService.html",
    "title": "Interface IDropDownQueryService | Mithril API Reference",
    "keywords": "Interface IDropDownQueryService Drop down query service Namespace: Mithril.API.Abstractions.Services Assembly: Mithril.API.Abstractions.dll Syntax public interface IDropDownQueryService Methods | Improve this Doc View Source FindDropDownQuery(string?, ClaimsPrincipal?) Finds the drop down query. Declaration IDropDownQuery? FindDropDownQuery(string? name, ClaimsPrincipal? user) Parameters Type Name Description string name The name. ClaimsPrincipal user The user. Returns Type Description IDropDownQuery The drop down query specified. Extension Methods ExpandoObjectExtensions.ConvertToExpando<TEntity>(TEntity?) GenericExtensions.When<TObject>(TObject, bool, Func<TObject, TObject>)"
  },
  "api/Mithril.API.Abstractions.Services.IEventService.html": {
    "href": "api/Mithril.API.Abstractions.Services.IEventService.html",
    "title": "Interface IEventService | Mithril API Reference",
    "keywords": "Interface IEventService Event service interface Namespace: Mithril.API.Abstractions.Services Assembly: Mithril.API.Abstractions.dll Syntax public interface IEventService Methods | Improve this Doc View Source ProcessAsync() Processes any new events. Declaration Task ProcessAsync() Returns Type Description Task The async task. Extension Methods ExpandoObjectExtensions.ConvertToExpando<TEntity>(TEntity?) GenericExtensions.When<TObject>(TObject, bool, Func<TObject, TObject>)"
  },
  "api/Mithril.API.Abstractions.Services.IQueryService.html": {
    "href": "api/Mithril.API.Abstractions.Services.IQueryService.html",
    "title": "Interface IQueryService | Mithril API Reference",
    "keywords": "Interface IQueryService Query service Namespace: Mithril.API.Abstractions.Services Assembly: Mithril.API.Abstractions.dll Syntax public interface IQueryService Methods | Improve this Doc View Source FindQuery(string?) Finds the query specified. Declaration IQuery? FindQuery(string? name) Parameters Type Name Description string name The name of the query. Returns Type Description IQuery The query specified. Extension Methods ExpandoObjectExtensions.ConvertToExpando<TEntity>(TEntity?) GenericExtensions.When<TObject>(TObject, bool, Func<TObject, TObject>)"
  },
  "api/Mithril.API.Abstractions.Services.html": {
    "href": "api/Mithril.API.Abstractions.Services.html",
    "title": "Namespace Mithril.API.Abstractions.Services | Mithril API Reference",
    "keywords": "Namespace Mithril.API.Abstractions.Services Interfaces ICommandService Command service interface IDropDownQueryService Drop down query service IEventService Event service interface IQueryService Query service"
  },
  "api/Mithril.API.Commands.BackgroundTasks.CommandProcessorTask.html": {
    "href": "api/Mithril.API.Commands.BackgroundTasks.CommandProcessorTask.html",
    "title": "Class CommandProcessorTask | Mithril API Reference",
    "keywords": "Class CommandProcessorTask Command processor task Inheritance object CommandProcessorTask Implements IScheduledTask IBackgroundTask Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Mithril.API.Commands.BackgroundTasks Assembly: Mithril.API.Commands.dll Syntax public class CommandProcessorTask : IScheduledTask, IBackgroundTask Constructors | Improve this Doc View Source CommandProcessorTask(ICommandService?, IOptions<APIOptions>?) Initializes a new instance of the CommandProcessorTask class. Declaration public CommandProcessorTask(ICommandService? commandService, IOptions<APIOptions>? configuration) Parameters Type Name Description ICommandService commandService The command service. IOptions<APIOptions> configuration The configuration. See Also IHostedService IDisposable Properties | Improve this Doc View Source Frequencies Gets the frequencies. Declaration public IFrequency[] Frequencies { get; } Property Value Type Description IFrequency[] The frequencies. See Also IHostedService IDisposable | Improve this Doc View Source LastRunTime Gets the last run time. Declaration public DateTime LastRunTime { get; set; } Property Value Type Description DateTime The last run time. See Also IHostedService IDisposable | Improve this Doc View Source Name Gets the name. Declaration public string Name { get; } Property Value Type Description string The name. See Also IHostedService IDisposable Methods | Improve this Doc View Source ExecuteAsync() Executes the asynchronous. Declaration public Task ExecuteAsync() Returns Type Description Task See Also IHostedService IDisposable Implements IScheduledTask IBackgroundTask Extension Methods ExpandoObjectExtensions.ConvertToExpando<TEntity>(TEntity?) GenericExtensions.When<TObject>(TObject, bool, Func<TObject, TObject>) See Also IHostedService IDisposable"
  },
  "api/Mithril.API.Commands.BackgroundTasks.EventProcessorTask.html": {
    "href": "api/Mithril.API.Commands.BackgroundTasks.EventProcessorTask.html",
    "title": "Class EventProcessorTask | Mithril API Reference",
    "keywords": "Class EventProcessorTask Event processor task Inheritance object EventProcessorTask Implements IScheduledTask IBackgroundTask Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Mithril.API.Commands.BackgroundTasks Assembly: Mithril.API.Commands.dll Syntax public class EventProcessorTask : IScheduledTask, IBackgroundTask Constructors | Improve this Doc View Source EventProcessorTask(IEventService?, IOptions<APIOptions>?) Initializes a new instance of the EventProcessorTask class. Declaration public EventProcessorTask(IEventService? eventService, IOptions<APIOptions>? configuration) Parameters Type Name Description IEventService eventService The event service. IOptions<APIOptions> configuration The configuration. See Also IHostedService IDisposable Properties | Improve this Doc View Source Frequencies Gets the frequencies that the task is run at. Declaration public IFrequency[] Frequencies { get; } Property Value Type Description IFrequency[] The frequencies the task is run at. See Also IHostedService IDisposable | Improve this Doc View Source LastRunTime Gets the last run time. Declaration public DateTime LastRunTime { get; set; } Property Value Type Description DateTime The last run time. See Also IHostedService IDisposable | Improve this Doc View Source Name Gets the name. Declaration public string Name { get; } Property Value Type Description string The name. See Also IHostedService IDisposable Methods | Improve this Doc View Source ExecuteAsync() Executes this instance. Declaration public Task ExecuteAsync() Returns Type Description Task Async task. See Also IHostedService IDisposable Implements IScheduledTask IBackgroundTask Extension Methods ExpandoObjectExtensions.ConvertToExpando<TEntity>(TEntity?) GenericExtensions.When<TObject>(TObject, bool, Func<TObject, TObject>) See Also IHostedService IDisposable"
  },
  "api/Mithril.API.Commands.BackgroundTasks.html": {
    "href": "api/Mithril.API.Commands.BackgroundTasks.html",
    "title": "Namespace Mithril.API.Commands.BackgroundTasks | Mithril API Reference",
    "keywords": "Namespace Mithril.API.Commands.BackgroundTasks Classes CommandProcessorTask Command processor task EventProcessorTask Event processor task"
  },
  "api/Mithril.API.Commands.CommandModule.html": {
    "href": "api/Mithril.API.Commands.CommandModule.html",
    "title": "Class CommandModule | Mithril API Reference",
    "keywords": "Class CommandModule Command module Inheritance object ModuleBaseClass<CommandModule> CommandModule Implements IEquatable<CommandModule> IModule Inherited Members ModuleBaseClass<CommandModule>.Category ModuleBaseClass<CommandModule>.ContentPath ModuleBaseClass<CommandModule>.Features ModuleBaseClass<CommandModule>.ID ModuleBaseClass<CommandModule>.LastModified ModuleBaseClass<CommandModule>.Name ModuleBaseClass<CommandModule>.Order ModuleBaseClass<CommandModule>.Tags ModuleBaseClass<CommandModule>.Version ModuleBaseClass<CommandModule>.ConfigureApplication(IApplicationBuilder, IConfiguration, IHostEnvironment) ModuleBaseClass<CommandModule>.ConfigureHostSettings(IHostBuilder, IConfiguration, IHostEnvironment) ModuleBaseClass<CommandModule>.ConfigureLoggingSettings(ILoggingBuilder, IConfiguration, IHostEnvironment) ModuleBaseClass<CommandModule>.ConfigureWebHostSettings(IWebHostBuilder, IConfiguration, IHostEnvironment) ModuleBaseClass<CommandModule>.Equals(object) ModuleBaseClass<CommandModule>.Equals(CommandModule) ModuleBaseClass<CommandModule>.GetHashCode() ModuleBaseClass<CommandModule>.InitializeDataAsync(IDataService, IServiceProvider) ModuleBaseClass<CommandModule>.OnStarted() ModuleBaseClass<CommandModule>.OnStopped() ModuleBaseClass<CommandModule>.OnStopping() object.Equals(object, object) object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Mithril.API.Commands Assembly: Mithril.API.Commands.dll Syntax public class CommandModule : ModuleBaseClass<CommandModule>, IEquatable<CommandModule>, IModule Constructors | Improve this Doc View Source CommandModule() Initializes a new instance of the CommandModule class. Declaration public CommandModule() See Also ModuleBaseClass<TModule> Methods | Improve this Doc View Source ConfigureMVC(IMvcBuilder?, IConfiguration?, IHostEnvironment?) Configures the MVC. Declaration public override IMvcBuilder? ConfigureMVC(IMvcBuilder? mvcBuilder, IConfiguration? configuration, IHostEnvironment? environment) Parameters Type Name Description IMvcBuilder mvcBuilder The MVC builder. IConfiguration configuration The configuration. IHostEnvironment environment The environment. Returns Type Description IMvcBuilder MVC Builder Overrides ModuleBaseClass<CommandModule>.ConfigureMVC(IMvcBuilder, IConfiguration, IHostEnvironment) See Also ModuleBaseClass<TModule> | Improve this Doc View Source ConfigureRoutes(IEndpointRouteBuilder?, IConfiguration?, IHostEnvironment?) Configures the routes. Declaration public override IEndpointRouteBuilder? ConfigureRoutes(IEndpointRouteBuilder? endpoints, IConfiguration? configuration, IHostEnvironment? environment) Parameters Type Name Description IEndpointRouteBuilder endpoints The endpoints. IConfiguration configuration The configuration. IHostEnvironment environment The environment. Returns Type Description IEndpointRouteBuilder Endpoint route builder Overrides ModuleBaseClass<CommandModule>.ConfigureRoutes(IEndpointRouteBuilder, IConfiguration, IHostEnvironment) See Also ModuleBaseClass<TModule> | Improve this Doc View Source ConfigureServices(IServiceCollection?, IConfiguration?, IHostEnvironment?) Configures the services for the module. Declaration public override IServiceCollection? ConfigureServices(IServiceCollection? services, IConfiguration? configuration, IHostEnvironment? environment) Parameters Type Name Description IServiceCollection services The services collection. IConfiguration configuration The configuration. IHostEnvironment environment The environment. Returns Type Description IServiceCollection Services Overrides ModuleBaseClass<CommandModule>.ConfigureServices(IServiceCollection, IConfiguration, IHostEnvironment) See Also ModuleBaseClass<TModule> Implements IEquatable<T> IModule Extension Methods ExpandoObjectExtensions.ConvertToExpando<TEntity>(TEntity?) GenericExtensions.When<TObject>(TObject, bool, Func<TObject, TObject>) See Also ModuleBaseClass<TModule>"
  },
  "api/Mithril.API.Commands.Endpoint.CommandEndpoint.html": {
    "href": "api/Mithril.API.Commands.Endpoint.CommandEndpoint.html",
    "title": "Class CommandEndpoint | Mithril API Reference",
    "keywords": "Class CommandEndpoint Command endpoint Inheritance object CommandEndpoint Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Mithril.API.Commands.Endpoint Assembly: Mithril.API.Commands.dll Syntax public static class CommandEndpoint Methods | Improve this Doc View Source RequestDelegate<TViewModel>(IDataService, ILogger, ClaimsPrincipal, ICommandHandler<TViewModel>, TViewModel) Requests the delegate. Declaration public static Task<IResult> RequestDelegate<TViewModel>(IDataService dataService, ILogger logger, ClaimsPrincipal user, ICommandHandler<TViewModel> commandHandler, TViewModel value) Parameters Type Name Description IDataService dataService The data service. ILogger logger The logger. ClaimsPrincipal user The user. ICommandHandler<TViewModel> commandHandler The command handler. TViewModel value The value. Returns Type Description Task<IResult> Type Parameters Name Description TViewModel The type of the view model."
  },
  "api/Mithril.API.Commands.Endpoint.ReturnedResult.html": {
    "href": "api/Mithril.API.Commands.Endpoint.ReturnedResult.html",
    "title": "Class ReturnedResult | Mithril API Reference",
    "keywords": "Class ReturnedResult Result of the command call Inheritance object ReturnedResult Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Mithril.API.Commands.Endpoint Assembly: Mithril.API.Commands.dll Syntax public class ReturnedResult Properties | Improve this Doc View Source Result Gets or sets the result. Declaration public string? Result { get; set; } Property Value Type Description string The result. Extension Methods ExpandoObjectExtensions.ConvertToExpando<TEntity>(TEntity?) GenericExtensions.When<TObject>(TObject, bool, Func<TObject, TObject>)"
  },
  "api/Mithril.API.Commands.Endpoint.html": {
    "href": "api/Mithril.API.Commands.Endpoint.html",
    "title": "Namespace Mithril.API.Commands.Endpoint | Mithril API Reference",
    "keywords": "Namespace Mithril.API.Commands.Endpoint Classes CommandEndpoint Command endpoint ReturnedResult Result of the command call"
  },
  "api/Mithril.API.Commands.Services.CommandService.html": {
    "href": "api/Mithril.API.Commands.Services.CommandService.html",
    "title": "Class CommandService | Mithril API Reference",
    "keywords": "Class CommandService Command service Inheritance object CommandService Implements ICommandService Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Mithril.API.Commands.Services Assembly: Mithril.API.Commands.dll Syntax public class CommandService : ICommandService Constructors | Improve this Doc View Source CommandService(IEnumerable<ICommandHandler>, ILogger<CommandService>?, IOptions<APIOptions>?, IDataService?, ISecurityService?) Initializes a new instance of the CommandService class. Declaration public CommandService(IEnumerable<ICommandHandler> commandHandlers, ILogger<CommandService>? logger, IOptions<APIOptions>? configuration, IDataService? dataService, ISecurityService? securityService) Parameters Type Name Description IEnumerable<ICommandHandler> commandHandlers The command handlers. ILogger<CommandService> logger The logger. IOptions<APIOptions> configuration The configuration. IDataService dataService The data service. ISecurityService securityService The security service. See Also ICommandService Methods | Improve this Doc View Source ProcessAsync() Runs this instance. Declaration public Task ProcessAsync() Returns Type Description Task See Also ICommandService Implements ICommandService Extension Methods ExpandoObjectExtensions.ConvertToExpando<TEntity>(TEntity?) GenericExtensions.When<TObject>(TObject, bool, Func<TObject, TObject>) See Also ICommandService"
  },
  "api/Mithril.API.Commands.Services.EventService.html": {
    "href": "api/Mithril.API.Commands.Services.EventService.html",
    "title": "Class EventService | Mithril API Reference",
    "keywords": "Class EventService Event service Inheritance object EventService Implements IEventService Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Mithril.API.Commands.Services Assembly: Mithril.API.Commands.dll Syntax public class EventService : IEventService Constructors | Improve this Doc View Source EventService(IEnumerable<IEventHandler>, ILogger<EventService>?, IOptions<APIOptions>?, IDataService?, ISecurityService?) Initializes a new instance of the EventService class. Declaration public EventService(IEnumerable<IEventHandler> eventHandlers, ILogger<EventService>? logger, IOptions<APIOptions>? configuration, IDataService? dataService, ISecurityService? securityService) Parameters Type Name Description IEnumerable<IEventHandler> eventHandlers The event handlers. ILogger<EventService> logger The logger. IOptions<APIOptions> configuration The configuration. IDataService dataService The data service. ISecurityService securityService The security service. See Also IEventService Methods | Improve this Doc View Source ProcessAsync() Runs this instance. Declaration public Task ProcessAsync() Returns Type Description Task See Also IEventService Implements IEventService Extension Methods ExpandoObjectExtensions.ConvertToExpando<TEntity>(TEntity?) GenericExtensions.When<TObject>(TObject, bool, Func<TObject, TObject>) See Also IEventService"
  },
  "api/Mithril.API.Commands.Services.html": {
    "href": "api/Mithril.API.Commands.Services.html",
    "title": "Namespace Mithril.API.Commands.Services | Mithril API Reference",
    "keywords": "Namespace Mithril.API.Commands.Services Classes CommandService Command service EventService Event service"
  },
  "api/Mithril.API.Commands.Utils.CommandEndpointBuilder.html": {
    "href": "api/Mithril.API.Commands.Utils.CommandEndpointBuilder.html",
    "title": "Class CommandEndpointBuilder | Mithril API Reference",
    "keywords": "Class CommandEndpointBuilder Command endpoint builder Inheritance object CommandEndpointBuilder Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Mithril.API.Commands.Utils Assembly: Mithril.API.Commands.dll Syntax public static class CommandEndpointBuilder Methods | Improve this Doc View Source SetupEndPoint<TViewModel>(IEndpointRouteBuilder?, string, ICommandHandler<TViewModel>, MithrilConfig?, APIOptions?) Setups the end point. Declaration public static void SetupEndPoint<TViewModel>(IEndpointRouteBuilder? endpoints, string commandEndPoint, ICommandHandler<TViewModel> commandHandler, MithrilConfig? config, APIOptions? apiOptions) where TViewModel : notnull Parameters Type Name Description IEndpointRouteBuilder endpoints The endpoints. string commandEndPoint The command end point. ICommandHandler<TViewModel> commandHandler The command handler. MithrilConfig config The configuration. APIOptions apiOptions The API options. Type Parameters Name Description TViewModel The type of the view model."
  },
  "api/Mithril.API.Commands.Utils.html": {
    "href": "api/Mithril.API.Commands.Utils.html",
    "title": "Namespace Mithril.API.Commands.Utils | Mithril API Reference",
    "keywords": "Namespace Mithril.API.Commands.Utils Classes CommandEndpointBuilder Command endpoint builder"
  },
  "api/Mithril.API.Commands.html": {
    "href": "api/Mithril.API.Commands.html",
    "title": "Namespace Mithril.API.Commands | Mithril API Reference",
    "keywords": "Namespace Mithril.API.Commands Classes CommandModule Command module"
  },
  "api/Mithril.API.GraphQL.Authorization.GraphQLUserContextBuilder.html": {
    "href": "api/Mithril.API.GraphQL.Authorization.GraphQLUserContextBuilder.html",
    "title": "Class GraphQLUserContextBuilder | Mithril API Reference",
    "keywords": "Class GraphQLUserContextBuilder User context builder Inheritance object GraphQLUserContextBuilder Implements IUserContextBuilder Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Mithril.API.GraphQL.Authorization Assembly: Mithril.API.GraphQL.dll Syntax public class GraphQLUserContextBuilder : IUserContextBuilder Methods | Improve this Doc View Source BuildUserContextAsync(HttpContext, object?) Builds the user context object. Declaration public ValueTask<IDictionary<string, object?>?> BuildUserContextAsync(HttpContext context, object? payload) Parameters Type Name Description HttpContext context The HttpContext of the HTTP connection. object payload The payload of the WebSocket connection request, if applicable. Typically this is either null or an object that has not fully been deserialized yet; when using the Newtonsoft.Json deserializer, this will be a JObject, and when using System.Text.Json this will be a JsonElement. You may call ReadNode<T>(object) to deserialize the node into the expected type. To deserialize into a nested set of IDictionary<string, object?> maps, call ReadNode<T>(object) with GraphQL.Inputs as the generic type. To determine if this is a WebSocket connection request, check context. WebSockets. IsWebSocketRequest. Returns Type Description ValueTask<IDictionary<string, object>> Dictionary object representing user context. Return null to use default user context. See Also IUserContextBuilder Implements GraphQL.Server.Transports.AspNetCore.IUserContextBuilder Extension Methods ExpandoObjectExtensions.ConvertToExpando<TEntity>(TEntity?) GenericExtensions.When<TObject>(TObject, bool, Func<TObject, TObject>) See Also IUserContextBuilder"
  },
  "api/Mithril.API.GraphQL.Authorization.GraphQLUserContextDictionary.html": {
    "href": "api/Mithril.API.GraphQL.Authorization.GraphQLUserContextDictionary.html",
    "title": "Class GraphQLUserContextDictionary | Mithril API Reference",
    "keywords": "Class GraphQLUserContextDictionary GraphQL User Context Holder Inheritance object Dictionary<string, object> GraphQLUserContextDictionary Implements IDictionary<string, object> ICollection<KeyValuePair<string, object>> IReadOnlyDictionary<string, object> IReadOnlyCollection<KeyValuePair<string, object>> IEnumerable<KeyValuePair<string, object>> IDictionary ICollection IEnumerable IDeserializationCallback ISerializable Inherited Members Dictionary<string, object>.Add(string, object) Dictionary<string, object>.Clear() Dictionary<string, object>.ContainsKey(string) Dictionary<string, object>.ContainsValue(object) Dictionary<string, object>.EnsureCapacity(int) Dictionary<string, object>.GetEnumerator() Dictionary<string, object>.GetObjectData(SerializationInfo, StreamingContext) Dictionary<string, object>.OnDeserialization(object) Dictionary<string, object>.Remove(string) Dictionary<string, object>.Remove(string, out object) Dictionary<string, object>.TrimExcess() Dictionary<string, object>.TrimExcess(int) Dictionary<string, object>.TryAdd(string, object) Dictionary<string, object>.TryGetValue(string, out object) Dictionary<string, object>.Comparer Dictionary<string, object>.Count Dictionary<string, object>.this[string] Dictionary<string, object>.Keys Dictionary<string, object>.Values object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Mithril.API.GraphQL.Authorization Assembly: Mithril.API.GraphQL.dll Syntax public class GraphQLUserContextDictionary : Dictionary<string, object?>, IDictionary<string, object?>, ICollection<KeyValuePair<string, object?>>, IReadOnlyDictionary<string, object?>, IReadOnlyCollection<KeyValuePair<string, object?>>, IEnumerable<KeyValuePair<string, object?>>, IDictionary, ICollection, IEnumerable, IDeserializationCallback, ISerializable Constructors | Improve this Doc View Source GraphQLUserContextDictionary(ClaimsPrincipal?) Initializes a new instance of the GraphQLUserContextDictionary class. Declaration public GraphQLUserContextDictionary(ClaimsPrincipal? user) Parameters Type Name Description ClaimsPrincipal user The user. See Also Dictionary<TKey, TValue> Properties | Improve this Doc View Source User Gets the user. Declaration public ClaimsPrincipal? User { get; } Property Value Type Description ClaimsPrincipal The user. See Also Dictionary<TKey, TValue> Implements IDictionary<TKey, TValue> ICollection<T> IReadOnlyDictionary<TKey, TValue> IReadOnlyCollection<T> IEnumerable<T> IDictionary ICollection IEnumerable IDeserializationCallback ISerializable Extension Methods ExpandoObjectExtensions.ConvertToExpando<TEntity>(TEntity?) GenericExtensions.When<TObject>(TObject, bool, Func<TObject, TObject>) See Also Dictionary<TKey, TValue>"
  },
  "api/Mithril.API.GraphQL.Authorization.html": {
    "href": "api/Mithril.API.GraphQL.Authorization.html",
    "title": "Namespace Mithril.API.GraphQL.Authorization | Mithril API Reference",
    "keywords": "Namespace Mithril.API.GraphQL.Authorization Classes GraphQLUserContextBuilder User context builder GraphQLUserContextDictionary GraphQL User Context Holder"
  },
  "api/Mithril.API.GraphQL.GraphQLModule.html": {
    "href": "api/Mithril.API.GraphQL.GraphQLModule.html",
    "title": "Class GraphQLModule | Mithril API Reference",
    "keywords": "Class GraphQLModule API Module Inheritance object ModuleBaseClass<GraphQLModule> GraphQLModule Implements IEquatable<GraphQLModule> IModule Inherited Members ModuleBaseClass<GraphQLModule>.Category ModuleBaseClass<GraphQLModule>.ContentPath ModuleBaseClass<GraphQLModule>.Features ModuleBaseClass<GraphQLModule>.ID ModuleBaseClass<GraphQLModule>.LastModified ModuleBaseClass<GraphQLModule>.Name ModuleBaseClass<GraphQLModule>.Tags ModuleBaseClass<GraphQLModule>.Version ModuleBaseClass<GraphQLModule>.ConfigureHostSettings(IHostBuilder, IConfiguration, IHostEnvironment) ModuleBaseClass<GraphQLModule>.ConfigureLoggingSettings(ILoggingBuilder, IConfiguration, IHostEnvironment) ModuleBaseClass<GraphQLModule>.ConfigureMVC(IMvcBuilder, IConfiguration, IHostEnvironment) ModuleBaseClass<GraphQLModule>.ConfigureWebHostSettings(IWebHostBuilder, IConfiguration, IHostEnvironment) ModuleBaseClass<GraphQLModule>.Equals(object) ModuleBaseClass<GraphQLModule>.Equals(GraphQLModule) ModuleBaseClass<GraphQLModule>.GetHashCode() ModuleBaseClass<GraphQLModule>.InitializeDataAsync(IDataService, IServiceProvider) ModuleBaseClass<GraphQLModule>.OnStarted() ModuleBaseClass<GraphQLModule>.OnStopped() ModuleBaseClass<GraphQLModule>.OnStopping() object.Equals(object, object) object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Mithril.API.GraphQL Assembly: Mithril.API.GraphQL.dll Syntax public class GraphQLModule : ModuleBaseClass<GraphQLModule>, IEquatable<GraphQLModule>, IModule Constructors | Improve this Doc View Source GraphQLModule() Initializes a new instance of the GraphQLModule class. Declaration public GraphQLModule() See Also ModuleBaseClass<TModule> Properties | Improve this Doc View Source Order Gets the order that they are initialized in. Declaration public override int Order { get; } Property Value Type Description int The order that they are initialized in. Overrides ModuleBaseClass<GraphQLModule>.Order See Also ModuleBaseClass<TModule> Methods | Improve this Doc View Source ConfigureApplication(IApplicationBuilder?, IConfiguration?, IHostEnvironment?) Configures the application. Declaration public override IApplicationBuilder? ConfigureApplication(IApplicationBuilder? app, IConfiguration? configuration, IHostEnvironment? environment) Parameters Type Name Description IApplicationBuilder app The application. IConfiguration configuration The configuration. IHostEnvironment environment The environment. Returns Type Description IApplicationBuilder Application builder Overrides ModuleBaseClass<GraphQLModule>.ConfigureApplication(IApplicationBuilder, IConfiguration, IHostEnvironment) See Also ModuleBaseClass<TModule> | Improve this Doc View Source ConfigureRoutes(IEndpointRouteBuilder?, IConfiguration?, IHostEnvironment?) Configures the routes. Declaration public override IEndpointRouteBuilder? ConfigureRoutes(IEndpointRouteBuilder? endpoints, IConfiguration? configuration, IHostEnvironment? environment) Parameters Type Name Description IEndpointRouteBuilder endpoints The endpoints. IConfiguration configuration The configuration. IHostEnvironment environment The environment. Returns Type Description IEndpointRouteBuilder Endpoint route builder Overrides ModuleBaseClass<GraphQLModule>.ConfigureRoutes(IEndpointRouteBuilder, IConfiguration, IHostEnvironment) See Also ModuleBaseClass<TModule> | Improve this Doc View Source ConfigureServices(IServiceCollection?, IConfiguration?, IHostEnvironment?) Configures the services for the module. Declaration public override IServiceCollection? ConfigureServices(IServiceCollection? services, IConfiguration? configuration, IHostEnvironment? environment) Parameters Type Name Description IServiceCollection services The services collection. IConfiguration configuration The configuration. IHostEnvironment environment The environment. Returns Type Description IServiceCollection Services Overrides ModuleBaseClass<GraphQLModule>.ConfigureServices(IServiceCollection, IConfiguration, IHostEnvironment) See Also ModuleBaseClass<TModule> Implements IEquatable<T> IModule Extension Methods ExpandoObjectExtensions.ConvertToExpando<TEntity>(TEntity?) GenericExtensions.When<TObject>(TObject, bool, Func<TObject, TObject>) See Also ModuleBaseClass<TModule>"
  },
  "api/Mithril.API.GraphQL.GraphTypes.Builder.GraphTypeManager.html": {
    "href": "api/Mithril.API.GraphQL.GraphTypes.Builder.GraphTypeManager.html",
    "title": "Class GraphTypeManager | Mithril API Reference",
    "keywords": "Class GraphTypeManager GraphType manager Inheritance object GraphTypeManager Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Mithril.API.GraphQL.GraphTypes.Builder Assembly: Mithril.API.GraphQL.dll Syntax public class GraphTypeManager Constructors | Improve this Doc View Source GraphTypeManager() Initializes a new instance of the GraphTypeManager class. Declaration public GraphTypeManager() Methods | Improve this Doc View Source GetGraphType(Type) Gets the graph type associated with the type of the object. Declaration public GraphType? GetGraphType(Type objectType) Parameters Type Name Description Type objectType Type of the object. Returns Type Description GraphType The graph type. | Improve this Doc View Source GetGraphType<TObject>() Gets the graph type associated with the type of the object. Declaration public GraphType? GetGraphType<TObject>() Returns Type Description GraphType The graph type. Type Parameters Name Description TObject The type of the object. Extension Methods ExpandoObjectExtensions.ConvertToExpando<TEntity>(TEntity?) GenericExtensions.When<TObject>(TObject, bool, Func<TObject, TObject>)"
  },
  "api/Mithril.API.GraphQL.GraphTypes.Builder.TypeCacheFor-1.html": {
    "href": "api/Mithril.API.GraphQL.GraphTypes.Builder.TypeCacheFor-1.html",
    "title": "Class TypeCacheFor<T> | Mithril API Reference",
    "keywords": "Class TypeCacheFor<T> Type cache info Inheritance object TypeCacheFor<T> Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Mithril.API.GraphQL.GraphTypes.Builder Assembly: Mithril.API.GraphQL.dll Syntax public static class TypeCacheFor<T> Type Parameters Name Description T Type to cache. Fields | Improve this Doc View Source Interfaces The interfaces Declaration public static readonly Type[] Interfaces Field Value Type Description Type[] | Improve this Doc View Source Methods The methods Declaration public static readonly MethodInfo[] Methods Field Value Type Description MethodInfo[] | Improve this Doc View Source Properties The properties Declaration public static readonly PropertyInfo[] Properties Field Value Type Description PropertyInfo[] | Improve this Doc View Source Type The type Declaration public static readonly Type Type Field Value Type Description Type"
  },
  "api/Mithril.API.GraphQL.GraphTypes.Builder.html": {
    "href": "api/Mithril.API.GraphQL.GraphTypes.Builder.html",
    "title": "Namespace Mithril.API.GraphQL.GraphTypes.Builder | Mithril API Reference",
    "keywords": "Namespace Mithril.API.GraphQL.GraphTypes.Builder Classes GraphTypeManager GraphType manager TypeCacheFor<T> Type cache info"
  },
  "api/Mithril.API.GraphQL.GraphTypes.CompositeQuery.html": {
    "href": "api/Mithril.API.GraphQL.GraphTypes.CompositeQuery.html",
    "title": "Class CompositeQuery | Mithril API Reference",
    "keywords": "Class CompositeQuery Composite query that creates the root node. Inheritance object MetadataProvider GraphType ComplexGraphType<object> ObjectGraphType<object> ObjectGraphType CompositeQuery Implements IObjectGraphType IComplexGraphType IGraphType IProvideMetadata IProvideDescription IProvideDeprecationReason INamedType IImplementInterfaces Inherited Members ObjectGraphType<object>.AddResolvedInterface(IInterfaceGraphType) ObjectGraphType<object>.Interface<TInterface>() ObjectGraphType<object>.Interface(Type) ObjectGraphType<object>.IsTypeOf ObjectGraphType<object>.Interfaces ObjectGraphType<object>.ResolvedInterfaces ComplexGraphType<object>.HasField(string) ComplexGraphType<object>.GetField(ROM) ComplexGraphType<object>.AddField(FieldType) ComplexGraphType<object>.CreateBuilder<TReturnType>(Type) ComplexGraphType<object>.CreateBuilder<TReturnType>(IGraphType) ComplexGraphType<object>.Field(Type, string, string, QueryArguments, Func<IResolveFieldContext<object>, object>, string) ComplexGraphType<object>.Field<TGraphType>(string, string, QueryArguments, Func<IResolveFieldContext<object>, object>, string) ComplexGraphType<object>.FieldDelegate<TGraphType>(string, string, QueryArguments, Delegate, string) ComplexGraphType<object>.FieldAsync(Type, string, string, QueryArguments, Func<IResolveFieldContext<object>, Task<object>>, string) ComplexGraphType<object>.FieldAsync<TGraphType>(string, string, QueryArguments, Func<IResolveFieldContext<object>, Task<object>>, string) ComplexGraphType<object>.FieldAsync<TGraphType, TReturnType>(string, string, QueryArguments, Func<IResolveFieldContext<object>, Task<TReturnType>>, string) ComplexGraphType<object>.FieldSubscribe<TGraphType>(string, string, QueryArguments, Func<IResolveFieldContext<object>, object>, Func<IResolveFieldContext, IObservable<object>>, string) ComplexGraphType<object>.FieldSubscribeAsync<TGraphType>(string, string, QueryArguments, Func<IResolveFieldContext<object>, object>, Func<IResolveFieldContext, Task<IObservable<object>>>, string) ComplexGraphType<object>.Field<TGraphType, TReturnType>(string) ComplexGraphType<object>.Field<TGraphType, TReturnType>() ComplexGraphType<object>.Field<TGraphType>() ComplexGraphType<object>.Field<TGraphType>(string) ComplexGraphType<object>.Field<TReturnType>(string, bool) ComplexGraphType<object>.Field(string, Type) ComplexGraphType<object>.Field(string, IGraphType) ComplexGraphType<object>.Field<TProperty>(string, Expression<Func<object, TProperty>>, bool, Type) ComplexGraphType<object>.Field<TProperty>(Expression<Func<object, TProperty>>, bool, Type) ComplexGraphType<object>.Connection<TNodeType>() ComplexGraphType<object>.Connection<TNodeType, TEdgeType>() ComplexGraphType<object>.Connection<TNodeType, TEdgeType, TConnectionType>() ComplexGraphType<object>.Fields GraphType.Initialize(ISchema) GraphType.ToString() GraphType.Equals(IGraphType) GraphType.Equals(object) GraphType.GetHashCode() GraphType.Name GraphType.Description GraphType.DeprecationReason MetadataProvider.GetMetadata<TType>(string, TType) MetadataProvider.GetMetadata<TType>(string, Func<TType>) MetadataProvider.HasMetadata(string) MetadataProvider.CopyMetadataTo(IProvideMetadata) MetadataProvider.Metadata object.Equals(object, object) object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Namespace: Mithril.API.GraphQL.GraphTypes Assembly: Mithril.API.GraphQL.dll Syntax public class CompositeQuery : ObjectGraphType, IObjectGraphType, IComplexGraphType, IGraphType, IProvideMetadata, IProvideDescription, IProvideDeprecationReason, INamedType, IImplementInterfaces Constructors | Improve this Doc View Source CompositeQuery(IEnumerable<IQuery>) Initializes a new instance of the CompositeQuery class. Declaration public CompositeQuery(IEnumerable<IQuery> queries) Parameters Type Name Description IEnumerable<IQuery> queries The queries. See Also ObjectGraphType Implements GraphQL.Types.IObjectGraphType GraphQL.Types.IComplexGraphType GraphQL.Types.IGraphType GraphQL.Types.IProvideMetadata GraphQL.Types.IProvideDescription GraphQL.Types.IProvideDeprecationReason GraphQL.Types.INamedType GraphQL.Types.IImplementInterfaces Extension Methods ExpandoObjectExtensions.ConvertToExpando<TEntity>(TEntity?) GenericExtensions.When<TObject>(TObject, bool, Func<TObject, TObject>) See Also ObjectGraphType"
  },
  "api/Mithril.API.GraphQL.GraphTypes.ExtensionMethods.FieldTypeExtensions.html": {
    "href": "api/Mithril.API.GraphQL.GraphTypes.ExtensionMethods.FieldTypeExtensions.html",
    "title": "Class FieldTypeExtensions | Mithril API Reference",
    "keywords": "Class FieldTypeExtensions FieldType extensions Inheritance object FieldTypeExtensions Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Mithril.API.GraphQL.GraphTypes.ExtensionMethods Assembly: Mithril.API.GraphQL.dll Syntax public static class FieldTypeExtensions Methods | Improve this Doc View Source SetSecurity(FieldType?, MemberInfo?) Sets the security. Declaration public static FieldType? SetSecurity(this FieldType? fieldBuilder, MemberInfo? memberInfo) Parameters Type Name Description FieldType fieldBuilder The field builder. MemberInfo memberInfo The member information. Returns Type Description FieldType The field builder | Improve this Doc View Source SetSecurity<TClass, TReturn>(FieldBuilder<TClass, TReturn>?, MemberInfo?) Sets the security. Declaration public static FieldBuilder<TClass, TReturn>? SetSecurity<TClass, TReturn>(this FieldBuilder<TClass, TReturn>? fieldBuilder, MemberInfo? memberInfo) Parameters Type Name Description FieldBuilder<TClass, TReturn> fieldBuilder The field builder. MemberInfo memberInfo The member information. Returns Type Description FieldBuilder<TClass, TReturn> The field builder. Type Parameters Name Description TClass The type of the class. TReturn The type of the return."
  },
  "api/Mithril.API.GraphQL.GraphTypes.ExtensionMethods.IArgumentExtensions.html": {
    "href": "api/Mithril.API.GraphQL.GraphTypes.ExtensionMethods.IArgumentExtensions.html",
    "title": "Class IArgumentExtensions | Mithril API Reference",
    "keywords": "Class IArgumentExtensions IArgument extensions Inheritance object IArgumentExtensions Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Mithril.API.GraphQL.GraphTypes.ExtensionMethods Assembly: Mithril.API.GraphQL.dll Syntax public static class IArgumentExtensions Methods | Improve this Doc View Source CreateArgument(IArgument) Creates the argument object. Declaration public static QueryArgument? CreateArgument(this IArgument argument) Parameters Type Name Description IArgument argument The x. Returns Type Description QueryArgument The query argument."
  },
  "api/Mithril.API.GraphQL.GraphTypes.ExtensionMethods.MemberInfoExtensions.html": {
    "href": "api/Mithril.API.GraphQL.GraphTypes.ExtensionMethods.MemberInfoExtensions.html",
    "title": "Class MemberInfoExtensions | Mithril API Reference",
    "keywords": "Class MemberInfoExtensions MemberInfo extension methods Inheritance object MemberInfoExtensions Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Mithril.API.GraphQL.GraphTypes.ExtensionMethods Assembly: Mithril.API.GraphQL.dll Syntax public static class MemberInfoExtensions Methods | Improve this Doc View Source GetDeprecationReason(MemberInfo) Gets the deprecation reason. Declaration public static string? GetDeprecationReason(this MemberInfo memberInfo) Parameters Type Name Description MemberInfo memberInfo The member information. Returns Type Description string The deprecation reason | Improve this Doc View Source GetDescription(MemberInfo) Gets the description. Declaration public static string GetDescription(this MemberInfo memberInfo) Parameters Type Name Description MemberInfo memberInfo The member information. Returns Type Description string The API description. | Improve this Doc View Source GetDescription(MethodInfo) Gets the description for the method. Declaration public static string GetDescription(this MethodInfo memberInfo) Parameters Type Name Description MethodInfo memberInfo The member information. Returns Type Description string The description. | Improve this Doc View Source GetDescription(PropertyInfo) Gets the description for the property. Declaration public static string GetDescription(this PropertyInfo memberInfo) Parameters Type Name Description PropertyInfo memberInfo The member information. Returns Type Description string The description. | Improve this Doc View Source GetDescription(Type) Gets the description. Declaration public static string GetDescription(this Type memberInfo) Parameters Type Name Description Type memberInfo The member information. Returns Type Description string The API description. | Improve this Doc View Source GetName(MemberInfo) Gets the name. Declaration public static string GetName(this MemberInfo memberInfo) Parameters Type Name Description MemberInfo memberInfo The member information. Returns Type Description string The name of the MemberInfo"
  },
  "api/Mithril.API.GraphQL.GraphTypes.ExtensionMethods.ParameterInfoExtensions.html": {
    "href": "api/Mithril.API.GraphQL.GraphTypes.ExtensionMethods.ParameterInfoExtensions.html",
    "title": "Class ParameterInfoExtensions | Mithril API Reference",
    "keywords": "Class ParameterInfoExtensions ParameterInfo extensions Inheritance object ParameterInfoExtensions Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Mithril.API.GraphQL.GraphTypes.ExtensionMethods Assembly: Mithril.API.GraphQL.dll Syntax public static class ParameterInfoExtensions Methods | Improve this Doc View Source ToQueryArgument(ParameterInfo) Creates the query argument object. Declaration public static QueryArgument? ToQueryArgument(this ParameterInfo parameterInfo) Parameters Type Name Description ParameterInfo parameterInfo The parameter information. Returns Type Description QueryArgument The query argument."
  },
  "api/Mithril.API.GraphQL.GraphTypes.ExtensionMethods.TypeExtensions.html": {
    "href": "api/Mithril.API.GraphQL.GraphTypes.ExtensionMethods.TypeExtensions.html",
    "title": "Class TypeExtensions | Mithril API Reference",
    "keywords": "Class TypeExtensions Type extensions Inheritance object TypeExtensions Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Mithril.API.GraphQL.GraphTypes.ExtensionMethods Assembly: Mithril.API.GraphQL.dll Syntax public static class TypeExtensions Methods | Improve this Doc View Source FindGraphType(Type?) Finds the graph type associated with the C# type. Declaration public static Type? FindGraphType(this Type? type) Parameters Type Name Description Type type The property. Returns Type Description Type The graph type | Improve this Doc View Source GetMappableMethods(Type) Gets the methods that are mappable by the system. Declaration public static MethodInfo[] GetMappableMethods(this Type classType) Parameters Type Name Description Type classType Type of the class. Returns Type Description MethodInfo[] The methods. | Improve this Doc View Source GetMappableProperties(Type) Gets the mappable properties. Declaration public static PropertyInfo[] GetMappableProperties(this Type classType) Parameters Type Name Description Type classType Type of the class. Returns Type Description PropertyInfo[] The mappable properties | Improve this Doc View Source IsBuiltInType(Type?) Determines whether [is built in type] [the specified type]. Declaration public static bool IsBuiltInType(this Type? type) Parameters Type Name Description Type type The type. Returns Type Description bool true if [is built in type] [the specified type]; otherwise, false. | Improve this Doc View Source IsClassType(Type?) Determines whether [is class type] [the specified property type]. Declaration public static bool IsClassType(this Type? type) Parameters Type Name Description Type type Type of the property. Returns Type Description bool true if [is class type] [the specified property type]; otherwise, false. | Improve this Doc View Source IsExpando(Type?) Determines whether the specified property type is expando. Declaration public static bool IsExpando(this Type? type) Parameters Type Name Description Type type Type of the property. Returns Type Description bool true if the specified property type is expando; otherwise, false. | Improve this Doc View Source IsInterfaceType(Type?) Determines whether [is interface type] [the specified property type]. Declaration public static bool IsInterfaceType(this Type? type) Parameters Type Name Description Type type The type. Returns Type Description bool true if [is interface type] [the specified property type]; otherwise, false. | Improve this Doc View Source IsListType(Type?) Determines whether [is list type] [the specified property type]. Declaration public static bool IsListType(this Type? type) Parameters Type Name Description Type type The type. Returns Type Description bool true if [is list type] [the specified property type]; otherwise, false. | Improve this Doc View Source IsNullable(Type?) Determines whether the specified property is nullable. Declaration public static bool IsNullable(this Type? type) Parameters Type Name Description Type type The type. Returns Type Description bool true if the specified property is nullable; otherwise, false."
  },
  "api/Mithril.API.GraphQL.GraphTypes.ExtensionMethods.html": {
    "href": "api/Mithril.API.GraphQL.GraphTypes.ExtensionMethods.html",
    "title": "Namespace Mithril.API.GraphQL.GraphTypes.ExtensionMethods | Mithril API Reference",
    "keywords": "Namespace Mithril.API.GraphQL.GraphTypes.ExtensionMethods Classes FieldTypeExtensions FieldType extensions IArgumentExtensions IArgument extensions MemberInfoExtensions MemberInfo extension methods ParameterInfoExtensions ParameterInfo extensions TypeExtensions Type extensions"
  },
  "api/Mithril.API.GraphQL.GraphTypes.GenericGraphType-1.html": {
    "href": "api/Mithril.API.GraphQL.GraphTypes.GenericGraphType-1.html",
    "title": "Class GenericGraphType<TClass> | Mithril API Reference",
    "keywords": "Class GenericGraphType<TClass> Generic graph type Inheritance object MetadataProvider GraphType ComplexGraphType<TClass> ObjectGraphType<TClass> GenericGraphType<TClass> Implements IObjectGraphType IComplexGraphType IGraphType IProvideMetadata IProvideDescription IProvideDeprecationReason INamedType IImplementInterfaces Inherited Members ObjectGraphType<TClass>.AddResolvedInterface(IInterfaceGraphType) ObjectGraphType<TClass>.Interface<TInterface>() ObjectGraphType<TClass>.Interface(Type) ObjectGraphType<TClass>.IsTypeOf ObjectGraphType<TClass>.Interfaces ObjectGraphType<TClass>.ResolvedInterfaces ComplexGraphType<TClass>.HasField(string) ComplexGraphType<TClass>.GetField(ROM) ComplexGraphType<TClass>.AddField(FieldType) ComplexGraphType<TClass>.CreateBuilder<TReturnType>(Type) ComplexGraphType<TClass>.CreateBuilder<TReturnType>(IGraphType) ComplexGraphType<TClass>.Field(Type, string, string, QueryArguments, Func<IResolveFieldContext<TClass>, object>, string) ComplexGraphType<TClass>.Field<TGraphType>(string, string, QueryArguments, Func<IResolveFieldContext<TClass>, object>, string) ComplexGraphType<TClass>.FieldDelegate<TGraphType>(string, string, QueryArguments, Delegate, string) ComplexGraphType<TClass>.FieldAsync(Type, string, string, QueryArguments, Func<IResolveFieldContext<TClass>, Task<object>>, string) ComplexGraphType<TClass>.FieldAsync<TGraphType>(string, string, QueryArguments, Func<IResolveFieldContext<TClass>, Task<object>>, string) ComplexGraphType<TClass>.FieldAsync<TGraphType, TReturnType>(string, string, QueryArguments, Func<IResolveFieldContext<TClass>, Task<TReturnType>>, string) ComplexGraphType<TClass>.FieldSubscribe<TGraphType>(string, string, QueryArguments, Func<IResolveFieldContext<TClass>, object>, Func<IResolveFieldContext, IObservable<object>>, string) ComplexGraphType<TClass>.FieldSubscribeAsync<TGraphType>(string, string, QueryArguments, Func<IResolveFieldContext<TClass>, object>, Func<IResolveFieldContext, Task<IObservable<object>>>, string) ComplexGraphType<TClass>.Field<TGraphType, TReturnType>(string) ComplexGraphType<TClass>.Field<TGraphType, TReturnType>() ComplexGraphType<TClass>.Field<TGraphType>() ComplexGraphType<TClass>.Field<TGraphType>(string) ComplexGraphType<TClass>.Field<TReturnType>(string, bool) ComplexGraphType<TClass>.Field(string, Type) ComplexGraphType<TClass>.Field(string, IGraphType) ComplexGraphType<TClass>.Field<TProperty>(string, Expression<Func<TClass, TProperty>>, bool, Type) ComplexGraphType<TClass>.Field<TProperty>(Expression<Func<TClass, TProperty>>, bool, Type) ComplexGraphType<TClass>.Connection<TNodeType>() ComplexGraphType<TClass>.Connection<TNodeType, TEdgeType>() ComplexGraphType<TClass>.Connection<TNodeType, TEdgeType, TConnectionType>() ComplexGraphType<TClass>.Fields GraphType.Initialize(ISchema) GraphType.ToString() GraphType.Equals(IGraphType) GraphType.Equals(object) GraphType.GetHashCode() GraphType.Name GraphType.Description GraphType.DeprecationReason MetadataProvider.GetMetadata<TType>(string, TType) MetadataProvider.GetMetadata<TType>(string, Func<TType>) MetadataProvider.HasMetadata(string) MetadataProvider.CopyMetadataTo(IProvideMetadata) MetadataProvider.Metadata object.Equals(object, object) object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Namespace: Mithril.API.GraphQL.GraphTypes Assembly: Mithril.API.GraphQL.dll Syntax public class GenericGraphType<TClass> : ObjectGraphType<TClass>, IObjectGraphType, IComplexGraphType, IGraphType, IProvideMetadata, IProvideDescription, IProvideDeprecationReason, INamedType, IImplementInterfaces Type Parameters Name Description TClass The type of the class. Constructors | Improve this Doc View Source GenericGraphType() Initializes a new instance of the GenericGraphType<TClass> class. Declaration public GenericGraphType() See Also ObjectGraphType<TSourceType> | Improve this Doc View Source GenericGraphType(GraphTypeManager?) Initializes a new instance of the GenericGraphType<TClass> class. Declaration public GenericGraphType(GraphTypeManager? graphTypeManager) Parameters Type Name Description GraphTypeManager graphTypeManager See Also ObjectGraphType<TSourceType> Methods | Improve this Doc View Source AutoWire(GraphTypeManager) Automatically wires up known properties of the view model. Declaration public void AutoWire(GraphTypeManager graphTypeManager) Parameters Type Name Description GraphTypeManager graphTypeManager See Also ObjectGraphType<TSourceType> Implements GraphQL.Types.IObjectGraphType GraphQL.Types.IComplexGraphType GraphQL.Types.IGraphType GraphQL.Types.IProvideMetadata GraphQL.Types.IProvideDescription GraphQL.Types.IProvideDeprecationReason GraphQL.Types.INamedType GraphQL.Types.IImplementInterfaces Extension Methods ExpandoObjectExtensions.ConvertToExpando<TEntity>(TEntity?) GenericExtensions.When<TObject>(TObject, bool, Func<TObject, TObject>) See Also ObjectGraphType<TSourceType>"
  },
  "api/Mithril.API.GraphQL.GraphTypes.IGenericGraphType.html": {
    "href": "api/Mithril.API.GraphQL.GraphTypes.IGenericGraphType.html",
    "title": "Interface IGenericGraphType | Mithril API Reference",
    "keywords": "Interface IGenericGraphType Generic graph type Namespace: Mithril.API.GraphQL.GraphTypes Assembly: Mithril.API.GraphQL.dll Syntax public interface IGenericGraphType Methods | Improve this Doc View Source AutoWire(GraphTypeManager) Automatically wires up the graph type. Declaration void AutoWire(GraphTypeManager graphTypeManager) Parameters Type Name Description GraphTypeManager graphTypeManager The graph type manager. Extension Methods ExpandoObjectExtensions.ConvertToExpando<TEntity>(TEntity?) GenericExtensions.When<TObject>(TObject, bool, Func<TObject, TObject>)"
  },
  "api/Mithril.API.GraphQL.GraphTypes.JsonGraphType.html": {
    "href": "api/Mithril.API.GraphQL.GraphTypes.JsonGraphType.html",
    "title": "Class JsonGraphType | Mithril API Reference",
    "keywords": "Class JsonGraphType The Json scalar graph type represents a JSON document. (Copy of what should be built in to the library and will be taken out once merged into main on GraphQL.Net) Inheritance object MetadataProvider GraphType ScalarGraphType JsonGraphType Implements IGraphType IProvideMetadata IProvideDescription IProvideDeprecationReason INamedType Inherited Members ScalarGraphType.Serialize(object) ScalarGraphType.ParseDoubleAccordingSpec<TValueNode>(TValueNode) ScalarGraphType.IsValidDefault(object) ScalarGraphType.ToAST(object) ScalarGraphType.ThrowASTConversionError(object) ScalarGraphType.ThrowLiteralConversionError(GraphQLValue, string) ScalarGraphType.ThrowValueConversionError(object) ScalarGraphType.ThrowSerializationError(object) ScalarGraphType.Initialize(ISchema) GraphType.ToString() GraphType.Equals(IGraphType) GraphType.Equals(object) GraphType.GetHashCode() GraphType.Name GraphType.Description GraphType.DeprecationReason MetadataProvider.GetMetadata<TType>(string, TType) MetadataProvider.GetMetadata<TType>(string, Func<TType>) MetadataProvider.HasMetadata(string) MetadataProvider.CopyMetadataTo(IProvideMetadata) MetadataProvider.Metadata object.Equals(object, object) object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Namespace: Mithril.API.GraphQL.GraphTypes Assembly: Mithril.API.GraphQL.dll Syntax public class JsonGraphType : ScalarGraphType, IGraphType, IProvideMetadata, IProvideDescription, IProvideDeprecationReason, INamedType Methods | Improve this Doc View Source CanParseLiteral(GraphQLValue) Checks for literal input coercion possibility. It takes an abstract syntax tree (AST) element from a schema definition or query and checks if it can be converted into an appropriate internal value. In other words it checks if a scalar can be converted from its client-side representation as an argument to its server-side representation. This method can be overridden to validate input values without directly getting those values, i.e. without boxing. This method must return true when passed a GraphQLParser.AST.GraphQLNullValue node. Declaration public override bool CanParseLiteral(GraphQLValue value) Parameters Type Name Description GraphQLValue value AST value node. Must not be null, but may be GraphQLParser.AST.GraphQLNullValue. Returns Type Description bool Overrides GraphQL.Types.ScalarGraphType.CanParseLiteral(GraphQLParser.AST.GraphQLValue) | Improve this Doc View Source CanParseValue(object?) Checks for value input coercion possibility. Argument values can not only provided via GraphQL syntax inside a query, but also via variable. It checks if a scalar can be converted from its client-side representation as a variable to its server-side representation. Parsing for arguments and variables are handled separately because while arguments must always be expressed in GraphQL query syntax, variable format is transport-specific (usually JSON). This method can be overridden to validate input values without directly getting those values, i.e. without boxing. This method must return true when passed a null value. Declaration public override bool CanParseValue(object? value) Parameters Type Name Description object value Runtime object from variables. May be null. Returns Type Description bool Overrides ScalarGraphType.CanParseValue(object) | Improve this Doc View Source ParseLiteral(GraphQLValue) Literal input coercion. It takes an abstract syntax tree (AST) element from a schema definition or query and converts it into an appropriate internal value. In other words it transforms a scalar from its client-side representation as an argument to its server-side representation. Input coercion may not only return primitive values like String but rather complex ones when appropriate. This method must handle a value of GraphQLParser.AST.GraphQLNullValue. This method SHOULD be overridden by descendants. Declaration public override object? ParseLiteral(GraphQLValue value) Parameters Type Name Description GraphQLValue value AST value node. Must not be null, but may be GraphQLParser.AST.GraphQLNullValue. Returns Type Description object Internal scalar representation. Returning null is valid. Overrides GraphQL.Types.ScalarGraphType.ParseLiteral(GraphQLParser.AST.GraphQLValue) | Improve this Doc View Source ParseValue(object?) Value input coercion. Argument values can not only provided via GraphQL syntax inside a query, but also via variable. It transforms a scalar from its client-side representation as a variable to its server-side representation. Parsing for arguments and variables are handled separately because while arguments must always be expressed in GraphQL query syntax, variable format is transport-specific (usually JSON). This method must handle a value of null. Declaration public override object? ParseValue(object? value) Parameters Type Name Description object value Runtime object from variables. May be null. Returns Type Description object Internal scalar representation. Returning null is valid. Overrides ScalarGraphType.ParseValue(object) Implements GraphQL.Types.IGraphType GraphQL.Types.IProvideMetadata GraphQL.Types.IProvideDescription GraphQL.Types.IProvideDeprecationReason GraphQL.Types.INamedType Extension Methods ExpandoObjectExtensions.ConvertToExpando<TEntity>(TEntity?) GenericExtensions.When<TObject>(TObject, bool, Func<TObject, TObject>)"
  },
  "api/Mithril.API.GraphQL.GraphTypes.html": {
    "href": "api/Mithril.API.GraphQL.GraphTypes.html",
    "title": "Namespace Mithril.API.GraphQL.GraphTypes | Mithril API Reference",
    "keywords": "Namespace Mithril.API.GraphQL.GraphTypes Classes CompositeQuery Composite query that creates the root node. GenericGraphType<TClass> Generic graph type JsonGraphType The Json scalar graph type represents a JSON document. (Copy of what should be built in to the library and will be taken out once merged into main on GraphQL.Net) Interfaces IGenericGraphType Generic graph type"
  },
  "api/Mithril.API.GraphQL.ObjectGraphs.CompositeSchema.html": {
    "href": "api/Mithril.API.GraphQL.ObjectGraphs.CompositeSchema.html",
    "title": "Class CompositeSchema | Mithril API Reference",
    "keywords": "Class CompositeSchema Composite schema Inheritance object MetadataProvider Schema CompositeSchema Implements ISchema IProvideMetadata IProvideDescription IServiceProvider IDisposable Inherited Members Schema.For(string, Action<SchemaBuilder>) Schema.For<TSchemaBuilder>(string, Action<TSchemaBuilder>) Schema.Initialize() Schema.RegisterVisitor(ISchemaNodeVisitor) Schema.RegisterVisitor(Type) Schema.RegisterType(IGraphType) Schema.RegisterType(Type) Schema.RegisterTypes(params Type[]) Schema.RegisterTypeMapping(Type, Type) Schema.Dispose() Schema.Dispose(bool) Schema.CreateSchemaTypes() Schema.Validate() Schema.CoerceInputTypeDefaultValues() Schema.Features Schema.NameConverter Schema.FieldMiddleware Schema.Initialized Schema.Description Schema.Query Schema.Mutation Schema.Subscription Schema.Filter Schema.Comparer Schema.Directives Schema.AllTypes Schema.AdditionalTypes Schema.AdditionalTypeInstances Schema.SchemaMetaFieldType Schema.TypeMetaFieldType Schema.TypeNameMetaFieldType Schema.TypeMappings Schema.BuiltInTypeMappings MetadataProvider.GetMetadata<TType>(string, TType) MetadataProvider.GetMetadata<TType>(string, Func<TType>) MetadataProvider.HasMetadata(string) MetadataProvider.CopyMetadataTo(IProvideMetadata) MetadataProvider.Metadata object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Mithril.API.GraphQL.ObjectGraphs Assembly: Mithril.API.GraphQL.dll Syntax public class CompositeSchema : Schema, ISchema, IProvideMetadata, IProvideDescription, IServiceProvider, IDisposable Constructors | Improve this Doc View Source CompositeSchema(IEnumerable<IQuery>) Initializes a new instance of the CompositeSchema class. Declaration public CompositeSchema(IEnumerable<IQuery> graphQueries) Parameters Type Name Description IEnumerable<IQuery> graphQueries The graph queries. See Also Schema Implements GraphQL.Types.ISchema GraphQL.Types.IProvideMetadata GraphQL.Types.IProvideDescription IServiceProvider IDisposable Extension Methods ExpandoObjectExtensions.ConvertToExpando<TEntity>(TEntity?) GenericExtensions.When<TObject>(TObject, bool, Func<TObject, TObject>) IServiceProviderExtensions.Exists<TClass>(IServiceProvider?) See Also Schema"
  },
  "api/Mithril.API.GraphQL.ObjectGraphs.html": {
    "href": "api/Mithril.API.GraphQL.ObjectGraphs.html",
    "title": "Namespace Mithril.API.GraphQL.ObjectGraphs | Mithril API Reference",
    "keywords": "Namespace Mithril.API.GraphQL.ObjectGraphs Classes CompositeSchema Composite schema"
  },
  "api/Mithril.API.GraphQL.Queries.DropDownQuery.html": {
    "href": "api/Mithril.API.GraphQL.Queries.DropDownQuery.html",
    "title": "Class DropDownQuery | Mithril API Reference",
    "keywords": "Class DropDownQuery Simple entry point for drop down style key/value pair queries. Inheritance object QueryBaseClass<IEnumerable<DropDownVM<long>>> DropDownQuery Implements IQuery<IEnumerable<DropDownVM<long>>> IQuery Inherited Members QueryBaseClass<IEnumerable<DropDownVM<long>>>.DeprecationReason QueryBaseClass<IEnumerable<DropDownVM<long>>>.Description QueryBaseClass<IEnumerable<DropDownVM<long>>>.Features QueryBaseClass<IEnumerable<DropDownVM<long>>>.ReturnType QueryBaseClass<IEnumerable<DropDownVM<long>>>.Version QueryBaseClass<IEnumerable<DropDownVM<long>>>.FeatureManager QueryBaseClass<IEnumerable<DropDownVM<long>>>.Logger QueryBaseClass<IEnumerable<DropDownVM<long>>>.IsFeatureEnabled() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Mithril.API.GraphQL.Queries Assembly: Mithril.API.GraphQL.dll Syntax public class DropDownQuery : QueryBaseClass<IEnumerable<DropDownVM<long>>>, IQuery<IEnumerable<DropDownVM<long>>>, IQuery Constructors | Improve this Doc View Source DropDownQuery(ILogger<DropDownQuery>?, IFeatureManager?, IDropDownQueryService?) Initializes a new instance of the DropDownQuery class. Declaration public DropDownQuery(ILogger<DropDownQuery>? logger, IFeatureManager? featureManager, IDropDownQueryService? dropDownQueryService) Parameters Type Name Description ILogger<DropDownQuery> logger The logger. IFeatureManager featureManager The feature manager. IDropDownQueryService dropDownQueryService The drop down query service. Properties | Improve this Doc View Source Arguments Gets the arguments. Declaration public override IArgument[] Arguments { get; } Property Value Type Description IArgument[] The arguments. Overrides QueryBaseClass<IEnumerable<DropDownVM<long>>>.Arguments | Improve this Doc View Source Name Gets the name. Declaration public override string Name { get; } Property Value Type Description string The name. Overrides QueryBaseClass<IEnumerable<DropDownVM<long>>>.Name Methods | Improve this Doc View Source ResolveAsync(ClaimsPrincipal?, Arguments) Used to resolve the data asked for by the query. Declaration public override Task<IEnumerable<DropDownVM<long>>?> ResolveAsync(ClaimsPrincipal? user, Arguments arguments) Parameters Type Name Description ClaimsPrincipal user The user. Arguments arguments The arguments. Returns Type Description Task<IEnumerable<DropDownVM<long>>> The data specified. Overrides QueryBaseClass<IEnumerable<DropDownVM<long>>>.ResolveAsync(ClaimsPrincipal, Arguments) Implements IQuery<TClass> IQuery Extension Methods ExpandoObjectExtensions.ConvertToExpando<TEntity>(TEntity?) GenericExtensions.When<TObject>(TObject, bool, Func<TObject, TObject>)"
  },
  "api/Mithril.API.GraphQL.Queries.html": {
    "href": "api/Mithril.API.GraphQL.Queries.html",
    "title": "Namespace Mithril.API.GraphQL.Queries | Mithril API Reference",
    "keywords": "Namespace Mithril.API.GraphQL.Queries Classes DropDownQuery Simple entry point for drop down style key/value pair queries."
  },
  "api/Mithril.API.GraphQL.Services.DropDownQueryService.html": {
    "href": "api/Mithril.API.GraphQL.Services.DropDownQueryService.html",
    "title": "Class DropDownQueryService | Mithril API Reference",
    "keywords": "Class DropDownQueryService Drop down query service Inheritance object DropDownQueryService Implements IDropDownQueryService Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Mithril.API.GraphQL.Services Assembly: Mithril.API.GraphQL.dll Syntax public class DropDownQueryService : IDropDownQueryService Constructors | Improve this Doc View Source DropDownQueryService(IEnumerable<IDropDownQuery>) Initializes a new instance of the DropDownQueryService class. Declaration public DropDownQueryService(IEnumerable<IDropDownQuery> dropDownQueries) Parameters Type Name Description IEnumerable<IDropDownQuery> dropDownQueries The drop down queries. See Also IDropDownQueryService Methods | Improve this Doc View Source FindDropDownQuery(string?, ClaimsPrincipal?) Finds the drop down query. Declaration public IDropDownQuery? FindDropDownQuery(string? name, ClaimsPrincipal? user) Parameters Type Name Description string name The name. ClaimsPrincipal user The user. Returns Type Description IDropDownQuery The drop down query specified. See Also IDropDownQueryService Implements IDropDownQueryService Extension Methods ExpandoObjectExtensions.ConvertToExpando<TEntity>(TEntity?) GenericExtensions.When<TObject>(TObject, bool, Func<TObject, TObject>) See Also IDropDownQueryService"
  },
  "api/Mithril.API.GraphQL.Services.QueryService.html": {
    "href": "api/Mithril.API.GraphQL.Services.QueryService.html",
    "title": "Class QueryService | Mithril API Reference",
    "keywords": "Class QueryService Query service Inheritance object QueryService Implements IQueryService Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Mithril.API.GraphQL.Services Assembly: Mithril.API.GraphQL.dll Syntax public class QueryService : IQueryService Constructors | Improve this Doc View Source QueryService(IEnumerable<IQuery>) Initializes a new instance of the QueryService class. Declaration public QueryService(IEnumerable<IQuery> queries) Parameters Type Name Description IEnumerable<IQuery> queries The queries. See Also IQueryService Methods | Improve this Doc View Source FindQuery(string?) Finds the query specified. Declaration public IQuery? FindQuery(string? name) Parameters Type Name Description string name The name of the query. Returns Type Description IQuery The query specified. See Also IQueryService Implements IQueryService Extension Methods ExpandoObjectExtensions.ConvertToExpando<TEntity>(TEntity?) GenericExtensions.When<TObject>(TObject, bool, Func<TObject, TObject>) See Also IQueryService"
  },
  "api/Mithril.API.GraphQL.Services.html": {
    "href": "api/Mithril.API.GraphQL.Services.html",
    "title": "Namespace Mithril.API.GraphQL.Services | Mithril API Reference",
    "keywords": "Namespace Mithril.API.GraphQL.Services Classes DropDownQueryService Drop down query service QueryService Query service"
  },
  "api/Mithril.API.GraphQL.html": {
    "href": "api/Mithril.API.GraphQL.html",
    "title": "Namespace Mithril.API.GraphQL | Mithril API Reference",
    "keywords": "Namespace Mithril.API.GraphQL Classes GraphQLModule API Module"
  },
  "api/Mithril.API.Swagger.SchemaFilters.EnumNameSchemaFilter.html": {
    "href": "api/Mithril.API.Swagger.SchemaFilters.EnumNameSchemaFilter.html",
    "title": "Class EnumNameSchemaFilter | Mithril API Reference",
    "keywords": "Class EnumNameSchemaFilter Enum name schema filter Inheritance object EnumNameSchemaFilter Implements ISchemaFilter Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Mithril.API.Swagger.SchemaFilters Assembly: Mithril.API.Swagger.dll Syntax public class EnumNameSchemaFilter : ISchemaFilter Methods | Improve this Doc View Source Apply(OpenApiSchema, SchemaFilterContext) Applies the specified schema. Declaration public void Apply(OpenApiSchema schema, SchemaFilterContext context) Parameters Type Name Description OpenApiSchema schema The schema. SchemaFilterContext context The context. See Also ISchemaFilter Implements ISchemaFilter Extension Methods ExpandoObjectExtensions.ConvertToExpando<TEntity>(TEntity?) GenericExtensions.When<TObject>(TObject, bool, Func<TObject, TObject>) See Also ISchemaFilter"
  },
  "api/Mithril.API.Swagger.SchemaFilters.html": {
    "href": "api/Mithril.API.Swagger.SchemaFilters.html",
    "title": "Namespace Mithril.API.Swagger.SchemaFilters | Mithril API Reference",
    "keywords": "Namespace Mithril.API.Swagger.SchemaFilters Classes EnumNameSchemaFilter Enum name schema filter"
  },
  "api/Mithril.API.Swagger.SwaggerModule.html": {
    "href": "api/Mithril.API.Swagger.SwaggerModule.html",
    "title": "Class SwaggerModule | Mithril API Reference",
    "keywords": "Class SwaggerModule Swagger module Inheritance object ModuleBaseClass<SwaggerModule> SwaggerModule Implements IEquatable<SwaggerModule> IModule Inherited Members ModuleBaseClass<SwaggerModule>.Category ModuleBaseClass<SwaggerModule>.ContentPath ModuleBaseClass<SwaggerModule>.Features ModuleBaseClass<SwaggerModule>.ID ModuleBaseClass<SwaggerModule>.LastModified ModuleBaseClass<SwaggerModule>.Name ModuleBaseClass<SwaggerModule>.Order ModuleBaseClass<SwaggerModule>.Tags ModuleBaseClass<SwaggerModule>.Version ModuleBaseClass<SwaggerModule>.ConfigureHostSettings(IHostBuilder, IConfiguration, IHostEnvironment) ModuleBaseClass<SwaggerModule>.ConfigureLoggingSettings(ILoggingBuilder, IConfiguration, IHostEnvironment) ModuleBaseClass<SwaggerModule>.ConfigureMVC(IMvcBuilder, IConfiguration, IHostEnvironment) ModuleBaseClass<SwaggerModule>.ConfigureRoutes(IEndpointRouteBuilder, IConfiguration, IHostEnvironment) ModuleBaseClass<SwaggerModule>.ConfigureWebHostSettings(IWebHostBuilder, IConfiguration, IHostEnvironment) ModuleBaseClass<SwaggerModule>.Equals(object) ModuleBaseClass<SwaggerModule>.Equals(SwaggerModule) ModuleBaseClass<SwaggerModule>.GetHashCode() ModuleBaseClass<SwaggerModule>.InitializeDataAsync(IDataService, IServiceProvider) ModuleBaseClass<SwaggerModule>.OnStarted() ModuleBaseClass<SwaggerModule>.OnStopped() ModuleBaseClass<SwaggerModule>.OnStopping() object.Equals(object, object) object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Mithril.API.Swagger Assembly: Mithril.API.Swagger.dll Syntax public class SwaggerModule : ModuleBaseClass<SwaggerModule>, IEquatable<SwaggerModule>, IModule Constructors | Improve this Doc View Source SwaggerModule() Initializes a new instance of the SwaggerModule class. Declaration public SwaggerModule() See Also ModuleBaseClass<TModule> Methods | Improve this Doc View Source ConfigureApplication(IApplicationBuilder?, IConfiguration?, IHostEnvironment?) Configures the application. Declaration public override IApplicationBuilder? ConfigureApplication(IApplicationBuilder? app, IConfiguration? configuration, IHostEnvironment? environment) Parameters Type Name Description IApplicationBuilder app The application. IConfiguration configuration The configuration. IHostEnvironment environment The environment. Returns Type Description IApplicationBuilder Application builder Overrides ModuleBaseClass<SwaggerModule>.ConfigureApplication(IApplicationBuilder, IConfiguration, IHostEnvironment) See Also ModuleBaseClass<TModule> | Improve this Doc View Source ConfigureServices(IServiceCollection?, IConfiguration?, IHostEnvironment?) Configures the services for the module. Declaration public override IServiceCollection? ConfigureServices(IServiceCollection? services, IConfiguration? configuration, IHostEnvironment? environment) Parameters Type Name Description IServiceCollection services The services collection. IConfiguration configuration The configuration. IHostEnvironment environment The environment. Returns Type Description IServiceCollection Services Overrides ModuleBaseClass<SwaggerModule>.ConfigureServices(IServiceCollection, IConfiguration, IHostEnvironment) See Also ModuleBaseClass<TModule> Implements IEquatable<T> IModule Extension Methods ExpandoObjectExtensions.ConvertToExpando<TEntity>(TEntity?) GenericExtensions.When<TObject>(TObject, bool, Func<TObject, TObject>) See Also ModuleBaseClass<TModule>"
  },
  "api/Mithril.API.Swagger.html": {
    "href": "api/Mithril.API.Swagger.html",
    "title": "Namespace Mithril.API.Swagger | Mithril API Reference",
    "keywords": "Namespace Mithril.API.Swagger Classes SwaggerModule Swagger module"
  },
  "api/Mithril.Admin.Abstractions.BaseClasses.EntityBaseClass-1.html": {
    "href": "api/Mithril.Admin.Abstractions.BaseClasses.EntityBaseClass-1.html",
    "title": "Class EntityBaseClass<TEntity> | Mithril API Reference",
    "keywords": "Class EntityBaseClass<TEntity> Entity base class Inheritance object EntityBaseClass<TEntity> MessageTemplateVM RouteEntryVM PermissionVM Implements IEntity<TEntity> IEntity Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Mithril.Admin.Abstractions.BaseClasses Assembly: Mithril.Admin.Abstractions.dll Syntax public abstract class EntityBaseClass<TEntity> : IEntity<TEntity>, IEntity where TEntity : IModel Type Parameters Name Description TEntity The type of the entity. Constructors | Improve this Doc View Source EntityBaseClass() Initializes a new instance of the EntityBaseClass<TEntity> class. Declaration protected EntityBaseClass() See Also IEntity<TModel> | Improve this Doc View Source EntityBaseClass(TEntity?) Initializes a new instance of the EntityBaseClass<TEntity> class. Declaration protected EntityBaseClass(TEntity? entity) Parameters Type Name Description TEntity entity The entity. See Also IEntity<TModel> Properties | Improve this Doc View Source Active Gets or sets a value indicating whether this IEntity is active. Declaration [Order(2147483647)] public bool Active { get; set; } Property Value Type Description bool true if active; otherwise, false. See Also IEntity<TModel> | Improve this Doc View Source ID Gets or sets the identifier. Declaration public long ID { get; set; } Property Value Type Description long The identifier. See Also IEntity<TModel> Methods | Improve this Doc View Source SaveAsync(long, IDataService?, ClaimsPrincipal?) Saves the changes asynchronously. Declaration public abstract Task<TEntity?> SaveAsync(long id, IDataService? dataService, ClaimsPrincipal? currentUser) Parameters Type Name Description long id The identifier. IDataService dataService The data service. ClaimsPrincipal currentUser The current user. Returns Type Description Task<TEntity> The async task. See Also IEntity<TModel> Implements IEntity<TModel> IEntity Extension Methods ExpandoObjectExtensions.ConvertToExpando<TEntity>(TEntity?) GenericExtensions.When<TObject>(TObject, bool, Func<TObject, TObject>) See Also IEntity<TModel>"
  },
  "api/Mithril.Admin.Abstractions.BaseClasses.EntityEditorBaseClass-1.html": {
    "href": "api/Mithril.Admin.Abstractions.BaseClasses.EntityEditorBaseClass-1.html",
    "title": "Class EntityEditorBaseClass<TEntity> | Mithril API Reference",
    "keywords": "Class EntityEditorBaseClass<TEntity> Entity editor base class Inheritance object EntityEditorBaseClass<TEntity> EntityEditorBaseClass<TEntity, TModel> SettingsEditorBaseClass<TEntity> Implements IEntityEditor IEditor Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Mithril.Admin.Abstractions.BaseClasses Assembly: Mithril.Admin.Abstractions.dll Syntax public abstract class EntityEditorBaseClass<TEntity> : IEntityEditor, IEditor where TEntity : IEntity, new() Type Parameters Name Description TEntity The type of the entity. Constructors | Improve this Doc View Source EntityEditorBaseClass(IDataService?, IEntityMetadataService?, string?) Initializes a new instance of the EntityEditorBaseClass<TEntity> class. Declaration protected EntityEditorBaseClass(IDataService? dataService, IEntityMetadataService? entityMetadataService, string? dataType = null) Parameters Type Name Description IDataService dataService The data service. IEntityMetadataService entityMetadataService The entity metadata service. string dataType Type of the data. See Also EntityEditorBaseClass<TEntity> Properties | Improve this Doc View Source Category Gets the category. Declaration public virtual string Category { get; } Property Value Type Description string The category. See Also EntityEditorBaseClass<TEntity> | Improve this Doc View Source ComponentDefinition Gets the component definition. Declaration public IComponentDefinition ComponentDefinition { get; protected set; } Property Value Type Description IComponentDefinition The component definition. See Also EntityEditorBaseClass<TEntity> | Improve this Doc View Source DataService Gets the data service. Declaration protected IDataService? DataService { get; } Property Value Type Description IDataService The data service. See Also EntityEditorBaseClass<TEntity> | Improve this Doc View Source Description Gets the description. Declaration public virtual string Description { get; } Property Value Type Description string The description. See Also EntityEditorBaseClass<TEntity> | Improve this Doc View Source EntityType Gets the type of the entity. Declaration public string EntityType { get; } Property Value Type Description string The type of the entity. See Also EntityEditorBaseClass<TEntity> | Improve this Doc View Source Icon Gets the icon. Declaration public virtual string Icon { get; } Property Value Type Description string The icon. See Also EntityEditorBaseClass<TEntity> | Improve this Doc View Source Name Gets the name. Declaration public virtual string Name { get; } Property Value Type Description string The name. See Also EntityEditorBaseClass<TEntity> Methods | Improve this Doc View Source ActivateAsync(long, ClaimsPrincipal?) Activates the entity specified asynchronously. Declaration public abstract Task<bool> ActivateAsync(long id, ClaimsPrincipal? currentUser) Parameters Type Name Description long id The identifier. ClaimsPrincipal currentUser The current user. Returns Type Description Task<bool> True if it succeeds, false otherwise. See Also EntityEditorBaseClass<TEntity> | Improve this Doc View Source CanView(ClaimsPrincipal?) Determines whether this instance can be viewed by the specified user. Declaration public virtual bool CanView(ClaimsPrincipal? user) Parameters Type Name Description ClaimsPrincipal user The user. Returns Type Description bool true if this instance can be viewed by the specified user; otherwise, false. See Also EntityEditorBaseClass<TEntity> | Improve this Doc View Source DeleteEntityAsync(long, ClaimsPrincipal?) Deletes the entity asynchronously. Declaration public abstract Task<bool> DeleteEntityAsync(long id, ClaimsPrincipal? currentUser) Parameters Type Name Description long id The identifier. ClaimsPrincipal currentUser The current user. Returns Type Description Task<bool> True if it succeeds, false otherwise. Exceptions Type Condition NotImplementedException See Also EntityEditorBaseClass<TEntity> | Improve this Doc View Source Load(long, ExpandoObject?, ClaimsPrincipal?) Loads the specified identifier. Declaration public abstract IEntity? Load(long id, ExpandoObject? model, ClaimsPrincipal? currentUser) Parameters Type Name Description long id The identifier. ExpandoObject model The model. ClaimsPrincipal currentUser The current user. Returns Type Description IEntity The entity specified. See Also EntityEditorBaseClass<TEntity> | Improve this Doc View Source LoadPageAsync(int, int, string, bool, string, ClaimsPrincipal?) Loads the page asynchronously. Declaration public abstract Task<IEnumerable<IEntity>> LoadPageAsync(int page, int pageSize, string sortField, bool sortAscending, string searchQuery, ClaimsPrincipal? currentUser) Parameters Type Name Description int page The page (zero based). int pageSize Size of the page. string sortField The sort field. bool sortAscending if set to true [sort ascending]. string searchQuery The search query. ClaimsPrincipal currentUser The current user. Returns Type Description Task<IEnumerable<IEntity>> The entities specified. See Also EntityEditorBaseClass<TEntity> | Improve this Doc View Source SaveEntityAsync(long, ExpandoObject, ClaimsPrincipal?) Saves the changes asynchronously. Declaration public abstract Task<bool> SaveEntityAsync(long id, ExpandoObject entity, ClaimsPrincipal? currentUser) Parameters Type Name Description long id The identifier. ExpandoObject entity The entity. ClaimsPrincipal currentUser The current user. Returns Type Description Task<bool> True if it succeeds, false otherwise. See Also EntityEditorBaseClass<TEntity> | Improve this Doc View Source TotalActiveAsync(ClaimsPrincipal?) Gets the total active items. Declaration public abstract Task<int> TotalActiveAsync(ClaimsPrincipal? currentUser) Parameters Type Name Description ClaimsPrincipal currentUser The current user. Returns Type Description Task<int> The total. See Also EntityEditorBaseClass<TEntity> Implements IEntityEditor IEditor Extension Methods ExpandoObjectExtensions.ConvertToExpando<TEntity>(TEntity?) GenericExtensions.When<TObject>(TObject, bool, Func<TObject, TObject>) See Also EntityEditorBaseClass<TEntity>"
  },
  "api/Mithril.Admin.Abstractions.BaseClasses.EntityEditorBaseClass-2.html": {
    "href": "api/Mithril.Admin.Abstractions.BaseClasses.EntityEditorBaseClass-2.html",
    "title": "Class EntityEditorBaseClass<TEntity, TModel> | Mithril API Reference",
    "keywords": "Class EntityEditorBaseClass<TEntity, TModel> Entity editor base class Inheritance object EntityEditorBaseClass<TEntity> EntityEditorBaseClass<TEntity, TModel> SettingsEditorBaseClass<TEntity, TModel> MessageTemplateEditor RouteEditor PermissionEditor Implements IEntityEditor IEditor Inherited Members EntityEditorBaseClass<TEntity>.Category EntityEditorBaseClass<TEntity>.ComponentDefinition EntityEditorBaseClass<TEntity>.Description EntityEditorBaseClass<TEntity>.EntityType EntityEditorBaseClass<TEntity>.Icon EntityEditorBaseClass<TEntity>.Name EntityEditorBaseClass<TEntity>.DataService object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Mithril.Admin.Abstractions.BaseClasses Assembly: Mithril.Admin.Abstractions.dll Syntax public abstract class EntityEditorBaseClass<TEntity, TModel> : EntityEditorBaseClass<TEntity>, IEntityEditor, IEditor where TEntity : IEntity<TModel>, new() where TModel : ModelBase<TModel>, new() Type Parameters Name Description TEntity The type of the entity. TModel The type of the model. Constructors | Improve this Doc View Source EntityEditorBaseClass(IDataService?, IEntityMetadataService?, string?) Initializes a new instance of the EntityEditorBaseClass<TEntity> class. Declaration protected EntityEditorBaseClass(IDataService? dataService, IEntityMetadataService? entityMetadataService, string? dataType = null) Parameters Type Name Description IDataService dataService The data service. IEntityMetadataService entityMetadataService The entity metadata service. string dataType Type of the data. See Also EntityEditorBaseClass<TEntity> Methods | Improve this Doc View Source ActivateAsync(long, ClaimsPrincipal?) Activates the entity specified asynchronously. Declaration public override Task<bool> ActivateAsync(long id, ClaimsPrincipal? currentUser) Parameters Type Name Description long id The identifier. ClaimsPrincipal currentUser The current user. Returns Type Description Task<bool> True if it succeeds, false otherwise. Overrides EntityEditorBaseClass<TEntity>.ActivateAsync(long, ClaimsPrincipal) See Also EntityEditorBaseClass<TEntity> | Improve this Doc View Source CanView(ClaimsPrincipal?) Determines whether this instance can be viewed by the specified user. Declaration public override bool CanView(ClaimsPrincipal? user) Parameters Type Name Description ClaimsPrincipal user The user. Returns Type Description bool true if this instance can be viewed by the specified user; otherwise, false. Overrides EntityEditorBaseClass<TEntity>.CanView(ClaimsPrincipal) See Also EntityEditorBaseClass<TEntity> | Improve this Doc View Source Convert(TModel, bool) Converts the model into the appropriate view model. Declaration protected abstract IEntity Convert(TModel model, bool full = true) Parameters Type Name Description TModel model The model. bool full if set to true [full]. Returns Type Description IEntity The view model See Also EntityEditorBaseClass<TEntity> | Improve this Doc View Source DeleteEntityAsync(long, ClaimsPrincipal?) Deletes the entity asynchronously. Declaration public override Task<bool> DeleteEntityAsync(long id, ClaimsPrincipal? currentUser) Parameters Type Name Description long id The identifier. ClaimsPrincipal currentUser The current user. Returns Type Description Task<bool> True if it succeeds, false otherwise. Overrides EntityEditorBaseClass<TEntity>.DeleteEntityAsync(long, ClaimsPrincipal) Exceptions Type Condition NotImplementedException See Also EntityEditorBaseClass<TEntity> | Improve this Doc View Source FilterQueryBySearchQuery(IQueryable<TModel>?, string) Filters the query by search term. Declaration protected virtual IQueryable<TModel>? FilterQueryBySearchQuery(IQueryable<TModel>? query, string searchQuery) Parameters Type Name Description IQueryable<TModel> query The query. string searchQuery The search query. Returns Type Description IQueryable<TModel> The resulting query. See Also EntityEditorBaseClass<TEntity> | Improve this Doc View Source Load(long, ExpandoObject?, ClaimsPrincipal?) Loads the specified identifier. Declaration public override IEntity? Load(long id, ExpandoObject? model, ClaimsPrincipal? currentUser) Parameters Type Name Description long id The identifier. ExpandoObject model The model. ClaimsPrincipal currentUser The current user. Returns Type Description IEntity The entity specified. Overrides EntityEditorBaseClass<TEntity>.Load(long, ExpandoObject, ClaimsPrincipal) See Also EntityEditorBaseClass<TEntity> | Improve this Doc View Source LoadModel(long) Loads the model. Declaration protected virtual TModel LoadModel(long id) Parameters Type Name Description long id The identifier. Returns Type Description TModel The model requested See Also EntityEditorBaseClass<TEntity> | Improve this Doc View Source LoadPageAsync(int, int, string, bool, string, ClaimsPrincipal?) Loads the page asynchronously. Declaration public override Task<IEnumerable<IEntity>> LoadPageAsync(int page, int pageSize, string sortField, bool sortAscending, string searchQuery, ClaimsPrincipal? currentUser) Parameters Type Name Description int page The page (zero based). int pageSize Size of the page. string sortField The sort field. bool sortAscending if set to true [sort ascending]. string searchQuery The search query. ClaimsPrincipal currentUser The current user. Returns Type Description Task<IEnumerable<IEntity>> The entities specified. Overrides EntityEditorBaseClass<TEntity>.LoadPageAsync(int, int, string, bool, string, ClaimsPrincipal) See Also EntityEditorBaseClass<TEntity> | Improve this Doc View Source MakeActiveAsync(TModel) Makes the model active. Declaration protected virtual Task MakeActiveAsync(TModel model) Parameters Type Name Description TModel model The model. Returns Type Description Task The async task. See Also EntityEditorBaseClass<TEntity> | Improve this Doc View Source MakeInactiveAsync(TModel) Makes the model inactive. Declaration protected virtual Task MakeInactiveAsync(TModel model) Parameters Type Name Description TModel model The model. Returns Type Description Task The async task. See Also EntityEditorBaseClass<TEntity> | Improve this Doc View Source SaveEntityAsync(long, ExpandoObject, ClaimsPrincipal?) Saves the changes asynchronously. Declaration public override Task<bool> SaveEntityAsync(long id, ExpandoObject entity, ClaimsPrincipal? currentUser) Parameters Type Name Description long id The identifier. ExpandoObject entity The entity. ClaimsPrincipal currentUser The current user. Returns Type Description Task<bool> True if it succeeds, false otherwise. Overrides EntityEditorBaseClass<TEntity>.SaveEntityAsync(long, ExpandoObject, ClaimsPrincipal) See Also EntityEditorBaseClass<TEntity> | Improve this Doc View Source TotalActiveAsync(ClaimsPrincipal?) Gets the total active items. Declaration public override Task<int> TotalActiveAsync(ClaimsPrincipal? currentUser) Parameters Type Name Description ClaimsPrincipal currentUser Returns Type Description Task<int> The total. Overrides EntityEditorBaseClass<TEntity>.TotalActiveAsync(ClaimsPrincipal) See Also EntityEditorBaseClass<TEntity> Implements IEntityEditor IEditor Extension Methods ExpandoObjectExtensions.ConvertToExpando<TEntity>(TEntity?) GenericExtensions.When<TObject>(TObject, bool, Func<TObject, TObject>) See Also EntityEditorBaseClass<TEntity>"
  },
  "api/Mithril.Admin.Abstractions.BaseClasses.MetadataBuilderBaseClass.html": {
    "href": "api/Mithril.Admin.Abstractions.BaseClasses.MetadataBuilderBaseClass.html",
    "title": "Class MetadataBuilderBaseClass | Mithril API Reference",
    "keywords": "Class MetadataBuilderBaseClass Metadata Builder base class Inheritance object MetadataBuilderBaseClass CanList HasHint HasMax HasMin HasPattern HasPlaceholder HasQuery HasReadOnly HasStep HasSubtitle IsCheckbox IsDefaultInput IsEnumRadioList IsHtml IsList IsSelect IsText IsTextArea IsUpload StandardValidation Implements IMetadataBuilder Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Mithril.Admin.Abstractions.BaseClasses Assembly: Mithril.Admin.Abstractions.dll Syntax public abstract class MetadataBuilderBaseClass : IMetadataBuilder Constructors | Improve this Doc View Source MetadataBuilderBaseClass() Initializes a new instance of the MetadataBuilderBaseClass class. Declaration protected MetadataBuilderBaseClass() See Also IMetadataBuilder Properties | Improve this Doc View Source Order Gets the order. Declaration public virtual int Order { get; } Property Value Type Description int The order. See Also IMetadataBuilder Methods | Improve this Doc View Source ExtractMetadata(PropertyMetadata?, IEntityMetadataService) Extracts metadata and adds it to the PropertyMetadata object. Declaration public abstract PropertyMetadata? ExtractMetadata(PropertyMetadata? propertyMetadata, IEntityMetadataService metadataService) Parameters Type Name Description PropertyMetadata propertyMetadata The property metadata. IEntityMetadataService metadataService The metadata service. Returns Type Description PropertyMetadata The resulting property metadata. See Also IMetadataBuilder Implements IMetadataBuilder Extension Methods ExpandoObjectExtensions.ConvertToExpando<TEntity>(TEntity?) GenericExtensions.When<TObject>(TObject, bool, Func<TObject, TObject>) See Also IMetadataBuilder"
  },
  "api/Mithril.Admin.Abstractions.BaseClasses.SettingsBaseClass.html": {
    "href": "api/Mithril.Admin.Abstractions.BaseClasses.SettingsBaseClass.html",
    "title": "Class SettingsBaseClass | Mithril API Reference",
    "keywords": "Class SettingsBaseClass Base class for settings Inheritance object SettingsBaseClass ThemeSettingsVM Implements IEntity Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Mithril.Admin.Abstractions.BaseClasses Assembly: Mithril.Admin.Abstractions.dll Syntax public class SettingsBaseClass : IEntity Constructors | Improve this Doc View Source SettingsBaseClass() Initializes a new instance of the SettingsBaseClass class. Declaration protected SettingsBaseClass() See Also IEntity Properties | Improve this Doc View Source Active Gets or sets a value indicating whether this IEntity is active. Declaration [JsonIgnore] public bool Active { get; set; } Property Value Type Description bool true if active; otherwise, false. See Also IEntity | Improve this Doc View Source ID Gets or sets the identifier. Declaration [JsonIgnore] public long ID { get; set; } Property Value Type Description long The identifier. See Also IEntity Implements IEntity Extension Methods ExpandoObjectExtensions.ConvertToExpando<TEntity>(TEntity?) GenericExtensions.When<TObject>(TObject, bool, Func<TObject, TObject>) See Also IEntity"
  },
  "api/Mithril.Admin.Abstractions.BaseClasses.SettingsEditorBaseClass-1.html": {
    "href": "api/Mithril.Admin.Abstractions.BaseClasses.SettingsEditorBaseClass-1.html",
    "title": "Class SettingsEditorBaseClass<TEntity> | Mithril API Reference",
    "keywords": "Class SettingsEditorBaseClass<TEntity> Settings editor base class Inheritance object EntityEditorBaseClass<TEntity> SettingsEditorBaseClass<TEntity> ThemeEditor Implements IEntityEditor IEditor Inherited Members EntityEditorBaseClass<TEntity>.ComponentDefinition EntityEditorBaseClass<TEntity>.Description EntityEditorBaseClass<TEntity>.EntityType EntityEditorBaseClass<TEntity>.Icon EntityEditorBaseClass<TEntity>.Name EntityEditorBaseClass<TEntity>.DataService EntityEditorBaseClass<TEntity>.CanView(ClaimsPrincipal) EntityEditorBaseClass<TEntity>.Load(long, ExpandoObject, ClaimsPrincipal) object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Mithril.Admin.Abstractions.BaseClasses Assembly: Mithril.Admin.Abstractions.dll Syntax public abstract class SettingsEditorBaseClass<TEntity> : EntityEditorBaseClass<TEntity>, IEntityEditor, IEditor where TEntity : IEntity, new() Type Parameters Name Description TEntity The type of the entity. Constructors | Improve this Doc View Source SettingsEditorBaseClass(IDataService?, IEntityMetadataService?, string?) Initializes a new instance of the SettingsEditorBaseClass<TEntity> class. Declaration protected SettingsEditorBaseClass(IDataService? dataService, IEntityMetadataService? entityMetadataService, string? dataType = null) Parameters Type Name Description IDataService dataService The data service. IEntityMetadataService entityMetadataService The entity metadata service. string dataType Type of the data. See Also EntityEditorBaseClass<TEntity, TModel> Properties | Improve this Doc View Source Category Gets the category. Declaration public override string Category { get; } Property Value Type Description string The category. Overrides EntityEditorBaseClass<TEntity>.Category See Also EntityEditorBaseClass<TEntity, TModel> Methods | Improve this Doc View Source ActivateAsync(long, ClaimsPrincipal?) Activates the entity specified asynchronously. Declaration public override Task<bool> ActivateAsync(long id, ClaimsPrincipal? currentUser) Parameters Type Name Description long id The identifier. ClaimsPrincipal currentUser Returns Type Description Task<bool> True if it succeeds, false otherwise. Overrides EntityEditorBaseClass<TEntity>.ActivateAsync(long, ClaimsPrincipal) See Also EntityEditorBaseClass<TEntity, TModel> | Improve this Doc View Source DeleteEntityAsync(long, ClaimsPrincipal?) Deletes the entity asynchronously. Declaration public override Task<bool> DeleteEntityAsync(long id, ClaimsPrincipal? currentUser) Parameters Type Name Description long id The identifier. ClaimsPrincipal currentUser Returns Type Description Task<bool> True if it succeeds, false otherwise. Overrides EntityEditorBaseClass<TEntity>.DeleteEntityAsync(long, ClaimsPrincipal) See Also EntityEditorBaseClass<TEntity, TModel> | Improve this Doc View Source LoadPageAsync(int, int, string, bool, string, ClaimsPrincipal?) Loads the page asynchronously. Declaration public override Task<IEnumerable<IEntity>> LoadPageAsync(int page, int pageSize, string sortField, bool sortAscending, string searchQuery, ClaimsPrincipal? currentUser) Parameters Type Name Description int page The page (zero based). int pageSize Size of the page. string sortField The sort field. bool sortAscending if set to true [sort ascending]. string searchQuery The search query. ClaimsPrincipal currentUser Returns Type Description Task<IEnumerable<IEntity>> The entities specified. Overrides EntityEditorBaseClass<TEntity>.LoadPageAsync(int, int, string, bool, string, ClaimsPrincipal) See Also EntityEditorBaseClass<TEntity, TModel> | Improve this Doc View Source SaveEntityAsync(long, ExpandoObject, ClaimsPrincipal?) Saves the changes asynchronously. Declaration public override Task<bool> SaveEntityAsync(long id, ExpandoObject entity, ClaimsPrincipal? currentUser) Parameters Type Name Description long id The identifier. ExpandoObject entity The entity. ClaimsPrincipal currentUser Returns Type Description Task<bool> True if it succeeds, false otherwise. Overrides EntityEditorBaseClass<TEntity>.SaveEntityAsync(long, ExpandoObject, ClaimsPrincipal) See Also EntityEditorBaseClass<TEntity, TModel> | Improve this Doc View Source SaveEntityAsync(long, TEntity?, ClaimsPrincipal?) Saves the entity asynchronous. Declaration protected abstract Task<bool> SaveEntityAsync(long id, TEntity? entity, ClaimsPrincipal? currentUser) Parameters Type Name Description long id The identifier. TEntity entity The entity. ClaimsPrincipal currentUser The current user. Returns Type Description Task<bool> See Also EntityEditorBaseClass<TEntity, TModel> | Improve this Doc View Source TotalActiveAsync(ClaimsPrincipal?) Gets the total active items. Declaration public override Task<int> TotalActiveAsync(ClaimsPrincipal? currentUser) Parameters Type Name Description ClaimsPrincipal currentUser Returns Type Description Task<int> The total. Overrides EntityEditorBaseClass<TEntity>.TotalActiveAsync(ClaimsPrincipal) See Also EntityEditorBaseClass<TEntity, TModel> Implements IEntityEditor IEditor Extension Methods ExpandoObjectExtensions.ConvertToExpando<TEntity>(TEntity?) GenericExtensions.When<TObject>(TObject, bool, Func<TObject, TObject>) See Also EntityEditorBaseClass<TEntity, TModel>"
  },
  "api/Mithril.Admin.Abstractions.BaseClasses.SettingsEditorBaseClass-2.html": {
    "href": "api/Mithril.Admin.Abstractions.BaseClasses.SettingsEditorBaseClass-2.html",
    "title": "Class SettingsEditorBaseClass<TEntity, TModel> | Mithril API Reference",
    "keywords": "Class SettingsEditorBaseClass<TEntity, TModel> Settings editor base class Inheritance object EntityEditorBaseClass<TEntity> EntityEditorBaseClass<TEntity, TModel> SettingsEditorBaseClass<TEntity, TModel> Implements IEntityEditor IEditor Inherited Members EntityEditorBaseClass<TEntity, TModel>.ActivateAsync(long, ClaimsPrincipal) EntityEditorBaseClass<TEntity, TModel>.CanView(ClaimsPrincipal) EntityEditorBaseClass<TEntity, TModel>.DeleteEntityAsync(long, ClaimsPrincipal) EntityEditorBaseClass<TEntity, TModel>.Load(long, ExpandoObject, ClaimsPrincipal) EntityEditorBaseClass<TEntity, TModel>.LoadPageAsync(int, int, string, bool, string, ClaimsPrincipal) EntityEditorBaseClass<TEntity, TModel>.SaveEntityAsync(long, ExpandoObject, ClaimsPrincipal) EntityEditorBaseClass<TEntity, TModel>.TotalActiveAsync(ClaimsPrincipal) EntityEditorBaseClass<TEntity, TModel>.Convert(TModel, bool) EntityEditorBaseClass<TEntity, TModel>.FilterQueryBySearchQuery(IQueryable<TModel>, string) EntityEditorBaseClass<TEntity, TModel>.LoadModel(long) EntityEditorBaseClass<TEntity, TModel>.MakeActiveAsync(TModel) EntityEditorBaseClass<TEntity, TModel>.MakeInactiveAsync(TModel) EntityEditorBaseClass<TEntity>.ComponentDefinition EntityEditorBaseClass<TEntity>.Description EntityEditorBaseClass<TEntity>.EntityType EntityEditorBaseClass<TEntity>.Icon EntityEditorBaseClass<TEntity>.Name EntityEditorBaseClass<TEntity>.DataService EntityEditorBaseClass<TEntity>.CanView(ClaimsPrincipal) EntityEditorBaseClass<TEntity>.Load(long, ExpandoObject, ClaimsPrincipal) EntityEditorBaseClass<TEntity>.SaveEntityAsync(long, ExpandoObject, ClaimsPrincipal) EntityEditorBaseClass<TEntity>.TotalActiveAsync(ClaimsPrincipal) object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Mithril.Admin.Abstractions.BaseClasses Assembly: Mithril.Admin.Abstractions.dll Syntax public abstract class SettingsEditorBaseClass<TEntity, TModel> : EntityEditorBaseClass<TEntity, TModel>, IEntityEditor, IEditor where TEntity : IEntity<TModel>, new() where TModel : ModelBase<TModel>, new() Type Parameters Name Description TEntity The type of the entity. TModel The type of the model. Constructors | Improve this Doc View Source SettingsEditorBaseClass(IDataService, IEntityMetadataService, string?) Initializes a new instance of the SettingsEditorBaseClass<TEntity> class. Declaration protected SettingsEditorBaseClass(IDataService dataService, IEntityMetadataService entityMetadataService, string? dataType = null) Parameters Type Name Description IDataService dataService The data service. IEntityMetadataService entityMetadataService The entity metadata service. string dataType Type of the data. See Also EntityEditorBaseClass<TEntity, TModel> Properties | Improve this Doc View Source Category Gets the category. Declaration public override string Category { get; } Property Value Type Description string The category. Overrides EntityEditorBaseClass<TEntity>.Category See Also EntityEditorBaseClass<TEntity, TModel> Methods | Improve this Doc View Source ActivateAsync(long, ClaimsPrincipal?) Activates the entity specified asynchronously. Declaration public override Task<bool> ActivateAsync(long id, ClaimsPrincipal? currentUser) Parameters Type Name Description long id The identifier. ClaimsPrincipal currentUser Returns Type Description Task<bool> True if it succeeds, false otherwise. Overrides EntityEditorBaseClass<TEntity, TModel>.ActivateAsync(long, ClaimsPrincipal) See Also EntityEditorBaseClass<TEntity, TModel> | Improve this Doc View Source DeleteEntityAsync(long, ClaimsPrincipal?) Deletes the entity asynchronously. Declaration public override Task<bool> DeleteEntityAsync(long id, ClaimsPrincipal? currentUser) Parameters Type Name Description long id The identifier. ClaimsPrincipal currentUser Returns Type Description Task<bool> True if it succeeds, false otherwise. Overrides EntityEditorBaseClass<TEntity, TModel>.DeleteEntityAsync(long, ClaimsPrincipal) See Also EntityEditorBaseClass<TEntity, TModel> | Improve this Doc View Source LoadModel(long) Loads the model. Declaration protected override TModel LoadModel(long id) Parameters Type Name Description long id The identifier. Returns Type Description TModel The model requested Overrides EntityEditorBaseClass<TEntity, TModel>.LoadModel(long) See Also EntityEditorBaseClass<TEntity, TModel> | Improve this Doc View Source LoadPageAsync(int, int, string, bool, string, ClaimsPrincipal?) Loads the page asynchronously. Declaration public override Task<IEnumerable<IEntity>> LoadPageAsync(int page, int pageSize, string sortField, bool sortAscending, string searchQuery, ClaimsPrincipal? currentUser) Parameters Type Name Description int page The page (zero based). int pageSize Size of the page. string sortField The sort field. bool sortAscending if set to true [sort ascending]. string searchQuery The search query. ClaimsPrincipal currentUser Returns Type Description Task<IEnumerable<IEntity>> The entities specified. Overrides EntityEditorBaseClass<TEntity, TModel>.LoadPageAsync(int, int, string, bool, string, ClaimsPrincipal) See Also EntityEditorBaseClass<TEntity, TModel> Implements IEntityEditor IEditor Extension Methods ExpandoObjectExtensions.ConvertToExpando<TEntity>(TEntity?) GenericExtensions.When<TObject>(TObject, bool, Func<TObject, TObject>) See Also EntityEditorBaseClass<TEntity, TModel>"
  },
  "api/Mithril.Admin.Abstractions.BaseClasses.html": {
    "href": "api/Mithril.Admin.Abstractions.BaseClasses.html",
    "title": "Namespace Mithril.Admin.Abstractions.BaseClasses | Mithril API Reference",
    "keywords": "Namespace Mithril.Admin.Abstractions.BaseClasses Classes EntityBaseClass<TEntity> Entity base class EntityEditorBaseClass<TEntity> Entity editor base class EntityEditorBaseClass<TEntity, TModel> Entity editor base class MetadataBuilderBaseClass Metadata Builder base class SettingsBaseClass Base class for settings SettingsEditorBaseClass<TEntity> Settings editor base class SettingsEditorBaseClass<TEntity, TModel> Settings editor base class"
  },
  "api/Mithril.Admin.Abstractions.Commands.SaveModelCommand.html": {
    "href": "api/Mithril.Admin.Abstractions.Commands.SaveModelCommand.html",
    "title": "Class SaveModelCommand | Mithril API Reference",
    "keywords": "Class SaveModelCommand Save model command Inheritance object ModelBase<SaveModelCommand> CommandBaseClass<SaveModelCommand> SaveModelCommand Implements IModel<SaveModelCommand> IEquatable<IModel<SaveModelCommand>> IComparable IComparable<SaveModelCommand> IEquatable<ModelBase<SaveModelCommand>> ICommand IEquatable<ICommand> IModel IEquatable<IModel> IEquatable<CommandBaseClass<SaveModelCommand>> Inherited Members CommandBaseClass<SaveModelCommand>.Name CommandBaseClass<SaveModelCommand>.CompareTo(CommandBaseClass<SaveModelCommand>) CommandBaseClass<SaveModelCommand>.Equals(CommandBaseClass<SaveModelCommand>) CommandBaseClass<SaveModelCommand>.Equals(ICommand) CommandBaseClass<SaveModelCommand>.ToString() ModelBase<SaveModelCommand>.Active ModelBase<SaveModelCommand>.Creator ModelBase<SaveModelCommand>.DateCreated ModelBase<SaveModelCommand>.DateModified ModelBase<SaveModelCommand>.ID ModelBase<SaveModelCommand>.Modifier ModelBase<SaveModelCommand>.TenantID ModelBase<SaveModelCommand>.All(IDataService) ModelBase<SaveModelCommand>.AllActive(IDataService) ModelBase<SaveModelCommand>.AllInactive(IDataService) ModelBase<SaveModelCommand>.Load(long, IDataService) ModelBase<SaveModelCommand>.Query(IDataService) ModelBase<SaveModelCommand>.CanBeModifiedBy(ClaimsPrincipal) ModelBase<SaveModelCommand>.CanBeViewedBy(ClaimsPrincipal) ModelBase<SaveModelCommand>.CompareTo(object) ModelBase<SaveModelCommand>.DeleteAsync(IDataService, ClaimsPrincipal, bool) ModelBase<SaveModelCommand>.Equals(IModel) ModelBase<SaveModelCommand>.Equals(IModel<SaveModelCommand>) ModelBase<SaveModelCommand>.Equals(ModelBase<SaveModelCommand>) ModelBase<SaveModelCommand>.SaveAsync(IDataService, ClaimsPrincipal) ModelBase<SaveModelCommand>.SetupObject(IDataService, ClaimsPrincipal) ModelBase<SaveModelCommand>.SetupObject(IDataService, IUser) ModelBase<SaveModelCommand>.SetupObjectAndReturn(IDataService, ClaimsPrincipal) object.Equals(object, object) object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Namespace: Mithril.Admin.Abstractions.Commands Assembly: Mithril.Admin.Abstractions.dll Syntax public class SaveModelCommand : CommandBaseClass<SaveModelCommand>, IModel<SaveModelCommand>, IEquatable<IModel<SaveModelCommand>>, IComparable, IComparable<SaveModelCommand>, IEquatable<ModelBase<SaveModelCommand>>, ICommand, IEquatable<ICommand>, IModel, IEquatable<IModel>, IEquatable<CommandBaseClass<SaveModelCommand>> Constructors | Improve this Doc View Source SaveModelCommand() Initializes a new instance of the SaveModelCommand class. Declaration public SaveModelCommand() See Also CommandBaseClass<TCommand> | Improve this Doc View Source SaveModelCommand(ExpandoObject?, string?, long) Initializes a new instance of the SaveModelCommand class. Declaration public SaveModelCommand(ExpandoObject? data, string? entityType, long id) Parameters Type Name Description ExpandoObject data The data. string entityType Type of the entity. long id The identifier. See Also CommandBaseClass<TCommand> Properties | Improve this Doc View Source Data Gets or sets the data. Declaration [MaxLength] public string? Data { get; set; } Property Value Type Description string The data. See Also CommandBaseClass<TCommand> | Improve this Doc View Source EntityID Gets or sets the identifier. Declaration public long EntityID { get; set; } Property Value Type Description long The identifier. See Also CommandBaseClass<TCommand> | Improve this Doc View Source EntityType Gets or sets the type of the entity. Declaration [MaxLength(64)] public string? EntityType { get; set; } Property Value Type Description string The type of the entity. See Also CommandBaseClass<TCommand> Methods | Improve this Doc View Source CompareTo(SaveModelCommand?) Compares the object to another object Declaration public override int CompareTo(SaveModelCommand? other) Parameters Type Name Description SaveModelCommand other Object to compare to Returns Type Description int 0 if they are equal, -1 if this is smaller, 1 if it is larger Overrides ModelBase<SaveModelCommand>.CompareTo(SaveModelCommand) See Also CommandBaseClass<TCommand> | Improve this Doc View Source Equals(SaveModelCommand) Indicates whether the current object is equal to another object of the same type. Declaration public bool Equals(SaveModelCommand other) Parameters Type Name Description SaveModelCommand other An object to compare with this object. Returns Type Description bool true if the current object is equal to the other parameter; otherwise, false. See Also CommandBaseClass<TCommand> | Improve this Doc View Source Equals(object?) Determines whether the specified object, is equal to this instance. Declaration public override bool Equals(object? obj) Parameters Type Name Description object obj The object to compare with this instance. Returns Type Description bool true if the specified object is equal to this instance; otherwise, false. Overrides CommandBaseClass<SaveModelCommand>.Equals(object) See Also CommandBaseClass<TCommand> | Improve this Doc View Source GetHashCode() Returns a hash code for this instance. Declaration public override int GetHashCode() Returns Type Description int A hash code for this instance, suitable for use in hashing algorithms and data structures like a hash table. Overrides CommandBaseClass<SaveModelCommand>.GetHashCode() See Also CommandBaseClass<TCommand> Operators | Improve this Doc View Source operator ==(SaveModelCommand, SaveModelCommand) Implements the operator ==. Declaration public static bool operator ==(SaveModelCommand first, SaveModelCommand second) Parameters Type Name Description SaveModelCommand first The first. SaveModelCommand second The second. Returns Type Description bool The result of the operator. See Also CommandBaseClass<TCommand> | Improve this Doc View Source operator >(SaveModelCommand, SaveModelCommand) Implements the operator >. Declaration public static bool operator >(SaveModelCommand left, SaveModelCommand right) Parameters Type Name Description SaveModelCommand left The left. SaveModelCommand right The right. Returns Type Description bool The result of the operator. See Also CommandBaseClass<TCommand> | Improve this Doc View Source operator >=(SaveModelCommand, SaveModelCommand) Implements the operator >=. Declaration public static bool operator >=(SaveModelCommand left, SaveModelCommand right) Parameters Type Name Description SaveModelCommand left The left. SaveModelCommand right The right. Returns Type Description bool The result of the operator. See Also CommandBaseClass<TCommand> | Improve this Doc View Source operator !=(SaveModelCommand, SaveModelCommand) Implements the operator !=. Declaration public static bool operator !=(SaveModelCommand left, SaveModelCommand right) Parameters Type Name Description SaveModelCommand left The left. SaveModelCommand right The right. Returns Type Description bool The result of the operator. See Also CommandBaseClass<TCommand> | Improve this Doc View Source operator <(SaveModelCommand, SaveModelCommand) Implements the operator <. Declaration public static bool operator <(SaveModelCommand left, SaveModelCommand right) Parameters Type Name Description SaveModelCommand left The left. SaveModelCommand right The right. Returns Type Description bool The result of the operator. See Also CommandBaseClass<TCommand> | Improve this Doc View Source operator <=(SaveModelCommand, SaveModelCommand) Implements the operator <=. Declaration public static bool operator <=(SaveModelCommand left, SaveModelCommand right) Parameters Type Name Description SaveModelCommand left The left. SaveModelCommand right The right. Returns Type Description bool The result of the operator. See Also CommandBaseClass<TCommand> Implements IModel<TClass> IEquatable<T> IComparable IComparable<T> IEquatable<T> ICommand IEquatable<T> IModel IEquatable<T> IEquatable<T> Extension Methods ExpandoObjectExtensions.ConvertToExpando<TEntity>(TEntity?) GenericExtensions.When<TObject>(TObject, bool, Func<TObject, TObject>) See Also CommandBaseClass<TCommand>"
  },
  "api/Mithril.Admin.Abstractions.Commands.html": {
    "href": "api/Mithril.Admin.Abstractions.Commands.html",
    "title": "Namespace Mithril.Admin.Abstractions.Commands | Mithril API Reference",
    "keywords": "Namespace Mithril.Admin.Abstractions.Commands Classes SaveModelCommand Save model command"
  },
  "api/Mithril.Admin.Abstractions.Components.DataEditorComponent-1.html": {
    "href": "api/Mithril.Admin.Abstractions.Components.DataEditorComponent-1.html",
    "title": "Class DataEditorComponent<TEntity> | Mithril API Reference",
    "keywords": "Class DataEditorComponent<TEntity> Data editor component Inheritance object ComponentDefinitionBaseClass<DataEditorComponent<TEntity>> DataEditorComponent<TEntity> Implements IComponentDefinition Inherited Members ComponentDefinitionBaseClass<DataEditorComponent<TEntity>>.DefaultClass ComponentDefinitionBaseClass<DataEditorComponent<TEntity>>.Name ComponentDefinitionBaseClass<DataEditorComponent<TEntity>>.Schema ComponentDefinitionBaseClass<DataEditorComponent<TEntity>>.ScriptFile object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Mithril.Admin.Abstractions.Components Assembly: Mithril.Admin.Abstractions.dll Syntax public class DataEditorComponent<TEntity> : ComponentDefinitionBaseClass<DataEditorComponent<TEntity>>, IComponentDefinition Type Parameters Name Description TEntity Constructors | Improve this Doc View Source DataEditorComponent() Initializes a new instance of the DataEditorComponent<TEntity> class. Declaration public DataEditorComponent() See Also ComponentDefinitionBaseClass<TClass> | Improve this Doc View Source DataEditorComponent(string, IEntityMetadataService?) Initializes a new instance of the DataEditorComponent<TEntity> class. Declaration public DataEditorComponent(string dataType, IEntityMetadataService? entityMetadataService) Parameters Type Name Description string dataType Type of the data. IEntityMetadataService entityMetadataService The entity metadata service. See Also ComponentDefinitionBaseClass<TClass> Properties | Improve this Doc View Source DefaultProperties Gets the default properties. Declaration public override Dictionary<string, string> DefaultProperties { get; } Property Value Type Description Dictionary<string, string> The default properties. Overrides ComponentDefinitionBaseClass<DataEditorComponent<TEntity>>.DefaultProperties See Also ComponentDefinitionBaseClass<TClass> Implements IComponentDefinition Extension Methods ExpandoObjectExtensions.ConvertToExpando<TEntity>(TEntity?) GenericExtensions.When<TObject>(TObject, bool, Func<TObject, TObject>) See Also ComponentDefinitionBaseClass<TClass>"
  },
  "api/Mithril.Admin.Abstractions.Components.SettingsEditorComponent-1.html": {
    "href": "api/Mithril.Admin.Abstractions.Components.SettingsEditorComponent-1.html",
    "title": "Class SettingsEditorComponent<TEntity> | Mithril API Reference",
    "keywords": "Class SettingsEditorComponent<TEntity> Settings editor component Inheritance object ComponentDefinitionBaseClass<SettingsEditorComponent<TEntity>> SettingsEditorComponent<TEntity> Implements IComponentDefinition Inherited Members ComponentDefinitionBaseClass<SettingsEditorComponent<TEntity>>.DefaultClass ComponentDefinitionBaseClass<SettingsEditorComponent<TEntity>>.Name ComponentDefinitionBaseClass<SettingsEditorComponent<TEntity>>.Schema ComponentDefinitionBaseClass<SettingsEditorComponent<TEntity>>.ScriptFile object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Mithril.Admin.Abstractions.Components Assembly: Mithril.Admin.Abstractions.dll Syntax public class SettingsEditorComponent<TEntity> : ComponentDefinitionBaseClass<SettingsEditorComponent<TEntity>>, IComponentDefinition Type Parameters Name Description TEntity Constructors | Improve this Doc View Source SettingsEditorComponent() Initializes a new instance of the SettingsEditorComponent<TEntity> class. Declaration public SettingsEditorComponent() See Also ComponentDefinitionBaseClass<TClass> | Improve this Doc View Source SettingsEditorComponent(string, IEntityMetadataService?) Initializes a new instance of the SettingsEditorComponent<TEntity> class. Declaration public SettingsEditorComponent(string dataType, IEntityMetadataService? entityMetadataService) Parameters Type Name Description string dataType Type of the data. IEntityMetadataService entityMetadataService The entity metadata service. See Also ComponentDefinitionBaseClass<TClass> Properties | Improve this Doc View Source DefaultProperties Gets the default properties. Declaration public override Dictionary<string, string> DefaultProperties { get; } Property Value Type Description Dictionary<string, string> The default properties. Overrides ComponentDefinitionBaseClass<SettingsEditorComponent<TEntity>>.DefaultProperties See Also ComponentDefinitionBaseClass<TClass> Implements IComponentDefinition Extension Methods ExpandoObjectExtensions.ConvertToExpando<TEntity>(TEntity?) GenericExtensions.When<TObject>(TObject, bool, Func<TObject, TObject>) See Also ComponentDefinitionBaseClass<TClass>"
  },
  "api/Mithril.Admin.Abstractions.Components.html": {
    "href": "api/Mithril.Admin.Abstractions.Components.html",
    "title": "Namespace Mithril.Admin.Abstractions.Components | Mithril API Reference",
    "keywords": "Namespace Mithril.Admin.Abstractions.Components Classes DataEditorComponent<TEntity> Data editor component SettingsEditorComponent<TEntity> Settings editor component"
  },
  "api/Mithril.Admin.Abstractions.DataEditor.Attributes.DateAndTimeAttribute.html": {
    "href": "api/Mithril.Admin.Abstractions.DataEditor.Attributes.DateAndTimeAttribute.html",
    "title": "Class DateAndTimeAttribute | Mithril API Reference",
    "keywords": "Class DateAndTimeAttribute Used to indicate that the generator should do both a date and time picker Inheritance object Attribute DateAndTimeAttribute Inherited Members Attribute.Equals(object) Attribute.GetCustomAttribute(Assembly, Type) Attribute.GetCustomAttribute(Assembly, Type, bool) Attribute.GetCustomAttribute(MemberInfo, Type) Attribute.GetCustomAttribute(MemberInfo, Type, bool) Attribute.GetCustomAttribute(Module, Type) Attribute.GetCustomAttribute(Module, Type, bool) Attribute.GetCustomAttribute(ParameterInfo, Type) Attribute.GetCustomAttribute(ParameterInfo, Type, bool) Attribute.GetCustomAttributes(Assembly) Attribute.GetCustomAttributes(Assembly, bool) Attribute.GetCustomAttributes(Assembly, Type) Attribute.GetCustomAttributes(Assembly, Type, bool) Attribute.GetCustomAttributes(MemberInfo) Attribute.GetCustomAttributes(MemberInfo, bool) Attribute.GetCustomAttributes(MemberInfo, Type) Attribute.GetCustomAttributes(MemberInfo, Type, bool) Attribute.GetCustomAttributes(Module) Attribute.GetCustomAttributes(Module, bool) Attribute.GetCustomAttributes(Module, Type) Attribute.GetCustomAttributes(Module, Type, bool) Attribute.GetCustomAttributes(ParameterInfo) Attribute.GetCustomAttributes(ParameterInfo, bool) Attribute.GetCustomAttributes(ParameterInfo, Type) Attribute.GetCustomAttributes(ParameterInfo, Type, bool) Attribute.GetHashCode() Attribute.IsDefaultAttribute() Attribute.IsDefined(Assembly, Type) Attribute.IsDefined(Assembly, Type, bool) Attribute.IsDefined(MemberInfo, Type) Attribute.IsDefined(MemberInfo, Type, bool) Attribute.IsDefined(Module, Type) Attribute.IsDefined(Module, Type, bool) Attribute.IsDefined(ParameterInfo, Type) Attribute.IsDefined(ParameterInfo, Type, bool) Attribute.Match(object) Attribute.TypeId object.Equals(object, object) object.GetType() object.ReferenceEquals(object, object) object.ToString() Namespace: Mithril.Admin.Abstractions.DataEditor.Attributes Assembly: Mithril.Admin.Abstractions.dll Syntax [AttributeUsage(AttributeTargets.Property, AllowMultiple = false)] public sealed class DateAndTimeAttribute : Attribute Extension Methods ExpandoObjectExtensions.ConvertToExpando<TEntity>(TEntity?) GenericExtensions.When<TObject>(TObject, bool, Func<TObject, TObject>) See Also Attribute"
  },
  "api/Mithril.Admin.Abstractions.DataEditor.Attributes.DisplayAsTextAttribute.html": {
    "href": "api/Mithril.Admin.Abstractions.DataEditor.Attributes.DisplayAsTextAttribute.html",
    "title": "Class DisplayAsTextAttribute | Mithril API Reference",
    "keywords": "Class DisplayAsTextAttribute Used to indicate that the generator should display this as text (may have the ability for markdown, html, etc. depending on the generator) Inheritance object Attribute DisplayAsTextAttribute Inherited Members Attribute.Equals(object) Attribute.GetCustomAttribute(Assembly, Type) Attribute.GetCustomAttribute(Assembly, Type, bool) Attribute.GetCustomAttribute(MemberInfo, Type) Attribute.GetCustomAttribute(MemberInfo, Type, bool) Attribute.GetCustomAttribute(Module, Type) Attribute.GetCustomAttribute(Module, Type, bool) Attribute.GetCustomAttribute(ParameterInfo, Type) Attribute.GetCustomAttribute(ParameterInfo, Type, bool) Attribute.GetCustomAttributes(Assembly) Attribute.GetCustomAttributes(Assembly, bool) Attribute.GetCustomAttributes(Assembly, Type) Attribute.GetCustomAttributes(Assembly, Type, bool) Attribute.GetCustomAttributes(MemberInfo) Attribute.GetCustomAttributes(MemberInfo, bool) Attribute.GetCustomAttributes(MemberInfo, Type) Attribute.GetCustomAttributes(MemberInfo, Type, bool) Attribute.GetCustomAttributes(Module) Attribute.GetCustomAttributes(Module, bool) Attribute.GetCustomAttributes(Module, Type) Attribute.GetCustomAttributes(Module, Type, bool) Attribute.GetCustomAttributes(ParameterInfo) Attribute.GetCustomAttributes(ParameterInfo, bool) Attribute.GetCustomAttributes(ParameterInfo, Type) Attribute.GetCustomAttributes(ParameterInfo, Type, bool) Attribute.GetHashCode() Attribute.IsDefaultAttribute() Attribute.IsDefined(Assembly, Type) Attribute.IsDefined(Assembly, Type, bool) Attribute.IsDefined(MemberInfo, Type) Attribute.IsDefined(MemberInfo, Type, bool) Attribute.IsDefined(Module, Type) Attribute.IsDefined(Module, Type, bool) Attribute.IsDefined(ParameterInfo, Type) Attribute.IsDefined(ParameterInfo, Type, bool) Attribute.Match(object) Attribute.TypeId object.Equals(object, object) object.GetType() object.ReferenceEquals(object, object) object.ToString() Namespace: Mithril.Admin.Abstractions.DataEditor.Attributes Assembly: Mithril.Admin.Abstractions.dll Syntax [AttributeUsage(AttributeTargets.Property, AllowMultiple = false)] public sealed class DisplayAsTextAttribute : Attribute Extension Methods ExpandoObjectExtensions.ConvertToExpando<TEntity>(TEntity?) GenericExtensions.When<TObject>(TObject, bool, Func<TObject, TObject>) See Also Attribute"
  },
  "api/Mithril.Admin.Abstractions.DataEditor.Attributes.DoNotListAttribute.html": {
    "href": "api/Mithril.Admin.Abstractions.DataEditor.Attributes.DoNotListAttribute.html",
    "title": "Class DoNotListAttribute | Mithril API Reference",
    "keywords": "Class DoNotListAttribute Do not list attribute Inheritance object Attribute DoNotListAttribute Inherited Members Attribute.Equals(object) Attribute.GetCustomAttribute(Assembly, Type) Attribute.GetCustomAttribute(Assembly, Type, bool) Attribute.GetCustomAttribute(MemberInfo, Type) Attribute.GetCustomAttribute(MemberInfo, Type, bool) Attribute.GetCustomAttribute(Module, Type) Attribute.GetCustomAttribute(Module, Type, bool) Attribute.GetCustomAttribute(ParameterInfo, Type) Attribute.GetCustomAttribute(ParameterInfo, Type, bool) Attribute.GetCustomAttributes(Assembly) Attribute.GetCustomAttributes(Assembly, bool) Attribute.GetCustomAttributes(Assembly, Type) Attribute.GetCustomAttributes(Assembly, Type, bool) Attribute.GetCustomAttributes(MemberInfo) Attribute.GetCustomAttributes(MemberInfo, bool) Attribute.GetCustomAttributes(MemberInfo, Type) Attribute.GetCustomAttributes(MemberInfo, Type, bool) Attribute.GetCustomAttributes(Module) Attribute.GetCustomAttributes(Module, bool) Attribute.GetCustomAttributes(Module, Type) Attribute.GetCustomAttributes(Module, Type, bool) Attribute.GetCustomAttributes(ParameterInfo) Attribute.GetCustomAttributes(ParameterInfo, bool) Attribute.GetCustomAttributes(ParameterInfo, Type) Attribute.GetCustomAttributes(ParameterInfo, Type, bool) Attribute.GetHashCode() Attribute.IsDefaultAttribute() Attribute.IsDefined(Assembly, Type) Attribute.IsDefined(Assembly, Type, bool) Attribute.IsDefined(MemberInfo, Type) Attribute.IsDefined(MemberInfo, Type, bool) Attribute.IsDefined(Module, Type) Attribute.IsDefined(Module, Type, bool) Attribute.IsDefined(ParameterInfo, Type) Attribute.IsDefined(ParameterInfo, Type, bool) Attribute.Match(object) Attribute.TypeId object.Equals(object, object) object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Mithril.Admin.Abstractions.DataEditor.Attributes Assembly: Mithril.Admin.Abstractions.dll Syntax [AttributeUsage(AttributeTargets.Property, AllowMultiple = false)] public class DoNotListAttribute : Attribute Extension Methods ExpandoObjectExtensions.ConvertToExpando<TEntity>(TEntity?) GenericExtensions.When<TObject>(TObject, bool, Func<TObject, TObject>) See Also Attribute"
  },
  "api/Mithril.Admin.Abstractions.DataEditor.Attributes.HintAttribute.html": {
    "href": "api/Mithril.Admin.Abstractions.DataEditor.Attributes.HintAttribute.html",
    "title": "Class HintAttribute | Mithril API Reference",
    "keywords": "Class HintAttribute Hint attribute Inheritance object Attribute HintAttribute Inherited Members Attribute.Equals(object) Attribute.GetCustomAttribute(Assembly, Type) Attribute.GetCustomAttribute(Assembly, Type, bool) Attribute.GetCustomAttribute(MemberInfo, Type) Attribute.GetCustomAttribute(MemberInfo, Type, bool) Attribute.GetCustomAttribute(Module, Type) Attribute.GetCustomAttribute(Module, Type, bool) Attribute.GetCustomAttribute(ParameterInfo, Type) Attribute.GetCustomAttribute(ParameterInfo, Type, bool) Attribute.GetCustomAttributes(Assembly) Attribute.GetCustomAttributes(Assembly, bool) Attribute.GetCustomAttributes(Assembly, Type) Attribute.GetCustomAttributes(Assembly, Type, bool) Attribute.GetCustomAttributes(MemberInfo) Attribute.GetCustomAttributes(MemberInfo, bool) Attribute.GetCustomAttributes(MemberInfo, Type) Attribute.GetCustomAttributes(MemberInfo, Type, bool) Attribute.GetCustomAttributes(Module) Attribute.GetCustomAttributes(Module, bool) Attribute.GetCustomAttributes(Module, Type) Attribute.GetCustomAttributes(Module, Type, bool) Attribute.GetCustomAttributes(ParameterInfo) Attribute.GetCustomAttributes(ParameterInfo, bool) Attribute.GetCustomAttributes(ParameterInfo, Type) Attribute.GetCustomAttributes(ParameterInfo, Type, bool) Attribute.GetHashCode() Attribute.IsDefaultAttribute() Attribute.IsDefined(Assembly, Type) Attribute.IsDefined(Assembly, Type, bool) Attribute.IsDefined(MemberInfo, Type) Attribute.IsDefined(MemberInfo, Type, bool) Attribute.IsDefined(Module, Type) Attribute.IsDefined(Module, Type, bool) Attribute.IsDefined(ParameterInfo, Type) Attribute.IsDefined(ParameterInfo, Type, bool) Attribute.Match(object) Attribute.TypeId object.Equals(object, object) object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Mithril.Admin.Abstractions.DataEditor.Attributes Assembly: Mithril.Admin.Abstractions.dll Syntax [AttributeUsage(AttributeTargets.Property, AllowMultiple = false)] public class HintAttribute : Attribute Constructors | Improve this Doc View Source HintAttribute(string) Initializes a new instance of the HintAttribute class. Declaration public HintAttribute(string value) Parameters Type Name Description string value The value. See Also Attribute Properties | Improve this Doc View Source Value Gets or sets the value. Declaration public string Value { get; set; } Property Value Type Description string The value. See Also Attribute Extension Methods ExpandoObjectExtensions.ConvertToExpando<TEntity>(TEntity?) GenericExtensions.When<TObject>(TObject, bool, Func<TObject, TObject>) See Also Attribute"
  },
  "api/Mithril.Admin.Abstractions.DataEditor.Attributes.HtmlAttribute.html": {
    "href": "api/Mithril.Admin.Abstractions.DataEditor.Attributes.HtmlAttribute.html",
    "title": "Class HtmlAttribute | Mithril API Reference",
    "keywords": "Class HtmlAttribute HTML attribute Inheritance object Attribute HtmlAttribute Inherited Members Attribute.Equals(object) Attribute.GetCustomAttribute(Assembly, Type) Attribute.GetCustomAttribute(Assembly, Type, bool) Attribute.GetCustomAttribute(MemberInfo, Type) Attribute.GetCustomAttribute(MemberInfo, Type, bool) Attribute.GetCustomAttribute(Module, Type) Attribute.GetCustomAttribute(Module, Type, bool) Attribute.GetCustomAttribute(ParameterInfo, Type) Attribute.GetCustomAttribute(ParameterInfo, Type, bool) Attribute.GetCustomAttributes(Assembly) Attribute.GetCustomAttributes(Assembly, bool) Attribute.GetCustomAttributes(Assembly, Type) Attribute.GetCustomAttributes(Assembly, Type, bool) Attribute.GetCustomAttributes(MemberInfo) Attribute.GetCustomAttributes(MemberInfo, bool) Attribute.GetCustomAttributes(MemberInfo, Type) Attribute.GetCustomAttributes(MemberInfo, Type, bool) Attribute.GetCustomAttributes(Module) Attribute.GetCustomAttributes(Module, bool) Attribute.GetCustomAttributes(Module, Type) Attribute.GetCustomAttributes(Module, Type, bool) Attribute.GetCustomAttributes(ParameterInfo) Attribute.GetCustomAttributes(ParameterInfo, bool) Attribute.GetCustomAttributes(ParameterInfo, Type) Attribute.GetCustomAttributes(ParameterInfo, Type, bool) Attribute.GetHashCode() Attribute.IsDefaultAttribute() Attribute.IsDefined(Assembly, Type) Attribute.IsDefined(Assembly, Type, bool) Attribute.IsDefined(MemberInfo, Type) Attribute.IsDefined(MemberInfo, Type, bool) Attribute.IsDefined(Module, Type) Attribute.IsDefined(Module, Type, bool) Attribute.IsDefined(ParameterInfo, Type) Attribute.IsDefined(ParameterInfo, Type, bool) Attribute.Match(object) Attribute.TypeId object.Equals(object, object) object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Mithril.Admin.Abstractions.DataEditor.Attributes Assembly: Mithril.Admin.Abstractions.dll Syntax [AttributeUsage(AttributeTargets.Property, AllowMultiple = false)] public class HtmlAttribute : Attribute Extension Methods ExpandoObjectExtensions.ConvertToExpando<TEntity>(TEntity?) GenericExtensions.When<TObject>(TObject, bool, Func<TObject, TObject>) See Also Attribute"
  },
  "api/Mithril.Admin.Abstractions.DataEditor.Attributes.IgnoreAttribute.html": {
    "href": "api/Mithril.Admin.Abstractions.DataEditor.Attributes.IgnoreAttribute.html",
    "title": "Class IgnoreAttribute | Mithril API Reference",
    "keywords": "Class IgnoreAttribute Ignore attribute Inheritance object Attribute IgnoreAttribute Inherited Members Attribute.Equals(object) Attribute.GetCustomAttribute(Assembly, Type) Attribute.GetCustomAttribute(Assembly, Type, bool) Attribute.GetCustomAttribute(MemberInfo, Type) Attribute.GetCustomAttribute(MemberInfo, Type, bool) Attribute.GetCustomAttribute(Module, Type) Attribute.GetCustomAttribute(Module, Type, bool) Attribute.GetCustomAttribute(ParameterInfo, Type) Attribute.GetCustomAttribute(ParameterInfo, Type, bool) Attribute.GetCustomAttributes(Assembly) Attribute.GetCustomAttributes(Assembly, bool) Attribute.GetCustomAttributes(Assembly, Type) Attribute.GetCustomAttributes(Assembly, Type, bool) Attribute.GetCustomAttributes(MemberInfo) Attribute.GetCustomAttributes(MemberInfo, bool) Attribute.GetCustomAttributes(MemberInfo, Type) Attribute.GetCustomAttributes(MemberInfo, Type, bool) Attribute.GetCustomAttributes(Module) Attribute.GetCustomAttributes(Module, bool) Attribute.GetCustomAttributes(Module, Type) Attribute.GetCustomAttributes(Module, Type, bool) Attribute.GetCustomAttributes(ParameterInfo) Attribute.GetCustomAttributes(ParameterInfo, bool) Attribute.GetCustomAttributes(ParameterInfo, Type) Attribute.GetCustomAttributes(ParameterInfo, Type, bool) Attribute.GetHashCode() Attribute.IsDefaultAttribute() Attribute.IsDefined(Assembly, Type) Attribute.IsDefined(Assembly, Type, bool) Attribute.IsDefined(MemberInfo, Type) Attribute.IsDefined(MemberInfo, Type, bool) Attribute.IsDefined(Module, Type) Attribute.IsDefined(Module, Type, bool) Attribute.IsDefined(ParameterInfo, Type) Attribute.IsDefined(ParameterInfo, Type, bool) Attribute.Match(object) Attribute.TypeId object.Equals(object, object) object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Mithril.Admin.Abstractions.DataEditor.Attributes Assembly: Mithril.Admin.Abstractions.dll Syntax [AttributeUsage(AttributeTargets.Property, AllowMultiple = false)] public class IgnoreAttribute : Attribute Extension Methods ExpandoObjectExtensions.ConvertToExpando<TEntity>(TEntity?) GenericExtensions.When<TObject>(TObject, bool, Func<TObject, TObject>) See Also Attribute"
  },
  "api/Mithril.Admin.Abstractions.DataEditor.Attributes.InputTypeAttribute.html": {
    "href": "api/Mithril.Admin.Abstractions.DataEditor.Attributes.InputTypeAttribute.html",
    "title": "Class InputTypeAttribute | Mithril API Reference",
    "keywords": "Class InputTypeAttribute Input type attribute Inheritance object Attribute InputTypeAttribute Inherited Members Attribute.Equals(object) Attribute.GetCustomAttribute(Assembly, Type) Attribute.GetCustomAttribute(Assembly, Type, bool) Attribute.GetCustomAttribute(MemberInfo, Type) Attribute.GetCustomAttribute(MemberInfo, Type, bool) Attribute.GetCustomAttribute(Module, Type) Attribute.GetCustomAttribute(Module, Type, bool) Attribute.GetCustomAttribute(ParameterInfo, Type) Attribute.GetCustomAttribute(ParameterInfo, Type, bool) Attribute.GetCustomAttributes(Assembly) Attribute.GetCustomAttributes(Assembly, bool) Attribute.GetCustomAttributes(Assembly, Type) Attribute.GetCustomAttributes(Assembly, Type, bool) Attribute.GetCustomAttributes(MemberInfo) Attribute.GetCustomAttributes(MemberInfo, bool) Attribute.GetCustomAttributes(MemberInfo, Type) Attribute.GetCustomAttributes(MemberInfo, Type, bool) Attribute.GetCustomAttributes(Module) Attribute.GetCustomAttributes(Module, bool) Attribute.GetCustomAttributes(Module, Type) Attribute.GetCustomAttributes(Module, Type, bool) Attribute.GetCustomAttributes(ParameterInfo) Attribute.GetCustomAttributes(ParameterInfo, bool) Attribute.GetCustomAttributes(ParameterInfo, Type) Attribute.GetCustomAttributes(ParameterInfo, Type, bool) Attribute.GetHashCode() Attribute.IsDefaultAttribute() Attribute.IsDefined(Assembly, Type) Attribute.IsDefined(Assembly, Type, bool) Attribute.IsDefined(MemberInfo, Type) Attribute.IsDefined(MemberInfo, Type, bool) Attribute.IsDefined(Module, Type) Attribute.IsDefined(Module, Type, bool) Attribute.IsDefined(ParameterInfo, Type) Attribute.IsDefined(ParameterInfo, Type, bool) Attribute.Match(object) Attribute.TypeId object.Equals(object, object) object.GetType() object.ReferenceEquals(object, object) object.ToString() Namespace: Mithril.Admin.Abstractions.DataEditor.Attributes Assembly: Mithril.Admin.Abstractions.dll Syntax [AttributeUsage(AttributeTargets.Property, AllowMultiple = false)] public sealed class InputTypeAttribute : Attribute Constructors | Improve this Doc View Source InputTypeAttribute(string) Initializes a new instance of the InputTypeAttribute class. Declaration public InputTypeAttribute(string inputType) Parameters Type Name Description string inputType Type of the input. See Also Attribute Properties | Improve this Doc View Source InputType Gets the type of the input. Declaration public string InputType { get; } Property Value Type Description string The type of the input. See Also Attribute Extension Methods ExpandoObjectExtensions.ConvertToExpando<TEntity>(TEntity?) GenericExtensions.When<TObject>(TObject, bool, Func<TObject, TObject>) See Also Attribute"
  },
  "api/Mithril.Admin.Abstractions.DataEditor.Attributes.OrderAttribute.html": {
    "href": "api/Mithril.Admin.Abstractions.DataEditor.Attributes.OrderAttribute.html",
    "title": "Class OrderAttribute | Mithril API Reference",
    "keywords": "Class OrderAttribute Order attribute Inheritance object Attribute OrderAttribute Inherited Members Attribute.Equals(object) Attribute.GetCustomAttribute(Assembly, Type) Attribute.GetCustomAttribute(Assembly, Type, bool) Attribute.GetCustomAttribute(MemberInfo, Type) Attribute.GetCustomAttribute(MemberInfo, Type, bool) Attribute.GetCustomAttribute(Module, Type) Attribute.GetCustomAttribute(Module, Type, bool) Attribute.GetCustomAttribute(ParameterInfo, Type) Attribute.GetCustomAttribute(ParameterInfo, Type, bool) Attribute.GetCustomAttributes(Assembly) Attribute.GetCustomAttributes(Assembly, bool) Attribute.GetCustomAttributes(Assembly, Type) Attribute.GetCustomAttributes(Assembly, Type, bool) Attribute.GetCustomAttributes(MemberInfo) Attribute.GetCustomAttributes(MemberInfo, bool) Attribute.GetCustomAttributes(MemberInfo, Type) Attribute.GetCustomAttributes(MemberInfo, Type, bool) Attribute.GetCustomAttributes(Module) Attribute.GetCustomAttributes(Module, bool) Attribute.GetCustomAttributes(Module, Type) Attribute.GetCustomAttributes(Module, Type, bool) Attribute.GetCustomAttributes(ParameterInfo) Attribute.GetCustomAttributes(ParameterInfo, bool) Attribute.GetCustomAttributes(ParameterInfo, Type) Attribute.GetCustomAttributes(ParameterInfo, Type, bool) Attribute.GetHashCode() Attribute.IsDefaultAttribute() Attribute.IsDefined(Assembly, Type) Attribute.IsDefined(Assembly, Type, bool) Attribute.IsDefined(MemberInfo, Type) Attribute.IsDefined(MemberInfo, Type, bool) Attribute.IsDefined(Module, Type) Attribute.IsDefined(Module, Type, bool) Attribute.IsDefined(ParameterInfo, Type) Attribute.IsDefined(ParameterInfo, Type, bool) Attribute.Match(object) Attribute.TypeId object.Equals(object, object) object.GetType() object.ReferenceEquals(object, object) object.ToString() Namespace: Mithril.Admin.Abstractions.DataEditor.Attributes Assembly: Mithril.Admin.Abstractions.dll Syntax [AttributeUsage(AttributeTargets.Property, AllowMultiple = false)] public sealed class OrderAttribute : Attribute Constructors | Improve this Doc View Source OrderAttribute(int) Initializes a new instance of the OrderAttribute class. Declaration public OrderAttribute(int order) Parameters Type Name Description int order The order. See Also Attribute Properties | Improve this Doc View Source Order Gets the order. Declaration public int Order { get; } Property Value Type Description int The order. See Also Attribute Extension Methods ExpandoObjectExtensions.ConvertToExpando<TEntity>(TEntity?) GenericExtensions.When<TObject>(TObject, bool, Func<TObject, TObject>) See Also Attribute"
  },
  "api/Mithril.Admin.Abstractions.DataEditor.Attributes.PasswordAttribute.html": {
    "href": "api/Mithril.Admin.Abstractions.DataEditor.Attributes.PasswordAttribute.html",
    "title": "Class PasswordAttribute | Mithril API Reference",
    "keywords": "Class PasswordAttribute Password attribute Inheritance object Attribute PasswordAttribute Inherited Members Attribute.Equals(object) Attribute.GetCustomAttribute(Assembly, Type) Attribute.GetCustomAttribute(Assembly, Type, bool) Attribute.GetCustomAttribute(MemberInfo, Type) Attribute.GetCustomAttribute(MemberInfo, Type, bool) Attribute.GetCustomAttribute(Module, Type) Attribute.GetCustomAttribute(Module, Type, bool) Attribute.GetCustomAttribute(ParameterInfo, Type) Attribute.GetCustomAttribute(ParameterInfo, Type, bool) Attribute.GetCustomAttributes(Assembly) Attribute.GetCustomAttributes(Assembly, bool) Attribute.GetCustomAttributes(Assembly, Type) Attribute.GetCustomAttributes(Assembly, Type, bool) Attribute.GetCustomAttributes(MemberInfo) Attribute.GetCustomAttributes(MemberInfo, bool) Attribute.GetCustomAttributes(MemberInfo, Type) Attribute.GetCustomAttributes(MemberInfo, Type, bool) Attribute.GetCustomAttributes(Module) Attribute.GetCustomAttributes(Module, bool) Attribute.GetCustomAttributes(Module, Type) Attribute.GetCustomAttributes(Module, Type, bool) Attribute.GetCustomAttributes(ParameterInfo) Attribute.GetCustomAttributes(ParameterInfo, bool) Attribute.GetCustomAttributes(ParameterInfo, Type) Attribute.GetCustomAttributes(ParameterInfo, Type, bool) Attribute.GetHashCode() Attribute.IsDefaultAttribute() Attribute.IsDefined(Assembly, Type) Attribute.IsDefined(Assembly, Type, bool) Attribute.IsDefined(MemberInfo, Type) Attribute.IsDefined(MemberInfo, Type, bool) Attribute.IsDefined(Module, Type) Attribute.IsDefined(Module, Type, bool) Attribute.IsDefined(ParameterInfo, Type) Attribute.IsDefined(ParameterInfo, Type, bool) Attribute.Match(object) Attribute.TypeId object.Equals(object, object) object.GetType() object.ReferenceEquals(object, object) object.ToString() Namespace: Mithril.Admin.Abstractions.DataEditor.Attributes Assembly: Mithril.Admin.Abstractions.dll Syntax [AttributeUsage(AttributeTargets.Property, AllowMultiple = false)] public sealed class PasswordAttribute : Attribute Extension Methods ExpandoObjectExtensions.ConvertToExpando<TEntity>(TEntity?) GenericExtensions.When<TObject>(TObject, bool, Func<TObject, TObject>) See Also Attribute"
  },
  "api/Mithril.Admin.Abstractions.DataEditor.Attributes.PatternAttribute.html": {
    "href": "api/Mithril.Admin.Abstractions.DataEditor.Attributes.PatternAttribute.html",
    "title": "Class PatternAttribute | Mithril API Reference",
    "keywords": "Class PatternAttribute Pattern attribute Inheritance object Attribute PatternAttribute Inherited Members Attribute.Equals(object) Attribute.GetCustomAttribute(Assembly, Type) Attribute.GetCustomAttribute(Assembly, Type, bool) Attribute.GetCustomAttribute(MemberInfo, Type) Attribute.GetCustomAttribute(MemberInfo, Type, bool) Attribute.GetCustomAttribute(Module, Type) Attribute.GetCustomAttribute(Module, Type, bool) Attribute.GetCustomAttribute(ParameterInfo, Type) Attribute.GetCustomAttribute(ParameterInfo, Type, bool) Attribute.GetCustomAttributes(Assembly) Attribute.GetCustomAttributes(Assembly, bool) Attribute.GetCustomAttributes(Assembly, Type) Attribute.GetCustomAttributes(Assembly, Type, bool) Attribute.GetCustomAttributes(MemberInfo) Attribute.GetCustomAttributes(MemberInfo, bool) Attribute.GetCustomAttributes(MemberInfo, Type) Attribute.GetCustomAttributes(MemberInfo, Type, bool) Attribute.GetCustomAttributes(Module) Attribute.GetCustomAttributes(Module, bool) Attribute.GetCustomAttributes(Module, Type) Attribute.GetCustomAttributes(Module, Type, bool) Attribute.GetCustomAttributes(ParameterInfo) Attribute.GetCustomAttributes(ParameterInfo, bool) Attribute.GetCustomAttributes(ParameterInfo, Type) Attribute.GetCustomAttributes(ParameterInfo, Type, bool) Attribute.GetHashCode() Attribute.IsDefaultAttribute() Attribute.IsDefined(Assembly, Type) Attribute.IsDefined(Assembly, Type, bool) Attribute.IsDefined(MemberInfo, Type) Attribute.IsDefined(MemberInfo, Type, bool) Attribute.IsDefined(Module, Type) Attribute.IsDefined(Module, Type, bool) Attribute.IsDefined(ParameterInfo, Type) Attribute.IsDefined(ParameterInfo, Type, bool) Attribute.Match(object) Attribute.TypeId object.Equals(object, object) object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Mithril.Admin.Abstractions.DataEditor.Attributes Assembly: Mithril.Admin.Abstractions.dll Syntax [AttributeUsage(AttributeTargets.Property, AllowMultiple = false)] public class PatternAttribute : Attribute Constructors | Improve this Doc View Source PatternAttribute(string) Initializes a new instance of the PatternAttribute class. Declaration public PatternAttribute(string value) Parameters Type Name Description string value The value. See Also Attribute Properties | Improve this Doc View Source Value Gets or sets the value. Declaration public string Value { get; set; } Property Value Type Description string The value. See Also Attribute Extension Methods ExpandoObjectExtensions.ConvertToExpando<TEntity>(TEntity?) GenericExtensions.When<TObject>(TObject, bool, Func<TObject, TObject>) See Also Attribute"
  },
  "api/Mithril.Admin.Abstractions.DataEditor.Attributes.PlaceholderAttribute.html": {
    "href": "api/Mithril.Admin.Abstractions.DataEditor.Attributes.PlaceholderAttribute.html",
    "title": "Class PlaceholderAttribute | Mithril API Reference",
    "keywords": "Class PlaceholderAttribute Placeholder attribute Inheritance object Attribute PlaceholderAttribute Inherited Members Attribute.Equals(object) Attribute.GetCustomAttribute(Assembly, Type) Attribute.GetCustomAttribute(Assembly, Type, bool) Attribute.GetCustomAttribute(MemberInfo, Type) Attribute.GetCustomAttribute(MemberInfo, Type, bool) Attribute.GetCustomAttribute(Module, Type) Attribute.GetCustomAttribute(Module, Type, bool) Attribute.GetCustomAttribute(ParameterInfo, Type) Attribute.GetCustomAttribute(ParameterInfo, Type, bool) Attribute.GetCustomAttributes(Assembly) Attribute.GetCustomAttributes(Assembly, bool) Attribute.GetCustomAttributes(Assembly, Type) Attribute.GetCustomAttributes(Assembly, Type, bool) Attribute.GetCustomAttributes(MemberInfo) Attribute.GetCustomAttributes(MemberInfo, bool) Attribute.GetCustomAttributes(MemberInfo, Type) Attribute.GetCustomAttributes(MemberInfo, Type, bool) Attribute.GetCustomAttributes(Module) Attribute.GetCustomAttributes(Module, bool) Attribute.GetCustomAttributes(Module, Type) Attribute.GetCustomAttributes(Module, Type, bool) Attribute.GetCustomAttributes(ParameterInfo) Attribute.GetCustomAttributes(ParameterInfo, bool) Attribute.GetCustomAttributes(ParameterInfo, Type) Attribute.GetCustomAttributes(ParameterInfo, Type, bool) Attribute.GetHashCode() Attribute.IsDefaultAttribute() Attribute.IsDefined(Assembly, Type) Attribute.IsDefined(Assembly, Type, bool) Attribute.IsDefined(MemberInfo, Type) Attribute.IsDefined(MemberInfo, Type, bool) Attribute.IsDefined(Module, Type) Attribute.IsDefined(Module, Type, bool) Attribute.IsDefined(ParameterInfo, Type) Attribute.IsDefined(ParameterInfo, Type, bool) Attribute.Match(object) Attribute.TypeId object.Equals(object, object) object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Mithril.Admin.Abstractions.DataEditor.Attributes Assembly: Mithril.Admin.Abstractions.dll Syntax [AttributeUsage(AttributeTargets.Property, AllowMultiple = false)] public class PlaceholderAttribute : Attribute Constructors | Improve this Doc View Source PlaceholderAttribute(string) Initializes a new instance of the PlaceholderAttribute class. Declaration public PlaceholderAttribute(string value) Parameters Type Name Description string value The value. See Also Attribute Properties | Improve this Doc View Source Value Gets or sets the value. Declaration public string Value { get; set; } Property Value Type Description string The value. See Also Attribute Extension Methods ExpandoObjectExtensions.ConvertToExpando<TEntity>(TEntity?) GenericExtensions.When<TObject>(TObject, bool, Func<TObject, TObject>) See Also Attribute"
  },
  "api/Mithril.Admin.Abstractions.DataEditor.Attributes.QueryAttribute.html": {
    "href": "api/Mithril.Admin.Abstractions.DataEditor.Attributes.QueryAttribute.html",
    "title": "Class QueryAttribute | Mithril API Reference",
    "keywords": "Class QueryAttribute Query attribute Inheritance object Attribute QueryAttribute SelectAttribute Inherited Members Attribute.Equals(object) Attribute.GetCustomAttribute(Assembly, Type) Attribute.GetCustomAttribute(Assembly, Type, bool) Attribute.GetCustomAttribute(MemberInfo, Type) Attribute.GetCustomAttribute(MemberInfo, Type, bool) Attribute.GetCustomAttribute(Module, Type) Attribute.GetCustomAttribute(Module, Type, bool) Attribute.GetCustomAttribute(ParameterInfo, Type) Attribute.GetCustomAttribute(ParameterInfo, Type, bool) Attribute.GetCustomAttributes(Assembly) Attribute.GetCustomAttributes(Assembly, bool) Attribute.GetCustomAttributes(Assembly, Type) Attribute.GetCustomAttributes(Assembly, Type, bool) Attribute.GetCustomAttributes(MemberInfo) Attribute.GetCustomAttributes(MemberInfo, bool) Attribute.GetCustomAttributes(MemberInfo, Type) Attribute.GetCustomAttributes(MemberInfo, Type, bool) Attribute.GetCustomAttributes(Module) Attribute.GetCustomAttributes(Module, bool) Attribute.GetCustomAttributes(Module, Type) Attribute.GetCustomAttributes(Module, Type, bool) Attribute.GetCustomAttributes(ParameterInfo) Attribute.GetCustomAttributes(ParameterInfo, bool) Attribute.GetCustomAttributes(ParameterInfo, Type) Attribute.GetCustomAttributes(ParameterInfo, Type, bool) Attribute.GetHashCode() Attribute.IsDefaultAttribute() Attribute.IsDefined(Assembly, Type) Attribute.IsDefined(Assembly, Type, bool) Attribute.IsDefined(MemberInfo, Type) Attribute.IsDefined(MemberInfo, Type, bool) Attribute.IsDefined(Module, Type) Attribute.IsDefined(Module, Type, bool) Attribute.IsDefined(ParameterInfo, Type) Attribute.IsDefined(ParameterInfo, Type, bool) Attribute.Match(object) Attribute.TypeId object.Equals(object, object) object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Mithril.Admin.Abstractions.DataEditor.Attributes Assembly: Mithril.Admin.Abstractions.dll Syntax [AttributeUsage(AttributeTargets.Property, AllowMultiple = false)] public class QueryAttribute : Attribute Constructors | Improve this Doc View Source QueryAttribute(Type, string) Initializes a new instance of the QueryAttribute class. Declaration public QueryAttribute(Type queryType, string filter = \"\") Parameters Type Name Description Type queryType Type of the query. string filter The filter. See Also Attribute Properties | Improve this Doc View Source Filter Gets or sets the filter. Declaration public string Filter { get; set; } Property Value Type Description string The filter. See Also Attribute | Improve this Doc View Source QueryType Gets the name of the query. Declaration public Type QueryType { get; set; } Property Value Type Description Type The name of the query. See Also Attribute Extension Methods ExpandoObjectExtensions.ConvertToExpando<TEntity>(TEntity?) GenericExtensions.When<TObject>(TObject, bool, Func<TObject, TObject>) See Also Attribute"
  },
  "api/Mithril.Admin.Abstractions.DataEditor.Attributes.ReadOnlyAttribute.html": {
    "href": "api/Mithril.Admin.Abstractions.DataEditor.Attributes.ReadOnlyAttribute.html",
    "title": "Class ReadOnlyAttribute | Mithril API Reference",
    "keywords": "Class ReadOnlyAttribute Read only attribute Inheritance object Attribute ReadOnlyAttribute Inherited Members Attribute.Equals(object) Attribute.GetCustomAttribute(Assembly, Type) Attribute.GetCustomAttribute(Assembly, Type, bool) Attribute.GetCustomAttribute(MemberInfo, Type) Attribute.GetCustomAttribute(MemberInfo, Type, bool) Attribute.GetCustomAttribute(Module, Type) Attribute.GetCustomAttribute(Module, Type, bool) Attribute.GetCustomAttribute(ParameterInfo, Type) Attribute.GetCustomAttribute(ParameterInfo, Type, bool) Attribute.GetCustomAttributes(Assembly) Attribute.GetCustomAttributes(Assembly, bool) Attribute.GetCustomAttributes(Assembly, Type) Attribute.GetCustomAttributes(Assembly, Type, bool) Attribute.GetCustomAttributes(MemberInfo) Attribute.GetCustomAttributes(MemberInfo, bool) Attribute.GetCustomAttributes(MemberInfo, Type) Attribute.GetCustomAttributes(MemberInfo, Type, bool) Attribute.GetCustomAttributes(Module) Attribute.GetCustomAttributes(Module, bool) Attribute.GetCustomAttributes(Module, Type) Attribute.GetCustomAttributes(Module, Type, bool) Attribute.GetCustomAttributes(ParameterInfo) Attribute.GetCustomAttributes(ParameterInfo, bool) Attribute.GetCustomAttributes(ParameterInfo, Type) Attribute.GetCustomAttributes(ParameterInfo, Type, bool) Attribute.GetHashCode() Attribute.IsDefaultAttribute() Attribute.IsDefined(Assembly, Type) Attribute.IsDefined(Assembly, Type, bool) Attribute.IsDefined(MemberInfo, Type) Attribute.IsDefined(MemberInfo, Type, bool) Attribute.IsDefined(Module, Type) Attribute.IsDefined(Module, Type, bool) Attribute.IsDefined(ParameterInfo, Type) Attribute.IsDefined(ParameterInfo, Type, bool) Attribute.Match(object) Attribute.TypeId object.Equals(object, object) object.GetType() object.ReferenceEquals(object, object) object.ToString() Namespace: Mithril.Admin.Abstractions.DataEditor.Attributes Assembly: Mithril.Admin.Abstractions.dll Syntax [AttributeUsage(AttributeTargets.Property, AllowMultiple = false)] public sealed class ReadOnlyAttribute : Attribute Extension Methods ExpandoObjectExtensions.ConvertToExpando<TEntity>(TEntity?) GenericExtensions.When<TObject>(TObject, bool, Func<TObject, TObject>) See Also Attribute"
  },
  "api/Mithril.Admin.Abstractions.DataEditor.Attributes.SelectAttribute.html": {
    "href": "api/Mithril.Admin.Abstractions.DataEditor.Attributes.SelectAttribute.html",
    "title": "Class SelectAttribute | Mithril API Reference",
    "keywords": "Class SelectAttribute Determines if the system should treat this as a select Inheritance object Attribute QueryAttribute SelectAttribute Inherited Members QueryAttribute.Filter QueryAttribute.QueryType Attribute.Equals(object) Attribute.GetCustomAttribute(Assembly, Type) Attribute.GetCustomAttribute(Assembly, Type, bool) Attribute.GetCustomAttribute(MemberInfo, Type) Attribute.GetCustomAttribute(MemberInfo, Type, bool) Attribute.GetCustomAttribute(Module, Type) Attribute.GetCustomAttribute(Module, Type, bool) Attribute.GetCustomAttribute(ParameterInfo, Type) Attribute.GetCustomAttribute(ParameterInfo, Type, bool) Attribute.GetCustomAttributes(Assembly) Attribute.GetCustomAttributes(Assembly, bool) Attribute.GetCustomAttributes(Assembly, Type) Attribute.GetCustomAttributes(Assembly, Type, bool) Attribute.GetCustomAttributes(MemberInfo) Attribute.GetCustomAttributes(MemberInfo, bool) Attribute.GetCustomAttributes(MemberInfo, Type) Attribute.GetCustomAttributes(MemberInfo, Type, bool) Attribute.GetCustomAttributes(Module) Attribute.GetCustomAttributes(Module, bool) Attribute.GetCustomAttributes(Module, Type) Attribute.GetCustomAttributes(Module, Type, bool) Attribute.GetCustomAttributes(ParameterInfo) Attribute.GetCustomAttributes(ParameterInfo, bool) Attribute.GetCustomAttributes(ParameterInfo, Type) Attribute.GetCustomAttributes(ParameterInfo, Type, bool) Attribute.GetHashCode() Attribute.IsDefaultAttribute() Attribute.IsDefined(Assembly, Type) Attribute.IsDefined(Assembly, Type, bool) Attribute.IsDefined(MemberInfo, Type) Attribute.IsDefined(MemberInfo, Type, bool) Attribute.IsDefined(Module, Type) Attribute.IsDefined(Module, Type, bool) Attribute.IsDefined(ParameterInfo, Type) Attribute.IsDefined(ParameterInfo, Type, bool) Attribute.Match(object) Attribute.TypeId object.Equals(object, object) object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Mithril.Admin.Abstractions.DataEditor.Attributes Assembly: Mithril.Admin.Abstractions.dll Syntax [AttributeUsage(AttributeTargets.Property, AllowMultiple = false)] public class SelectAttribute : QueryAttribute Constructors | Improve this Doc View Source SelectAttribute(Type, string) Initializes a new instance of the SelectAttribute class. Declaration public SelectAttribute(Type queryType, string filter = \"\") Parameters Type Name Description Type queryType Type of the query. string filter The filter. See Also QueryAttribute Extension Methods ExpandoObjectExtensions.ConvertToExpando<TEntity>(TEntity?) GenericExtensions.When<TObject>(TObject, bool, Func<TObject, TObject>) See Also QueryAttribute"
  },
  "api/Mithril.Admin.Abstractions.DataEditor.Attributes.StepAttribute.html": {
    "href": "api/Mithril.Admin.Abstractions.DataEditor.Attributes.StepAttribute.html",
    "title": "Class StepAttribute | Mithril API Reference",
    "keywords": "Class StepAttribute Step attribute Inheritance object Attribute StepAttribute Inherited Members Attribute.Equals(object) Attribute.GetCustomAttribute(Assembly, Type) Attribute.GetCustomAttribute(Assembly, Type, bool) Attribute.GetCustomAttribute(MemberInfo, Type) Attribute.GetCustomAttribute(MemberInfo, Type, bool) Attribute.GetCustomAttribute(Module, Type) Attribute.GetCustomAttribute(Module, Type, bool) Attribute.GetCustomAttribute(ParameterInfo, Type) Attribute.GetCustomAttribute(ParameterInfo, Type, bool) Attribute.GetCustomAttributes(Assembly) Attribute.GetCustomAttributes(Assembly, bool) Attribute.GetCustomAttributes(Assembly, Type) Attribute.GetCustomAttributes(Assembly, Type, bool) Attribute.GetCustomAttributes(MemberInfo) Attribute.GetCustomAttributes(MemberInfo, bool) Attribute.GetCustomAttributes(MemberInfo, Type) Attribute.GetCustomAttributes(MemberInfo, Type, bool) Attribute.GetCustomAttributes(Module) Attribute.GetCustomAttributes(Module, bool) Attribute.GetCustomAttributes(Module, Type) Attribute.GetCustomAttributes(Module, Type, bool) Attribute.GetCustomAttributes(ParameterInfo) Attribute.GetCustomAttributes(ParameterInfo, bool) Attribute.GetCustomAttributes(ParameterInfo, Type) Attribute.GetCustomAttributes(ParameterInfo, Type, bool) Attribute.GetHashCode() Attribute.IsDefaultAttribute() Attribute.IsDefined(Assembly, Type) Attribute.IsDefined(Assembly, Type, bool) Attribute.IsDefined(MemberInfo, Type) Attribute.IsDefined(MemberInfo, Type, bool) Attribute.IsDefined(Module, Type) Attribute.IsDefined(Module, Type, bool) Attribute.IsDefined(ParameterInfo, Type) Attribute.IsDefined(ParameterInfo, Type, bool) Attribute.Match(object) Attribute.TypeId object.Equals(object, object) object.GetType() object.ReferenceEquals(object, object) object.ToString() Namespace: Mithril.Admin.Abstractions.DataEditor.Attributes Assembly: Mithril.Admin.Abstractions.dll Syntax [AttributeUsage(AttributeTargets.Property, AllowMultiple = false)] public sealed class StepAttribute : Attribute Constructors | Improve this Doc View Source StepAttribute(decimal) Initializes a new instance of the StepAttribute class. Declaration public StepAttribute(decimal value) Parameters Type Name Description decimal value The value. See Also Attribute Properties | Improve this Doc View Source Value Gets or sets the value. Declaration public decimal Value { get; set; } Property Value Type Description decimal The value. See Also Attribute Extension Methods ExpandoObjectExtensions.ConvertToExpando<TEntity>(TEntity?) GenericExtensions.When<TObject>(TObject, bool, Func<TObject, TObject>) See Also Attribute"
  },
  "api/Mithril.Admin.Abstractions.DataEditor.Attributes.SubtitleAttribute.html": {
    "href": "api/Mithril.Admin.Abstractions.DataEditor.Attributes.SubtitleAttribute.html",
    "title": "Class SubtitleAttribute | Mithril API Reference",
    "keywords": "Class SubtitleAttribute Subtitle attribute Inheritance object Attribute SubtitleAttribute Inherited Members Attribute.Equals(object) Attribute.GetCustomAttribute(Assembly, Type) Attribute.GetCustomAttribute(Assembly, Type, bool) Attribute.GetCustomAttribute(MemberInfo, Type) Attribute.GetCustomAttribute(MemberInfo, Type, bool) Attribute.GetCustomAttribute(Module, Type) Attribute.GetCustomAttribute(Module, Type, bool) Attribute.GetCustomAttribute(ParameterInfo, Type) Attribute.GetCustomAttribute(ParameterInfo, Type, bool) Attribute.GetCustomAttributes(Assembly) Attribute.GetCustomAttributes(Assembly, bool) Attribute.GetCustomAttributes(Assembly, Type) Attribute.GetCustomAttributes(Assembly, Type, bool) Attribute.GetCustomAttributes(MemberInfo) Attribute.GetCustomAttributes(MemberInfo, bool) Attribute.GetCustomAttributes(MemberInfo, Type) Attribute.GetCustomAttributes(MemberInfo, Type, bool) Attribute.GetCustomAttributes(Module) Attribute.GetCustomAttributes(Module, bool) Attribute.GetCustomAttributes(Module, Type) Attribute.GetCustomAttributes(Module, Type, bool) Attribute.GetCustomAttributes(ParameterInfo) Attribute.GetCustomAttributes(ParameterInfo, bool) Attribute.GetCustomAttributes(ParameterInfo, Type) Attribute.GetCustomAttributes(ParameterInfo, Type, bool) Attribute.GetHashCode() Attribute.IsDefaultAttribute() Attribute.IsDefined(Assembly, Type) Attribute.IsDefined(Assembly, Type, bool) Attribute.IsDefined(MemberInfo, Type) Attribute.IsDefined(MemberInfo, Type, bool) Attribute.IsDefined(Module, Type) Attribute.IsDefined(Module, Type, bool) Attribute.IsDefined(ParameterInfo, Type) Attribute.IsDefined(ParameterInfo, Type, bool) Attribute.Match(object) Attribute.TypeId object.Equals(object, object) object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Mithril.Admin.Abstractions.DataEditor.Attributes Assembly: Mithril.Admin.Abstractions.dll Syntax [AttributeUsage(AttributeTargets.Property, AllowMultiple = false)] public class SubtitleAttribute : Attribute Constructors | Improve this Doc View Source SubtitleAttribute(string) Initializes a new instance of the SubtitleAttribute class. Declaration public SubtitleAttribute(string value) Parameters Type Name Description string value The value. See Also Attribute Properties | Improve this Doc View Source Value Gets or sets the value. Declaration public string Value { get; set; } Property Value Type Description string The value. See Also Attribute Extension Methods ExpandoObjectExtensions.ConvertToExpando<TEntity>(TEntity?) GenericExtensions.When<TObject>(TObject, bool, Func<TObject, TObject>) See Also Attribute"
  },
  "api/Mithril.Admin.Abstractions.DataEditor.Attributes.TextAreaAttribute.html": {
    "href": "api/Mithril.Admin.Abstractions.DataEditor.Attributes.TextAreaAttribute.html",
    "title": "Class TextAreaAttribute | Mithril API Reference",
    "keywords": "Class TextAreaAttribute Determines if the system should treat this as a text area Inheritance object Attribute TextAreaAttribute Inherited Members Attribute.Equals(object) Attribute.GetCustomAttribute(Assembly, Type) Attribute.GetCustomAttribute(Assembly, Type, bool) Attribute.GetCustomAttribute(MemberInfo, Type) Attribute.GetCustomAttribute(MemberInfo, Type, bool) Attribute.GetCustomAttribute(Module, Type) Attribute.GetCustomAttribute(Module, Type, bool) Attribute.GetCustomAttribute(ParameterInfo, Type) Attribute.GetCustomAttribute(ParameterInfo, Type, bool) Attribute.GetCustomAttributes(Assembly) Attribute.GetCustomAttributes(Assembly, bool) Attribute.GetCustomAttributes(Assembly, Type) Attribute.GetCustomAttributes(Assembly, Type, bool) Attribute.GetCustomAttributes(MemberInfo) Attribute.GetCustomAttributes(MemberInfo, bool) Attribute.GetCustomAttributes(MemberInfo, Type) Attribute.GetCustomAttributes(MemberInfo, Type, bool) Attribute.GetCustomAttributes(Module) Attribute.GetCustomAttributes(Module, bool) Attribute.GetCustomAttributes(Module, Type) Attribute.GetCustomAttributes(Module, Type, bool) Attribute.GetCustomAttributes(ParameterInfo) Attribute.GetCustomAttributes(ParameterInfo, bool) Attribute.GetCustomAttributes(ParameterInfo, Type) Attribute.GetCustomAttributes(ParameterInfo, Type, bool) Attribute.GetHashCode() Attribute.IsDefaultAttribute() Attribute.IsDefined(Assembly, Type) Attribute.IsDefined(Assembly, Type, bool) Attribute.IsDefined(MemberInfo, Type) Attribute.IsDefined(MemberInfo, Type, bool) Attribute.IsDefined(Module, Type) Attribute.IsDefined(Module, Type, bool) Attribute.IsDefined(ParameterInfo, Type) Attribute.IsDefined(ParameterInfo, Type, bool) Attribute.Match(object) Attribute.TypeId object.Equals(object, object) object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Mithril.Admin.Abstractions.DataEditor.Attributes Assembly: Mithril.Admin.Abstractions.dll Syntax [AttributeUsage(AttributeTargets.Property, AllowMultiple = false)] public class TextAreaAttribute : Attribute Constructors | Improve this Doc View Source TextAreaAttribute(int) Initializes a new instance of the TextAreaAttribute class. Declaration public TextAreaAttribute(int rows = 3) Parameters Type Name Description int rows The rows. See Also Attribute Properties | Improve this Doc View Source Rows Gets or sets the rows. Declaration public int Rows { get; set; } Property Value Type Description int The rows. See Also Attribute Extension Methods ExpandoObjectExtensions.ConvertToExpando<TEntity>(TEntity?) GenericExtensions.When<TObject>(TObject, bool, Func<TObject, TObject>) See Also Attribute"
  },
  "api/Mithril.Admin.Abstractions.DataEditor.Attributes.UploadAttribute.html": {
    "href": "api/Mithril.Admin.Abstractions.DataEditor.Attributes.UploadAttribute.html",
    "title": "Class UploadAttribute | Mithril API Reference",
    "keywords": "Class UploadAttribute Determines if the system should treat this as an upload Inheritance object Attribute UploadAttribute Inherited Members Attribute.Equals(object) Attribute.GetCustomAttribute(Assembly, Type) Attribute.GetCustomAttribute(Assembly, Type, bool) Attribute.GetCustomAttribute(MemberInfo, Type) Attribute.GetCustomAttribute(MemberInfo, Type, bool) Attribute.GetCustomAttribute(Module, Type) Attribute.GetCustomAttribute(Module, Type, bool) Attribute.GetCustomAttribute(ParameterInfo, Type) Attribute.GetCustomAttribute(ParameterInfo, Type, bool) Attribute.GetCustomAttributes(Assembly) Attribute.GetCustomAttributes(Assembly, bool) Attribute.GetCustomAttributes(Assembly, Type) Attribute.GetCustomAttributes(Assembly, Type, bool) Attribute.GetCustomAttributes(MemberInfo) Attribute.GetCustomAttributes(MemberInfo, bool) Attribute.GetCustomAttributes(MemberInfo, Type) Attribute.GetCustomAttributes(MemberInfo, Type, bool) Attribute.GetCustomAttributes(Module) Attribute.GetCustomAttributes(Module, bool) Attribute.GetCustomAttributes(Module, Type) Attribute.GetCustomAttributes(Module, Type, bool) Attribute.GetCustomAttributes(ParameterInfo) Attribute.GetCustomAttributes(ParameterInfo, bool) Attribute.GetCustomAttributes(ParameterInfo, Type) Attribute.GetCustomAttributes(ParameterInfo, Type, bool) Attribute.GetHashCode() Attribute.IsDefaultAttribute() Attribute.IsDefined(Assembly, Type) Attribute.IsDefined(Assembly, Type, bool) Attribute.IsDefined(MemberInfo, Type) Attribute.IsDefined(MemberInfo, Type, bool) Attribute.IsDefined(Module, Type) Attribute.IsDefined(Module, Type, bool) Attribute.IsDefined(ParameterInfo, Type) Attribute.IsDefined(ParameterInfo, Type, bool) Attribute.Match(object) Attribute.TypeId object.Equals(object, object) object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Mithril.Admin.Abstractions.DataEditor.Attributes Assembly: Mithril.Admin.Abstractions.dll Syntax [AttributeUsage(AttributeTargets.Property, AllowMultiple = false)] public class UploadAttribute : Attribute Constructors | Improve this Doc View Source UploadAttribute(string, bool) Initializes a new instance of the UploadAttribute class. Declaration public UploadAttribute(string accept, bool allowMultiple = false) Parameters Type Name Description string accept The accept. bool allowMultiple if set to true [allow multiple]. See Also Attribute Properties | Improve this Doc View Source Accept Gets the file types accepted. Declaration public string Accept { get; } Property Value Type Description string The acceptted file types. See Also Attribute | Improve this Doc View Source AllowMultiple Gets a value indicating whether [allow multiple]. Declaration public bool AllowMultiple { get; } Property Value Type Description bool true if [allow multiple]; otherwise, false. See Also Attribute Extension Methods ExpandoObjectExtensions.ConvertToExpando<TEntity>(TEntity?) GenericExtensions.When<TObject>(TObject, bool, Func<TObject, TObject>) See Also Attribute"
  },
  "api/Mithril.Admin.Abstractions.DataEditor.Attributes.html": {
    "href": "api/Mithril.Admin.Abstractions.DataEditor.Attributes.html",
    "title": "Namespace Mithril.Admin.Abstractions.DataEditor.Attributes | Mithril API Reference",
    "keywords": "Namespace Mithril.Admin.Abstractions.DataEditor.Attributes Classes DateAndTimeAttribute Used to indicate that the generator should do both a date and time picker DisplayAsTextAttribute Used to indicate that the generator should display this as text (may have the ability for markdown, html, etc. depending on the generator) DoNotListAttribute Do not list attribute HintAttribute Hint attribute HtmlAttribute HTML attribute IgnoreAttribute Ignore attribute InputTypeAttribute Input type attribute OrderAttribute Order attribute PasswordAttribute Password attribute PatternAttribute Pattern attribute PlaceholderAttribute Placeholder attribute QueryAttribute Query attribute ReadOnlyAttribute Read only attribute SelectAttribute Determines if the system should treat this as a select StepAttribute Step attribute SubtitleAttribute Subtitle attribute TextAreaAttribute Determines if the system should treat this as a text area UploadAttribute Determines if the system should treat this as an upload"
  },
  "api/Mithril.Admin.Abstractions.DataEditor.EntityMetadata.html": {
    "href": "api/Mithril.Admin.Abstractions.DataEditor.EntityMetadata.html",
    "title": "Class EntityMetadata | Mithril API Reference",
    "keywords": "Class EntityMetadata Entity metadata Inheritance object EntityMetadata Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Mithril.Admin.Abstractions.DataEditor Assembly: Mithril.Admin.Abstractions.dll Syntax public class EntityMetadata Constructors | Improve this Doc View Source EntityMetadata(Type) Initializes a new instance of the EntityMetadata class. Declaration public EntityMetadata(Type objectType) Parameters Type Name Description Type objectType Type of the object. Properties | Improve this Doc View Source DisplayName Gets or sets the display name. Declaration public string DisplayName { get; } Property Value Type Description string The display name. | Improve this Doc View Source Name Gets the name. Declaration public string Name { get; } Property Value Type Description string The name. | Improve this Doc View Source Properties Gets the properties. Declaration public PropertyMetadata[] Properties { get; } Property Value Type Description PropertyMetadata[] The properties. Extension Methods ExpandoObjectExtensions.ConvertToExpando<TEntity>(TEntity?) GenericExtensions.When<TObject>(TObject, bool, Func<TObject, TObject>)"
  },
  "api/Mithril.Admin.Abstractions.DataEditor.PropertyMetadata.html": {
    "href": "api/Mithril.Admin.Abstractions.DataEditor.PropertyMetadata.html",
    "title": "Class PropertyMetadata | Mithril API Reference",
    "keywords": "Class PropertyMetadata Property metadata Inheritance object PropertyMetadata Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Mithril.Admin.Abstractions.DataEditor Assembly: Mithril.Admin.Abstractions.dll Syntax public class PropertyMetadata Constructors | Improve this Doc View Source PropertyMetadata(PropertyInfo?) Initializes a new instance of the PropertyMetadata class. Declaration public PropertyMetadata(PropertyInfo? property) Parameters Type Name Description PropertyInfo property The property. Properties | Improve this Doc View Source DisplayName Gets or sets the name. Declaration [JsonPropertyName(\"displayName\")] public string? DisplayName { get; set; } Property Value Type Description string The name. | Improve this Doc View Source Metadata Gets or sets the metadata. Declaration [JsonPropertyName(\"metadata\")] public Dictionary<string, object?> Metadata { get; } Property Value Type Description Dictionary<string, object> The metadata. | Improve this Doc View Source Property Gets or sets the property. Declaration [JsonIgnore] public PropertyInfo? Property { get; set; } Property Value Type Description PropertyInfo The property. | Improve this Doc View Source PropertyName Gets or sets the name of the property. Declaration [JsonPropertyName(\"propertyName\")] public string? PropertyName { get; set; } Property Value Type Description string The name of the property. | Improve this Doc View Source PropertyType Gets or sets the type of the property. Declaration [JsonPropertyName(\"propertyType\")] public string? PropertyType { get; set; } Property Value Type Description string The type of the property. Extension Methods ExpandoObjectExtensions.ConvertToExpando<TEntity>(TEntity?) GenericExtensions.When<TObject>(TObject, bool, Func<TObject, TObject>)"
  },
  "api/Mithril.Admin.Abstractions.DataEditor.html": {
    "href": "api/Mithril.Admin.Abstractions.DataEditor.html",
    "title": "Namespace Mithril.Admin.Abstractions.DataEditor | Mithril API Reference",
    "keywords": "Namespace Mithril.Admin.Abstractions.DataEditor Classes EntityMetadata Entity metadata PropertyMetadata Property metadata"
  },
  "api/Mithril.Admin.Abstractions.Events.ModelSavedEvent.html": {
    "href": "api/Mithril.Admin.Abstractions.Events.ModelSavedEvent.html",
    "title": "Class ModelSavedEvent | Mithril API Reference",
    "keywords": "Class ModelSavedEvent Model saved event Inheritance object ModelBase<ModelSavedEvent> EventBaseClass<ModelSavedEvent> ModelSavedEvent Implements IModel<ModelSavedEvent> IEquatable<IModel<ModelSavedEvent>> IComparable IComparable<ModelSavedEvent> IEquatable<ModelBase<ModelSavedEvent>> IEvent IEquatable<IEvent> IModel IEquatable<IModel> IEquatable<EventBaseClass<ModelSavedEvent>> Inherited Members EventBaseClass<ModelSavedEvent>.Name EventBaseClass<ModelSavedEvent>.RetryCount EventBaseClass<ModelSavedEvent>.State EventBaseClass<ModelSavedEvent>.CanRun() EventBaseClass<ModelSavedEvent>.CompareTo(EventBaseClass<ModelSavedEvent>) EventBaseClass<ModelSavedEvent>.Equals(EventBaseClass<ModelSavedEvent>) EventBaseClass<ModelSavedEvent>.Equals(IEvent) EventBaseClass<ModelSavedEvent>.ToString() ModelBase<ModelSavedEvent>.Active ModelBase<ModelSavedEvent>.Creator ModelBase<ModelSavedEvent>.DateCreated ModelBase<ModelSavedEvent>.DateModified ModelBase<ModelSavedEvent>.ID ModelBase<ModelSavedEvent>.Modifier ModelBase<ModelSavedEvent>.TenantID ModelBase<ModelSavedEvent>.All(IDataService) ModelBase<ModelSavedEvent>.AllActive(IDataService) ModelBase<ModelSavedEvent>.AllInactive(IDataService) ModelBase<ModelSavedEvent>.Load(long, IDataService) ModelBase<ModelSavedEvent>.Query(IDataService) ModelBase<ModelSavedEvent>.CanBeModifiedBy(ClaimsPrincipal) ModelBase<ModelSavedEvent>.CanBeViewedBy(ClaimsPrincipal) ModelBase<ModelSavedEvent>.CompareTo(object) ModelBase<ModelSavedEvent>.DeleteAsync(IDataService, ClaimsPrincipal, bool) ModelBase<ModelSavedEvent>.Equals(IModel) ModelBase<ModelSavedEvent>.Equals(IModel<ModelSavedEvent>) ModelBase<ModelSavedEvent>.Equals(ModelBase<ModelSavedEvent>) ModelBase<ModelSavedEvent>.SaveAsync(IDataService, ClaimsPrincipal) ModelBase<ModelSavedEvent>.SetupObject(IDataService, ClaimsPrincipal) ModelBase<ModelSavedEvent>.SetupObject(IDataService, IUser) ModelBase<ModelSavedEvent>.SetupObjectAndReturn(IDataService, ClaimsPrincipal) object.Equals(object, object) object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Namespace: Mithril.Admin.Abstractions.Events Assembly: Mithril.Admin.Abstractions.dll Syntax public class ModelSavedEvent : EventBaseClass<ModelSavedEvent>, IModel<ModelSavedEvent>, IEquatable<IModel<ModelSavedEvent>>, IComparable, IComparable<ModelSavedEvent>, IEquatable<ModelBase<ModelSavedEvent>>, IEvent, IEquatable<IEvent>, IModel, IEquatable<IModel>, IEquatable<EventBaseClass<ModelSavedEvent>> Constructors | Improve this Doc View Source ModelSavedEvent() Initializes a new instance of the ModelSavedEvent class. Declaration public ModelSavedEvent() See Also EventBaseClass<TEvent> | Improve this Doc View Source ModelSavedEvent(ExpandoObject?, string?, long) Initializes a new instance of the ModelSavedEvent class. Declaration public ModelSavedEvent(ExpandoObject? data, string? entityType, long id) Parameters Type Name Description ExpandoObject data The data. string entityType Type of the entity. long id The identifier. Exceptions Type Condition ArgumentException entityType - entityType See Also EventBaseClass<TEvent> | Improve this Doc View Source ModelSavedEvent(string?, string?, long) Initializes a new instance of the ModelSavedEvent class. Declaration public ModelSavedEvent(string? data, string? entityType, long id) Parameters Type Name Description string data The data. string entityType Type of the entity. long id The identifier. Exceptions Type Condition ArgumentException entityType - entityType See Also EventBaseClass<TEvent> Properties | Improve this Doc View Source Data Gets or sets the data. Declaration [MaxLength] public string? Data { get; set; } Property Value Type Description string The data. See Also EventBaseClass<TEvent> | Improve this Doc View Source EntityID Gets or sets the identifier. Declaration public long EntityID { get; set; } Property Value Type Description long The identifier. See Also EventBaseClass<TEvent> | Improve this Doc View Source EntityType Gets or sets the type of the entity. Declaration [MaxLength(64)] public string? EntityType { get; set; } Property Value Type Description string The type of the entity. See Also EventBaseClass<TEvent> Methods | Improve this Doc View Source CompareTo(ModelSavedEvent?) Compares the object to another object Declaration public override int CompareTo(ModelSavedEvent? other) Parameters Type Name Description ModelSavedEvent other Object to compare to Returns Type Description int 0 if they are equal, -1 if this is smaller, 1 if it is larger Overrides ModelBase<ModelSavedEvent>.CompareTo(ModelSavedEvent) See Also EventBaseClass<TEvent> | Improve this Doc View Source Equals(ModelSavedEvent) Indicates whether the current object is equal to another object of the same type. Declaration public bool Equals(ModelSavedEvent other) Parameters Type Name Description ModelSavedEvent other An object to compare with this object. Returns Type Description bool true if the current object is equal to the other parameter; otherwise, false. See Also EventBaseClass<TEvent> | Improve this Doc View Source Equals(object?) Determines whether the specified object, is equal to this instance. Declaration public override bool Equals(object? obj) Parameters Type Name Description object obj The object to compare with this instance. Returns Type Description bool true if the specified object is equal to this instance; otherwise, false. Overrides EventBaseClass<ModelSavedEvent>.Equals(object) See Also EventBaseClass<TEvent> | Improve this Doc View Source GetData() Gets the data within the event. Declaration public override ExpandoObject GetData() Returns Type Description ExpandoObject The data from the event. Overrides EventBaseClass<ModelSavedEvent>.GetData() See Also EventBaseClass<TEvent> | Improve this Doc View Source GetHashCode() Returns a hash code for this instance. Declaration public override int GetHashCode() Returns Type Description int A hash code for this instance, suitable for use in hashing algorithms and data structures like a hash table. Overrides EventBaseClass<ModelSavedEvent>.GetHashCode() See Also EventBaseClass<TEvent> | Improve this Doc View Source GetSchema() Gets the schema. Declaration public override string GetSchema() Returns Type Description string The data schema. Overrides EventBaseClass<ModelSavedEvent>.GetSchema() See Also EventBaseClass<TEvent> Operators | Improve this Doc View Source operator ==(ModelSavedEvent, ModelSavedEvent) Implements the operator ==. Declaration public static bool operator ==(ModelSavedEvent first, ModelSavedEvent second) Parameters Type Name Description ModelSavedEvent first The first. ModelSavedEvent second The second. Returns Type Description bool The result of the operator. See Also EventBaseClass<TEvent> | Improve this Doc View Source operator >(ModelSavedEvent, ModelSavedEvent) Implements the operator >. Declaration public static bool operator >(ModelSavedEvent left, ModelSavedEvent right) Parameters Type Name Description ModelSavedEvent left The left. ModelSavedEvent right The right. Returns Type Description bool The result of the operator. See Also EventBaseClass<TEvent> | Improve this Doc View Source operator >=(ModelSavedEvent, ModelSavedEvent) Implements the operator >=. Declaration public static bool operator >=(ModelSavedEvent left, ModelSavedEvent right) Parameters Type Name Description ModelSavedEvent left The left. ModelSavedEvent right The right. Returns Type Description bool The result of the operator. See Also EventBaseClass<TEvent> | Improve this Doc View Source operator !=(ModelSavedEvent, ModelSavedEvent) Implements the operator !=. Declaration public static bool operator !=(ModelSavedEvent left, ModelSavedEvent right) Parameters Type Name Description ModelSavedEvent left The left. ModelSavedEvent right The right. Returns Type Description bool The result of the operator. See Also EventBaseClass<TEvent> | Improve this Doc View Source operator <(ModelSavedEvent, ModelSavedEvent) Implements the operator <. Declaration public static bool operator <(ModelSavedEvent left, ModelSavedEvent right) Parameters Type Name Description ModelSavedEvent left The left. ModelSavedEvent right The right. Returns Type Description bool The result of the operator. See Also EventBaseClass<TEvent> | Improve this Doc View Source operator <=(ModelSavedEvent, ModelSavedEvent) Implements the operator <=. Declaration public static bool operator <=(ModelSavedEvent left, ModelSavedEvent right) Parameters Type Name Description ModelSavedEvent left The left. ModelSavedEvent right The right. Returns Type Description bool The result of the operator. See Also EventBaseClass<TEvent> Implements IModel<TClass> IEquatable<T> IComparable IComparable<T> IEquatable<T> IEvent IEquatable<T> IModel IEquatable<T> IEquatable<T> Extension Methods ExpandoObjectExtensions.ConvertToExpando<TEntity>(TEntity?) GenericExtensions.When<TObject>(TObject, bool, Func<TObject, TObject>) See Also EventBaseClass<TEvent>"
  },
  "api/Mithril.Admin.Abstractions.Events.html": {
    "href": "api/Mithril.Admin.Abstractions.Events.html",
    "title": "Namespace Mithril.Admin.Abstractions.Events | Mithril API Reference",
    "keywords": "Namespace Mithril.Admin.Abstractions.Events Classes ModelSavedEvent Model saved event"
  },
  "api/Mithril.Admin.Abstractions.ExtensionMethods.PropertyInfoExtensions.html": {
    "href": "api/Mithril.Admin.Abstractions.ExtensionMethods.PropertyInfoExtensions.html",
    "title": "Class PropertyInfoExtensions | Mithril API Reference",
    "keywords": "Class PropertyInfoExtensions PropertyInfo extension methods Inheritance object PropertyInfoExtensions Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Mithril.Admin.Abstractions.ExtensionMethods Assembly: Mithril.Admin.Abstractions.dll Syntax public static class PropertyInfoExtensions Methods | Improve this Doc View Source HasAttribute<TAttribute>(PropertyInfo?) Determines whether the specified property has attribute. Declaration public static bool HasAttribute<TAttribute>(this PropertyInfo? property) where TAttribute : Attribute Parameters Type Name Description PropertyInfo property The property. Returns Type Description bool true if the specified property has attribute; otherwise, false. Type Parameters Name Description TAttribute The type of the attribute."
  },
  "api/Mithril.Admin.Abstractions.ExtensionMethods.html": {
    "href": "api/Mithril.Admin.Abstractions.ExtensionMethods.html",
    "title": "Namespace Mithril.Admin.Abstractions.ExtensionMethods | Mithril API Reference",
    "keywords": "Namespace Mithril.Admin.Abstractions.ExtensionMethods Classes PropertyInfoExtensions PropertyInfo extension methods"
  },
  "api/Mithril.Admin.Abstractions.Interfaces.IEditor.html": {
    "href": "api/Mithril.Admin.Abstractions.Interfaces.IEditor.html",
    "title": "Interface IEditor | Mithril API Reference",
    "keywords": "Interface IEditor Editor interface, used to define an admin page component Namespace: Mithril.Admin.Abstractions.Interfaces Assembly: Mithril.Admin.Abstractions.dll Syntax public interface IEditor Properties | Improve this Doc View Source Category Gets the category. Declaration string Category { get; } Property Value Type Description string The category. | Improve this Doc View Source ComponentDefinition Gets the component definition. Declaration IComponentDefinition ComponentDefinition { get; } Property Value Type Description IComponentDefinition The component definition. | Improve this Doc View Source Description Gets the description. Declaration string Description { get; } Property Value Type Description string The description. | Improve this Doc View Source Icon Gets the icon. Declaration string Icon { get; } Property Value Type Description string The icon. | Improve this Doc View Source Name Gets the name. Declaration string Name { get; } Property Value Type Description string The name. Methods | Improve this Doc View Source CanView(ClaimsPrincipal?) Determines whether this instance can be viewed by the specified user. Declaration bool CanView(ClaimsPrincipal? user) Parameters Type Name Description ClaimsPrincipal user The user. Returns Type Description bool true if this instance can be viewed by the specified user; otherwise, false. Extension Methods ExpandoObjectExtensions.ConvertToExpando<TEntity>(TEntity?) GenericExtensions.When<TObject>(TObject, bool, Func<TObject, TObject>)"
  },
  "api/Mithril.Admin.Abstractions.Interfaces.IEntity-1.html": {
    "href": "api/Mithril.Admin.Abstractions.Interfaces.IEntity-1.html",
    "title": "Interface IEntity<TModel> | Mithril API Reference",
    "keywords": "Interface IEntity<TModel> IEntity interface Inherited Members IEntity.Active IEntity.ID Namespace: Mithril.Admin.Abstractions.Interfaces Assembly: Mithril.Admin.Abstractions.dll Syntax public interface IEntity<TModel> : IEntity where TModel : IModel Type Parameters Name Description TModel The type of the model. Methods | Improve this Doc View Source SaveAsync(long, IDataService?, ClaimsPrincipal?) Saves the changes asynchronously. Declaration Task<TModel?> SaveAsync(long id, IDataService? dataService, ClaimsPrincipal? currentUser) Parameters Type Name Description long id The identifier. IDataService dataService The data service. ClaimsPrincipal currentUser The current user. Returns Type Description Task<TModel> The async task. Extension Methods ExpandoObjectExtensions.ConvertToExpando<TEntity>(TEntity?) GenericExtensions.When<TObject>(TObject, bool, Func<TObject, TObject>)"
  },
  "api/Mithril.Admin.Abstractions.Interfaces.IEntity.html": {
    "href": "api/Mithril.Admin.Abstractions.Interfaces.IEntity.html",
    "title": "Interface IEntity | Mithril API Reference",
    "keywords": "Interface IEntity Entity interface Namespace: Mithril.Admin.Abstractions.Interfaces Assembly: Mithril.Admin.Abstractions.dll Syntax public interface IEntity Properties | Improve this Doc View Source Active Gets or sets a value indicating whether this IEntity is active. Declaration bool Active { get; set; } Property Value Type Description bool true if active; otherwise, false. | Improve this Doc View Source ID Gets or sets the identifier. Declaration long ID { get; set; } Property Value Type Description long The identifier. Extension Methods ExpandoObjectExtensions.ConvertToExpando<TEntity>(TEntity?) GenericExtensions.When<TObject>(TObject, bool, Func<TObject, TObject>)"
  },
  "api/Mithril.Admin.Abstractions.Interfaces.IEntityEditor.html": {
    "href": "api/Mithril.Admin.Abstractions.Interfaces.IEntityEditor.html",
    "title": "Interface IEntityEditor | Mithril API Reference",
    "keywords": "Interface IEntityEditor Entity editor Inherited Members IEditor.Category IEditor.ComponentDefinition IEditor.Description IEditor.Icon IEditor.Name IEditor.CanView(ClaimsPrincipal) Namespace: Mithril.Admin.Abstractions.Interfaces Assembly: Mithril.Admin.Abstractions.dll Syntax public interface IEntityEditor : IEditor Properties | Improve this Doc View Source EntityType Gets the type of the entity. Declaration string EntityType { get; } Property Value Type Description string The type of the entity. See Also IEditor Methods | Improve this Doc View Source ActivateAsync(long, ClaimsPrincipal?) Activates the entity specified asynchronously. Declaration Task<bool> ActivateAsync(long id, ClaimsPrincipal? currentUser) Parameters Type Name Description long id The identifier. ClaimsPrincipal currentUser The current user. Returns Type Description Task<bool> True if it succeeds, false otherwise. See Also IEditor | Improve this Doc View Source DeleteEntityAsync(long, ClaimsPrincipal?) Deletes the entity asynchronously. Declaration Task<bool> DeleteEntityAsync(long id, ClaimsPrincipal? currentUser) Parameters Type Name Description long id The identifier. ClaimsPrincipal currentUser The current user. Returns Type Description Task<bool> True if it succeeds, false otherwise. See Also IEditor | Improve this Doc View Source Load(long, ExpandoObject?, ClaimsPrincipal?) Loads the specified identifier. Declaration IEntity? Load(long id, ExpandoObject? model, ClaimsPrincipal? currentUser) Parameters Type Name Description long id The identifier. ExpandoObject model The model. ClaimsPrincipal currentUser The current user. Returns Type Description IEntity The entity specified. See Also IEditor | Improve this Doc View Source LoadPageAsync(int, int, string, bool, string, ClaimsPrincipal?) Loads the page asynchronously. Declaration Task<IEnumerable<IEntity>> LoadPageAsync(int page, int pageSize, string sortField, bool sortAscending, string searchQuery, ClaimsPrincipal? currentUser) Parameters Type Name Description int page The page (zero based). int pageSize Size of the page. string sortField The sort field. bool sortAscending if set to true [sort ascending]. string searchQuery The search query. ClaimsPrincipal currentUser The current user. Returns Type Description Task<IEnumerable<IEntity>> The entities specified. See Also IEditor | Improve this Doc View Source SaveEntityAsync(long, ExpandoObject, ClaimsPrincipal?) Saves the changes asynchronously. Declaration Task<bool> SaveEntityAsync(long id, ExpandoObject entity, ClaimsPrincipal? currentUser) Parameters Type Name Description long id The identifier. ExpandoObject entity The entity. ClaimsPrincipal currentUser The current user. Returns Type Description Task<bool> True if it succeeds, false otherwise. See Also IEditor | Improve this Doc View Source TotalActiveAsync(ClaimsPrincipal?) Gets the total active items. Declaration Task<int> TotalActiveAsync(ClaimsPrincipal? currentUser) Parameters Type Name Description ClaimsPrincipal currentUser The current user. Returns Type Description Task<int> The total. See Also IEditor Extension Methods ExpandoObjectExtensions.ConvertToExpando<TEntity>(TEntity?) GenericExtensions.When<TObject>(TObject, bool, Func<TObject, TObject>) See Also IEditor"
  },
  "api/Mithril.Admin.Abstractions.Interfaces.IMetadataBuilder.html": {
    "href": "api/Mithril.Admin.Abstractions.Interfaces.IMetadataBuilder.html",
    "title": "Interface IMetadataBuilder | Mithril API Reference",
    "keywords": "Interface IMetadataBuilder Metadata builder interface Namespace: Mithril.Admin.Abstractions.Interfaces Assembly: Mithril.Admin.Abstractions.dll Syntax public interface IMetadataBuilder Properties | Improve this Doc View Source Order Gets the order. Declaration int Order { get; } Property Value Type Description int The order. Methods | Improve this Doc View Source ExtractMetadata(PropertyMetadata?, IEntityMetadataService) Extracts metadata and adds it to the PropertyMetadata object. Declaration PropertyMetadata? ExtractMetadata(PropertyMetadata? propertyMetadata, IEntityMetadataService metadataService) Parameters Type Name Description PropertyMetadata propertyMetadata The property metadata. IEntityMetadataService metadataService The metadata service. Returns Type Description PropertyMetadata The resulting property metadata. Extension Methods ExpandoObjectExtensions.ConvertToExpando<TEntity>(TEntity?) GenericExtensions.When<TObject>(TObject, bool, Func<TObject, TObject>)"
  },
  "api/Mithril.Admin.Abstractions.Interfaces.html": {
    "href": "api/Mithril.Admin.Abstractions.Interfaces.html",
    "title": "Namespace Mithril.Admin.Abstractions.Interfaces | Mithril API Reference",
    "keywords": "Namespace Mithril.Admin.Abstractions.Interfaces Interfaces IEditor Editor interface, used to define an admin page component IEntity Entity interface IEntityEditor Entity editor IEntity<TModel> IEntity interface IMetadataBuilder Metadata builder interface"
  },
  "api/Mithril.Admin.Abstractions.Mappings.ModelSavedEventMapping.html": {
    "href": "api/Mithril.Admin.Abstractions.Mappings.ModelSavedEventMapping.html",
    "title": "Class ModelSavedEventMapping | Mithril API Reference",
    "keywords": "Class ModelSavedEventMapping Model saved event mapping Inheritance object MappingBaseClass<ModelSavedEvent, DefaultDatabase> ModelSavedEventMapping Implements IMapping<ModelSavedEvent> IMapping Inherited Members MappingBaseClass<ModelSavedEvent, DefaultDatabase>.AddAutoKey() MappingBaseClass<ModelSavedEvent, DefaultDatabase>.ContainsProperty(string) MappingBaseClass<ModelSavedEvent, DefaultDatabase>.Copy(IMapping) MappingBaseClass<ModelSavedEvent, DefaultDatabase>.CopyProperty(IIDProperty) MappingBaseClass<ModelSavedEvent, DefaultDatabase>.CopyProperty(IProperty) MappingBaseClass<ModelSavedEvent, DefaultDatabase>.CopyProperty(IMapProperty) MappingBaseClass<ModelSavedEvent, DefaultDatabase>.CopyProperty(IManyToOneProperty) MappingBaseClass<ModelSavedEvent, DefaultDatabase>.CopyProperty(IManyToManyProperty) MappingBaseClass<ModelSavedEvent, DefaultDatabase>.Equals(object) MappingBaseClass<ModelSavedEvent, DefaultDatabase>.GetColumnName(string) MappingBaseClass<ModelSavedEvent, DefaultDatabase>.GetHashCode() MappingBaseClass<ModelSavedEvent, DefaultDatabase>.ID<TDataType>(Expression<Func<ModelSavedEvent, TDataType>>) MappingBaseClass<ModelSavedEvent, DefaultDatabase>.ManyToMany<TDataType>(Expression<Func<ModelSavedEvent, IList<TDataType>>>) MappingBaseClass<ModelSavedEvent, DefaultDatabase>.ManyToOne<TDataType>(Expression<Func<ModelSavedEvent, IList<TDataType>>>) MappingBaseClass<ModelSavedEvent, DefaultDatabase>.ManyToOne<TDataType>(Expression<Func<ModelSavedEvent, TDataType>>) MappingBaseClass<ModelSavedEvent, DefaultDatabase>.Map<TDataType>(Expression<Func<ModelSavedEvent, TDataType>>) MappingBaseClass<ModelSavedEvent, DefaultDatabase>.Reduce(ILogger) MappingBaseClass<ModelSavedEvent, DefaultDatabase>.Reduce(IMapping, ILogger) MappingBaseClass<ModelSavedEvent, DefaultDatabase>.Reference<TDataType>(Expression<Func<ModelSavedEvent, TDataType>>) MappingBaseClass<ModelSavedEvent, DefaultDatabase>.SetQuery(QueryType, string, CommandType, params IParameter[]) MappingBaseClass<ModelSavedEvent, DefaultDatabase>.Setup() MappingBaseClass<ModelSavedEvent, DefaultDatabase>.ToString() MappingBaseClass<ModelSavedEvent, DefaultDatabase>.AutoIDProperties MappingBaseClass<ModelSavedEvent, DefaultDatabase>.DatabaseConfigType MappingBaseClass<ModelSavedEvent, DefaultDatabase>.IDProperties MappingBaseClass<ModelSavedEvent, DefaultDatabase>.ManyToManyProperties MappingBaseClass<ModelSavedEvent, DefaultDatabase>.ManyToOneProperties MappingBaseClass<ModelSavedEvent, DefaultDatabase>.MapProperties MappingBaseClass<ModelSavedEvent, DefaultDatabase>.Merge MappingBaseClass<ModelSavedEvent, DefaultDatabase>.ObjectType MappingBaseClass<ModelSavedEvent, DefaultDatabase>.Order MappingBaseClass<ModelSavedEvent, DefaultDatabase>.Prefix MappingBaseClass<ModelSavedEvent, DefaultDatabase>.Queries MappingBaseClass<ModelSavedEvent, DefaultDatabase>.ReferenceProperties MappingBaseClass<ModelSavedEvent, DefaultDatabase>.SchemaName MappingBaseClass<ModelSavedEvent, DefaultDatabase>.Suffix MappingBaseClass<ModelSavedEvent, DefaultDatabase>.TableName object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Mithril.Admin.Abstractions.Mappings Assembly: Mithril.Admin.Abstractions.dll Syntax public class ModelSavedEventMapping : MappingBaseClass<ModelSavedEvent, DefaultDatabase>, IMapping<ModelSavedEvent>, IMapping Constructors | Improve this Doc View Source ModelSavedEventMapping() Initializes a new instance of the ModelSavedEventMapping class. Declaration public ModelSavedEventMapping() See Also MappingBaseClass<TClassType, TDatabaseType> Implements IMapping<TClassType> IMapping Extension Methods ExpandoObjectExtensions.ConvertToExpando<TEntity>(TEntity?) GenericExtensions.When<TObject>(TObject, bool, Func<TObject, TObject>) See Also MappingBaseClass<TClassType, TDatabaseType>"
  },
  "api/Mithril.Admin.Abstractions.Mappings.SaveModelCommandMapping.html": {
    "href": "api/Mithril.Admin.Abstractions.Mappings.SaveModelCommandMapping.html",
    "title": "Class SaveModelCommandMapping | Mithril API Reference",
    "keywords": "Class SaveModelCommandMapping Save model command mapping Inheritance object MappingBaseClass<SaveModelCommand, DefaultDatabase> SaveModelCommandMapping Implements IMapping<SaveModelCommand> IMapping Inherited Members MappingBaseClass<SaveModelCommand, DefaultDatabase>.AddAutoKey() MappingBaseClass<SaveModelCommand, DefaultDatabase>.ContainsProperty(string) MappingBaseClass<SaveModelCommand, DefaultDatabase>.Copy(IMapping) MappingBaseClass<SaveModelCommand, DefaultDatabase>.CopyProperty(IIDProperty) MappingBaseClass<SaveModelCommand, DefaultDatabase>.CopyProperty(IProperty) MappingBaseClass<SaveModelCommand, DefaultDatabase>.CopyProperty(IMapProperty) MappingBaseClass<SaveModelCommand, DefaultDatabase>.CopyProperty(IManyToOneProperty) MappingBaseClass<SaveModelCommand, DefaultDatabase>.CopyProperty(IManyToManyProperty) MappingBaseClass<SaveModelCommand, DefaultDatabase>.Equals(object) MappingBaseClass<SaveModelCommand, DefaultDatabase>.GetColumnName(string) MappingBaseClass<SaveModelCommand, DefaultDatabase>.GetHashCode() MappingBaseClass<SaveModelCommand, DefaultDatabase>.ID<TDataType>(Expression<Func<SaveModelCommand, TDataType>>) MappingBaseClass<SaveModelCommand, DefaultDatabase>.ManyToMany<TDataType>(Expression<Func<SaveModelCommand, IList<TDataType>>>) MappingBaseClass<SaveModelCommand, DefaultDatabase>.ManyToOne<TDataType>(Expression<Func<SaveModelCommand, IList<TDataType>>>) MappingBaseClass<SaveModelCommand, DefaultDatabase>.ManyToOne<TDataType>(Expression<Func<SaveModelCommand, TDataType>>) MappingBaseClass<SaveModelCommand, DefaultDatabase>.Map<TDataType>(Expression<Func<SaveModelCommand, TDataType>>) MappingBaseClass<SaveModelCommand, DefaultDatabase>.Reduce(ILogger) MappingBaseClass<SaveModelCommand, DefaultDatabase>.Reduce(IMapping, ILogger) MappingBaseClass<SaveModelCommand, DefaultDatabase>.Reference<TDataType>(Expression<Func<SaveModelCommand, TDataType>>) MappingBaseClass<SaveModelCommand, DefaultDatabase>.SetQuery(QueryType, string, CommandType, params IParameter[]) MappingBaseClass<SaveModelCommand, DefaultDatabase>.Setup() MappingBaseClass<SaveModelCommand, DefaultDatabase>.ToString() MappingBaseClass<SaveModelCommand, DefaultDatabase>.AutoIDProperties MappingBaseClass<SaveModelCommand, DefaultDatabase>.DatabaseConfigType MappingBaseClass<SaveModelCommand, DefaultDatabase>.IDProperties MappingBaseClass<SaveModelCommand, DefaultDatabase>.ManyToManyProperties MappingBaseClass<SaveModelCommand, DefaultDatabase>.ManyToOneProperties MappingBaseClass<SaveModelCommand, DefaultDatabase>.MapProperties MappingBaseClass<SaveModelCommand, DefaultDatabase>.Merge MappingBaseClass<SaveModelCommand, DefaultDatabase>.ObjectType MappingBaseClass<SaveModelCommand, DefaultDatabase>.Order MappingBaseClass<SaveModelCommand, DefaultDatabase>.Prefix MappingBaseClass<SaveModelCommand, DefaultDatabase>.Queries MappingBaseClass<SaveModelCommand, DefaultDatabase>.ReferenceProperties MappingBaseClass<SaveModelCommand, DefaultDatabase>.SchemaName MappingBaseClass<SaveModelCommand, DefaultDatabase>.Suffix MappingBaseClass<SaveModelCommand, DefaultDatabase>.TableName object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Mithril.Admin.Abstractions.Mappings Assembly: Mithril.Admin.Abstractions.dll Syntax public class SaveModelCommandMapping : MappingBaseClass<SaveModelCommand, DefaultDatabase>, IMapping<SaveModelCommand>, IMapping Constructors | Improve this Doc View Source SaveModelCommandMapping() Initializes a new instance of the SaveModelCommandMapping class. Declaration public SaveModelCommandMapping() See Also MappingBaseClass<TClassType, TDatabaseType> Implements IMapping<TClassType> IMapping Extension Methods ExpandoObjectExtensions.ConvertToExpando<TEntity>(TEntity?) GenericExtensions.When<TObject>(TObject, bool, Func<TObject, TObject>) See Also MappingBaseClass<TClassType, TDatabaseType>"
  },
  "api/Mithril.Admin.Abstractions.Mappings.html": {
    "href": "api/Mithril.Admin.Abstractions.Mappings.html",
    "title": "Namespace Mithril.Admin.Abstractions.Mappings | Mithril API Reference",
    "keywords": "Namespace Mithril.Admin.Abstractions.Mappings Classes ModelSavedEventMapping Model saved event mapping SaveModelCommandMapping Save model command mapping"
  },
  "api/Mithril.Admin.Abstractions.Services.IEditorService.html": {
    "href": "api/Mithril.Admin.Abstractions.Services.IEditorService.html",
    "title": "Interface IEditorService | Mithril API Reference",
    "keywords": "Interface IEditorService Editor service Namespace: Mithril.Admin.Abstractions.Services Assembly: Mithril.Admin.Abstractions.dll Syntax public interface IEditorService Properties | Improve this Doc View Source Editors Gets the editors. Declaration IEnumerable<IEditor> Editors { get; } Property Value Type Description IEnumerable<IEditor> The editors. Extension Methods ExpandoObjectExtensions.ConvertToExpando<TEntity>(TEntity?) GenericExtensions.When<TObject>(TObject, bool, Func<TObject, TObject>)"
  },
  "api/Mithril.Admin.Abstractions.Services.IEntityMetadataService.html": {
    "href": "api/Mithril.Admin.Abstractions.Services.IEntityMetadataService.html",
    "title": "Interface IEntityMetadataService | Mithril API Reference",
    "keywords": "Interface IEntityMetadataService Entity metadata service Namespace: Mithril.Admin.Abstractions.Services Assembly: Mithril.Admin.Abstractions.dll Syntax public interface IEntityMetadataService Methods | Improve this Doc View Source ExtractMetadata(PropertyInfo?) Extracts the metadata defining this entity. Declaration EntityMetadata? ExtractMetadata(PropertyInfo? property) Parameters Type Name Description PropertyInfo property The property. Returns Type Description EntityMetadata The metadata for the entity type. | Improve this Doc View Source ExtractMetadata(Type?) Extracts the metadata defining this entity. Declaration EntityMetadata? ExtractMetadata(Type? entityType) Parameters Type Name Description Type entityType Type of the entity. Returns Type Description EntityMetadata The metadata for the entity type. | Improve this Doc View Source ExtractMetadata<TEntity>() Extracts the metadata defining this entity. Declaration EntityMetadata? ExtractMetadata<TEntity>() Returns Type Description EntityMetadata The metadata for the entity type. Type Parameters Name Description TEntity The type of the entity. Extension Methods ExpandoObjectExtensions.ConvertToExpando<TEntity>(TEntity?) GenericExtensions.When<TObject>(TObject, bool, Func<TObject, TObject>)"
  },
  "api/Mithril.Admin.Abstractions.Services.html": {
    "href": "api/Mithril.Admin.Abstractions.Services.html",
    "title": "Namespace Mithril.Admin.Abstractions.Services | Mithril API Reference",
    "keywords": "Namespace Mithril.Admin.Abstractions.Services Interfaces IEditorService Editor service IEntityMetadataService Entity metadata service"
  },
  "api/Mithril.Admin.AdminModule.html": {
    "href": "api/Mithril.Admin.AdminModule.html",
    "title": "Class AdminModule | Mithril API Reference",
    "keywords": "Class AdminModule Admin module Inheritance object ModuleBaseClass<AdminModule> AdminModule Implements IEquatable<AdminModule> IModule Inherited Members ModuleBaseClass<AdminModule>.Category ModuleBaseClass<AdminModule>.ContentPath ModuleBaseClass<AdminModule>.Features ModuleBaseClass<AdminModule>.ID ModuleBaseClass<AdminModule>.LastModified ModuleBaseClass<AdminModule>.Name ModuleBaseClass<AdminModule>.Order ModuleBaseClass<AdminModule>.Tags ModuleBaseClass<AdminModule>.Version ModuleBaseClass<AdminModule>.ConfigureApplication(IApplicationBuilder, IConfiguration, IHostEnvironment) ModuleBaseClass<AdminModule>.ConfigureHostSettings(IHostBuilder, IConfiguration, IHostEnvironment) ModuleBaseClass<AdminModule>.ConfigureLoggingSettings(ILoggingBuilder, IConfiguration, IHostEnvironment) ModuleBaseClass<AdminModule>.ConfigureMVC(IMvcBuilder, IConfiguration, IHostEnvironment) ModuleBaseClass<AdminModule>.ConfigureRoutes(IEndpointRouteBuilder, IConfiguration, IHostEnvironment) ModuleBaseClass<AdminModule>.ConfigureWebHostSettings(IWebHostBuilder, IConfiguration, IHostEnvironment) ModuleBaseClass<AdminModule>.Equals(object) ModuleBaseClass<AdminModule>.Equals(AdminModule) ModuleBaseClass<AdminModule>.GetHashCode() ModuleBaseClass<AdminModule>.InitializeDataAsync(IDataService, IServiceProvider) ModuleBaseClass<AdminModule>.OnStarted() ModuleBaseClass<AdminModule>.OnStopped() ModuleBaseClass<AdminModule>.OnStopping() object.Equals(object, object) object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Mithril.Admin Assembly: Mithril.Admin.dll Syntax public class AdminModule : ModuleBaseClass<AdminModule>, IEquatable<AdminModule>, IModule Methods | Improve this Doc View Source ConfigureServices(IServiceCollection?, IConfiguration?, IHostEnvironment?) Configures the services for the module. Declaration public override IServiceCollection? ConfigureServices(IServiceCollection? services, IConfiguration? configuration, IHostEnvironment? environment) Parameters Type Name Description IServiceCollection services The services collection. IConfiguration configuration The configuration. IHostEnvironment environment The environment. Returns Type Description IServiceCollection Services Overrides ModuleBaseClass<AdminModule>.ConfigureServices(IServiceCollection, IConfiguration, IHostEnvironment) See Also ModuleBaseClass<TModule> Implements IEquatable<T> IModule Extension Methods ExpandoObjectExtensions.ConvertToExpando<TEntity>(TEntity?) GenericExtensions.When<TObject>(TObject, bool, Func<TObject, TObject>) See Also ModuleBaseClass<TModule>"
  },
  "api/Mithril.Admin.Commands.SaveModelCommandHandler.html": {
    "href": "api/Mithril.Admin.Commands.SaveModelCommandHandler.html",
    "title": "Class SaveModelCommandHandler | Mithril API Reference",
    "keywords": "Class SaveModelCommandHandler Save model command handler Inheritance object CommandHandlerBaseClass<SaveModelCommand, SaveModelCommandVM> SaveModelCommandHandler Implements ICommandHandler<SaveModelCommandVM> ICommandHandler Inherited Members CommandHandlerBaseClass<SaveModelCommand, SaveModelCommandVM>.CommandName CommandHandlerBaseClass<SaveModelCommand, SaveModelCommandVM>.ContentTypeAccepts CommandHandlerBaseClass<SaveModelCommand, SaveModelCommandVM>.Features CommandHandlerBaseClass<SaveModelCommand, SaveModelCommandVM>.Tags CommandHandlerBaseClass<SaveModelCommand, SaveModelCommandVM>.Version CommandHandlerBaseClass<SaveModelCommand, SaveModelCommandVM>.ViewModelType CommandHandlerBaseClass<SaveModelCommand, SaveModelCommandVM>.FeatureManager CommandHandlerBaseClass<SaveModelCommand, SaveModelCommandVM>.Logger CommandHandlerBaseClass<SaveModelCommand, SaveModelCommandVM>.CanHandle(ICommand) CommandHandlerBaseClass<SaveModelCommand, SaveModelCommandVM>.CreateAsync(SaveModelCommandVM, ClaimsPrincipal) CommandHandlerBaseClass<SaveModelCommand, SaveModelCommandVM>.HandleCommandAsync(params ICommand[]) CommandHandlerBaseClass<SaveModelCommand, SaveModelCommandVM>.HandleCommandAsync(SaveModelCommand[]) CommandHandlerBaseClass<SaveModelCommand, SaveModelCommandVM>.IsFeatureEnabled() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Mithril.Admin.Commands Assembly: Mithril.Admin.dll Syntax public class SaveModelCommandHandler : CommandHandlerBaseClass<SaveModelCommand, SaveModelCommandVM>, ICommandHandler<SaveModelCommandVM>, ICommandHandler Constructors | Improve this Doc View Source SaveModelCommandHandler(IEditorService?, ILogger<SaveModelCommandHandler>?, IFeatureManager?) Initializes a new instance of the SaveModelCommandHandler class. Declaration public SaveModelCommandHandler(IEditorService? editorService, ILogger<SaveModelCommandHandler>? logger, IFeatureManager? featureManager) Parameters Type Name Description IEditorService editorService The editor service. ILogger<SaveModelCommandHandler> logger The logger. IFeatureManager featureManager The feature manager. See Also CommandHandlerBaseClass<TCommand, TViewModel> Properties | Improve this Doc View Source CommandName Gets the command type accepted. Declaration public override string CommandName { get; } Property Value Type Description string The command type accepted. Overrides CommandHandlerBaseClass<SaveModelCommand, SaveModelCommandVM>.CommandName See Also CommandHandlerBaseClass<TCommand, TViewModel> | Improve this Doc View Source Tags Gets the tags (Used by OpenAPI, etc). Declaration public override string[] Tags { get; } Property Value Type Description string[] The tags (Used by OpenAPI, etc). Overrides CommandHandlerBaseClass<SaveModelCommand, SaveModelCommandVM>.Tags See Also CommandHandlerBaseClass<TCommand, TViewModel> Methods | Improve this Doc View Source CreateAsync(SaveModelCommandVM?, ClaimsPrincipal?) Creates the specified value. Declaration public override ValueTask<CommandCreationResult?> CreateAsync(SaveModelCommandVM? value, ClaimsPrincipal? user) Parameters Type Name Description SaveModelCommandVM value The value. ClaimsPrincipal user The user. Returns Type Description ValueTask<CommandCreationResult> A command value converted from the view model. Overrides CommandHandlerBaseClass<SaveModelCommand, SaveModelCommandVM>.CreateAsync(SaveModelCommandVM, ClaimsPrincipal) See Also CommandHandlerBaseClass<TCommand, TViewModel> | Improve this Doc View Source HandleCommandAsync(SaveModelCommand?[]?) Handles the command. Declaration protected override Task<IEvent[]> HandleCommandAsync(SaveModelCommand?[]? args) Parameters Type Name Description SaveModelCommand[] args The arguments. Returns Type Description Task<IEvent[]> The events generated by the command. Overrides CommandHandlerBaseClass<SaveModelCommand, SaveModelCommandVM>.HandleCommandAsync(SaveModelCommand[]) See Also CommandHandlerBaseClass<TCommand, TViewModel> Implements ICommandHandler<TViewModel> ICommandHandler Extension Methods ExpandoObjectExtensions.ConvertToExpando<TEntity>(TEntity?) GenericExtensions.When<TObject>(TObject, bool, Func<TObject, TObject>) See Also CommandHandlerBaseClass<TCommand, TViewModel>"
  },
  "api/Mithril.Admin.Commands.ViewModels.SaveModelCommandVM.html": {
    "href": "api/Mithril.Admin.Commands.ViewModels.SaveModelCommandVM.html",
    "title": "Class SaveModelCommandVM | Mithril API Reference",
    "keywords": "Class SaveModelCommandVM Save model command VM Inheritance object SaveModelCommandVM Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Mithril.Admin.Commands.ViewModels Assembly: Mithril.Admin.dll Syntax public class SaveModelCommandVM Properties | Improve this Doc View Source Data Gets or sets the data. Declaration public ExpandoObject? Data { get; set; } Property Value Type Description ExpandoObject The data. | Improve this Doc View Source EntityType Gets or sets the type of the entity. Declaration public string? EntityType { get; set; } Property Value Type Description string The type of the entity. | Improve this Doc View Source ID Gets or sets the identifier. Declaration public long ID { get; set; } Property Value Type Description long The identifier. Extension Methods ExpandoObjectExtensions.ConvertToExpando<TEntity>(TEntity?) GenericExtensions.When<TObject>(TObject, bool, Func<TObject, TObject>)"
  },
  "api/Mithril.Admin.Commands.ViewModels.html": {
    "href": "api/Mithril.Admin.Commands.ViewModels.html",
    "title": "Namespace Mithril.Admin.Commands.ViewModels | Mithril API Reference",
    "keywords": "Namespace Mithril.Admin.Commands.ViewModels Classes SaveModelCommandVM Save model command VM"
  },
  "api/Mithril.Admin.Commands.html": {
    "href": "api/Mithril.Admin.Commands.html",
    "title": "Namespace Mithril.Admin.Commands | Mithril API Reference",
    "keywords": "Namespace Mithril.Admin.Commands Classes SaveModelCommandHandler Save model command handler"
  },
  "api/Mithril.Admin.Controllers.AdminController.html": {
    "href": "api/Mithril.Admin.Controllers.AdminController.html",
    "title": "Class AdminController | Mithril API Reference",
    "keywords": "Class AdminController Admin controller Inheritance object ControllerBase Controller AdminController Implements IActionFilter IAsyncActionFilter IFilterMetadata IDisposable Inherited Members Controller.View() Controller.View(string) Controller.View(object) Controller.View(string, object) Controller.PartialView() Controller.PartialView(string) Controller.PartialView(object) Controller.PartialView(string, object) Controller.ViewComponent(string) Controller.ViewComponent(Type) Controller.ViewComponent(string, object) Controller.ViewComponent(Type, object) Controller.Json(object) Controller.Json(object, object) Controller.OnActionExecuting(ActionExecutingContext) Controller.OnActionExecuted(ActionExecutedContext) Controller.OnActionExecutionAsync(ActionExecutingContext, ActionExecutionDelegate) Controller.Dispose() Controller.Dispose(bool) Controller.ViewData Controller.TempData Controller.ViewBag ControllerBase.StatusCode(int) ControllerBase.StatusCode(int, object) ControllerBase.Content(string) ControllerBase.Content(string, string) ControllerBase.Content(string, string, Encoding) ControllerBase.Content(string, MediaTypeHeaderValue) ControllerBase.NoContent() ControllerBase.Ok() ControllerBase.Ok(object) ControllerBase.Redirect(string) ControllerBase.RedirectPermanent(string) ControllerBase.RedirectPreserveMethod(string) ControllerBase.RedirectPermanentPreserveMethod(string) ControllerBase.LocalRedirect(string) ControllerBase.LocalRedirectPermanent(string) ControllerBase.LocalRedirectPreserveMethod(string) ControllerBase.LocalRedirectPermanentPreserveMethod(string) ControllerBase.RedirectToAction() ControllerBase.RedirectToAction(string) ControllerBase.RedirectToAction(string, object) ControllerBase.RedirectToAction(string, string) ControllerBase.RedirectToAction(string, string, object) ControllerBase.RedirectToAction(string, string, string) ControllerBase.RedirectToAction(string, string, object, string) ControllerBase.RedirectToActionPreserveMethod(string, string, object, string) ControllerBase.RedirectToActionPermanent(string) ControllerBase.RedirectToActionPermanent(string, object) ControllerBase.RedirectToActionPermanent(string, string) ControllerBase.RedirectToActionPermanent(string, string, string) ControllerBase.RedirectToActionPermanent(string, string, object) ControllerBase.RedirectToActionPermanent(string, string, object, string) ControllerBase.RedirectToActionPermanentPreserveMethod(string, string, object, string) ControllerBase.RedirectToRoute(string) ControllerBase.RedirectToRoute(object) ControllerBase.RedirectToRoute(string, object) ControllerBase.RedirectToRoute(string, string) ControllerBase.RedirectToRoute(string, object, string) ControllerBase.RedirectToRoutePreserveMethod(string, object, string) ControllerBase.RedirectToRoutePermanent(string) ControllerBase.RedirectToRoutePermanent(object) ControllerBase.RedirectToRoutePermanent(string, object) ControllerBase.RedirectToRoutePermanent(string, string) ControllerBase.RedirectToRoutePermanent(string, object, string) ControllerBase.RedirectToRoutePermanentPreserveMethod(string, object, string) ControllerBase.RedirectToPage(string) ControllerBase.RedirectToPage(string, object) ControllerBase.RedirectToPage(string, string) ControllerBase.RedirectToPage(string, string, object) ControllerBase.RedirectToPage(string, string, string) ControllerBase.RedirectToPage(string, string, object, string) ControllerBase.RedirectToPagePermanent(string) ControllerBase.RedirectToPagePermanent(string, object) ControllerBase.RedirectToPagePermanent(string, string) ControllerBase.RedirectToPagePermanent(string, string, string) ControllerBase.RedirectToPagePermanent(string, string, object, string) ControllerBase.RedirectToPagePreserveMethod(string, string, object, string) ControllerBase.RedirectToPagePermanentPreserveMethod(string, string, object, string) ControllerBase.File(byte[], string) ControllerBase.File(byte[], string, bool) ControllerBase.File(byte[], string, string) ControllerBase.File(byte[], string, string, bool) ControllerBase.File(byte[], string, DateTimeOffset?, EntityTagHeaderValue) ControllerBase.File(byte[], string, DateTimeOffset?, EntityTagHeaderValue, bool) ControllerBase.File(byte[], string, string, DateTimeOffset?, EntityTagHeaderValue) ControllerBase.File(byte[], string, string, DateTimeOffset?, EntityTagHeaderValue, bool) ControllerBase.File(Stream, string) ControllerBase.File(Stream, string, bool) ControllerBase.File(Stream, string, string) ControllerBase.File(Stream, string, string, bool) ControllerBase.File(Stream, string, DateTimeOffset?, EntityTagHeaderValue) ControllerBase.File(Stream, string, DateTimeOffset?, EntityTagHeaderValue, bool) ControllerBase.File(Stream, string, string, DateTimeOffset?, EntityTagHeaderValue) ControllerBase.File(Stream, string, string, DateTimeOffset?, EntityTagHeaderValue, bool) ControllerBase.File(string, string) ControllerBase.File(string, string, bool) ControllerBase.File(string, string, string) ControllerBase.File(string, string, string, bool) ControllerBase.File(string, string, DateTimeOffset?, EntityTagHeaderValue) ControllerBase.File(string, string, DateTimeOffset?, EntityTagHeaderValue, bool) ControllerBase.File(string, string, string, DateTimeOffset?, EntityTagHeaderValue) ControllerBase.File(string, string, string, DateTimeOffset?, EntityTagHeaderValue, bool) ControllerBase.PhysicalFile(string, string) ControllerBase.PhysicalFile(string, string, bool) ControllerBase.PhysicalFile(string, string, string) ControllerBase.PhysicalFile(string, string, string, bool) ControllerBase.PhysicalFile(string, string, DateTimeOffset?, EntityTagHeaderValue) ControllerBase.PhysicalFile(string, string, DateTimeOffset?, EntityTagHeaderValue, bool) ControllerBase.PhysicalFile(string, string, string, DateTimeOffset?, EntityTagHeaderValue) ControllerBase.PhysicalFile(string, string, string, DateTimeOffset?, EntityTagHeaderValue, bool) ControllerBase.Unauthorized() ControllerBase.Unauthorized(object) ControllerBase.NotFound() ControllerBase.NotFound(object) ControllerBase.BadRequest() ControllerBase.BadRequest(object) ControllerBase.BadRequest(ModelStateDictionary) ControllerBase.UnprocessableEntity() ControllerBase.UnprocessableEntity(object) ControllerBase.UnprocessableEntity(ModelStateDictionary) ControllerBase.Conflict() ControllerBase.Conflict(object) ControllerBase.Conflict(ModelStateDictionary) ControllerBase.Problem(string, string, int?, string, string) ControllerBase.ValidationProblem(ValidationProblemDetails) ControllerBase.ValidationProblem(ModelStateDictionary) ControllerBase.ValidationProblem() ControllerBase.ValidationProblem(string, string, int?, string, string, ModelStateDictionary) ControllerBase.Created(string, object) ControllerBase.Created(Uri, object) ControllerBase.CreatedAtAction(string, object) ControllerBase.CreatedAtAction(string, object, object) ControllerBase.CreatedAtAction(string, string, object, object) ControllerBase.CreatedAtRoute(string, object) ControllerBase.CreatedAtRoute(object, object) ControllerBase.CreatedAtRoute(string, object, object) ControllerBase.Accepted() ControllerBase.Accepted(object) ControllerBase.Accepted(Uri) ControllerBase.Accepted(string) ControllerBase.Accepted(string, object) ControllerBase.Accepted(Uri, object) ControllerBase.AcceptedAtAction(string) ControllerBase.AcceptedAtAction(string, string) ControllerBase.AcceptedAtAction(string, object) ControllerBase.AcceptedAtAction(string, string, object) ControllerBase.AcceptedAtAction(string, object, object) ControllerBase.AcceptedAtAction(string, string, object, object) ControllerBase.AcceptedAtRoute(object) ControllerBase.AcceptedAtRoute(string) ControllerBase.AcceptedAtRoute(string, object) ControllerBase.AcceptedAtRoute(object, object) ControllerBase.AcceptedAtRoute(string, object, object) ControllerBase.Challenge() ControllerBase.Challenge(params string[]) ControllerBase.Challenge(AuthenticationProperties) ControllerBase.Challenge(AuthenticationProperties, params string[]) ControllerBase.Forbid() ControllerBase.Forbid(params string[]) ControllerBase.Forbid(AuthenticationProperties) ControllerBase.Forbid(AuthenticationProperties, params string[]) ControllerBase.SignIn(ClaimsPrincipal) ControllerBase.SignIn(ClaimsPrincipal, string) ControllerBase.SignIn(ClaimsPrincipal, AuthenticationProperties) ControllerBase.SignIn(ClaimsPrincipal, AuthenticationProperties, string) ControllerBase.SignOut() ControllerBase.SignOut(AuthenticationProperties) ControllerBase.SignOut(params string[]) ControllerBase.SignOut(AuthenticationProperties, params string[]) ControllerBase.TryUpdateModelAsync<TModel>(TModel) ControllerBase.TryUpdateModelAsync<TModel>(TModel, string) ControllerBase.TryUpdateModelAsync<TModel>(TModel, string, IValueProvider) ControllerBase.TryUpdateModelAsync<TModel>(TModel, string, params Expression<Func<TModel, object>>[]) ControllerBase.TryUpdateModelAsync<TModel>(TModel, string, Func<ModelMetadata, bool>) ControllerBase.TryUpdateModelAsync<TModel>(TModel, string, IValueProvider, params Expression<Func<TModel, object>>[]) ControllerBase.TryUpdateModelAsync<TModel>(TModel, string, IValueProvider, Func<ModelMetadata, bool>) ControllerBase.TryUpdateModelAsync(object, Type, string) ControllerBase.TryUpdateModelAsync(object, Type, string, IValueProvider, Func<ModelMetadata, bool>) ControllerBase.TryValidateModel(object) ControllerBase.TryValidateModel(object, string) ControllerBase.HttpContext ControllerBase.Request ControllerBase.Response ControllerBase.RouteData ControllerBase.ModelState ControllerBase.ControllerContext ControllerBase.MetadataProvider ControllerBase.ModelBinderFactory ControllerBase.Url ControllerBase.ObjectValidator ControllerBase.ProblemDetailsFactory ControllerBase.User ControllerBase.Empty object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Mithril.Admin.Controllers Assembly: Mithril.Admin.dll Syntax [Area(\"Admin\")] [Authorize] [ApiExplorerSettings(IgnoreApi = true)] [Route(\"/Admin\")] public class AdminController : Controller, IActionFilter, IAsyncActionFilter, IFilterMetadata, IDisposable Constructors | Improve this Doc View Source AdminController() Initializes a new instance of the AdminController class. Declaration public AdminController() See Also Controller Methods | Improve this Doc View Source Index() Returns the admin home page. Declaration [HttpGet] public IActionResult Index() Returns Type Description IActionResult The view. See Also Controller Implements IActionFilter IAsyncActionFilter IFilterMetadata IDisposable Extension Methods ExpandoObjectExtensions.ConvertToExpando<TEntity>(TEntity?) GenericExtensions.When<TObject>(TObject, bool, Func<TObject, TObject>) See Also Controller"
  },
  "api/Mithril.Admin.Controllers.html": {
    "href": "api/Mithril.Admin.Controllers.html",
    "title": "Namespace Mithril.Admin.Controllers | Mithril API Reference",
    "keywords": "Namespace Mithril.Admin.Controllers Classes AdminController Admin controller"
  },
  "api/Mithril.Admin.Queries.EditorListingQuery.html": {
    "href": "api/Mithril.Admin.Queries.EditorListingQuery.html",
    "title": "Class EditorListingQuery | Mithril API Reference",
    "keywords": "Class EditorListingQuery Editor listing query Inheritance object QueryBaseClass<IEnumerable<EditorVM>> EditorListingQuery Implements IQuery<IEnumerable<EditorVM>> IQuery Inherited Members QueryBaseClass<IEnumerable<EditorVM>>.Arguments QueryBaseClass<IEnumerable<EditorVM>>.DeprecationReason QueryBaseClass<IEnumerable<EditorVM>>.Description QueryBaseClass<IEnumerable<EditorVM>>.Features QueryBaseClass<IEnumerable<EditorVM>>.ReturnType QueryBaseClass<IEnumerable<EditorVM>>.Version QueryBaseClass<IEnumerable<EditorVM>>.FeatureManager QueryBaseClass<IEnumerable<EditorVM>>.Logger QueryBaseClass<IEnumerable<EditorVM>>.IsFeatureEnabled() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Mithril.Admin.Queries Assembly: Mithril.Admin.dll Syntax public class EditorListingQuery : QueryBaseClass<IEnumerable<EditorVM>>, IQuery<IEnumerable<EditorVM>>, IQuery Constructors | Improve this Doc View Source EditorListingQuery(ILogger<EditorListingQuery>?, IFeatureManager?, IEditorService?) Initializes a new instance of the EditorListingQuery class. Declaration public EditorListingQuery(ILogger<EditorListingQuery>? logger, IFeatureManager? featureManager, IEditorService? editorService) Parameters Type Name Description ILogger<EditorListingQuery> logger The logger. IFeatureManager featureManager The feature manager. IEditorService editorService The editor service. Properties | Improve this Doc View Source Name Gets the name. Declaration public override string Name { get; } Property Value Type Description string The name. Overrides QueryBaseClass<IEnumerable<EditorVM>>.Name Methods | Improve this Doc View Source ResolveAsync(ClaimsPrincipal?, Arguments) Used to resolve the data asked for by the query. Declaration public override Task<IEnumerable<EditorVM>?> ResolveAsync(ClaimsPrincipal? user, Arguments arguments) Parameters Type Name Description ClaimsPrincipal user The user. Arguments arguments The arguments. Returns Type Description Task<IEnumerable<EditorVM>> The data specified. Overrides QueryBaseClass<IEnumerable<EditorVM>>.ResolveAsync(ClaimsPrincipal, Arguments) Implements IQuery<TClass> IQuery Extension Methods ExpandoObjectExtensions.ConvertToExpando<TEntity>(TEntity?) GenericExtensions.When<TObject>(TObject, bool, Func<TObject, TObject>)"
  },
  "api/Mithril.Admin.Queries.EntitiesQuery.html": {
    "href": "api/Mithril.Admin.Queries.EntitiesQuery.html",
    "title": "Class EntitiesQuery | Mithril API Reference",
    "keywords": "Class EntitiesQuery Entity listing query Inheritance object QueryBaseClass<List<ExpandoObject>> EntitiesQuery Implements IQuery<List<ExpandoObject>> IQuery Inherited Members QueryBaseClass<List<ExpandoObject>>.DeprecationReason QueryBaseClass<List<ExpandoObject>>.Description QueryBaseClass<List<ExpandoObject>>.Features QueryBaseClass<List<ExpandoObject>>.ReturnType QueryBaseClass<List<ExpandoObject>>.Version QueryBaseClass<List<ExpandoObject>>.FeatureManager QueryBaseClass<List<ExpandoObject>>.Logger QueryBaseClass<List<ExpandoObject>>.IsFeatureEnabled() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Mithril.Admin.Queries Assembly: Mithril.Admin.dll Syntax public class EntitiesQuery : QueryBaseClass<List<ExpandoObject>>, IQuery<List<ExpandoObject>>, IQuery Constructors | Improve this Doc View Source EntitiesQuery(ILogger<EntitiesQuery>?, IFeatureManager?, IEditorService?) Initializes a new instance of the EntitiesQuery class. Declaration public EntitiesQuery(ILogger<EntitiesQuery>? logger, IFeatureManager? featureManager, IEditorService? editorService) Parameters Type Name Description ILogger<EntitiesQuery> logger The logger. IFeatureManager featureManager The feature manager. IEditorService editorService The editor service. See Also QueryBaseClass<TClass> Properties | Improve this Doc View Source Arguments Gets the arguments. Declaration public override IArgument[] Arguments { get; } Property Value Type Description IArgument[] The arguments. Overrides QueryBaseClass<List<ExpandoObject>>.Arguments See Also QueryBaseClass<TClass> | Improve this Doc View Source Name Gets the name. Declaration public override string Name { get; } Property Value Type Description string The name. Overrides QueryBaseClass<List<ExpandoObject>>.Name See Also QueryBaseClass<TClass> Methods | Improve this Doc View Source ResolveAsync(ClaimsPrincipal?, Arguments) Used to resolve the data asked for by the query. Declaration public override Task<List<ExpandoObject>?> ResolveAsync(ClaimsPrincipal? user, Arguments arguments) Parameters Type Name Description ClaimsPrincipal user The user. Arguments arguments The arguments. Returns Type Description Task<List<ExpandoObject>> The data specified. Overrides QueryBaseClass<List<ExpandoObject>>.ResolveAsync(ClaimsPrincipal, Arguments) See Also QueryBaseClass<TClass> Implements IQuery<TClass> IQuery Extension Methods ExpandoObjectExtensions.ConvertToExpando<TEntity>(TEntity?) GenericExtensions.When<TObject>(TObject, bool, Func<TObject, TObject>) See Also QueryBaseClass<TClass>"
  },
  "api/Mithril.Admin.Queries.EntityQuery.html": {
    "href": "api/Mithril.Admin.Queries.EntityQuery.html",
    "title": "Class EntityQuery | Mithril API Reference",
    "keywords": "Class EntityQuery Entity query Inheritance object QueryBaseClass<ExpandoObject> EntityQuery Implements IQuery<ExpandoObject> IQuery Inherited Members QueryBaseClass<ExpandoObject>.DeprecationReason QueryBaseClass<ExpandoObject>.Description QueryBaseClass<ExpandoObject>.Features QueryBaseClass<ExpandoObject>.ReturnType QueryBaseClass<ExpandoObject>.Version QueryBaseClass<ExpandoObject>.FeatureManager QueryBaseClass<ExpandoObject>.Logger QueryBaseClass<ExpandoObject>.IsFeatureEnabled() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Mithril.Admin.Queries Assembly: Mithril.Admin.dll Syntax public class EntityQuery : QueryBaseClass<ExpandoObject>, IQuery<ExpandoObject>, IQuery Constructors | Improve this Doc View Source EntityQuery(ILogger<EntityQuery>?, IFeatureManager?, IEditorService?) Initializes a new instance of the EntityQuery class. Declaration public EntityQuery(ILogger<EntityQuery>? logger, IFeatureManager? featureManager, IEditorService? editorService) Parameters Type Name Description ILogger<EntityQuery> logger The logger. IFeatureManager featureManager The feature manager. IEditorService editorService The editor service. See Also QueryBaseClass<TClass> Properties | Improve this Doc View Source Arguments Gets the arguments. Declaration public override IArgument[] Arguments { get; } Property Value Type Description IArgument[] The arguments. Overrides QueryBaseClass<ExpandoObject>.Arguments See Also QueryBaseClass<TClass> | Improve this Doc View Source Name Gets the name. Declaration public override string Name { get; } Property Value Type Description string The name. Overrides QueryBaseClass<ExpandoObject>.Name See Also QueryBaseClass<TClass> Methods | Improve this Doc View Source ResolveAsync(ClaimsPrincipal?, Arguments) Used to resolve the data asked for by the query. Declaration public override Task<ExpandoObject?> ResolveAsync(ClaimsPrincipal? user, Arguments arguments) Parameters Type Name Description ClaimsPrincipal user The user. Arguments arguments The arguments. Returns Type Description Task<ExpandoObject> The data specified. Overrides QueryBaseClass<ExpandoObject>.ResolveAsync(ClaimsPrincipal, Arguments) See Also QueryBaseClass<TClass> Implements IQuery<TClass> IQuery Extension Methods ExpandoObjectExtensions.ConvertToExpando<TEntity>(TEntity?) GenericExtensions.When<TObject>(TObject, bool, Func<TObject, TObject>) See Also QueryBaseClass<TClass>"
  },
  "api/Mithril.Admin.Queries.ViewModels.EditorVM.html": {
    "href": "api/Mithril.Admin.Queries.ViewModels.EditorVM.html",
    "title": "Class EditorVM | Mithril API Reference",
    "keywords": "Class EditorVM Editor VM Inheritance object EditorVM Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Mithril.Admin.Queries.ViewModels Assembly: Mithril.Admin.dll Syntax public class EditorVM Constructors | Improve this Doc View Source EditorVM(IEditor?) Initializes a new instance of the EditorVM class. Declaration public EditorVM(IEditor? model) Parameters Type Name Description IEditor model The model. Properties | Improve this Doc View Source Category Gets the category. Declaration public string? Category { get; } Property Value Type Description string The category. | Improve this Doc View Source ComponentDefinition Gets the component definition. Declaration public IComponentDefinition? ComponentDefinition { get; } Property Value Type Description IComponentDefinition The component definition. | Improve this Doc View Source DataModel Gets the data model. Declaration public Dictionary<string, string> DataModel { get; } Property Value Type Description Dictionary<string, string> The data model. | Improve this Doc View Source Description Gets the description. Declaration public string? Description { get; } Property Value Type Description string The description. | Improve this Doc View Source Icon Gets the icon. Declaration public string? Icon { get; } Property Value Type Description string The icon. | Improve this Doc View Source Name Gets the name. Declaration public string? Name { get; } Property Value Type Description string The name. Extension Methods ExpandoObjectExtensions.ConvertToExpando<TEntity>(TEntity?) GenericExtensions.When<TObject>(TObject, bool, Func<TObject, TObject>)"
  },
  "api/Mithril.Admin.Queries.ViewModels.html": {
    "href": "api/Mithril.Admin.Queries.ViewModels.html",
    "title": "Namespace Mithril.Admin.Queries.ViewModels | Mithril API Reference",
    "keywords": "Namespace Mithril.Admin.Queries.ViewModels Classes EditorVM Editor VM"
  },
  "api/Mithril.Admin.Queries.html": {
    "href": "api/Mithril.Admin.Queries.html",
    "title": "Namespace Mithril.Admin.Queries | Mithril API Reference",
    "keywords": "Namespace Mithril.Admin.Queries Classes EditorListingQuery Editor listing query EntitiesQuery Entity listing query EntityQuery Entity query"
  },
  "api/Mithril.Admin.Services.EditorService.html": {
    "href": "api/Mithril.Admin.Services.EditorService.html",
    "title": "Class EditorService | Mithril API Reference",
    "keywords": "Class EditorService Editor service Inheritance object EditorService Implements IEditorService Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Mithril.Admin.Services Assembly: Mithril.Admin.dll Syntax public class EditorService : IEditorService Constructors | Improve this Doc View Source EditorService(IEnumerable<IEditor>) Initializes a new instance of the EditorService class. Declaration public EditorService(IEnumerable<IEditor> editors) Parameters Type Name Description IEnumerable<IEditor> editors The editors. See Also IEditorService Properties | Improve this Doc View Source Editors Gets the editors. Declaration public IEnumerable<IEditor> Editors { get; } Property Value Type Description IEnumerable<IEditor> The editors. See Also IEditorService Implements IEditorService Extension Methods ExpandoObjectExtensions.ConvertToExpando<TEntity>(TEntity?) GenericExtensions.When<TObject>(TObject, bool, Func<TObject, TObject>) See Also IEditorService"
  },
  "api/Mithril.Admin.Services.EntityMetadataService.html": {
    "href": "api/Mithril.Admin.Services.EntityMetadataService.html",
    "title": "Class EntityMetadataService | Mithril API Reference",
    "keywords": "Class EntityMetadataService Entity metadata service Inheritance object EntityMetadataService Implements IEntityMetadataService Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Mithril.Admin.Services Assembly: Mithril.Admin.dll Syntax public class EntityMetadataService : IEntityMetadataService Constructors | Improve this Doc View Source EntityMetadataService(IEnumerable<IMetadataBuilder>) Initializes a new instance of the EntityMetadataService class. Declaration public EntityMetadataService(IEnumerable<IMetadataBuilder> metadataBuilders) Parameters Type Name Description IEnumerable<IMetadataBuilder> metadataBuilders The metadata builders. See Also IEntityMetadataService Methods | Improve this Doc View Source ExtractMetadata(PropertyInfo?) Extracts the metadata defining this entity. Declaration public EntityMetadata? ExtractMetadata(PropertyInfo? property) Parameters Type Name Description PropertyInfo property The property. Returns Type Description EntityMetadata The metadata for the entity type. See Also IEntityMetadataService | Improve this Doc View Source ExtractMetadata(Type?) Extracts the metadata defining this entity. Declaration public EntityMetadata? ExtractMetadata(Type? entityType) Parameters Type Name Description Type entityType Type of the entity. Returns Type Description EntityMetadata The metadata for the entity type. See Also IEntityMetadataService | Improve this Doc View Source ExtractMetadata<TEntity>() Extracts the metadata defining this entity. Declaration public EntityMetadata? ExtractMetadata<TEntity>() Returns Type Description EntityMetadata The metadata for the entity type. Type Parameters Name Description TEntity The type of the entity. See Also IEntityMetadataService Implements IEntityMetadataService Extension Methods ExpandoObjectExtensions.ConvertToExpando<TEntity>(TEntity?) GenericExtensions.When<TObject>(TObject, bool, Func<TObject, TObject>) See Also IEntityMetadataService"
  },
  "api/Mithril.Admin.Services.MetadataBuilders.CanList.html": {
    "href": "api/Mithril.Admin.Services.MetadataBuilders.CanList.html",
    "title": "Class CanList | Mithril API Reference",
    "keywords": "Class CanList Can list Inheritance object MetadataBuilderBaseClass CanList Implements IMetadataBuilder Inherited Members MetadataBuilderBaseClass.Order object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Mithril.Admin.Services.MetadataBuilders Assembly: Mithril.Admin.dll Syntax public class CanList : MetadataBuilderBaseClass, IMetadataBuilder Methods | Improve this Doc View Source ExtractMetadata(PropertyMetadata?, IEntityMetadataService) Extracts metadata and adds it to the PropertyMetadata object. Declaration public override PropertyMetadata? ExtractMetadata(PropertyMetadata? propertyMetadata, IEntityMetadataService metadataService) Parameters Type Name Description PropertyMetadata propertyMetadata The property metadata. IEntityMetadataService metadataService The metadata service. Returns Type Description PropertyMetadata The resulting property metadata. Overrides MetadataBuilderBaseClass.ExtractMetadata(PropertyMetadata?, IEntityMetadataService) See Also MetadataBuilderBaseClass Implements IMetadataBuilder Extension Methods ExpandoObjectExtensions.ConvertToExpando<TEntity>(TEntity?) GenericExtensions.When<TObject>(TObject, bool, Func<TObject, TObject>) See Also MetadataBuilderBaseClass"
  },
  "api/Mithril.Admin.Services.MetadataBuilders.HasHint.html": {
    "href": "api/Mithril.Admin.Services.MetadataBuilders.HasHint.html",
    "title": "Class HasHint | Mithril API Reference",
    "keywords": "Class HasHint Determines if the property has a hint. Inheritance object MetadataBuilderBaseClass HasHint Implements IMetadataBuilder Inherited Members MetadataBuilderBaseClass.Order object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Mithril.Admin.Services.MetadataBuilders Assembly: Mithril.Admin.dll Syntax public class HasHint : MetadataBuilderBaseClass, IMetadataBuilder Methods | Improve this Doc View Source ExtractMetadata(PropertyMetadata?, IEntityMetadataService) Extracts metadata and adds it to the PropertyMetadata object. Declaration public override PropertyMetadata? ExtractMetadata(PropertyMetadata? propertyMetadata, IEntityMetadataService metadataService) Parameters Type Name Description PropertyMetadata propertyMetadata The property metadata. IEntityMetadataService metadataService The metadata service. Returns Type Description PropertyMetadata The resulting property metadata. Overrides MetadataBuilderBaseClass.ExtractMetadata(PropertyMetadata?, IEntityMetadataService) See Also MetadataBuilderBaseClass Implements IMetadataBuilder Extension Methods ExpandoObjectExtensions.ConvertToExpando<TEntity>(TEntity?) GenericExtensions.When<TObject>(TObject, bool, Func<TObject, TObject>) See Also MetadataBuilderBaseClass"
  },
  "api/Mithril.Admin.Services.MetadataBuilders.HasMax.html": {
    "href": "api/Mithril.Admin.Services.MetadataBuilders.HasMax.html",
    "title": "Class HasMax | Mithril API Reference",
    "keywords": "Class HasMax Determines if the property has a max value. Inheritance object MetadataBuilderBaseClass HasMax Implements IMetadataBuilder Inherited Members MetadataBuilderBaseClass.Order object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Mithril.Admin.Services.MetadataBuilders Assembly: Mithril.Admin.dll Syntax public class HasMax : MetadataBuilderBaseClass, IMetadataBuilder Methods | Improve this Doc View Source ExtractMetadata(PropertyMetadata?, IEntityMetadataService) Extracts metadata and adds it to the PropertyMetadata object. Declaration public override PropertyMetadata? ExtractMetadata(PropertyMetadata? propertyMetadata, IEntityMetadataService metadataService) Parameters Type Name Description PropertyMetadata propertyMetadata The property metadata. IEntityMetadataService metadataService The metadata service. Returns Type Description PropertyMetadata The resulting property metadata. Overrides MetadataBuilderBaseClass.ExtractMetadata(PropertyMetadata?, IEntityMetadataService) See Also MetadataBuilderBaseClass Implements IMetadataBuilder Extension Methods ExpandoObjectExtensions.ConvertToExpando<TEntity>(TEntity?) GenericExtensions.When<TObject>(TObject, bool, Func<TObject, TObject>) See Also MetadataBuilderBaseClass"
  },
  "api/Mithril.Admin.Services.MetadataBuilders.HasMin.html": {
    "href": "api/Mithril.Admin.Services.MetadataBuilders.HasMin.html",
    "title": "Class HasMin | Mithril API Reference",
    "keywords": "Class HasMin Determines if the property has a Min value. Inheritance object MetadataBuilderBaseClass HasMin Implements IMetadataBuilder Inherited Members MetadataBuilderBaseClass.Order object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Mithril.Admin.Services.MetadataBuilders Assembly: Mithril.Admin.dll Syntax public class HasMin : MetadataBuilderBaseClass, IMetadataBuilder Methods | Improve this Doc View Source ExtractMetadata(PropertyMetadata?, IEntityMetadataService) Extracts metadata and adds it to the PropertyMetadata object. Declaration public override PropertyMetadata? ExtractMetadata(PropertyMetadata? propertyMetadata, IEntityMetadataService metadataService) Parameters Type Name Description PropertyMetadata propertyMetadata The property metadata. IEntityMetadataService metadataService The metadata service. Returns Type Description PropertyMetadata The resulting property metadata. Overrides MetadataBuilderBaseClass.ExtractMetadata(PropertyMetadata?, IEntityMetadataService) See Also MetadataBuilderBaseClass Implements IMetadataBuilder Extension Methods ExpandoObjectExtensions.ConvertToExpando<TEntity>(TEntity?) GenericExtensions.When<TObject>(TObject, bool, Func<TObject, TObject>) See Also MetadataBuilderBaseClass"
  },
  "api/Mithril.Admin.Services.MetadataBuilders.HasPattern.html": {
    "href": "api/Mithril.Admin.Services.MetadataBuilders.HasPattern.html",
    "title": "Class HasPattern | Mithril API Reference",
    "keywords": "Class HasPattern Determines if the property has a pattern value. Inheritance object MetadataBuilderBaseClass HasPattern Implements IMetadataBuilder Inherited Members MetadataBuilderBaseClass.Order object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Mithril.Admin.Services.MetadataBuilders Assembly: Mithril.Admin.dll Syntax public class HasPattern : MetadataBuilderBaseClass, IMetadataBuilder Methods | Improve this Doc View Source DeterminePattern(PropertyInfo?) Determines the pattern. Declaration protected static string? DeterminePattern(PropertyInfo? property) Parameters Type Name Description PropertyInfo property The property. Returns Type Description string The pattern value if one exists. See Also MetadataBuilderBaseClass | Improve this Doc View Source ExtractMetadata(PropertyMetadata?, IEntityMetadataService) Extracts metadata and adds it to the PropertyMetadata object. Declaration public override PropertyMetadata? ExtractMetadata(PropertyMetadata? propertyMetadata, IEntityMetadataService metadataService) Parameters Type Name Description PropertyMetadata propertyMetadata The property metadata. IEntityMetadataService metadataService The metadata service. Returns Type Description PropertyMetadata The resulting property metadata. Overrides MetadataBuilderBaseClass.ExtractMetadata(PropertyMetadata?, IEntityMetadataService) See Also MetadataBuilderBaseClass Implements IMetadataBuilder Extension Methods ExpandoObjectExtensions.ConvertToExpando<TEntity>(TEntity?) GenericExtensions.When<TObject>(TObject, bool, Func<TObject, TObject>) See Also MetadataBuilderBaseClass"
  },
  "api/Mithril.Admin.Services.MetadataBuilders.HasPlaceholder.html": {
    "href": "api/Mithril.Admin.Services.MetadataBuilders.HasPlaceholder.html",
    "title": "Class HasPlaceholder | Mithril API Reference",
    "keywords": "Class HasPlaceholder Determines if the property has a placeholder value. Inheritance object MetadataBuilderBaseClass HasPlaceholder Implements IMetadataBuilder Inherited Members MetadataBuilderBaseClass.Order object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Mithril.Admin.Services.MetadataBuilders Assembly: Mithril.Admin.dll Syntax public class HasPlaceholder : MetadataBuilderBaseClass, IMetadataBuilder Methods | Improve this Doc View Source DeterminePlaceholder(PropertyInfo?) Determines the Placeholder. Declaration protected static string? DeterminePlaceholder(PropertyInfo? property) Parameters Type Name Description PropertyInfo property The property. Returns Type Description string The Placeholder value if one exists. See Also MetadataBuilderBaseClass | Improve this Doc View Source ExtractMetadata(PropertyMetadata?, IEntityMetadataService) Extracts metadata and adds it to the PropertyMetadata object. Declaration public override PropertyMetadata? ExtractMetadata(PropertyMetadata? propertyMetadata, IEntityMetadataService metadataService) Parameters Type Name Description PropertyMetadata propertyMetadata The property metadata. IEntityMetadataService metadataService The metadata service. Returns Type Description PropertyMetadata The resulting property metadata. Overrides MetadataBuilderBaseClass.ExtractMetadata(PropertyMetadata?, IEntityMetadataService) See Also MetadataBuilderBaseClass Implements IMetadataBuilder Extension Methods ExpandoObjectExtensions.ConvertToExpando<TEntity>(TEntity?) GenericExtensions.When<TObject>(TObject, bool, Func<TObject, TObject>) See Also MetadataBuilderBaseClass"
  },
  "api/Mithril.Admin.Services.MetadataBuilders.HasQuery.html": {
    "href": "api/Mithril.Admin.Services.MetadataBuilders.HasQuery.html",
    "title": "Class HasQuery | Mithril API Reference",
    "keywords": "Class HasQuery Determines if the property has a query value. Inheritance object MetadataBuilderBaseClass HasQuery Implements IMetadataBuilder Inherited Members MetadataBuilderBaseClass.Order object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Mithril.Admin.Services.MetadataBuilders Assembly: Mithril.Admin.dll Syntax public class HasQuery : MetadataBuilderBaseClass, IMetadataBuilder Constructors | Improve this Doc View Source HasQuery(IEnumerable<IDropDownQuery>) Initializes a new instance of the HasQuery class. Declaration public HasQuery(IEnumerable<IDropDownQuery> dropDownQueries) Parameters Type Name Description IEnumerable<IDropDownQuery> dropDownQueries The drop down queries. See Also MetadataBuilderBaseClass Methods | Improve this Doc View Source ExtractMetadata(PropertyMetadata?, IEntityMetadataService) Extracts metadata and adds it to the PropertyMetadata object. Declaration public override PropertyMetadata? ExtractMetadata(PropertyMetadata? propertyMetadata, IEntityMetadataService metadataService) Parameters Type Name Description PropertyMetadata propertyMetadata The property metadata. IEntityMetadataService metadataService The metadata service. Returns Type Description PropertyMetadata The resulting property metadata. Overrides MetadataBuilderBaseClass.ExtractMetadata(PropertyMetadata?, IEntityMetadataService) See Also MetadataBuilderBaseClass Implements IMetadataBuilder Extension Methods ExpandoObjectExtensions.ConvertToExpando<TEntity>(TEntity?) GenericExtensions.When<TObject>(TObject, bool, Func<TObject, TObject>) See Also MetadataBuilderBaseClass"
  },
  "api/Mithril.Admin.Services.MetadataBuilders.HasReadOnly.html": {
    "href": "api/Mithril.Admin.Services.MetadataBuilders.HasReadOnly.html",
    "title": "Class HasReadOnly | Mithril API Reference",
    "keywords": "Class HasReadOnly Determines if the property has a read only value. Inheritance object MetadataBuilderBaseClass HasReadOnly Implements IMetadataBuilder Inherited Members MetadataBuilderBaseClass.Order object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Mithril.Admin.Services.MetadataBuilders Assembly: Mithril.Admin.dll Syntax public class HasReadOnly : MetadataBuilderBaseClass, IMetadataBuilder Methods | Improve this Doc View Source ExtractMetadata(PropertyMetadata?, IEntityMetadataService) Extracts metadata and adds it to the PropertyMetadata object. Declaration public override PropertyMetadata? ExtractMetadata(PropertyMetadata? propertyMetadata, IEntityMetadataService metadataService) Parameters Type Name Description PropertyMetadata propertyMetadata The property metadata. IEntityMetadataService metadataService The metadata service. Returns Type Description PropertyMetadata The resulting property metadata. Overrides MetadataBuilderBaseClass.ExtractMetadata(PropertyMetadata?, IEntityMetadataService) See Also MetadataBuilderBaseClass Implements IMetadataBuilder Extension Methods ExpandoObjectExtensions.ConvertToExpando<TEntity>(TEntity?) GenericExtensions.When<TObject>(TObject, bool, Func<TObject, TObject>) See Also MetadataBuilderBaseClass"
  },
  "api/Mithril.Admin.Services.MetadataBuilders.HasStep.html": {
    "href": "api/Mithril.Admin.Services.MetadataBuilders.HasStep.html",
    "title": "Class HasStep | Mithril API Reference",
    "keywords": "Class HasStep Determines if the property has a step value. Inheritance object MetadataBuilderBaseClass HasStep Implements IMetadataBuilder Inherited Members MetadataBuilderBaseClass.Order object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Mithril.Admin.Services.MetadataBuilders Assembly: Mithril.Admin.dll Syntax public class HasStep : MetadataBuilderBaseClass, IMetadataBuilder Methods | Improve this Doc View Source Determinestep(PropertyInfo?) Determines the step. Declaration protected static decimal? Determinestep(PropertyInfo? property) Parameters Type Name Description PropertyInfo property The property. Returns Type Description decimal? The step value if one exists. See Also MetadataBuilderBaseClass | Improve this Doc View Source ExtractMetadata(PropertyMetadata?, IEntityMetadataService) Extracts metadata and adds it to the PropertyMetadata object. Declaration public override PropertyMetadata? ExtractMetadata(PropertyMetadata? propertyMetadata, IEntityMetadataService metadataService) Parameters Type Name Description PropertyMetadata propertyMetadata The property metadata. IEntityMetadataService metadataService The metadata service. Returns Type Description PropertyMetadata The resulting property metadata. Overrides MetadataBuilderBaseClass.ExtractMetadata(PropertyMetadata?, IEntityMetadataService) See Also MetadataBuilderBaseClass Implements IMetadataBuilder Extension Methods ExpandoObjectExtensions.ConvertToExpando<TEntity>(TEntity?) GenericExtensions.When<TObject>(TObject, bool, Func<TObject, TObject>) See Also MetadataBuilderBaseClass"
  },
  "api/Mithril.Admin.Services.MetadataBuilders.HasSubtitle.html": {
    "href": "api/Mithril.Admin.Services.MetadataBuilders.HasSubtitle.html",
    "title": "Class HasSubtitle | Mithril API Reference",
    "keywords": "Class HasSubtitle Determines if the property has a subtitle value. Inheritance object MetadataBuilderBaseClass HasSubtitle Implements IMetadataBuilder Inherited Members MetadataBuilderBaseClass.Order object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Mithril.Admin.Services.MetadataBuilders Assembly: Mithril.Admin.dll Syntax public class HasSubtitle : MetadataBuilderBaseClass, IMetadataBuilder Methods | Improve this Doc View Source DetermineSubtitle(PropertyInfo?) Determines the Subtitle. Declaration protected static string? DetermineSubtitle(PropertyInfo? property) Parameters Type Name Description PropertyInfo property The property. Returns Type Description string The Subtitle value if one exists. See Also MetadataBuilderBaseClass | Improve this Doc View Source ExtractMetadata(PropertyMetadata?, IEntityMetadataService) Extracts metadata and adds it to the PropertyMetadata object. Declaration public override PropertyMetadata? ExtractMetadata(PropertyMetadata? propertyMetadata, IEntityMetadataService metadataService) Parameters Type Name Description PropertyMetadata propertyMetadata The property metadata. IEntityMetadataService metadataService The metadata service. Returns Type Description PropertyMetadata The resulting property metadata. Overrides MetadataBuilderBaseClass.ExtractMetadata(PropertyMetadata?, IEntityMetadataService) See Also MetadataBuilderBaseClass Implements IMetadataBuilder Extension Methods ExpandoObjectExtensions.ConvertToExpando<TEntity>(TEntity?) GenericExtensions.When<TObject>(TObject, bool, Func<TObject, TObject>) See Also MetadataBuilderBaseClass"
  },
  "api/Mithril.Admin.Services.MetadataBuilders.IsCheckbox.html": {
    "href": "api/Mithril.Admin.Services.MetadataBuilders.IsCheckbox.html",
    "title": "Class IsCheckbox | Mithril API Reference",
    "keywords": "Class IsCheckbox Is Checkbox Inheritance object MetadataBuilderBaseClass IsCheckbox Implements IMetadataBuilder Inherited Members MetadataBuilderBaseClass.Order object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Mithril.Admin.Services.MetadataBuilders Assembly: Mithril.Admin.dll Syntax public class IsCheckbox : MetadataBuilderBaseClass, IMetadataBuilder Methods | Improve this Doc View Source ExtractMetadata(PropertyMetadata?, IEntityMetadataService) Extracts metadata and adds it to the PropertyMetadata object. Declaration public override PropertyMetadata? ExtractMetadata(PropertyMetadata? propertyMetadata, IEntityMetadataService metadataService) Parameters Type Name Description PropertyMetadata propertyMetadata The property metadata. IEntityMetadataService metadataService The metadata service. Returns Type Description PropertyMetadata The resulting property metadata. Overrides MetadataBuilderBaseClass.ExtractMetadata(PropertyMetadata?, IEntityMetadataService) See Also MetadataBuilderBaseClass Implements IMetadataBuilder Extension Methods ExpandoObjectExtensions.ConvertToExpando<TEntity>(TEntity?) GenericExtensions.When<TObject>(TObject, bool, Func<TObject, TObject>) See Also MetadataBuilderBaseClass"
  },
  "api/Mithril.Admin.Services.MetadataBuilders.IsDefaultInput.html": {
    "href": "api/Mithril.Admin.Services.MetadataBuilders.IsDefaultInput.html",
    "title": "Class IsDefaultInput | Mithril API Reference",
    "keywords": "Class IsDefaultInput Is Default Input type Inheritance object MetadataBuilderBaseClass IsDefaultInput Implements IMetadataBuilder Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Mithril.Admin.Services.MetadataBuilders Assembly: Mithril.Admin.dll Syntax public class IsDefaultInput : MetadataBuilderBaseClass, IMetadataBuilder Properties | Improve this Doc View Source Order Gets the order. Declaration public override int Order { get; } Property Value Type Description int The order. Overrides MetadataBuilderBaseClass.Order See Also MetadataBuilderBaseClass Methods | Improve this Doc View Source ExtractMetadata(PropertyMetadata?, IEntityMetadataService) Extracts metadata and adds it to the PropertyMetadata object. Declaration public override PropertyMetadata? ExtractMetadata(PropertyMetadata? propertyMetadata, IEntityMetadataService metadataService) Parameters Type Name Description PropertyMetadata propertyMetadata The property metadata. IEntityMetadataService metadataService The metadata service. Returns Type Description PropertyMetadata The resulting property metadata. Overrides MetadataBuilderBaseClass.ExtractMetadata(PropertyMetadata?, IEntityMetadataService) See Also MetadataBuilderBaseClass Implements IMetadataBuilder Extension Methods ExpandoObjectExtensions.ConvertToExpando<TEntity>(TEntity?) GenericExtensions.When<TObject>(TObject, bool, Func<TObject, TObject>) See Also MetadataBuilderBaseClass"
  },
  "api/Mithril.Admin.Services.MetadataBuilders.IsEnumRadioList.html": {
    "href": "api/Mithril.Admin.Services.MetadataBuilders.IsEnumRadioList.html",
    "title": "Class IsEnumRadioList | Mithril API Reference",
    "keywords": "Class IsEnumRadioList Determines if this should be a radio list Inheritance object MetadataBuilderBaseClass IsEnumRadioList Implements IMetadataBuilder Inherited Members MetadataBuilderBaseClass.Order object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Mithril.Admin.Services.MetadataBuilders Assembly: Mithril.Admin.dll Syntax public class IsEnumRadioList : MetadataBuilderBaseClass, IMetadataBuilder Methods | Improve this Doc View Source ExtractMetadata(PropertyMetadata?, IEntityMetadataService) Extracts metadata and adds it to the PropertyMetadata object. Declaration public override PropertyMetadata? ExtractMetadata(PropertyMetadata? propertyMetadata, IEntityMetadataService metadataService) Parameters Type Name Description PropertyMetadata propertyMetadata The property metadata. IEntityMetadataService metadataService The metadata service. Returns Type Description PropertyMetadata The resulting property metadata. Overrides MetadataBuilderBaseClass.ExtractMetadata(PropertyMetadata?, IEntityMetadataService) See Also MetadataBuilderBaseClass Implements IMetadataBuilder Extension Methods ExpandoObjectExtensions.ConvertToExpando<TEntity>(TEntity?) GenericExtensions.When<TObject>(TObject, bool, Func<TObject, TObject>) See Also MetadataBuilderBaseClass"
  },
  "api/Mithril.Admin.Services.MetadataBuilders.IsHtml.html": {
    "href": "api/Mithril.Admin.Services.MetadataBuilders.IsHtml.html",
    "title": "Class IsHtml | Mithril API Reference",
    "keywords": "Class IsHtml Is HTML Inheritance object MetadataBuilderBaseClass IsHtml Implements IMetadataBuilder Inherited Members MetadataBuilderBaseClass.Order object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Mithril.Admin.Services.MetadataBuilders Assembly: Mithril.Admin.dll Syntax public class IsHtml : MetadataBuilderBaseClass, IMetadataBuilder Methods | Improve this Doc View Source ExtractMetadata(PropertyMetadata?, IEntityMetadataService) Extracts metadata and adds it to the PropertyMetadata object. Declaration public override PropertyMetadata? ExtractMetadata(PropertyMetadata? propertyMetadata, IEntityMetadataService metadataService) Parameters Type Name Description PropertyMetadata propertyMetadata The property metadata. IEntityMetadataService metadataService The metadata service. Returns Type Description PropertyMetadata The resulting property metadata. Overrides MetadataBuilderBaseClass.ExtractMetadata(PropertyMetadata?, IEntityMetadataService) See Also MetadataBuilderBaseClass Implements IMetadataBuilder Extension Methods ExpandoObjectExtensions.ConvertToExpando<TEntity>(TEntity?) GenericExtensions.When<TObject>(TObject, bool, Func<TObject, TObject>) See Also MetadataBuilderBaseClass"
  },
  "api/Mithril.Admin.Services.MetadataBuilders.IsList.html": {
    "href": "api/Mithril.Admin.Services.MetadataBuilders.IsList.html",
    "title": "Class IsList | Mithril API Reference",
    "keywords": "Class IsList Determines if the property is a list. Inheritance object MetadataBuilderBaseClass IsList Implements IMetadataBuilder Inherited Members MetadataBuilderBaseClass.Order object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Mithril.Admin.Services.MetadataBuilders Assembly: Mithril.Admin.dll Syntax public class IsList : MetadataBuilderBaseClass, IMetadataBuilder Methods | Improve this Doc View Source ExtractMetadata(PropertyMetadata?, IEntityMetadataService) Extracts metadata and adds it to the PropertyMetadata object. Declaration public override PropertyMetadata? ExtractMetadata(PropertyMetadata? propertyMetadata, IEntityMetadataService metadataService) Parameters Type Name Description PropertyMetadata propertyMetadata The property metadata. IEntityMetadataService metadataService The metadata service. Returns Type Description PropertyMetadata The resulting property metadata. Overrides MetadataBuilderBaseClass.ExtractMetadata(PropertyMetadata?, IEntityMetadataService) See Also MetadataBuilderBaseClass Implements IMetadataBuilder Extension Methods ExpandoObjectExtensions.ConvertToExpando<TEntity>(TEntity?) GenericExtensions.When<TObject>(TObject, bool, Func<TObject, TObject>) See Also MetadataBuilderBaseClass"
  },
  "api/Mithril.Admin.Services.MetadataBuilders.IsSelect.html": {
    "href": "api/Mithril.Admin.Services.MetadataBuilders.IsSelect.html",
    "title": "Class IsSelect | Mithril API Reference",
    "keywords": "Class IsSelect Determines if the property is a select object. Inheritance object MetadataBuilderBaseClass IsSelect Implements IMetadataBuilder Inherited Members MetadataBuilderBaseClass.Order object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Mithril.Admin.Services.MetadataBuilders Assembly: Mithril.Admin.dll Syntax public class IsSelect : MetadataBuilderBaseClass, IMetadataBuilder Methods | Improve this Doc View Source ExtractMetadata(PropertyMetadata?, IEntityMetadataService) Extracts metadata and adds it to the PropertyMetadata object. Declaration public override PropertyMetadata? ExtractMetadata(PropertyMetadata? propertyMetadata, IEntityMetadataService metadataService) Parameters Type Name Description PropertyMetadata propertyMetadata The property metadata. IEntityMetadataService metadataService The metadata service. Returns Type Description PropertyMetadata The resulting property metadata. Overrides MetadataBuilderBaseClass.ExtractMetadata(PropertyMetadata?, IEntityMetadataService) See Also MetadataBuilderBaseClass Implements IMetadataBuilder Extension Methods ExpandoObjectExtensions.ConvertToExpando<TEntity>(TEntity?) GenericExtensions.When<TObject>(TObject, bool, Func<TObject, TObject>) See Also MetadataBuilderBaseClass"
  },
  "api/Mithril.Admin.Services.MetadataBuilders.IsText.html": {
    "href": "api/Mithril.Admin.Services.MetadataBuilders.IsText.html",
    "title": "Class IsText | Mithril API Reference",
    "keywords": "Class IsText Is Text Inheritance object MetadataBuilderBaseClass IsText Implements IMetadataBuilder Inherited Members MetadataBuilderBaseClass.Order object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Mithril.Admin.Services.MetadataBuilders Assembly: Mithril.Admin.dll Syntax public class IsText : MetadataBuilderBaseClass, IMetadataBuilder Methods | Improve this Doc View Source ExtractMetadata(PropertyMetadata?, IEntityMetadataService) Extracts metadata and adds it to the PropertyMetadata object. Declaration public override PropertyMetadata? ExtractMetadata(PropertyMetadata? propertyMetadata, IEntityMetadataService metadataService) Parameters Type Name Description PropertyMetadata propertyMetadata The property metadata. IEntityMetadataService metadataService The metadata service. Returns Type Description PropertyMetadata The resulting property metadata. Overrides MetadataBuilderBaseClass.ExtractMetadata(PropertyMetadata?, IEntityMetadataService) See Also MetadataBuilderBaseClass Implements IMetadataBuilder Extension Methods ExpandoObjectExtensions.ConvertToExpando<TEntity>(TEntity?) GenericExtensions.When<TObject>(TObject, bool, Func<TObject, TObject>) See Also MetadataBuilderBaseClass"
  },
  "api/Mithril.Admin.Services.MetadataBuilders.IsTextArea.html": {
    "href": "api/Mithril.Admin.Services.MetadataBuilders.IsTextArea.html",
    "title": "Class IsTextArea | Mithril API Reference",
    "keywords": "Class IsTextArea Determines if the property is a TextArea object. Inheritance object MetadataBuilderBaseClass IsTextArea Implements IMetadataBuilder Inherited Members MetadataBuilderBaseClass.Order object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Mithril.Admin.Services.MetadataBuilders Assembly: Mithril.Admin.dll Syntax public class IsTextArea : MetadataBuilderBaseClass, IMetadataBuilder Methods | Improve this Doc View Source ExtractMetadata(PropertyMetadata?, IEntityMetadataService) Extracts metadata and adds it to the PropertyMetadata object. Declaration public override PropertyMetadata? ExtractMetadata(PropertyMetadata? propertyMetadata, IEntityMetadataService metadataService) Parameters Type Name Description PropertyMetadata propertyMetadata The property metadata. IEntityMetadataService metadataService The metadata service. Returns Type Description PropertyMetadata The resulting property metadata. Overrides MetadataBuilderBaseClass.ExtractMetadata(PropertyMetadata?, IEntityMetadataService) See Also MetadataBuilderBaseClass Implements IMetadataBuilder Extension Methods ExpandoObjectExtensions.ConvertToExpando<TEntity>(TEntity?) GenericExtensions.When<TObject>(TObject, bool, Func<TObject, TObject>) See Also MetadataBuilderBaseClass"
  },
  "api/Mithril.Admin.Services.MetadataBuilders.IsUpload.html": {
    "href": "api/Mithril.Admin.Services.MetadataBuilders.IsUpload.html",
    "title": "Class IsUpload | Mithril API Reference",
    "keywords": "Class IsUpload Determines if the property is a Upload object. Inheritance object MetadataBuilderBaseClass IsUpload Implements IMetadataBuilder Inherited Members MetadataBuilderBaseClass.Order object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Mithril.Admin.Services.MetadataBuilders Assembly: Mithril.Admin.dll Syntax public class IsUpload : MetadataBuilderBaseClass, IMetadataBuilder Methods | Improve this Doc View Source ExtractMetadata(PropertyMetadata?, IEntityMetadataService) Extracts metadata and adds it to the PropertyMetadata object. Declaration public override PropertyMetadata? ExtractMetadata(PropertyMetadata? propertyMetadata, IEntityMetadataService metadataService) Parameters Type Name Description PropertyMetadata propertyMetadata The property metadata. IEntityMetadataService metadataService The metadata service. Returns Type Description PropertyMetadata The resulting property metadata. Overrides MetadataBuilderBaseClass.ExtractMetadata(PropertyMetadata?, IEntityMetadataService) See Also MetadataBuilderBaseClass Implements IMetadataBuilder Extension Methods ExpandoObjectExtensions.ConvertToExpando<TEntity>(TEntity?) GenericExtensions.When<TObject>(TObject, bool, Func<TObject, TObject>) See Also MetadataBuilderBaseClass"
  },
  "api/Mithril.Admin.Services.MetadataBuilders.StandardValidation.html": {
    "href": "api/Mithril.Admin.Services.MetadataBuilders.StandardValidation.html",
    "title": "Class StandardValidation | Mithril API Reference",
    "keywords": "Class StandardValidation Extracts standard validation metadata Inheritance object MetadataBuilderBaseClass StandardValidation Implements IMetadataBuilder Inherited Members MetadataBuilderBaseClass.Order object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Mithril.Admin.Services.MetadataBuilders Assembly: Mithril.Admin.dll Syntax public class StandardValidation : MetadataBuilderBaseClass, IMetadataBuilder Methods | Improve this Doc View Source ExtractMetadata(PropertyMetadata?, IEntityMetadataService?) Extracts metadata and adds it to the PropertyMetadata object. Declaration public override PropertyMetadata? ExtractMetadata(PropertyMetadata? propertyMetadata, IEntityMetadataService? metadataService) Parameters Type Name Description PropertyMetadata propertyMetadata The property metadata. IEntityMetadataService metadataService The metadata service. Returns Type Description PropertyMetadata The resulting property metadata. Overrides MetadataBuilderBaseClass.ExtractMetadata(PropertyMetadata?, IEntityMetadataService) See Also IMetadataBuilder Implements IMetadataBuilder Extension Methods ExpandoObjectExtensions.ConvertToExpando<TEntity>(TEntity?) GenericExtensions.When<TObject>(TObject, bool, Func<TObject, TObject>) See Also IMetadataBuilder"
  },
  "api/Mithril.Admin.Services.MetadataBuilders.html": {
    "href": "api/Mithril.Admin.Services.MetadataBuilders.html",
    "title": "Namespace Mithril.Admin.Services.MetadataBuilders | Mithril API Reference",
    "keywords": "Namespace Mithril.Admin.Services.MetadataBuilders Classes CanList Can list HasHint Determines if the property has a hint. HasMax Determines if the property has a max value. HasMin Determines if the property has a Min value. HasPattern Determines if the property has a pattern value. HasPlaceholder Determines if the property has a placeholder value. HasQuery Determines if the property has a query value. HasReadOnly Determines if the property has a read only value. HasStep Determines if the property has a step value. HasSubtitle Determines if the property has a subtitle value. IsCheckbox Is Checkbox IsDefaultInput Is Default Input type IsEnumRadioList Determines if this should be a radio list IsHtml Is HTML IsList Determines if the property is a list. IsSelect Determines if the property is a select object. IsText Is Text IsTextArea Determines if the property is a TextArea object. IsUpload Determines if the property is a Upload object. StandardValidation Extracts standard validation metadata"
  },
  "api/Mithril.Admin.Services.html": {
    "href": "api/Mithril.Admin.Services.html",
    "title": "Namespace Mithril.Admin.Services | Mithril API Reference",
    "keywords": "Namespace Mithril.Admin.Services Classes EditorService Editor service EntityMetadataService Entity metadata service"
  },
  "api/Mithril.Admin.html": {
    "href": "api/Mithril.Admin.html",
    "title": "Namespace Mithril.Admin | Mithril API Reference",
    "keywords": "Namespace Mithril.Admin Classes AdminModule Admin module"
  },
  "api/Mithril.Apm.Abstractions.BaseClasses.MetaDataCollectorBaseClass-1.html": {
    "href": "api/Mithril.Apm.Abstractions.BaseClasses.MetaDataCollectorBaseClass-1.html",
    "title": "Class MetaDataCollectorBaseClass<TSource> | Mithril API Reference",
    "keywords": "Class MetaDataCollectorBaseClass<TSource> TraceData source base class Inheritance object MetaDataCollectorBaseClass<TSource> DefaultMetaDataCollector Implements IMetaDataCollector IObservable<MetaDataEntry> IDisposable Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Mithril.Apm.Abstractions.BaseClasses Assembly: Mithril.Apm.Abstractions.dll Syntax public abstract class MetaDataCollectorBaseClass<TSource> : IMetaDataCollector, IObservable<MetaDataEntry>, IDisposable where TSource : MetaDataCollectorBaseClass<TSource> Type Parameters Name Description TSource The type of the source. Constructors | Improve this Doc View Source MetaDataCollectorBaseClass() Initializes a new instance of the MetaDataCollectorBaseClass<TSource> class. Declaration protected MetaDataCollectorBaseClass() See Also IMetaDataCollector Properties | Improve this Doc View Source Name Gets the name. Declaration public virtual string Name { get; } Property Value Type Description string The name. See Also IMetaDataCollector Methods | Improve this Doc View Source AddEntry(string, params KeyValuePair<string, string>[]) Adds an entry to the collector. Declaration public IMetaDataCollector AddEntry(string traceId, params KeyValuePair<string, string>[] entries) Parameters Type Name Description string traceId The trace identifier. KeyValuePair<string, string>[] entries The entries. Returns Type Description IMetaDataCollector This. See Also IMetaDataCollector | Improve this Doc View Source Dispose() Releases unmanaged and - optionally - managed resources. Declaration public void Dispose() See Also IMetaDataCollector | Improve this Doc View Source Dispose(bool) Releases unmanaged and - optionally - managed resources. Declaration protected virtual void Dispose(bool disposing) Parameters Type Name Description bool disposing true to release both managed and unmanaged resources; false to release only unmanaged resources. See Also IMetaDataCollector | Improve this Doc View Source ~MetaDataCollectorBaseClass() Finalizes an instance of the MetaDataCollectorBaseClass<TSource> class. Declaration protected ~MetaDataCollectorBaseClass() See Also IMetaDataCollector | Improve this Doc View Source Subscribe(IObserver<MetaDataEntry>) Subscribes the specified observer. Declaration public IDisposable Subscribe(IObserver<MetaDataEntry> observer) Parameters Type Name Description IObserver<MetaDataEntry> observer The observer. Returns Type Description IDisposable See Also IMetaDataCollector Implements IMetaDataCollector IObservable<T> IDisposable Extension Methods ExpandoObjectExtensions.ConvertToExpando<TEntity>(TEntity?) GenericExtensions.When<TObject>(TObject, bool, Func<TObject, TObject>) See Also IMetaDataCollector"
  },
  "api/Mithril.Apm.Abstractions.BaseClasses.MetricsCollectorBaseClass-1.html": {
    "href": "api/Mithril.Apm.Abstractions.BaseClasses.MetricsCollectorBaseClass-1.html",
    "title": "Class MetricsCollectorBaseClass<TSource> | Mithril API Reference",
    "keywords": "Class MetricsCollectorBaseClass<TSource> Metrics source base class Inheritance object MetricsCollectorBaseClass<TSource> DefaultMetricsCollector Implements IMetricsCollector IObservable<MetricsEntry> IDisposable Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Mithril.Apm.Abstractions.BaseClasses Assembly: Mithril.Apm.Abstractions.dll Syntax public abstract class MetricsCollectorBaseClass<TSource> : IMetricsCollector, IObservable<MetricsEntry>, IDisposable where TSource : MetricsCollectorBaseClass<TSource> Type Parameters Name Description TSource The type of the source. Constructors | Improve this Doc View Source MetricsCollectorBaseClass() Initializes a new instance of the MetricsCollectorBaseClass<TSource> class. Declaration protected MetricsCollectorBaseClass() See Also IMetricsCollector Properties | Improve this Doc View Source Name Gets the name. Declaration public virtual string Name { get; } Property Value Type Description string The name. See Also IMetricsCollector Methods | Improve this Doc View Source AddEntry(string, string, params KeyValuePair<string, decimal>[]) Adds the entry. Declaration public IMetricsCollector AddEntry(string traceId, string metaData, params KeyValuePair<string, decimal>[] entries) Parameters Type Name Description string traceId The trace identifier. string metaData The meta data. KeyValuePair<string, decimal>[] entries The entries. Returns Type Description IMetricsCollector This. See Also IMetricsCollector | Improve this Doc View Source Dispose() Releases unmanaged and - optionally - managed resources. Declaration public void Dispose() See Also IMetricsCollector | Improve this Doc View Source Dispose(bool) Releases unmanaged and - optionally - managed resources. Declaration protected virtual void Dispose(bool disposing) Parameters Type Name Description bool disposing true to release both managed and unmanaged resources; false to release only unmanaged resources. See Also IMetricsCollector | Improve this Doc View Source ~MetricsCollectorBaseClass() Finalizes an instance of the MetricsCollectorBaseClass<TSource> class. Declaration protected ~MetricsCollectorBaseClass() See Also IMetricsCollector | Improve this Doc View Source Subscribe(IObserver<MetricsEntry>) Subscribes the specified observer. Declaration public IDisposable Subscribe(IObserver<MetricsEntry> observer) Parameters Type Name Description IObserver<MetricsEntry> observer The observer. Returns Type Description IDisposable See Also IMetricsCollector Implements IMetricsCollector IObservable<T> IDisposable Extension Methods ExpandoObjectExtensions.ConvertToExpando<TEntity>(TEntity?) GenericExtensions.When<TObject>(TObject, bool, Func<TObject, TObject>) See Also IMetricsCollector"
  },
  "api/Mithril.Apm.Abstractions.BaseClasses.html": {
    "href": "api/Mithril.Apm.Abstractions.BaseClasses.html",
    "title": "Namespace Mithril.Apm.Abstractions.BaseClasses | Mithril API Reference",
    "keywords": "Namespace Mithril.Apm.Abstractions.BaseClasses Classes MetaDataCollectorBaseClass<TSource> TraceData source base class MetricsCollectorBaseClass<TSource> Metrics source base class"
  },
  "api/Mithril.Apm.Abstractions.Configuration.APMOptions.html": {
    "href": "api/Mithril.Apm.Abstractions.Configuration.APMOptions.html",
    "title": "Class APMOptions | Mithril API Reference",
    "keywords": "Class APMOptions APM Options Inheritance object APMOptions Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Mithril.Apm.Abstractions.Configuration Assembly: Mithril.Apm.Abstractions.dll Syntax public class APMOptions Properties | Improve this Doc View Source BatchingFrequency Gets or sets the batching frequency (in seconds). Declaration public int? BatchingFrequency { get; set; } Property Value Type Description int? The batching frequency (in seconds). | Improve this Doc View Source MaximumAge Gets or sets the maximum age (in hours). Declaration public int? MaximumAge { get; set; } Property Value Type Description int? The maximum age (in hours). Extension Methods ExpandoObjectExtensions.ConvertToExpando<TEntity>(TEntity?) GenericExtensions.When<TObject>(TObject, bool, Func<TObject, TObject>)"
  },
  "api/Mithril.Apm.Abstractions.Configuration.html": {
    "href": "api/Mithril.Apm.Abstractions.Configuration.html",
    "title": "Namespace Mithril.Apm.Abstractions.Configuration | Mithril API Reference",
    "keywords": "Namespace Mithril.Apm.Abstractions.Configuration Classes APMOptions APM Options"
  },
  "api/Mithril.Apm.Abstractions.DefaultMetaDataCollector.html": {
    "href": "api/Mithril.Apm.Abstractions.DefaultMetaDataCollector.html",
    "title": "Class DefaultMetaDataCollector | Mithril API Reference",
    "keywords": "Class DefaultMetaDataCollector Default meta data collector Inheritance object MetaDataCollectorBaseClass<DefaultMetaDataCollector> DefaultMetaDataCollector Implements IMetaDataCollector IObservable<MetaDataEntry> IDisposable Inherited Members MetaDataCollectorBaseClass<DefaultMetaDataCollector>.Name MetaDataCollectorBaseClass<DefaultMetaDataCollector>.AddEntry(string, params KeyValuePair<string, string>[]) MetaDataCollectorBaseClass<DefaultMetaDataCollector>.Dispose() MetaDataCollectorBaseClass<DefaultMetaDataCollector>.Subscribe(IObserver<MetaDataEntry>) MetaDataCollectorBaseClass<DefaultMetaDataCollector>.Dispose(bool) object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Mithril.Apm.Abstractions Assembly: Mithril.Apm.Abstractions.dll Syntax public class DefaultMetaDataCollector : MetaDataCollectorBaseClass<DefaultMetaDataCollector>, IMetaDataCollector, IObservable<MetaDataEntry>, IDisposable Implements IMetaDataCollector IObservable<T> IDisposable Extension Methods ExpandoObjectExtensions.ConvertToExpando<TEntity>(TEntity?) GenericExtensions.When<TObject>(TObject, bool, Func<TObject, TObject>) See Also MetaDataCollectorBaseClass<TSource>"
  },
  "api/Mithril.Apm.Abstractions.DefaultMetricsCollector.html": {
    "href": "api/Mithril.Apm.Abstractions.DefaultMetricsCollector.html",
    "title": "Class DefaultMetricsCollector | Mithril API Reference",
    "keywords": "Class DefaultMetricsCollector Default Metrics Collector Inheritance object MetricsCollectorBaseClass<DefaultMetricsCollector> DefaultMetricsCollector Implements IMetricsCollector IObservable<MetricsEntry> IDisposable Inherited Members MetricsCollectorBaseClass<DefaultMetricsCollector>.Name MetricsCollectorBaseClass<DefaultMetricsCollector>.AddEntry(string, string, params KeyValuePair<string, decimal>[]) MetricsCollectorBaseClass<DefaultMetricsCollector>.Dispose() MetricsCollectorBaseClass<DefaultMetricsCollector>.Subscribe(IObserver<MetricsEntry>) MetricsCollectorBaseClass<DefaultMetricsCollector>.Dispose(bool) object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Mithril.Apm.Abstractions Assembly: Mithril.Apm.Abstractions.dll Syntax public class DefaultMetricsCollector : MetricsCollectorBaseClass<DefaultMetricsCollector>, IMetricsCollector, IObservable<MetricsEntry>, IDisposable Implements IMetricsCollector IObservable<T> IDisposable Extension Methods ExpandoObjectExtensions.ConvertToExpando<TEntity>(TEntity?) GenericExtensions.When<TObject>(TObject, bool, Func<TObject, TObject>) See Also MetricsCollectorBaseClass<TSource>"
  },
  "api/Mithril.Apm.Abstractions.Features.APMFeature.html": {
    "href": "api/Mithril.Apm.Abstractions.Features.APMFeature.html",
    "title": "Class APMFeature | Mithril API Reference",
    "keywords": "Class APMFeature APM Feature Inheritance object FeatureBaseClass<APMFeature> APMFeature Implements IFeature IEquatable<APMFeature> Inherited Members FeatureBaseClass<APMFeature>.Instance FeatureBaseClass<APMFeature>.Equals(object) FeatureBaseClass<APMFeature>.Equals(APMFeature) FeatureBaseClass<APMFeature>.GetHashCode() object.Equals(object, object) object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Mithril.Apm.Abstractions.Features Assembly: Mithril.Apm.Abstractions.dll Syntax public class APMFeature : FeatureBaseClass<APMFeature>, IFeature, IEquatable<APMFeature> Properties | Improve this Doc View Source Category The group (by category) that the feature belongs. If not provided, defaults to 'Uncategorized'. Declaration public override string Category { get; } Property Value Type Description string The category. Overrides FeatureBaseClass<APMFeature>.Category See Also FeatureBaseClass<TFeature> | Improve this Doc View Source Description Gets or sets the description. Declaration public override string Description { get; } Property Value Type Description string The description. Overrides FeatureBaseClass<APMFeature>.Description See Also FeatureBaseClass<TFeature> | Improve this Doc View Source Name Human-readable name of the feature. If not provided, the identifier will be used. Declaration public override string Name { get; } Property Value Type Description string The name. Overrides FeatureBaseClass<APMFeature>.Name See Also FeatureBaseClass<TFeature> Implements IFeature IEquatable<T> Extension Methods ExpandoObjectExtensions.ConvertToExpando<TEntity>(TEntity?) GenericExtensions.When<TObject>(TObject, bool, Func<TObject, TObject>) See Also FeatureBaseClass<TFeature>"
  },
  "api/Mithril.Apm.Abstractions.Features.html": {
    "href": "api/Mithril.Apm.Abstractions.Features.html",
    "title": "Namespace Mithril.Apm.Abstractions.Features | Mithril API Reference",
    "keywords": "Namespace Mithril.Apm.Abstractions.Features Classes APMFeature APM Feature"
  },
  "api/Mithril.Apm.Abstractions.Interfaces.IEventListener.html": {
    "href": "api/Mithril.Apm.Abstractions.Interfaces.IEventListener.html",
    "title": "Interface IEventListener | Mithril API Reference",
    "keywords": "Interface IEventListener Event listener interface Namespace: Mithril.Apm.Abstractions.Interfaces Assembly: Mithril.Apm.Abstractions.dll Syntax public interface IEventListener Methods | Improve this Doc View Source Subscribe(IMetricsCollectorService) Subscribes the specified observer. Declaration IEventListener Subscribe(IMetricsCollectorService observer) Parameters Type Name Description IMetricsCollectorService observer The observer. Returns Type Description IEventListener This. Extension Methods ExpandoObjectExtensions.ConvertToExpando<TEntity>(TEntity?) GenericExtensions.When<TObject>(TObject, bool, Func<TObject, TObject>)"
  },
  "api/Mithril.Apm.Abstractions.Interfaces.IMetaDataCollector.html": {
    "href": "api/Mithril.Apm.Abstractions.Interfaces.IMetaDataCollector.html",
    "title": "Interface IMetaDataCollector | Mithril API Reference",
    "keywords": "Interface IMetaDataCollector Trace data collector Inherited Members IObservable<MetaDataEntry>.Subscribe(IObserver<MetaDataEntry>) IDisposable.Dispose() Namespace: Mithril.Apm.Abstractions.Interfaces Assembly: Mithril.Apm.Abstractions.dll Syntax public interface IMetaDataCollector : IObservable<MetaDataEntry>, IDisposable Properties | Improve this Doc View Source Name Gets the name. Declaration string Name { get; } Property Value Type Description string The name. Methods | Improve this Doc View Source AddEntry(string, params KeyValuePair<string, string>[]) Adds an entry to the collector. Declaration IMetaDataCollector AddEntry(string traceId, params KeyValuePair<string, string>[] entries) Parameters Type Name Description string traceId The trace identifier. KeyValuePair<string, string>[] entries The entries. Returns Type Description IMetaDataCollector This. Extension Methods ExpandoObjectExtensions.ConvertToExpando<TEntity>(TEntity?) GenericExtensions.When<TObject>(TObject, bool, Func<TObject, TObject>)"
  },
  "api/Mithril.Apm.Abstractions.Interfaces.IMetricsCollector.html": {
    "href": "api/Mithril.Apm.Abstractions.Interfaces.IMetricsCollector.html",
    "title": "Interface IMetricsCollector | Mithril API Reference",
    "keywords": "Interface IMetricsCollector Metrics source interface Inherited Members IObservable<MetricsEntry>.Subscribe(IObserver<MetricsEntry>) IDisposable.Dispose() Namespace: Mithril.Apm.Abstractions.Interfaces Assembly: Mithril.Apm.Abstractions.dll Syntax public interface IMetricsCollector : IObservable<MetricsEntry>, IDisposable Properties | Improve this Doc View Source Name Gets the name. Declaration string Name { get; } Property Value Type Description string The name. Methods | Improve this Doc View Source AddEntry(string, string, params KeyValuePair<string, decimal>[]) Adds an entry to the collector. Declaration IMetricsCollector AddEntry(string traceId, string metaData, params KeyValuePair<string, decimal>[] entries) Parameters Type Name Description string traceId The trace identifier. string metaData The meta data. KeyValuePair<string, decimal>[] entries The entries. Returns Type Description IMetricsCollector This. Extension Methods ExpandoObjectExtensions.ConvertToExpando<TEntity>(TEntity?) GenericExtensions.When<TObject>(TObject, bool, Func<TObject, TObject>)"
  },
  "api/Mithril.Apm.Abstractions.Interfaces.IMetricsReporter.html": {
    "href": "api/Mithril.Apm.Abstractions.Interfaces.IMetricsReporter.html",
    "title": "Interface IMetricsReporter | Mithril API Reference",
    "keywords": "Interface IMetricsReporter Metrics reporter interface Namespace: Mithril.Apm.Abstractions.Interfaces Assembly: Mithril.Apm.Abstractions.dll Syntax public interface IMetricsReporter Methods | Improve this Doc View Source Batch(Dictionary<string, TraceInformation>) Batches the specified data for reporting. Declaration void Batch(Dictionary<string, TraceInformation> data) Parameters Type Name Description Dictionary<string, TraceInformation> data The data. Extension Methods ExpandoObjectExtensions.ConvertToExpando<TEntity>(TEntity?) GenericExtensions.When<TObject>(TObject, bool, Func<TObject, TObject>)"
  },
  "api/Mithril.Apm.Abstractions.Interfaces.html": {
    "href": "api/Mithril.Apm.Abstractions.Interfaces.html",
    "title": "Namespace Mithril.Apm.Abstractions.Interfaces | Mithril API Reference",
    "keywords": "Namespace Mithril.Apm.Abstractions.Interfaces Interfaces IEventListener Event listener interface IMetaDataCollector Trace data collector IMetricsCollector Metrics source interface IMetricsReporter Metrics reporter interface"
  },
  "api/Mithril.Apm.Abstractions.MetaDataEntry.html": {
    "href": "api/Mithril.Apm.Abstractions.MetaDataEntry.html",
    "title": "Struct MetaDataEntry | Mithril API Reference",
    "keywords": "Struct MetaDataEntry Trace entry Implements IEquatable<MetaDataEntry> Inherited Members ValueType.Equals(object) ValueType.GetHashCode() ValueType.ToString() object.Equals(object, object) object.GetType() object.ReferenceEquals(object, object) Namespace: Mithril.Apm.Abstractions Assembly: Mithril.Apm.Abstractions.dll Syntax public readonly record struct MetaDataEntry : IEquatable<MetaDataEntry> Constructors | Improve this Doc View Source MetaDataEntry(IMetaDataCollector?, string, KeyValuePair<string, string>[]) Trace entry Declaration public MetaDataEntry(IMetaDataCollector? Source, string TraceIdentifier, KeyValuePair<string, string>[] Data) Parameters Type Name Description IMetaDataCollector Source Source this came from string TraceIdentifier The trace identifier. KeyValuePair<string, string>[] Data Data to save. See Also IEquatable<T> Properties | Improve this Doc View Source Data Data to save. Declaration public KeyValuePair<string, string>[] Data { get; init; } Property Value Type Description KeyValuePair<string, string>[] See Also IEquatable<T> | Improve this Doc View Source Source Source this came from Declaration public IMetaDataCollector? Source { get; init; } Property Value Type Description IMetaDataCollector See Also IEquatable<T> | Improve this Doc View Source TraceIdentifier The trace identifier. Declaration public string TraceIdentifier { get; init; } Property Value Type Description string See Also IEquatable<T> Implements IEquatable<T> Extension Methods ExpandoObjectExtensions.ConvertToExpando<TEntity>(TEntity?) GenericExtensions.When<TObject>(TObject, bool, Func<TObject, TObject>) See Also IEquatable<T>"
  },
  "api/Mithril.Apm.Abstractions.MetricsEntry.html": {
    "href": "api/Mithril.Apm.Abstractions.MetricsEntry.html",
    "title": "Struct MetricsEntry | Mithril API Reference",
    "keywords": "Struct MetricsEntry Metrics Entry Implements IEquatable<MetricsEntry> Inherited Members ValueType.Equals(object) ValueType.GetHashCode() ValueType.ToString() object.Equals(object, object) object.GetType() object.ReferenceEquals(object, object) Namespace: Mithril.Apm.Abstractions Assembly: Mithril.Apm.Abstractions.dll Syntax public readonly record struct MetricsEntry : IEquatable<MetricsEntry> Constructors | Improve this Doc View Source MetricsEntry(IMetricsCollector?, string, string, KeyValuePair<string, decimal>[]) Metrics Entry Declaration public MetricsEntry(IMetricsCollector? Source, string TraceIdentifier, string MetaData, KeyValuePair<string, decimal>[] Data) Parameters Type Name Description IMetricsCollector Source string TraceIdentifier string MetaData KeyValuePair<string, decimal>[] Data Properties | Improve this Doc View Source Data Declaration public KeyValuePair<string, decimal>[] Data { get; init; } Property Value Type Description KeyValuePair<string, decimal>[] | Improve this Doc View Source MetaData Declaration public string MetaData { get; init; } Property Value Type Description string | Improve this Doc View Source Source Declaration public IMetricsCollector? Source { get; init; } Property Value Type Description IMetricsCollector | Improve this Doc View Source TraceIdentifier Declaration public string TraceIdentifier { get; init; } Property Value Type Description string Implements IEquatable<T> Extension Methods ExpandoObjectExtensions.ConvertToExpando<TEntity>(TEntity?) GenericExtensions.When<TObject>(TObject, bool, Func<TObject, TObject>)"
  },
  "api/Mithril.Apm.Abstractions.Services.IMetricsCollectorService.html": {
    "href": "api/Mithril.Apm.Abstractions.Services.IMetricsCollectorService.html",
    "title": "Interface IMetricsCollectorService | Mithril API Reference",
    "keywords": "Interface IMetricsCollectorService Metrics collector service Inherited Members IObserver<MetricsEntry>.OnCompleted() IObserver<MetricsEntry>.OnError(Exception) IObserver<MetricsEntry>.OnNext(MetricsEntry) IObserver<MetaDataEntry>.OnNext(MetaDataEntry) IDisposable.Dispose() Namespace: Mithril.Apm.Abstractions.Services Assembly: Mithril.Apm.Abstractions.dll Syntax public interface IMetricsCollectorService : IObserver<MetricsEntry>, IObserver<MetaDataEntry>, IDisposable Methods | Improve this Doc View Source BatchCollectedMetrics() Reports the collected metrics to the registered reporters. Declaration IMetricsCollectorService BatchCollectedMetrics() Returns Type Description IMetricsCollectorService This. See Also IObserver<T> IDisposable | Improve this Doc View Source GetMetaDataCollector(string) Gets the trace data collector. Declaration IMetaDataCollector? GetMetaDataCollector(string name) Parameters Type Name Description string name The name. Returns Type Description IMetaDataCollector The trace data collector specified. See Also IObserver<T> IDisposable | Improve this Doc View Source GetMetricsCollector(string) Gets the source specified. Declaration IMetricsCollector? GetMetricsCollector(string name) Parameters Type Name Description string name The name. Returns Type Description IMetricsCollector Metrics source object specified. See Also IObserver<T> IDisposable Extension Methods ExpandoObjectExtensions.ConvertToExpando<TEntity>(TEntity?) GenericExtensions.When<TObject>(TObject, bool, Func<TObject, TObject>) See Also IObserver<T> IDisposable"
  },
  "api/Mithril.Apm.Abstractions.Services.html": {
    "href": "api/Mithril.Apm.Abstractions.Services.html",
    "title": "Namespace Mithril.Apm.Abstractions.Services | Mithril API Reference",
    "keywords": "Namespace Mithril.Apm.Abstractions.Services Interfaces IMetricsCollectorService Metrics collector service"
  },
  "api/Mithril.Apm.Abstractions.TraceInformation.html": {
    "href": "api/Mithril.Apm.Abstractions.TraceInformation.html",
    "title": "Class TraceInformation | Mithril API Reference",
    "keywords": "Class TraceInformation Trace information Inheritance object TraceInformation Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Mithril.Apm.Abstractions Assembly: Mithril.Apm.Abstractions.dll Syntax public class TraceInformation Properties | Improve this Doc View Source Created Gets or sets the when ran. Declaration public DateTime Created { get; } Property Value Type Description DateTime The when ran. | Improve this Doc View Source MetaData Gets the data. Declaration public List<MetaDataEntry> MetaData { get; } Property Value Type Description List<MetaDataEntry> The data. | Improve this Doc View Source Metrics Gets the metrics. Declaration public List<MetricsEntry> Metrics { get; } Property Value Type Description List<MetricsEntry> The metrics. | Improve this Doc View Source TraceIdentifier Gets or sets the trace identifier. Declaration public string? TraceIdentifier { get; set; } Property Value Type Description string The trace identifier. Extension Methods ExpandoObjectExtensions.ConvertToExpando<TEntity>(TEntity?) GenericExtensions.When<TObject>(TObject, bool, Func<TObject, TObject>)"
  },
  "api/Mithril.Apm.Abstractions.html": {
    "href": "api/Mithril.Apm.Abstractions.html",
    "title": "Namespace Mithril.Apm.Abstractions | Mithril API Reference",
    "keywords": "Namespace Mithril.Apm.Abstractions Classes DefaultMetaDataCollector Default meta data collector DefaultMetricsCollector Default Metrics Collector TraceInformation Trace information Structs MetaDataEntry Trace entry MetricsEntry Metrics Entry"
  },
  "api/Mithril.Apm.Default.BackgroundTasks.MetricsReporterBackgroundTask.html": {
    "href": "api/Mithril.Apm.Default.BackgroundTasks.MetricsReporterBackgroundTask.html",
    "title": "Class MetricsReporterBackgroundTask | Mithril API Reference",
    "keywords": "Class MetricsReporterBackgroundTask Metrics reporter background task Inheritance object MetricsReporterBackgroundTask Implements IScheduledTask IBackgroundTask Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Mithril.Apm.Default.BackgroundTasks Assembly: Mithril.Apm.Default.dll Syntax public class MetricsReporterBackgroundTask : IScheduledTask, IBackgroundTask Constructors | Improve this Doc View Source MetricsReporterBackgroundTask(ILogger<MetricsReporterBackgroundTask>?, IMetricsCollectorService?, IDataService?, IOptions<APMOptions>?) Initializes a new instance of the MetricsReporterBackgroundTask class. Declaration public MetricsReporterBackgroundTask(ILogger<MetricsReporterBackgroundTask>? logger, IMetricsCollectorService? metricsCollectorService, IDataService? dataService, IOptions<APMOptions>? options) Parameters Type Name Description ILogger<MetricsReporterBackgroundTask> logger The logger. IMetricsCollectorService metricsCollectorService The metrics collector service. IDataService dataService The data service. IOptions<APMOptions> options The options. See Also IScheduledTask Properties | Improve this Doc View Source Frequencies Gets the frequencies that the task is run at. Declaration public IFrequency[] Frequencies { get; } Property Value Type Description IFrequency[] The frequencies the task is run at. See Also IScheduledTask | Improve this Doc View Source LastRunTime Gets the last run time. Declaration public DateTime LastRunTime { get; set; } Property Value Type Description DateTime The last run time. See Also IScheduledTask | Improve this Doc View Source Name Gets the name. Declaration public string Name { get; } Property Value Type Description string The name. See Also IScheduledTask Methods | Improve this Doc View Source ExecuteAsync() Executes this instance. Declaration public Task ExecuteAsync() Returns Type Description Task See Also IScheduledTask Implements IScheduledTask IBackgroundTask Extension Methods ExpandoObjectExtensions.ConvertToExpando<TEntity>(TEntity?) GenericExtensions.When<TObject>(TObject, bool, Func<TObject, TObject>) See Also IScheduledTask"
  },
  "api/Mithril.Apm.Default.BackgroundTasks.html": {
    "href": "api/Mithril.Apm.Default.BackgroundTasks.html",
    "title": "Namespace Mithril.Apm.Default.BackgroundTasks | Mithril API Reference",
    "keywords": "Namespace Mithril.Apm.Default.BackgroundTasks Classes MetricsReporterBackgroundTask Metrics reporter background task"
  },
  "api/Mithril.Apm.Default.DefaultApmModule.html": {
    "href": "api/Mithril.Apm.Default.DefaultApmModule.html",
    "title": "Class DefaultApmModule | Mithril API Reference",
    "keywords": "Class DefaultApmModule Default APM Module Inheritance object ModuleBaseClass<DefaultApmModule> DefaultApmModule Implements IEquatable<DefaultApmModule> IModule Inherited Members ModuleBaseClass<DefaultApmModule>.Category ModuleBaseClass<DefaultApmModule>.ContentPath ModuleBaseClass<DefaultApmModule>.ID ModuleBaseClass<DefaultApmModule>.LastModified ModuleBaseClass<DefaultApmModule>.Name ModuleBaseClass<DefaultApmModule>.Order ModuleBaseClass<DefaultApmModule>.Tags ModuleBaseClass<DefaultApmModule>.Version ModuleBaseClass<DefaultApmModule>.ConfigureHostSettings(IHostBuilder, IConfiguration, IHostEnvironment) ModuleBaseClass<DefaultApmModule>.ConfigureLoggingSettings(ILoggingBuilder, IConfiguration, IHostEnvironment) ModuleBaseClass<DefaultApmModule>.ConfigureMVC(IMvcBuilder, IConfiguration, IHostEnvironment) ModuleBaseClass<DefaultApmModule>.ConfigureRoutes(IEndpointRouteBuilder, IConfiguration, IHostEnvironment) ModuleBaseClass<DefaultApmModule>.ConfigureWebHostSettings(IWebHostBuilder, IConfiguration, IHostEnvironment) ModuleBaseClass<DefaultApmModule>.Equals(object) ModuleBaseClass<DefaultApmModule>.Equals(DefaultApmModule) ModuleBaseClass<DefaultApmModule>.GetHashCode() ModuleBaseClass<DefaultApmModule>.OnStarted() ModuleBaseClass<DefaultApmModule>.OnStopped() ModuleBaseClass<DefaultApmModule>.OnStopping() object.Equals(object, object) object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Mithril.Apm.Default Assembly: Mithril.Apm.Default.dll Syntax public class DefaultApmModule : ModuleBaseClass<DefaultApmModule>, IEquatable<DefaultApmModule>, IModule Properties | Improve this Doc View Source Features Gets or sets the features. Declaration public override IFeature[] Features { get; protected set; } Property Value Type Description IFeature[] The features. Overrides ModuleBaseClass<DefaultApmModule>.Features See Also ModuleBaseClass<TModule> Methods | Improve this Doc View Source ConfigureApplication(IApplicationBuilder?, IConfiguration?, IHostEnvironment?) Configures the application. Declaration public override IApplicationBuilder? ConfigureApplication(IApplicationBuilder? app, IConfiguration? configuration, IHostEnvironment? environment) Parameters Type Name Description IApplicationBuilder app The application. IConfiguration configuration The configuration. IHostEnvironment environment The environment. Returns Type Description IApplicationBuilder Application builder Overrides ModuleBaseClass<DefaultApmModule>.ConfigureApplication(IApplicationBuilder, IConfiguration, IHostEnvironment) See Also ModuleBaseClass<TModule> | Improve this Doc View Source ConfigureServices(IServiceCollection?, IConfiguration?, IHostEnvironment?) Configures the services for the module. Declaration public override IServiceCollection? ConfigureServices(IServiceCollection? services, IConfiguration? configuration, IHostEnvironment? environment) Parameters Type Name Description IServiceCollection services The services collection. IConfiguration configuration The configuration. IHostEnvironment environment The environment. Returns Type Description IServiceCollection Services Overrides ModuleBaseClass<DefaultApmModule>.ConfigureServices(IServiceCollection, IConfiguration, IHostEnvironment) See Also ModuleBaseClass<TModule> | Improve this Doc View Source InitializeDataAsync(IDataService?, IServiceProvider?) Initializes the data. Declaration public override Task InitializeDataAsync(IDataService? dataService, IServiceProvider? services) Parameters Type Name Description IDataService dataService The data service. IServiceProvider services The services for the application. Returns Type Description Task The async task. Overrides ModuleBaseClass<DefaultApmModule>.InitializeDataAsync(IDataService, IServiceProvider) See Also ModuleBaseClass<TModule> Implements IEquatable<T> IModule Extension Methods ExpandoObjectExtensions.ConvertToExpando<TEntity>(TEntity?) GenericExtensions.When<TObject>(TObject, bool, Func<TObject, TObject>) See Also ModuleBaseClass<TModule>"
  },
  "api/Mithril.Apm.Default.Middleware.ApmMiddleware.html": {
    "href": "api/Mithril.Apm.Default.Middleware.ApmMiddleware.html",
    "title": "Class ApmMiddleware | Mithril API Reference",
    "keywords": "Class ApmMiddleware APM collection middleware Inheritance object ApmMiddleware Implements IMiddleware Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Mithril.Apm.Default.Middleware Assembly: Mithril.Apm.Default.dll Syntax public class ApmMiddleware : IMiddleware Constructors | Improve this Doc View Source ApmMiddleware(IMetricsCollectorService?) Initializes a new instance of the ApmMiddleware class. Declaration public ApmMiddleware(IMetricsCollectorService? metricsCollectorService) Parameters Type Name Description IMetricsCollectorService metricsCollectorService The metrics collector service. See Also IMiddleware Methods | Improve this Doc View Source InvokeAsync(HttpContext, RequestDelegate) Request handling method. Declaration public Task InvokeAsync(HttpContext context, RequestDelegate next) Parameters Type Name Description HttpContext context The HttpContext for the current request. RequestDelegate next The delegate representing the remaining middleware in the request pipeline. Returns Type Description Task A Task that represents the execution of this middleware. See Also IMiddleware Implements IMiddleware Extension Methods ExpandoObjectExtensions.ConvertToExpando<TEntity>(TEntity?) GenericExtensions.When<TObject>(TObject, bool, Func<TObject, TObject>) See Also IMiddleware"
  },
  "api/Mithril.Apm.Default.Middleware.html": {
    "href": "api/Mithril.Apm.Default.Middleware.html",
    "title": "Namespace Mithril.Apm.Default.Middleware | Mithril API Reference",
    "keywords": "Namespace Mithril.Apm.Default.Middleware Classes ApmMiddleware APM collection middleware"
  },
  "api/Mithril.Apm.Default.Models.Mappings.RequestMetaDataMapping.html": {
    "href": "api/Mithril.Apm.Default.Models.Mappings.RequestMetaDataMapping.html",
    "title": "Class RequestMetaDataMapping | Mithril API Reference",
    "keywords": "Class RequestMetaDataMapping Request MetaData mapping Inheritance object MappingBaseClass<RequestMetaData, DefaultDatabase> RequestMetaDataMapping Implements IMapping<RequestMetaData> IMapping Inherited Members MappingBaseClass<RequestMetaData, DefaultDatabase>.AddAutoKey() MappingBaseClass<RequestMetaData, DefaultDatabase>.ContainsProperty(string) MappingBaseClass<RequestMetaData, DefaultDatabase>.Copy(IMapping) MappingBaseClass<RequestMetaData, DefaultDatabase>.CopyProperty(IIDProperty) MappingBaseClass<RequestMetaData, DefaultDatabase>.CopyProperty(IProperty) MappingBaseClass<RequestMetaData, DefaultDatabase>.CopyProperty(IMapProperty) MappingBaseClass<RequestMetaData, DefaultDatabase>.CopyProperty(IManyToOneProperty) MappingBaseClass<RequestMetaData, DefaultDatabase>.CopyProperty(IManyToManyProperty) MappingBaseClass<RequestMetaData, DefaultDatabase>.Equals(object) MappingBaseClass<RequestMetaData, DefaultDatabase>.GetColumnName(string) MappingBaseClass<RequestMetaData, DefaultDatabase>.GetHashCode() MappingBaseClass<RequestMetaData, DefaultDatabase>.ID<TDataType>(Expression<Func<RequestMetaData, TDataType>>) MappingBaseClass<RequestMetaData, DefaultDatabase>.ManyToMany<TDataType>(Expression<Func<RequestMetaData, IList<TDataType>>>) MappingBaseClass<RequestMetaData, DefaultDatabase>.ManyToOne<TDataType>(Expression<Func<RequestMetaData, IList<TDataType>>>) MappingBaseClass<RequestMetaData, DefaultDatabase>.ManyToOne<TDataType>(Expression<Func<RequestMetaData, TDataType>>) MappingBaseClass<RequestMetaData, DefaultDatabase>.Map<TDataType>(Expression<Func<RequestMetaData, TDataType>>) MappingBaseClass<RequestMetaData, DefaultDatabase>.Reduce(ILogger) MappingBaseClass<RequestMetaData, DefaultDatabase>.Reduce(IMapping, ILogger) MappingBaseClass<RequestMetaData, DefaultDatabase>.Reference<TDataType>(Expression<Func<RequestMetaData, TDataType>>) MappingBaseClass<RequestMetaData, DefaultDatabase>.SetQuery(QueryType, string, CommandType, params IParameter[]) MappingBaseClass<RequestMetaData, DefaultDatabase>.Setup() MappingBaseClass<RequestMetaData, DefaultDatabase>.ToString() MappingBaseClass<RequestMetaData, DefaultDatabase>.AutoIDProperties MappingBaseClass<RequestMetaData, DefaultDatabase>.DatabaseConfigType MappingBaseClass<RequestMetaData, DefaultDatabase>.IDProperties MappingBaseClass<RequestMetaData, DefaultDatabase>.ManyToManyProperties MappingBaseClass<RequestMetaData, DefaultDatabase>.ManyToOneProperties MappingBaseClass<RequestMetaData, DefaultDatabase>.MapProperties MappingBaseClass<RequestMetaData, DefaultDatabase>.Merge MappingBaseClass<RequestMetaData, DefaultDatabase>.ObjectType MappingBaseClass<RequestMetaData, DefaultDatabase>.Order MappingBaseClass<RequestMetaData, DefaultDatabase>.Prefix MappingBaseClass<RequestMetaData, DefaultDatabase>.Queries MappingBaseClass<RequestMetaData, DefaultDatabase>.ReferenceProperties MappingBaseClass<RequestMetaData, DefaultDatabase>.SchemaName MappingBaseClass<RequestMetaData, DefaultDatabase>.Suffix MappingBaseClass<RequestMetaData, DefaultDatabase>.TableName object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Mithril.Apm.Default.Models.Mappings Assembly: Mithril.Apm.Default.dll Syntax public class RequestMetaDataMapping : MappingBaseClass<RequestMetaData, DefaultDatabase>, IMapping<RequestMetaData>, IMapping Constructors | Improve this Doc View Source RequestMetaDataMapping() Initializes a new instance of the RequestMetaDataMapping class. Declaration public RequestMetaDataMapping() See Also MappingBaseClass<TClassType, TDatabaseType> Implements IMapping<TClassType> IMapping Extension Methods ExpandoObjectExtensions.ConvertToExpando<TEntity>(TEntity?) GenericExtensions.When<TObject>(TObject, bool, Func<TObject, TObject>) See Also MappingBaseClass<TClassType, TDatabaseType>"
  },
  "api/Mithril.Apm.Default.Models.Mappings.RequestMetricMapping.html": {
    "href": "api/Mithril.Apm.Default.Models.Mappings.RequestMetricMapping.html",
    "title": "Class RequestMetricMapping | Mithril API Reference",
    "keywords": "Class RequestMetricMapping Request Metric mapping Inheritance object MappingBaseClass<RequestMetric, DefaultDatabase> RequestMetricMapping Implements IMapping<RequestMetric> IMapping Inherited Members MappingBaseClass<RequestMetric, DefaultDatabase>.AddAutoKey() MappingBaseClass<RequestMetric, DefaultDatabase>.ContainsProperty(string) MappingBaseClass<RequestMetric, DefaultDatabase>.Copy(IMapping) MappingBaseClass<RequestMetric, DefaultDatabase>.CopyProperty(IIDProperty) MappingBaseClass<RequestMetric, DefaultDatabase>.CopyProperty(IProperty) MappingBaseClass<RequestMetric, DefaultDatabase>.CopyProperty(IMapProperty) MappingBaseClass<RequestMetric, DefaultDatabase>.CopyProperty(IManyToOneProperty) MappingBaseClass<RequestMetric, DefaultDatabase>.CopyProperty(IManyToManyProperty) MappingBaseClass<RequestMetric, DefaultDatabase>.Equals(object) MappingBaseClass<RequestMetric, DefaultDatabase>.GetColumnName(string) MappingBaseClass<RequestMetric, DefaultDatabase>.GetHashCode() MappingBaseClass<RequestMetric, DefaultDatabase>.ID<TDataType>(Expression<Func<RequestMetric, TDataType>>) MappingBaseClass<RequestMetric, DefaultDatabase>.ManyToMany<TDataType>(Expression<Func<RequestMetric, IList<TDataType>>>) MappingBaseClass<RequestMetric, DefaultDatabase>.ManyToOne<TDataType>(Expression<Func<RequestMetric, IList<TDataType>>>) MappingBaseClass<RequestMetric, DefaultDatabase>.ManyToOne<TDataType>(Expression<Func<RequestMetric, TDataType>>) MappingBaseClass<RequestMetric, DefaultDatabase>.Map<TDataType>(Expression<Func<RequestMetric, TDataType>>) MappingBaseClass<RequestMetric, DefaultDatabase>.Reduce(ILogger) MappingBaseClass<RequestMetric, DefaultDatabase>.Reduce(IMapping, ILogger) MappingBaseClass<RequestMetric, DefaultDatabase>.Reference<TDataType>(Expression<Func<RequestMetric, TDataType>>) MappingBaseClass<RequestMetric, DefaultDatabase>.SetQuery(QueryType, string, CommandType, params IParameter[]) MappingBaseClass<RequestMetric, DefaultDatabase>.Setup() MappingBaseClass<RequestMetric, DefaultDatabase>.ToString() MappingBaseClass<RequestMetric, DefaultDatabase>.AutoIDProperties MappingBaseClass<RequestMetric, DefaultDatabase>.DatabaseConfigType MappingBaseClass<RequestMetric, DefaultDatabase>.IDProperties MappingBaseClass<RequestMetric, DefaultDatabase>.ManyToManyProperties MappingBaseClass<RequestMetric, DefaultDatabase>.ManyToOneProperties MappingBaseClass<RequestMetric, DefaultDatabase>.MapProperties MappingBaseClass<RequestMetric, DefaultDatabase>.Merge MappingBaseClass<RequestMetric, DefaultDatabase>.ObjectType MappingBaseClass<RequestMetric, DefaultDatabase>.Order MappingBaseClass<RequestMetric, DefaultDatabase>.Prefix MappingBaseClass<RequestMetric, DefaultDatabase>.Queries MappingBaseClass<RequestMetric, DefaultDatabase>.ReferenceProperties MappingBaseClass<RequestMetric, DefaultDatabase>.SchemaName MappingBaseClass<RequestMetric, DefaultDatabase>.Suffix MappingBaseClass<RequestMetric, DefaultDatabase>.TableName object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Mithril.Apm.Default.Models.Mappings Assembly: Mithril.Apm.Default.dll Syntax public class RequestMetricMapping : MappingBaseClass<RequestMetric, DefaultDatabase>, IMapping<RequestMetric>, IMapping Constructors | Improve this Doc View Source RequestMetricMapping() Initializes a new instance of the RequestMetricMapping class. Declaration public RequestMetricMapping() See Also MappingBaseClass<TClassType, TDatabaseType> Implements IMapping<TClassType> IMapping Extension Methods ExpandoObjectExtensions.ConvertToExpando<TEntity>(TEntity?) GenericExtensions.When<TObject>(TObject, bool, Func<TObject, TObject>) See Also MappingBaseClass<TClassType, TDatabaseType>"
  },
  "api/Mithril.Apm.Default.Models.Mappings.RequestTraceMapping.html": {
    "href": "api/Mithril.Apm.Default.Models.Mappings.RequestTraceMapping.html",
    "title": "Class RequestTraceMapping | Mithril API Reference",
    "keywords": "Class RequestTraceMapping Request trace mapping Inheritance object MappingBaseClass<RequestTrace, DefaultDatabase> RequestTraceMapping Implements IMapping<RequestTrace> IMapping Inherited Members MappingBaseClass<RequestTrace, DefaultDatabase>.AddAutoKey() MappingBaseClass<RequestTrace, DefaultDatabase>.ContainsProperty(string) MappingBaseClass<RequestTrace, DefaultDatabase>.Copy(IMapping) MappingBaseClass<RequestTrace, DefaultDatabase>.CopyProperty(IIDProperty) MappingBaseClass<RequestTrace, DefaultDatabase>.CopyProperty(IProperty) MappingBaseClass<RequestTrace, DefaultDatabase>.CopyProperty(IMapProperty) MappingBaseClass<RequestTrace, DefaultDatabase>.CopyProperty(IManyToOneProperty) MappingBaseClass<RequestTrace, DefaultDatabase>.CopyProperty(IManyToManyProperty) MappingBaseClass<RequestTrace, DefaultDatabase>.Equals(object) MappingBaseClass<RequestTrace, DefaultDatabase>.GetColumnName(string) MappingBaseClass<RequestTrace, DefaultDatabase>.GetHashCode() MappingBaseClass<RequestTrace, DefaultDatabase>.ID<TDataType>(Expression<Func<RequestTrace, TDataType>>) MappingBaseClass<RequestTrace, DefaultDatabase>.ManyToMany<TDataType>(Expression<Func<RequestTrace, IList<TDataType>>>) MappingBaseClass<RequestTrace, DefaultDatabase>.ManyToOne<TDataType>(Expression<Func<RequestTrace, IList<TDataType>>>) MappingBaseClass<RequestTrace, DefaultDatabase>.ManyToOne<TDataType>(Expression<Func<RequestTrace, TDataType>>) MappingBaseClass<RequestTrace, DefaultDatabase>.Map<TDataType>(Expression<Func<RequestTrace, TDataType>>) MappingBaseClass<RequestTrace, DefaultDatabase>.Reduce(ILogger) MappingBaseClass<RequestTrace, DefaultDatabase>.Reduce(IMapping, ILogger) MappingBaseClass<RequestTrace, DefaultDatabase>.Reference<TDataType>(Expression<Func<RequestTrace, TDataType>>) MappingBaseClass<RequestTrace, DefaultDatabase>.SetQuery(QueryType, string, CommandType, params IParameter[]) MappingBaseClass<RequestTrace, DefaultDatabase>.Setup() MappingBaseClass<RequestTrace, DefaultDatabase>.ToString() MappingBaseClass<RequestTrace, DefaultDatabase>.AutoIDProperties MappingBaseClass<RequestTrace, DefaultDatabase>.DatabaseConfigType MappingBaseClass<RequestTrace, DefaultDatabase>.IDProperties MappingBaseClass<RequestTrace, DefaultDatabase>.ManyToManyProperties MappingBaseClass<RequestTrace, DefaultDatabase>.ManyToOneProperties MappingBaseClass<RequestTrace, DefaultDatabase>.MapProperties MappingBaseClass<RequestTrace, DefaultDatabase>.Merge MappingBaseClass<RequestTrace, DefaultDatabase>.ObjectType MappingBaseClass<RequestTrace, DefaultDatabase>.Order MappingBaseClass<RequestTrace, DefaultDatabase>.Prefix MappingBaseClass<RequestTrace, DefaultDatabase>.Queries MappingBaseClass<RequestTrace, DefaultDatabase>.ReferenceProperties MappingBaseClass<RequestTrace, DefaultDatabase>.SchemaName MappingBaseClass<RequestTrace, DefaultDatabase>.Suffix MappingBaseClass<RequestTrace, DefaultDatabase>.TableName object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Mithril.Apm.Default.Models.Mappings Assembly: Mithril.Apm.Default.dll Syntax public class RequestTraceMapping : MappingBaseClass<RequestTrace, DefaultDatabase>, IMapping<RequestTrace>, IMapping Constructors | Improve this Doc View Source RequestTraceMapping() Initializes a new instance of the RequestTraceMapping class. Declaration public RequestTraceMapping() See Also MappingBaseClass<TClassType, TDatabaseType> Implements IMapping<TClassType> IMapping Extension Methods ExpandoObjectExtensions.ConvertToExpando<TEntity>(TEntity?) GenericExtensions.When<TObject>(TObject, bool, Func<TObject, TObject>) See Also MappingBaseClass<TClassType, TDatabaseType>"
  },
  "api/Mithril.Apm.Default.Models.Mappings.html": {
    "href": "api/Mithril.Apm.Default.Models.Mappings.html",
    "title": "Namespace Mithril.Apm.Default.Models.Mappings | Mithril API Reference",
    "keywords": "Namespace Mithril.Apm.Default.Models.Mappings Classes RequestMetaDataMapping Request MetaData mapping RequestMetricMapping Request Metric mapping RequestTraceMapping Request trace mapping"
  },
  "api/Mithril.Apm.Default.Models.RequestMetaData.html": {
    "href": "api/Mithril.Apm.Default.Models.RequestMetaData.html",
    "title": "Class RequestMetaData | Mithril API Reference",
    "keywords": "Class RequestMetaData Request MetaData Inheritance object ModelBase<RequestMetaData> RequestMetaData Implements IModel<RequestMetaData> IModel IEquatable<IModel> IEquatable<IModel<RequestMetaData>> IComparable IComparable<RequestMetaData> IEquatable<ModelBase<RequestMetaData>> Inherited Members ModelBase<RequestMetaData>.Active ModelBase<RequestMetaData>.Creator ModelBase<RequestMetaData>.DateCreated ModelBase<RequestMetaData>.DateModified ModelBase<RequestMetaData>.ID ModelBase<RequestMetaData>.Modifier ModelBase<RequestMetaData>.TenantID ModelBase<RequestMetaData>.All(IDataService) ModelBase<RequestMetaData>.AllActive(IDataService) ModelBase<RequestMetaData>.AllInactive(IDataService) ModelBase<RequestMetaData>.Load(long, IDataService) ModelBase<RequestMetaData>.Query(IDataService) ModelBase<RequestMetaData>.CanBeModifiedBy(ClaimsPrincipal) ModelBase<RequestMetaData>.CanBeViewedBy(ClaimsPrincipal) ModelBase<RequestMetaData>.CompareTo(object) ModelBase<RequestMetaData>.DeleteAsync(IDataService, ClaimsPrincipal, bool) ModelBase<RequestMetaData>.Equals(IModel) ModelBase<RequestMetaData>.Equals(IModel<RequestMetaData>) ModelBase<RequestMetaData>.Equals(ModelBase<RequestMetaData>) ModelBase<RequestMetaData>.SaveAsync(IDataService, ClaimsPrincipal) ModelBase<RequestMetaData>.SetupObject(IDataService, ClaimsPrincipal) ModelBase<RequestMetaData>.SetupObject(IDataService, IUser) ModelBase<RequestMetaData>.SetupObjectAndReturn(IDataService, ClaimsPrincipal) object.Equals(object, object) object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Namespace: Mithril.Apm.Default.Models Assembly: Mithril.Apm.Default.dll Syntax public class RequestMetaData : ModelBase<RequestMetaData>, IModel<RequestMetaData>, IModel, IEquatable<IModel>, IEquatable<IModel<RequestMetaData>>, IComparable, IComparable<RequestMetaData>, IEquatable<ModelBase<RequestMetaData>> Constructors | Improve this Doc View Source RequestMetaData() Initializes a new instance of the RequestMetaData class. Declaration public RequestMetaData() See Also ModelBase<TClass> | Improve this Doc View Source RequestMetaData(string, string) Initializes a new instance of the RequestMetaData class. Declaration public RequestMetaData(string displayName, string metaData) Parameters Type Name Description string displayName The display name. string metaData The meta data. Exceptions Type Condition ArgumentNullException displayName or metaData See Also ModelBase<TClass> Properties | Improve this Doc View Source DisplayName Gets or sets the display name. Declaration [Required] [MaxLength(100)] public string? DisplayName { get; set; } Property Value Type Description string The display name. See Also ModelBase<TClass> | Improve this Doc View Source MetaData Gets or sets the meta data. Declaration [Required] [MaxLength] public string? MetaData { get; set; } Property Value Type Description string The meta data. See Also ModelBase<TClass> Methods | Improve this Doc View Source CompareTo(RequestMetaData?) Compares the object to another object Declaration public override int CompareTo(RequestMetaData? other) Parameters Type Name Description RequestMetaData other Object to compare to Returns Type Description int 0 if they are equal, -1 if this is smaller, 1 if it is larger Overrides ModelBase<RequestMetaData>.CompareTo(RequestMetaData) See Also ModelBase<TClass> | Improve this Doc View Source Equals(RequestMetaData) Indicates whether the current object is equal to another object of the same type. Declaration public bool Equals(RequestMetaData other) Parameters Type Name Description RequestMetaData other An object to compare with this object. Returns Type Description bool true if the current object is equal to the other parameter; otherwise, false. See Also ModelBase<TClass> | Improve this Doc View Source Equals(object?) Determines whether the specified object, is equal to this instance. Declaration public override bool Equals(object? obj) Parameters Type Name Description object obj The object to compare with this instance. Returns Type Description bool true if the specified object is equal to this instance; otherwise, false. Overrides ModelBase<RequestMetaData>.Equals(object) See Also ModelBase<TClass> | Improve this Doc View Source GetHashCode() Returns a hash code for this instance. Declaration public override int GetHashCode() Returns Type Description int A hash code for this instance, suitable for use in hashing algorithms and data structures like a hash table. Overrides Mithril.Data.Abstractions.BaseClasses.ModelBase<Mithril.Apm.Default.Models.RequestMetaData>.GetHashCode() See Also ModelBase<TClass> | Improve this Doc View Source ToString() Returns a string that represents this instance. Declaration public override string ToString() Returns Type Description string A string that represents this instance. Overrides object.ToString() See Also ModelBase<TClass> Operators | Improve this Doc View Source operator ==(RequestMetaData, RequestMetaData) Implements the operator ==. Declaration public static bool operator ==(RequestMetaData first, RequestMetaData second) Parameters Type Name Description RequestMetaData first The first. RequestMetaData second The second. Returns Type Description bool The result of the operator. See Also ModelBase<TClass> | Improve this Doc View Source operator >(RequestMetaData, RequestMetaData) Implements the operator >. Declaration public static bool operator >(RequestMetaData left, RequestMetaData right) Parameters Type Name Description RequestMetaData left The left. RequestMetaData right The right. Returns Type Description bool The result of the operator. See Also ModelBase<TClass> | Improve this Doc View Source operator >=(RequestMetaData, RequestMetaData) Implements the operator >=. Declaration public static bool operator >=(RequestMetaData left, RequestMetaData right) Parameters Type Name Description RequestMetaData left The left. RequestMetaData right The right. Returns Type Description bool The result of the operator. See Also ModelBase<TClass> | Improve this Doc View Source operator !=(RequestMetaData, RequestMetaData) Implements the operator !=. Declaration public static bool operator !=(RequestMetaData left, RequestMetaData right) Parameters Type Name Description RequestMetaData left The left. RequestMetaData right The right. Returns Type Description bool The result of the operator. See Also ModelBase<TClass> | Improve this Doc View Source operator <(RequestMetaData, RequestMetaData) Implements the operator <. Declaration public static bool operator <(RequestMetaData left, RequestMetaData right) Parameters Type Name Description RequestMetaData left The left. RequestMetaData right The right. Returns Type Description bool The result of the operator. See Also ModelBase<TClass> | Improve this Doc View Source operator <=(RequestMetaData, RequestMetaData) Implements the operator <=. Declaration public static bool operator <=(RequestMetaData left, RequestMetaData right) Parameters Type Name Description RequestMetaData left The left. RequestMetaData right The right. Returns Type Description bool The result of the operator. See Also ModelBase<TClass> Implements IModel<TClass> IModel IEquatable<T> IEquatable<T> IComparable IComparable<T> IEquatable<T> Extension Methods ExpandoObjectExtensions.ConvertToExpando<TEntity>(TEntity?) GenericExtensions.When<TObject>(TObject, bool, Func<TObject, TObject>) See Also ModelBase<TClass>"
  },
  "api/Mithril.Apm.Default.Models.RequestMetric.html": {
    "href": "api/Mithril.Apm.Default.Models.RequestMetric.html",
    "title": "Class RequestMetric | Mithril API Reference",
    "keywords": "Class RequestMetric Request Metrics Inheritance object ModelBase<RequestMetric> RequestMetric Implements IModel<RequestMetric> IModel IEquatable<IModel> IEquatable<IModel<RequestMetric>> IComparable IComparable<RequestMetric> IEquatable<ModelBase<RequestMetric>> Inherited Members ModelBase<RequestMetric>.Active ModelBase<RequestMetric>.Creator ModelBase<RequestMetric>.DateCreated ModelBase<RequestMetric>.DateModified ModelBase<RequestMetric>.ID ModelBase<RequestMetric>.Modifier ModelBase<RequestMetric>.TenantID ModelBase<RequestMetric>.All(IDataService) ModelBase<RequestMetric>.AllActive(IDataService) ModelBase<RequestMetric>.AllInactive(IDataService) ModelBase<RequestMetric>.Load(long, IDataService) ModelBase<RequestMetric>.Query(IDataService) ModelBase<RequestMetric>.CanBeModifiedBy(ClaimsPrincipal) ModelBase<RequestMetric>.CanBeViewedBy(ClaimsPrincipal) ModelBase<RequestMetric>.CompareTo(object) ModelBase<RequestMetric>.DeleteAsync(IDataService, ClaimsPrincipal, bool) ModelBase<RequestMetric>.Equals(IModel) ModelBase<RequestMetric>.Equals(IModel<RequestMetric>) ModelBase<RequestMetric>.Equals(ModelBase<RequestMetric>) ModelBase<RequestMetric>.SaveAsync(IDataService, ClaimsPrincipal) ModelBase<RequestMetric>.SetupObject(IDataService, ClaimsPrincipal) ModelBase<RequestMetric>.SetupObject(IDataService, IUser) ModelBase<RequestMetric>.SetupObjectAndReturn(IDataService, ClaimsPrincipal) object.Equals(object, object) object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Namespace: Mithril.Apm.Default.Models Assembly: Mithril.Apm.Default.dll Syntax public class RequestMetric : ModelBase<RequestMetric>, IModel<RequestMetric>, IModel, IEquatable<IModel>, IEquatable<IModel<RequestMetric>>, IComparable, IComparable<RequestMetric>, IEquatable<ModelBase<RequestMetric>> Constructors | Improve this Doc View Source RequestMetric() Initializes a new instance of the RequestMetric class. Declaration public RequestMetric() See Also ModelBase<TClass> | Improve this Doc View Source RequestMetric(string, string, decimal) Initializes a new instance of the RequestMetric class. Declaration public RequestMetric(string displayName, string metaData, decimal metric) Parameters Type Name Description string displayName The display name. string metaData The meta data. decimal metric The metric. Exceptions Type Condition ArgumentNullException displayName See Also ModelBase<TClass> Properties | Improve this Doc View Source DisplayName Gets or sets the display name. Declaration [Required] [MaxLength(100)] public string? DisplayName { get; set; } Property Value Type Description string The display name. See Also ModelBase<TClass> | Improve this Doc View Source MetaData Gets or sets the meta data. Declaration [MaxLength] public string? MetaData { get; set; } Property Value Type Description string The meta data. See Also ModelBase<TClass> | Improve this Doc View Source Metric Gets or sets the metric. Declaration public decimal Metric { get; set; } Property Value Type Description decimal The metric. See Also ModelBase<TClass> Methods | Improve this Doc View Source CompareTo(RequestMetric?) Compares the object to another object Declaration public override int CompareTo(RequestMetric? other) Parameters Type Name Description RequestMetric other Object to compare to Returns Type Description int 0 if they are equal, -1 if this is smaller, 1 if it is larger Overrides ModelBase<RequestMetric>.CompareTo(RequestMetric) See Also ModelBase<TClass> | Improve this Doc View Source Equals(RequestMetric) Indicates whether the current object is equal to another object of the same type. Declaration public bool Equals(RequestMetric other) Parameters Type Name Description RequestMetric other An object to compare with this object. Returns Type Description bool true if the current object is equal to the other parameter; otherwise, false. See Also ModelBase<TClass> | Improve this Doc View Source Equals(object?) Determines whether the specified object, is equal to this instance. Declaration public override bool Equals(object? obj) Parameters Type Name Description object obj The object to compare with this instance. Returns Type Description bool true if the specified object is equal to this instance; otherwise, false. Overrides ModelBase<RequestMetric>.Equals(object) See Also ModelBase<TClass> | Improve this Doc View Source GetHashCode() Returns a hash code for this instance. Declaration public override int GetHashCode() Returns Type Description int A hash code for this instance, suitable for use in hashing algorithms and data structures like a hash table. Overrides Mithril.Data.Abstractions.BaseClasses.ModelBase<Mithril.Apm.Default.Models.RequestMetric>.GetHashCode() See Also ModelBase<TClass> | Improve this Doc View Source ToString() Returns a string that represents this instance. Declaration public override string ToString() Returns Type Description string A string that represents this instance. Overrides object.ToString() See Also ModelBase<TClass> Operators | Improve this Doc View Source operator ==(RequestMetric, RequestMetric) Implements the operator ==. Declaration public static bool operator ==(RequestMetric first, RequestMetric second) Parameters Type Name Description RequestMetric first The first. RequestMetric second The second. Returns Type Description bool The result of the operator. See Also ModelBase<TClass> | Improve this Doc View Source operator >(RequestMetric, RequestMetric) Implements the operator >. Declaration public static bool operator >(RequestMetric left, RequestMetric right) Parameters Type Name Description RequestMetric left The left. RequestMetric right The right. Returns Type Description bool The result of the operator. See Also ModelBase<TClass> | Improve this Doc View Source operator >=(RequestMetric, RequestMetric) Implements the operator >=. Declaration public static bool operator >=(RequestMetric left, RequestMetric right) Parameters Type Name Description RequestMetric left The left. RequestMetric right The right. Returns Type Description bool The result of the operator. See Also ModelBase<TClass> | Improve this Doc View Source operator !=(RequestMetric, RequestMetric) Implements the operator !=. Declaration public static bool operator !=(RequestMetric left, RequestMetric right) Parameters Type Name Description RequestMetric left The left. RequestMetric right The right. Returns Type Description bool The result of the operator. See Also ModelBase<TClass> | Improve this Doc View Source operator <(RequestMetric, RequestMetric) Implements the operator <. Declaration public static bool operator <(RequestMetric left, RequestMetric right) Parameters Type Name Description RequestMetric left The left. RequestMetric right The right. Returns Type Description bool The result of the operator. See Also ModelBase<TClass> | Improve this Doc View Source operator <=(RequestMetric, RequestMetric) Implements the operator <=. Declaration public static bool operator <=(RequestMetric left, RequestMetric right) Parameters Type Name Description RequestMetric left The left. RequestMetric right The right. Returns Type Description bool The result of the operator. See Also ModelBase<TClass> Implements IModel<TClass> IModel IEquatable<T> IEquatable<T> IComparable IComparable<T> IEquatable<T> Extension Methods ExpandoObjectExtensions.ConvertToExpando<TEntity>(TEntity?) GenericExtensions.When<TObject>(TObject, bool, Func<TObject, TObject>) See Also ModelBase<TClass>"
  },
  "api/Mithril.Apm.Default.Models.RequestTrace.html": {
    "href": "api/Mithril.Apm.Default.Models.RequestTrace.html",
    "title": "Class RequestTrace | Mithril API Reference",
    "keywords": "Class RequestTrace Request trace Inheritance object ModelBase<RequestTrace> RequestTrace Implements IModel<RequestTrace> IModel IEquatable<IModel> IEquatable<IModel<RequestTrace>> IComparable IComparable<RequestTrace> IEquatable<ModelBase<RequestTrace>> Inherited Members ModelBase<RequestTrace>.Active ModelBase<RequestTrace>.Creator ModelBase<RequestTrace>.DateCreated ModelBase<RequestTrace>.DateModified ModelBase<RequestTrace>.ID ModelBase<RequestTrace>.Modifier ModelBase<RequestTrace>.TenantID ModelBase<RequestTrace>.All(IDataService) ModelBase<RequestTrace>.AllActive(IDataService) ModelBase<RequestTrace>.AllInactive(IDataService) ModelBase<RequestTrace>.Load(long, IDataService) ModelBase<RequestTrace>.Query(IDataService) ModelBase<RequestTrace>.CanBeModifiedBy(ClaimsPrincipal) ModelBase<RequestTrace>.CanBeViewedBy(ClaimsPrincipal) ModelBase<RequestTrace>.CompareTo(object) ModelBase<RequestTrace>.DeleteAsync(IDataService, ClaimsPrincipal, bool) ModelBase<RequestTrace>.Equals(IModel) ModelBase<RequestTrace>.Equals(IModel<RequestTrace>) ModelBase<RequestTrace>.Equals(ModelBase<RequestTrace>) ModelBase<RequestTrace>.SaveAsync(IDataService, ClaimsPrincipal) ModelBase<RequestTrace>.SetupObject(IDataService, ClaimsPrincipal) ModelBase<RequestTrace>.SetupObject(IDataService, IUser) ModelBase<RequestTrace>.SetupObjectAndReturn(IDataService, ClaimsPrincipal) object.Equals(object, object) object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Namespace: Mithril.Apm.Default.Models Assembly: Mithril.Apm.Default.dll Syntax public class RequestTrace : ModelBase<RequestTrace>, IModel<RequestTrace>, IModel, IEquatable<IModel>, IEquatable<IModel<RequestTrace>>, IComparable, IComparable<RequestTrace>, IEquatable<ModelBase<RequestTrace>> Constructors | Improve this Doc View Source RequestTrace() Initializes a new instance of the RequestTrace class. Declaration public RequestTrace() See Also ModelBase<TClass> | Improve this Doc View Source RequestTrace(string) Initializes a new instance of the RequestTrace class. Declaration public RequestTrace(string traceIdentifier) Parameters Type Name Description string traceIdentifier The trace identifier. Exceptions Type Condition ArgumentNullException traceIdentifier See Also ModelBase<TClass> Properties | Improve this Doc View Source MetaData Gets or sets the meta data. Declaration public virtual IList<RequestMetaData> MetaData { get; set; } Property Value Type Description IList<RequestMetaData> The meta data. See Also ModelBase<TClass> | Improve this Doc View Source Metrics Gets or sets the metrics. Declaration public virtual IList<RequestMetric> Metrics { get; set; } Property Value Type Description IList<RequestMetric> The metrics. See Also ModelBase<TClass> | Improve this Doc View Source TraceIdentifier Gets or sets the trace identifier. Declaration [Required] [MaxLength(100)] public string? TraceIdentifier { get; set; } Property Value Type Description string The trace identifier. See Also ModelBase<TClass> Methods | Improve this Doc View Source AddMetaData(string, string) Adds the meta data. Declaration public void AddMetaData(string displayName, string metaData) Parameters Type Name Description string displayName The display name. string metaData The meta data. See Also ModelBase<TClass> | Improve this Doc View Source AddMetrics(string, string, decimal) Adds the metrics. Declaration public void AddMetrics(string displayName, string metaData, decimal metric) Parameters Type Name Description string displayName The display name. string metaData The meta data. decimal metric The metric. See Also ModelBase<TClass> | Improve this Doc View Source CompareTo(RequestTrace?) Compares the object to another object Declaration public override int CompareTo(RequestTrace? other) Parameters Type Name Description RequestTrace other Object to compare to Returns Type Description int 0 if they are equal, -1 if this is smaller, 1 if it is larger Overrides ModelBase<RequestTrace>.CompareTo(RequestTrace) See Also ModelBase<TClass> | Improve this Doc View Source Equals(RequestTrace) Indicates whether the current object is equal to another object of the same type. Declaration public bool Equals(RequestTrace other) Parameters Type Name Description RequestTrace other An object to compare with this object. Returns Type Description bool true if the current object is equal to the other parameter; otherwise, false. See Also ModelBase<TClass> | Improve this Doc View Source Equals(object?) Determines whether the specified object, is equal to this instance. Declaration public override bool Equals(object? obj) Parameters Type Name Description object obj The object to compare with this instance. Returns Type Description bool true if the specified object is equal to this instance; otherwise, false. Overrides ModelBase<RequestTrace>.Equals(object) See Also ModelBase<TClass> | Improve this Doc View Source GetHashCode() Returns a hash code for this instance. Declaration public override int GetHashCode() Returns Type Description int A hash code for this instance, suitable for use in hashing algorithms and data structures like a hash table. Overrides Mithril.Data.Abstractions.BaseClasses.ModelBase<Mithril.Apm.Default.Models.RequestTrace>.GetHashCode() See Also ModelBase<TClass> | Improve this Doc View Source ToString() Returns a string that represents this instance. Declaration public override string ToString() Returns Type Description string A string that represents this instance. Overrides object.ToString() See Also ModelBase<TClass> Operators | Improve this Doc View Source operator ==(RequestTrace, RequestTrace) Implements the operator ==. Declaration public static bool operator ==(RequestTrace first, RequestTrace second) Parameters Type Name Description RequestTrace first The first. RequestTrace second The second. Returns Type Description bool The result of the operator. See Also ModelBase<TClass> | Improve this Doc View Source operator >(RequestTrace, RequestTrace) Implements the operator >. Declaration public static bool operator >(RequestTrace left, RequestTrace right) Parameters Type Name Description RequestTrace left The left. RequestTrace right The right. Returns Type Description bool The result of the operator. See Also ModelBase<TClass> | Improve this Doc View Source operator >=(RequestTrace, RequestTrace) Implements the operator >=. Declaration public static bool operator >=(RequestTrace left, RequestTrace right) Parameters Type Name Description RequestTrace left The left. RequestTrace right The right. Returns Type Description bool The result of the operator. See Also ModelBase<TClass> | Improve this Doc View Source operator !=(RequestTrace, RequestTrace) Implements the operator !=. Declaration public static bool operator !=(RequestTrace left, RequestTrace right) Parameters Type Name Description RequestTrace left The left. RequestTrace right The right. Returns Type Description bool The result of the operator. See Also ModelBase<TClass> | Improve this Doc View Source operator <(RequestTrace, RequestTrace) Implements the operator <. Declaration public static bool operator <(RequestTrace left, RequestTrace right) Parameters Type Name Description RequestTrace left The left. RequestTrace right The right. Returns Type Description bool The result of the operator. See Also ModelBase<TClass> | Improve this Doc View Source operator <=(RequestTrace, RequestTrace) Implements the operator <=. Declaration public static bool operator <=(RequestTrace left, RequestTrace right) Parameters Type Name Description RequestTrace left The left. RequestTrace right The right. Returns Type Description bool The result of the operator. See Also ModelBase<TClass> Implements IModel<TClass> IModel IEquatable<T> IEquatable<T> IComparable IComparable<T> IEquatable<T> Extension Methods ExpandoObjectExtensions.ConvertToExpando<TEntity>(TEntity?) GenericExtensions.When<TObject>(TObject, bool, Func<TObject, TObject>) See Also ModelBase<TClass>"
  },
  "api/Mithril.Apm.Default.Models.html": {
    "href": "api/Mithril.Apm.Default.Models.html",
    "title": "Namespace Mithril.Apm.Default.Models | Mithril API Reference",
    "keywords": "Namespace Mithril.Apm.Default.Models Classes RequestMetaData Request MetaData RequestMetric Request Metrics RequestTrace Request trace"
  },
  "api/Mithril.Apm.Default.Queries.RequestTraceQuery.html": {
    "href": "api/Mithril.Apm.Default.Queries.RequestTraceQuery.html",
    "title": "Class RequestTraceQuery | Mithril API Reference",
    "keywords": "Class RequestTraceQuery Request trace query Inheritance object QueryBaseClass<IEnumerable<RequestTraceVM>> RequestTraceQuery Implements IQuery<IEnumerable<RequestTraceVM>> IQuery Inherited Members QueryBaseClass<IEnumerable<RequestTraceVM>>.DeprecationReason QueryBaseClass<IEnumerable<RequestTraceVM>>.Description QueryBaseClass<IEnumerable<RequestTraceVM>>.ReturnType QueryBaseClass<IEnumerable<RequestTraceVM>>.Version QueryBaseClass<IEnumerable<RequestTraceVM>>.FeatureManager QueryBaseClass<IEnumerable<RequestTraceVM>>.Logger QueryBaseClass<IEnumerable<RequestTraceVM>>.IsFeatureEnabled() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Mithril.Apm.Default.Queries Assembly: Mithril.Apm.Default.dll Syntax [ApiAuthorize(\"Admin Only\")] public class RequestTraceQuery : QueryBaseClass<IEnumerable<RequestTraceVM>>, IQuery<IEnumerable<RequestTraceVM>>, IQuery Constructors | Improve this Doc View Source RequestTraceQuery(ILogger<RequestTraceQuery>?, IFeatureManager?, IDataService?) Initializes a new instance of the RequestTraceQuery class. Declaration public RequestTraceQuery(ILogger<RequestTraceQuery>? logger, IFeatureManager? featureManager, IDataService? dataService) Parameters Type Name Description ILogger<RequestTraceQuery> logger The logger. IFeatureManager featureManager The feature manager. IDataService dataService The data service. Properties | Improve this Doc View Source Arguments The arguments Declaration public override IArgument[] Arguments { get; } Property Value Type Description IArgument[] Overrides QueryBaseClass<IEnumerable<RequestTraceVM>>.Arguments | Improve this Doc View Source DataService Gets the data service. Declaration public IDataService? DataService { get; } Property Value Type Description IDataService The data service. | Improve this Doc View Source Features Gets the features associated with this command. Declaration public override IFeature[] Features { get; } Property Value Type Description IFeature[] The features associated with this command. Overrides QueryBaseClass<IEnumerable<RequestTraceVM>>.Features | Improve this Doc View Source Name Gets the name. Declaration public override string Name { get; } Property Value Type Description string The name. Overrides QueryBaseClass<IEnumerable<RequestTraceVM>>.Name Methods | Improve this Doc View Source ResolveAsync(ClaimsPrincipal?, Arguments) Resolves the asynchronous. Declaration public override Task<IEnumerable<RequestTraceVM>?> ResolveAsync(ClaimsPrincipal? arg, Arguments arguments) Parameters Type Name Description ClaimsPrincipal arg The argument. Arguments arguments The arguments. Returns Type Description Task<IEnumerable<RequestTraceVM>> Overrides QueryBaseClass<IEnumerable<RequestTraceVM>>.ResolveAsync(ClaimsPrincipal, Arguments) Implements IQuery<TClass> IQuery Extension Methods ExpandoObjectExtensions.ConvertToExpando<TEntity>(TEntity?) GenericExtensions.When<TObject>(TObject, bool, Func<TObject, TObject>)"
  },
  "api/Mithril.Apm.Default.Queries.ViewModels.RequestMetaDataVM.html": {
    "href": "api/Mithril.Apm.Default.Queries.ViewModels.RequestMetaDataVM.html",
    "title": "Class RequestMetaDataVM | Mithril API Reference",
    "keywords": "Class RequestMetaDataVM RequestMetaData VM Inheritance object RequestMetaDataVM Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Mithril.Apm.Default.Queries.ViewModels Assembly: Mithril.Apm.Default.dll Syntax public class RequestMetaDataVM Constructors | Improve this Doc View Source RequestMetaDataVM(RequestMetaData?) Initializes a new instance of the RequestMetaDataVM class. Declaration public RequestMetaDataVM(RequestMetaData? model) Parameters Type Name Description RequestMetaData model The model. Properties | Improve this Doc View Source DisplayName Gets the display name. Declaration public string? DisplayName { get; } Property Value Type Description string The display name. | Improve this Doc View Source MetaData Gets the meta data. Declaration public string? MetaData { get; } Property Value Type Description string The meta data. Extension Methods ExpandoObjectExtensions.ConvertToExpando<TEntity>(TEntity?) GenericExtensions.When<TObject>(TObject, bool, Func<TObject, TObject>)"
  },
  "api/Mithril.Apm.Default.Queries.ViewModels.RequestMetricVM.html": {
    "href": "api/Mithril.Apm.Default.Queries.ViewModels.RequestMetricVM.html",
    "title": "Class RequestMetricVM | Mithril API Reference",
    "keywords": "Class RequestMetricVM RequestMetric VM Inheritance object RequestMetricVM Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Mithril.Apm.Default.Queries.ViewModels Assembly: Mithril.Apm.Default.dll Syntax public class RequestMetricVM Constructors | Improve this Doc View Source RequestMetricVM(RequestMetric?) Initializes a new instance of the RequestMetricVM class. Declaration public RequestMetricVM(RequestMetric? model) Parameters Type Name Description RequestMetric model The model. Properties | Improve this Doc View Source DisplayName Gets the display name. Declaration public string? DisplayName { get; } Property Value Type Description string The display name. | Improve this Doc View Source MetaData Gets the meta data. Declaration public string? MetaData { get; } Property Value Type Description string The meta data. | Improve this Doc View Source Metric Gets the metrics. Declaration public decimal Metric { get; } Property Value Type Description decimal The metrics. Extension Methods ExpandoObjectExtensions.ConvertToExpando<TEntity>(TEntity?) GenericExtensions.When<TObject>(TObject, bool, Func<TObject, TObject>)"
  },
  "api/Mithril.Apm.Default.Queries.ViewModels.RequestTraceVM.html": {
    "href": "api/Mithril.Apm.Default.Queries.ViewModels.RequestTraceVM.html",
    "title": "Class RequestTraceVM | Mithril API Reference",
    "keywords": "Class RequestTraceVM RequestTrace VM Inheritance object RequestTraceVM Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Mithril.Apm.Default.Queries.ViewModels Assembly: Mithril.Apm.Default.dll Syntax public class RequestTraceVM Constructors | Improve this Doc View Source RequestTraceVM(RequestTrace?) Initializes a new instance of the RequestTraceVM class. Declaration public RequestTraceVM(RequestTrace? model) Parameters Type Name Description RequestTrace model The model. Properties | Improve this Doc View Source DateCreated Gets the date created. Declaration public DateTime DateCreated { get; } Property Value Type Description DateTime The date created. | Improve this Doc View Source MetaData Gets the meta data. Declaration public List<RequestMetaDataVM> MetaData { get; } Property Value Type Description List<RequestMetaDataVM> The meta data. | Improve this Doc View Source Metrics Gets the metrics. Declaration public List<RequestMetricVM> Metrics { get; } Property Value Type Description List<RequestMetricVM> The metrics. | Improve this Doc View Source TraceIdentifier Gets the trace identifier. Declaration public string? TraceIdentifier { get; } Property Value Type Description string The trace identifier. Extension Methods ExpandoObjectExtensions.ConvertToExpando<TEntity>(TEntity?) GenericExtensions.When<TObject>(TObject, bool, Func<TObject, TObject>)"
  },
  "api/Mithril.Apm.Default.Queries.ViewModels.html": {
    "href": "api/Mithril.Apm.Default.Queries.ViewModels.html",
    "title": "Namespace Mithril.Apm.Default.Queries.ViewModels | Mithril API Reference",
    "keywords": "Namespace Mithril.Apm.Default.Queries.ViewModels Classes RequestMetaDataVM RequestMetaData VM RequestMetricVM RequestMetric VM RequestTraceVM RequestTrace VM"
  },
  "api/Mithril.Apm.Default.Queries.html": {
    "href": "api/Mithril.Apm.Default.Queries.html",
    "title": "Namespace Mithril.Apm.Default.Queries | Mithril API Reference",
    "keywords": "Namespace Mithril.Apm.Default.Queries Classes RequestTraceQuery Request trace query"
  },
  "api/Mithril.Apm.Default.Reporter.MetricsReporter.html": {
    "href": "api/Mithril.Apm.Default.Reporter.MetricsReporter.html",
    "title": "Class MetricsReporter | Mithril API Reference",
    "keywords": "Class MetricsReporter Metrics reporter Inheritance object MetricsReporter Implements IMetricsReporter Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Mithril.Apm.Default.Reporter Assembly: Mithril.Apm.Default.dll Syntax public class MetricsReporter : IMetricsReporter Constructors | Improve this Doc View Source MetricsReporter(IDataService?) Initializes a new instance of the MetricsReporter class. Declaration public MetricsReporter(IDataService? dataService) Parameters Type Name Description IDataService dataService The data service. See Also IMetricsReporter Methods | Improve this Doc View Source Batch(Dictionary<string, TraceInformation>) Batches the specified data for reporting. Declaration public void Batch(Dictionary<string, TraceInformation> data) Parameters Type Name Description Dictionary<string, TraceInformation> data The data. See Also IMetricsReporter Implements IMetricsReporter Extension Methods ExpandoObjectExtensions.ConvertToExpando<TEntity>(TEntity?) GenericExtensions.When<TObject>(TObject, bool, Func<TObject, TObject>) See Also IMetricsReporter"
  },
  "api/Mithril.Apm.Default.Reporter.html": {
    "href": "api/Mithril.Apm.Default.Reporter.html",
    "title": "Namespace Mithril.Apm.Default.Reporter | Mithril API Reference",
    "keywords": "Namespace Mithril.Apm.Default.Reporter Classes MetricsReporter Metrics reporter"
  },
  "api/Mithril.Apm.Default.Services.MetricsCollectorService.html": {
    "href": "api/Mithril.Apm.Default.Services.MetricsCollectorService.html",
    "title": "Class MetricsCollectorService | Mithril API Reference",
    "keywords": "Class MetricsCollectorService Metrics collector service Inheritance object MetricsCollectorService Implements IMetricsCollectorService IObserver<MetricsEntry> IObserver<MetaDataEntry> IDisposable Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Mithril.Apm.Default.Services Assembly: Mithril.Apm.Default.dll Syntax public class MetricsCollectorService : IMetricsCollectorService, IObserver<MetricsEntry>, IObserver<MetaDataEntry>, IDisposable Constructors | Improve this Doc View Source MetricsCollectorService(IFeatureManager?, IEnumerable<IMetricsCollector>, IEnumerable<IMetricsReporter>, IEnumerable<IMetaDataCollector>, IEnumerable<IEventListener>, ILogger<MetricsCollectorService>?) Initializes a new instance of the MetricsCollectorService class. Declaration public MetricsCollectorService(IFeatureManager? featureManager, IEnumerable<IMetricsCollector> sources, IEnumerable<IMetricsReporter> metricsReporters, IEnumerable<IMetaDataCollector> traceDataCollectors, IEnumerable<IEventListener> eventListeners, ILogger<MetricsCollectorService>? logger) Parameters Type Name Description IFeatureManager featureManager The feature manager. IEnumerable<IMetricsCollector> sources The sources. IEnumerable<IMetricsReporter> metricsReporters The metrics reporters. IEnumerable<IMetaDataCollector> traceDataCollectors The trace data collectors. IEnumerable<IEventListener> eventListeners The event listeners. ILogger<MetricsCollectorService> logger The logger. See Also IMetricsCollectorService Methods | Improve this Doc View Source BatchCollectedMetrics() Reports the collected metrics to the registered reporters. Declaration public IMetricsCollectorService BatchCollectedMetrics() Returns Type Description IMetricsCollectorService This. See Also IMetricsCollectorService | Improve this Doc View Source Dispose() Releases unmanaged and - optionally - managed resources. Declaration public void Dispose() See Also IMetricsCollectorService | Improve this Doc View Source Dispose(bool) Releases unmanaged and - optionally - managed resources. Declaration protected virtual void Dispose(bool disposing) Parameters Type Name Description bool disposing true to release both managed and unmanaged resources; false to release only unmanaged resources. See Also IMetricsCollectorService | Improve this Doc View Source ~MetricsCollectorService() Finalizes an instance of the MetricsCollectorService class. Declaration protected ~MetricsCollectorService() See Also IMetricsCollectorService | Improve this Doc View Source GetMetaDataCollector(string) Gets the trace data collector. Declaration public IMetaDataCollector? GetMetaDataCollector(string name) Parameters Type Name Description string name The name. Returns Type Description IMetaDataCollector The trace data collector specified. See Also IMetricsCollectorService | Improve this Doc View Source GetMetricsCollector(string) Gets the source specified. Declaration public IMetricsCollector? GetMetricsCollector(string name) Parameters Type Name Description string name The name. Returns Type Description IMetricsCollector The metric source object specified. See Also IMetricsCollectorService | Improve this Doc View Source OnCompleted() Notifies the observer that the provider has finished sending push-based notifications. Declaration public void OnCompleted() See Also IMetricsCollectorService | Improve this Doc View Source OnError(Exception) Notifies the observer that the provider has experienced an error condition. Declaration public void OnError(Exception error) Parameters Type Name Description Exception error An object that provides additional information about the error. See Also IMetricsCollectorService | Improve this Doc View Source OnNext(MetaDataEntry) Provides the observer with new data. Declaration public void OnNext(MetaDataEntry value) Parameters Type Name Description MetaDataEntry value The current notification information. See Also IMetricsCollectorService | Improve this Doc View Source OnNext(MetricsEntry) Provides the observer with new data. Declaration public void OnNext(MetricsEntry value) Parameters Type Name Description MetricsEntry value The current notification information. See Also IMetricsCollectorService Implements IMetricsCollectorService IObserver<T> IObserver<T> IDisposable Extension Methods ExpandoObjectExtensions.ConvertToExpando<TEntity>(TEntity?) GenericExtensions.When<TObject>(TObject, bool, Func<TObject, TObject>) See Also IMetricsCollectorService"
  },
  "api/Mithril.Apm.Default.Services.html": {
    "href": "api/Mithril.Apm.Default.Services.html",
    "title": "Namespace Mithril.Apm.Default.Services | Mithril API Reference",
    "keywords": "Namespace Mithril.Apm.Default.Services Classes MetricsCollectorService Metrics collector service"
  },
  "api/Mithril.Apm.Default.html": {
    "href": "api/Mithril.Apm.Default.html",
    "title": "Namespace Mithril.Apm.Default | Mithril API Reference",
    "keywords": "Namespace Mithril.Apm.Default Classes DefaultApmModule Default APM Module"
  },
  "api/Mithril.Background.Abstractions.Frequencies.RunEvery.html": {
    "href": "api/Mithril.Background.Abstractions.Frequencies.RunEvery.html",
    "title": "Class RunEvery | Mithril API Reference",
    "keywords": "Class RunEvery Run every X amount of time based on TimeSpan Inheritance object RunEvery Implements IFrequency Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Mithril.Background.Abstractions.Frequencies Assembly: Mithril.Background.Abstractions.dll Syntax public class RunEvery : IFrequency Constructors | Improve this Doc View Source RunEvery(TimeSpan) Initializes a new instance of the RunEvery class. Declaration public RunEvery(TimeSpan timeSpan) Parameters Type Name Description TimeSpan timeSpan The time span. See Also IFrequency Methods | Improve this Doc View Source CanRun(DateTime, DateTime) Determines whether this instance can run based on the specified last run time. Declaration public bool CanRun(DateTime lastRunTime, DateTime currentTime) Parameters Type Name Description DateTime lastRunTime The last run time. DateTime currentTime The current time. Returns Type Description bool true if this instance can run the specified last run time; otherwise, false. See Also IFrequency Implements IFrequency Extension Methods ExpandoObjectExtensions.ConvertToExpando<TEntity>(TEntity?) GenericExtensions.When<TObject>(TObject, bool, Func<TObject, TObject>) See Also IFrequency"
  },
  "api/Mithril.Background.Abstractions.Frequencies.RunOnce.html": {
    "href": "api/Mithril.Background.Abstractions.Frequencies.RunOnce.html",
    "title": "Class RunOnce | Mithril API Reference",
    "keywords": "Class RunOnce Run once Inheritance object RunOnce Implements IFrequency Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Mithril.Background.Abstractions.Frequencies Assembly: Mithril.Background.Abstractions.dll Syntax public class RunOnce : IFrequency Methods | Improve this Doc View Source CanRun(DateTime, DateTime) Determines whether this instance can run based on the specified last run time. Declaration public bool CanRun(DateTime lastRunTime, DateTime currentTime) Parameters Type Name Description DateTime lastRunTime The last run time. DateTime currentTime The current time. Returns Type Description bool true if this instance can run the specified last run time; otherwise, false. See Also IFrequency Implements IFrequency Extension Methods ExpandoObjectExtensions.ConvertToExpando<TEntity>(TEntity?) GenericExtensions.When<TObject>(TObject, bool, Func<TObject, TObject>) See Also IFrequency"
  },
  "api/Mithril.Background.Abstractions.Frequencies.html": {
    "href": "api/Mithril.Background.Abstractions.Frequencies.html",
    "title": "Namespace Mithril.Background.Abstractions.Frequencies | Mithril API Reference",
    "keywords": "Namespace Mithril.Background.Abstractions.Frequencies Classes RunEvery Run every X amount of time based on TimeSpan RunOnce Run once"
  },
  "api/Mithril.Background.Abstractions.Interfaces.IBackgroundTask.html": {
    "href": "api/Mithril.Background.Abstractions.Interfaces.IBackgroundTask.html",
    "title": "Interface IBackgroundTask | Mithril API Reference",
    "keywords": "Interface IBackgroundTask Background task Namespace: Mithril.Background.Abstractions.Interfaces Assembly: Mithril.Background.Abstractions.dll Syntax public interface IBackgroundTask Properties | Improve this Doc View Source Name Gets the name. Declaration string Name { get; } Property Value Type Description string The name. Methods | Improve this Doc View Source ExecuteAsync() Executes this instance. Declaration Task ExecuteAsync() Returns Type Description Task Async task. Extension Methods ExpandoObjectExtensions.ConvertToExpando<TEntity>(TEntity?) GenericExtensions.When<TObject>(TObject, bool, Func<TObject, TObject>)"
  },
  "api/Mithril.Background.Abstractions.Interfaces.IFrequency.html": {
    "href": "api/Mithril.Background.Abstractions.Interfaces.IFrequency.html",
    "title": "Interface IFrequency | Mithril API Reference",
    "keywords": "Interface IFrequency Frequency interface Namespace: Mithril.Background.Abstractions.Interfaces Assembly: Mithril.Background.Abstractions.dll Syntax public interface IFrequency Methods | Improve this Doc View Source CanRun(DateTime, DateTime) Determines whether this instance can run based on the specified last run time. Declaration bool CanRun(DateTime lastRunTime, DateTime currentTime) Parameters Type Name Description DateTime lastRunTime The last run time. DateTime currentTime The current time. Returns Type Description bool true if this instance can run the specified last run time; otherwise, false. Extension Methods ExpandoObjectExtensions.ConvertToExpando<TEntity>(TEntity?) GenericExtensions.When<TObject>(TObject, bool, Func<TObject, TObject>)"
  },
  "api/Mithril.Background.Abstractions.Interfaces.IScheduledTask.html": {
    "href": "api/Mithril.Background.Abstractions.Interfaces.IScheduledTask.html",
    "title": "Interface IScheduledTask | Mithril API Reference",
    "keywords": "Interface IScheduledTask Scheduled background task Inherited Members IBackgroundTask.Name IBackgroundTask.ExecuteAsync() Namespace: Mithril.Background.Abstractions.Interfaces Assembly: Mithril.Background.Abstractions.dll Syntax public interface IScheduledTask : IBackgroundTask Properties | Improve this Doc View Source Frequencies Gets the frequencies that the task is run at. Declaration IFrequency[] Frequencies { get; } Property Value Type Description IFrequency[] The frequencies the task is run at. See Also IBackgroundTask | Improve this Doc View Source LastRunTime Gets the last run time. Declaration DateTime LastRunTime { get; set; } Property Value Type Description DateTime The last run time. See Also IBackgroundTask Extension Methods ExpandoObjectExtensions.ConvertToExpando<TEntity>(TEntity?) GenericExtensions.When<TObject>(TObject, bool, Func<TObject, TObject>) See Also IBackgroundTask"
  },
  "api/Mithril.Background.Abstractions.Interfaces.html": {
    "href": "api/Mithril.Background.Abstractions.Interfaces.html",
    "title": "Namespace Mithril.Background.Abstractions.Interfaces | Mithril API Reference",
    "keywords": "Namespace Mithril.Background.Abstractions.Interfaces Interfaces IBackgroundTask Background task IFrequency Frequency interface IScheduledTask Scheduled background task"
  },
  "api/Mithril.Background.Abstractions.Services.BackgroundTaskServiceBaseClass.html": {
    "href": "api/Mithril.Background.Abstractions.Services.BackgroundTaskServiceBaseClass.html",
    "title": "Class BackgroundTaskServiceBaseClass | Mithril API Reference",
    "keywords": "Class BackgroundTaskServiceBaseClass Background task service base class Inheritance object BackgroundTaskServiceBaseClass BackgroundTaskService Implements IBackgroundTaskService IDisposable Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Mithril.Background.Abstractions.Services Assembly: Mithril.Background.Abstractions.dll Syntax public abstract class BackgroundTaskServiceBaseClass : IBackgroundTaskService, IDisposable Constructors | Improve this Doc View Source BackgroundTaskServiceBaseClass(IEnumerable<IScheduledTask>) Initializes a new instance of the BackgroundTaskServiceBaseClass class. Declaration protected BackgroundTaskServiceBaseClass(IEnumerable<IScheduledTask> scheduledTasks) Parameters Type Name Description IEnumerable<IScheduledTask> scheduledTasks The scheduled tasks. See Also IBackgroundTaskService Properties | Improve this Doc View Source ScheduledTaskTimer Gets the scheduled task timer. Declaration protected Timer? ScheduledTaskTimer { get; } Property Value Type Description Timer The scheduled task timer. See Also IBackgroundTaskService | Improve this Doc View Source ScheduledTasks Gets the scheduled tasks. Declaration protected IEnumerable<IScheduledTask> ScheduledTasks { get; } Property Value Type Description IEnumerable<IScheduledTask> The scheduled tasks. See Also IBackgroundTaskService | Improve this Doc View Source Tasks Gets or sets the tasks. Declaration protected Queue<IBackgroundTask> Tasks { get; } Property Value Type Description Queue<IBackgroundTask> The tasks. See Also IBackgroundTaskService Methods | Improve this Doc View Source Dispose() Performs application-defined tasks associated with freeing, releasing, or resetting unmanaged resources. Declaration public void Dispose() See Also IBackgroundTaskService | Improve this Doc View Source Dispose(bool) Releases unmanaged and - optionally - managed resources. Declaration protected virtual void Dispose(bool managed) Parameters Type Name Description bool managed true to release both managed and unmanaged resources; false to release only unmanaged resources. See Also IBackgroundTaskService | Improve this Doc View Source Enqueue(params IBackgroundTask[]) Enqueues the specified task. Declaration public IBackgroundTaskService Enqueue(params IBackgroundTask[] tasks) Parameters Type Name Description IBackgroundTask[] tasks Returns Type Description IBackgroundTaskService This. See Also IBackgroundTaskService | Improve this Doc View Source ExecuteAsync() Executes any queued background tasks. Declaration public abstract Task ExecuteAsync() Returns Type Description Task Async task See Also IBackgroundTaskService Implements IBackgroundTaskService IDisposable Extension Methods ExpandoObjectExtensions.ConvertToExpando<TEntity>(TEntity?) GenericExtensions.When<TObject>(TObject, bool, Func<TObject, TObject>) See Also IBackgroundTaskService"
  },
  "api/Mithril.Background.Abstractions.Services.IBackgroundTaskService.html": {
    "href": "api/Mithril.Background.Abstractions.Services.IBackgroundTaskService.html",
    "title": "Interface IBackgroundTaskService | Mithril API Reference",
    "keywords": "Interface IBackgroundTaskService Background processing service Inherited Members IDisposable.Dispose() Namespace: Mithril.Background.Abstractions.Services Assembly: Mithril.Background.Abstractions.dll Syntax public interface IBackgroundTaskService : IDisposable Methods | Improve this Doc View Source Enqueue(params IBackgroundTask[]) Enqueues the specified task. Declaration IBackgroundTaskService Enqueue(params IBackgroundTask[] tasks) Parameters Type Name Description IBackgroundTask[] tasks The tasks. Returns Type Description IBackgroundTaskService This. | Improve this Doc View Source ExecuteAsync() Executes any queued background tasks. Declaration Task ExecuteAsync() Returns Type Description Task Async task Extension Methods ExpandoObjectExtensions.ConvertToExpando<TEntity>(TEntity?) GenericExtensions.When<TObject>(TObject, bool, Func<TObject, TObject>)"
  },
  "api/Mithril.Background.Abstractions.Services.html": {
    "href": "api/Mithril.Background.Abstractions.Services.html",
    "title": "Namespace Mithril.Background.Abstractions.Services | Mithril API Reference",
    "keywords": "Namespace Mithril.Background.Abstractions.Services Classes BackgroundTaskServiceBaseClass Background task service base class Interfaces IBackgroundTaskService Background processing service"
  },
  "api/Mithril.Background.Default.BackgroundModule.html": {
    "href": "api/Mithril.Background.Default.BackgroundModule.html",
    "title": "Class BackgroundModule | Mithril API Reference",
    "keywords": "Class BackgroundModule Background module Inheritance object ModuleBaseClass<BackgroundModule> BackgroundModule Implements IEquatable<BackgroundModule> IModule Inherited Members ModuleBaseClass<BackgroundModule>.Category ModuleBaseClass<BackgroundModule>.ContentPath ModuleBaseClass<BackgroundModule>.Features ModuleBaseClass<BackgroundModule>.ID ModuleBaseClass<BackgroundModule>.LastModified ModuleBaseClass<BackgroundModule>.Name ModuleBaseClass<BackgroundModule>.Order ModuleBaseClass<BackgroundModule>.Tags ModuleBaseClass<BackgroundModule>.Version ModuleBaseClass<BackgroundModule>.ConfigureApplication(IApplicationBuilder, IConfiguration, IHostEnvironment) ModuleBaseClass<BackgroundModule>.ConfigureHostSettings(IHostBuilder, IConfiguration, IHostEnvironment) ModuleBaseClass<BackgroundModule>.ConfigureLoggingSettings(ILoggingBuilder, IConfiguration, IHostEnvironment) ModuleBaseClass<BackgroundModule>.ConfigureMVC(IMvcBuilder, IConfiguration, IHostEnvironment) ModuleBaseClass<BackgroundModule>.ConfigureRoutes(IEndpointRouteBuilder, IConfiguration, IHostEnvironment) ModuleBaseClass<BackgroundModule>.ConfigureWebHostSettings(IWebHostBuilder, IConfiguration, IHostEnvironment) ModuleBaseClass<BackgroundModule>.Equals(object) ModuleBaseClass<BackgroundModule>.Equals(BackgroundModule) ModuleBaseClass<BackgroundModule>.GetHashCode() ModuleBaseClass<BackgroundModule>.InitializeDataAsync(IDataService, IServiceProvider) ModuleBaseClass<BackgroundModule>.OnStarted() ModuleBaseClass<BackgroundModule>.OnStopped() ModuleBaseClass<BackgroundModule>.OnStopping() object.Equals(object, object) object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Mithril.Background.Default Assembly: Mithril.Background.Default.dll Syntax public class BackgroundModule : ModuleBaseClass<BackgroundModule>, IEquatable<BackgroundModule>, IModule Constructors | Improve this Doc View Source BackgroundModule() Initializes a new instance of the BackgroundModule class. Declaration public BackgroundModule() See Also ModuleBaseClass<TModule> Methods | Improve this Doc View Source ConfigureServices(IServiceCollection?, IConfiguration?, IHostEnvironment?) Configures the services for the module. Declaration public override IServiceCollection? ConfigureServices(IServiceCollection? services, IConfiguration? configuration, IHostEnvironment? environment) Parameters Type Name Description IServiceCollection services The services collection. IConfiguration configuration The configuration. IHostEnvironment environment The environment. Returns Type Description IServiceCollection Overrides ModuleBaseClass<BackgroundModule>.ConfigureServices(IServiceCollection, IConfiguration, IHostEnvironment) See Also ModuleBaseClass<TModule> Implements IEquatable<T> IModule Extension Methods ExpandoObjectExtensions.ConvertToExpando<TEntity>(TEntity?) GenericExtensions.When<TObject>(TObject, bool, Func<TObject, TObject>) See Also ModuleBaseClass<TModule>"
  },
  "api/Mithril.Background.Default.HostedServices.BackgroundTasksHostedService.html": {
    "href": "api/Mithril.Background.Default.HostedServices.BackgroundTasksHostedService.html",
    "title": "Class BackgroundTasksHostedService | Mithril API Reference",
    "keywords": "Class BackgroundTasksHostedService Background task hosted service Inheritance object HostedServiceBaseClass<BackgroundTasksHostedService> BackgroundTasksHostedService Implements IHostedService IDisposable Inherited Members HostedServiceBaseClass<BackgroundTasksHostedService>.Description HostedServiceBaseClass<BackgroundTasksHostedService>.Logger HostedServiceBaseClass<BackgroundTasksHostedService>.Dispose() HostedServiceBaseClass<BackgroundTasksHostedService>.StartAsync(CancellationToken) HostedServiceBaseClass<BackgroundTasksHostedService>.StopAsync(CancellationToken) HostedServiceBaseClass<BackgroundTasksHostedService>.Dispose(bool) object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Mithril.Background.Default.HostedServices Assembly: Mithril.Background.Default.dll Syntax public class BackgroundTasksHostedService : HostedServiceBaseClass<BackgroundTasksHostedService>, IHostedService, IDisposable Constructors | Improve this Doc View Source BackgroundTasksHostedService(ILogger<BackgroundTasksHostedService>?, IBackgroundTaskService?) Initializes a new instance of the BackgroundTasksHostedService class. Declaration public BackgroundTasksHostedService(ILogger<BackgroundTasksHostedService>? logger, IBackgroundTaskService? backgroundTaskService) Parameters Type Name Description ILogger<BackgroundTasksHostedService> logger The logger. IBackgroundTaskService backgroundTaskService The background task service. See Also HostedServiceBaseClass<THostService> Methods | Improve this Doc View Source DoWorkAsync() Called to run the service. Declaration protected override Task DoWorkAsync() Returns Type Description Task The async task. Overrides HostedServiceBaseClass<BackgroundTasksHostedService>.DoWorkAsync() See Also HostedServiceBaseClass<THostService> Implements IHostedService IDisposable Extension Methods ExpandoObjectExtensions.ConvertToExpando<TEntity>(TEntity?) GenericExtensions.When<TObject>(TObject, bool, Func<TObject, TObject>) See Also HostedServiceBaseClass<THostService>"
  },
  "api/Mithril.Background.Default.HostedServices.html": {
    "href": "api/Mithril.Background.Default.HostedServices.html",
    "title": "Namespace Mithril.Background.Default.HostedServices | Mithril API Reference",
    "keywords": "Namespace Mithril.Background.Default.HostedServices Classes BackgroundTasksHostedService Background task hosted service"
  },
  "api/Mithril.Background.Default.Services.BackgroundTaskService.html": {
    "href": "api/Mithril.Background.Default.Services.BackgroundTaskService.html",
    "title": "Class BackgroundTaskService | Mithril API Reference",
    "keywords": "Class BackgroundTaskService Background task service Inheritance object BackgroundTaskServiceBaseClass BackgroundTaskService Implements IBackgroundTaskService IDisposable Inherited Members BackgroundTaskServiceBaseClass.ScheduledTasks BackgroundTaskServiceBaseClass.ScheduledTaskTimer BackgroundTaskServiceBaseClass.Tasks BackgroundTaskServiceBaseClass.Dispose() BackgroundTaskServiceBaseClass.Enqueue(params IBackgroundTask[]) BackgroundTaskServiceBaseClass.Dispose(bool) object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Mithril.Background.Default.Services Assembly: Mithril.Background.Default.dll Syntax public class BackgroundTaskService : BackgroundTaskServiceBaseClass, IBackgroundTaskService, IDisposable Constructors | Improve this Doc View Source BackgroundTaskService(IEnumerable<IScheduledTask>?, ILogger<BackgroundTaskService>?) Initializes a new instance of the BackgroundTaskService class. Declaration public BackgroundTaskService(IEnumerable<IScheduledTask>? scheduledTasks, ILogger<BackgroundTaskService>? logger) Parameters Type Name Description IEnumerable<IScheduledTask> scheduledTasks The scheduled tasks. ILogger<BackgroundTaskService> logger The logger. See Also BackgroundTaskServiceBaseClass Methods | Improve this Doc View Source ExecuteAsync() Executes any queued background tasks. Declaration public override Task ExecuteAsync() Returns Type Description Task Overrides BackgroundTaskServiceBaseClass.ExecuteAsync() See Also BackgroundTaskServiceBaseClass Implements IBackgroundTaskService IDisposable Extension Methods ExpandoObjectExtensions.ConvertToExpando<TEntity>(TEntity?) GenericExtensions.When<TObject>(TObject, bool, Func<TObject, TObject>) See Also BackgroundTaskServiceBaseClass"
  },
  "api/Mithril.Background.Default.Services.html": {
    "href": "api/Mithril.Background.Default.Services.html",
    "title": "Namespace Mithril.Background.Default.Services | Mithril API Reference",
    "keywords": "Namespace Mithril.Background.Default.Services Classes BackgroundTaskService Background task service"
  },
  "api/Mithril.Background.Default.html": {
    "href": "api/Mithril.Background.Default.html",
    "title": "Namespace Mithril.Background.Default | Mithril API Reference",
    "keywords": "Namespace Mithril.Background.Default Classes BackgroundModule Background module"
  },
  "api/Mithril.Caching.InMemory.BackgroundTasks.MemoryCompactionScheduledTask.html": {
    "href": "api/Mithril.Caching.InMemory.BackgroundTasks.MemoryCompactionScheduledTask.html",
    "title": "Class MemoryCompactionScheduledTask | Mithril API Reference",
    "keywords": "Class MemoryCompactionScheduledTask Memory compaction scheduled task Inheritance object MemoryCompactionScheduledTask Implements IScheduledTask IBackgroundTask Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Mithril.Caching.InMemory.BackgroundTasks Assembly: Mithril.Caching.InMemory.dll Syntax public class MemoryCompactionScheduledTask : IScheduledTask, IBackgroundTask Constructors | Improve this Doc View Source MemoryCompactionScheduledTask(Cache?) Initializes a new instance of the MemoryCompactionScheduledTask class. Declaration public MemoryCompactionScheduledTask(Cache? memoryCache) Parameters Type Name Description Cache memoryCache The memory cache. See Also IScheduledTask Properties | Improve this Doc View Source Frequencies Gets the frequencies that the task is run at. Declaration public IFrequency[] Frequencies { get; } Property Value Type Description IFrequency[] The frequencies the task is run at. See Also IScheduledTask | Improve this Doc View Source LastRunTime Gets the last run time. Declaration public DateTime LastRunTime { get; set; } Property Value Type Description DateTime The last run time. See Also IScheduledTask | Improve this Doc View Source Name Gets the name. Declaration public string Name { get; } Property Value Type Description string The name. See Also IScheduledTask Methods | Improve this Doc View Source ExecuteAsync() Executes this instance. Declaration public Task ExecuteAsync() Returns Type Description Task Async task. See Also IScheduledTask Implements IScheduledTask IBackgroundTask Extension Methods ExpandoObjectExtensions.ConvertToExpando<TEntity>(TEntity?) GenericExtensions.When<TObject>(TObject, bool, Func<TObject, TObject>) See Also IScheduledTask"
  },
  "api/Mithril.Caching.InMemory.BackgroundTasks.html": {
    "href": "api/Mithril.Caching.InMemory.BackgroundTasks.html",
    "title": "Namespace Mithril.Caching.InMemory.BackgroundTasks | Mithril API Reference",
    "keywords": "Namespace Mithril.Caching.InMemory.BackgroundTasks Classes MemoryCompactionScheduledTask Memory compaction scheduled task"
  },
  "api/Mithril.Caching.InMemory.Commands.ClearCacheCommandHandler.html": {
    "href": "api/Mithril.Caching.InMemory.Commands.ClearCacheCommandHandler.html",
    "title": "Class ClearCacheCommandHandler | Mithril API Reference",
    "keywords": "Class ClearCacheCommandHandler Clear cache command handler Inheritance object ClearCacheCommandHandler Implements ICommandHandler<ClearCacheCommandVM> ICommandHandler Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Mithril.Caching.InMemory.Commands Assembly: Mithril.Caching.InMemory.dll Syntax [ApiAuthorize(\"Admin Only\")] public class ClearCacheCommandHandler : ICommandHandler<ClearCacheCommandVM>, ICommandHandler Constructors | Improve this Doc View Source ClearCacheCommandHandler(Cache?, ILogger<ClearCacheCommandHandler>?) Initializes a new instance of the ClearCacheCommandHandler class. Declaration public ClearCacheCommandHandler(Cache? memoryCache, ILogger<ClearCacheCommandHandler>? logger) Parameters Type Name Description Cache memoryCache The memory cache. ILogger<ClearCacheCommandHandler> logger The logger. See Also CommandHandlerBaseClass<TCommand, TViewModel> Properties | Improve this Doc View Source CommandName Gets the command type accepted. Declaration public string CommandName { get; } Property Value Type Description string The command type accepted. See Also CommandHandlerBaseClass<TCommand, TViewModel> | Improve this Doc View Source ContentTypeAccepts Gets the content type accepted by command handler. Declaration public string[] ContentTypeAccepts { get; } Property Value Type Description string[] The content type accepted by command handler. See Also CommandHandlerBaseClass<TCommand, TViewModel> | Improve this Doc View Source Features Gets the features associated with this command. Declaration public IFeature[] Features { get; } Property Value Type Description IFeature[] The features associated with this command. See Also CommandHandlerBaseClass<TCommand, TViewModel> | Improve this Doc View Source Tags Gets the tags (Used by OpenAPI, etc). Declaration public string[] Tags { get; } Property Value Type Description string[] The tags (Used by OpenAPI, etc). See Also CommandHandlerBaseClass<TCommand, TViewModel> | Improve this Doc View Source Version Gets the version (not guaranteed to be used in all query providers, but defaults to \"v1\"). Declaration public string? Version { get; } Property Value Type Description string The version. See Also CommandHandlerBaseClass<TCommand, TViewModel> | Improve this Doc View Source ViewModelType Gets the type of the view model it accepts. Declaration public Type ViewModelType { get; } Property Value Type Description Type The type of the view model it accepts. See Also CommandHandlerBaseClass<TCommand, TViewModel> Methods | Improve this Doc View Source CanHandle(ICommand) Determines whether this instance can handle the specified command. Declaration public bool CanHandle(ICommand command) Parameters Type Name Description ICommand command The command. Returns Type Description bool true if this instance can handle the specified command; otherwise, false. See Also CommandHandlerBaseClass<TCommand, TViewModel> | Improve this Doc View Source CreateAsync(ClearCacheCommandVM?, ClaimsPrincipal) Creates the specified value. Declaration public ValueTask<CommandCreationResult?> CreateAsync(ClearCacheCommandVM? value, ClaimsPrincipal user) Parameters Type Name Description ClearCacheCommandVM value The value. ClaimsPrincipal user The user. Returns Type Description ValueTask<CommandCreationResult> A command value converted from the view model. See Also CommandHandlerBaseClass<TCommand, TViewModel> | Improve this Doc View Source HandleCommandAsync(params ICommand[]) Handles the Command. Declaration public Task<IEvent[]> HandleCommandAsync(params ICommand[] arg) Parameters Type Name Description ICommand[] arg The argument. Returns Type Description Task<IEvent[]> Any events that are spawned by the command. See Also CommandHandlerBaseClass<TCommand, TViewModel> Implements ICommandHandler<TViewModel> ICommandHandler Extension Methods ExpandoObjectExtensions.ConvertToExpando<TEntity>(TEntity?) GenericExtensions.When<TObject>(TObject, bool, Func<TObject, TObject>) See Also CommandHandlerBaseClass<TCommand, TViewModel>"
  },
  "api/Mithril.Caching.InMemory.Commands.ViewModels.ClearCacheCommandVM.html": {
    "href": "api/Mithril.Caching.InMemory.Commands.ViewModels.ClearCacheCommandVM.html",
    "title": "Class ClearCacheCommandVM | Mithril API Reference",
    "keywords": "Class ClearCacheCommandVM Clear cache command. Requires admin access. Inheritance object ClearCacheCommandVM Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Mithril.Caching.InMemory.Commands.ViewModels Assembly: Mithril.Caching.InMemory.dll Syntax public class ClearCacheCommandVM Properties | Improve this Doc View Source CacheName The name of the cache to clear (built in caches include \"Default\" for basic information and \"Inflatable\" for database queries). Declaration public string? CacheName { get; set; } Property Value Type Description string The name of the cache (built in caches include \"Default\" for basic information and \"Inflatable\" for database queries). Extension Methods ExpandoObjectExtensions.ConvertToExpando<TEntity>(TEntity?) GenericExtensions.When<TObject>(TObject, bool, Func<TObject, TObject>)"
  },
  "api/Mithril.Caching.InMemory.Commands.ViewModels.html": {
    "href": "api/Mithril.Caching.InMemory.Commands.ViewModels.html",
    "title": "Namespace Mithril.Caching.InMemory.Commands.ViewModels | Mithril API Reference",
    "keywords": "Namespace Mithril.Caching.InMemory.Commands.ViewModels Classes ClearCacheCommandVM Clear cache command. Requires admin access."
  },
  "api/Mithril.Caching.InMemory.Commands.html": {
    "href": "api/Mithril.Caching.InMemory.Commands.html",
    "title": "Namespace Mithril.Caching.InMemory.Commands | Mithril API Reference",
    "keywords": "Namespace Mithril.Caching.InMemory.Commands Classes ClearCacheCommandHandler Clear cache command handler"
  },
  "api/Mithril.Caching.InMemory.InMemoryCachingModule.html": {
    "href": "api/Mithril.Caching.InMemory.InMemoryCachingModule.html",
    "title": "Class InMemoryCachingModule | Mithril API Reference",
    "keywords": "Class InMemoryCachingModule In-Memory caching module Inheritance object ModuleBaseClass<InMemoryCachingModule> InMemoryCachingModule Implements IEquatable<InMemoryCachingModule> IModule Inherited Members ModuleBaseClass<InMemoryCachingModule>.Category ModuleBaseClass<InMemoryCachingModule>.ContentPath ModuleBaseClass<InMemoryCachingModule>.Features ModuleBaseClass<InMemoryCachingModule>.ID ModuleBaseClass<InMemoryCachingModule>.LastModified ModuleBaseClass<InMemoryCachingModule>.Name ModuleBaseClass<InMemoryCachingModule>.Tags ModuleBaseClass<InMemoryCachingModule>.Version ModuleBaseClass<InMemoryCachingModule>.ConfigureApplication(IApplicationBuilder, IConfiguration, IHostEnvironment) ModuleBaseClass<InMemoryCachingModule>.ConfigureHostSettings(IHostBuilder, IConfiguration, IHostEnvironment) ModuleBaseClass<InMemoryCachingModule>.ConfigureLoggingSettings(ILoggingBuilder, IConfiguration, IHostEnvironment) ModuleBaseClass<InMemoryCachingModule>.ConfigureMVC(IMvcBuilder, IConfiguration, IHostEnvironment) ModuleBaseClass<InMemoryCachingModule>.ConfigureRoutes(IEndpointRouteBuilder, IConfiguration, IHostEnvironment) ModuleBaseClass<InMemoryCachingModule>.ConfigureWebHostSettings(IWebHostBuilder, IConfiguration, IHostEnvironment) ModuleBaseClass<InMemoryCachingModule>.Equals(object) ModuleBaseClass<InMemoryCachingModule>.Equals(InMemoryCachingModule) ModuleBaseClass<InMemoryCachingModule>.GetHashCode() ModuleBaseClass<InMemoryCachingModule>.InitializeDataAsync(IDataService, IServiceProvider) ModuleBaseClass<InMemoryCachingModule>.OnStarted() ModuleBaseClass<InMemoryCachingModule>.OnStopped() ModuleBaseClass<InMemoryCachingModule>.OnStopping() object.Equals(object, object) object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Mithril.Caching.InMemory Assembly: Mithril.Caching.InMemory.dll Syntax public class InMemoryCachingModule : ModuleBaseClass<InMemoryCachingModule>, IEquatable<InMemoryCachingModule>, IModule Constructors | Improve this Doc View Source InMemoryCachingModule() Initializes a new instance of the InMemoryCachingModule class. Declaration public InMemoryCachingModule() See Also ModuleBaseClass<TModule> Properties | Improve this Doc View Source Order Gets the order that they are initialized in. Declaration public override int Order { get; protected set; } Property Value Type Description int The order that they are initialized in. Overrides ModuleBaseClass<InMemoryCachingModule>.Order See Also ModuleBaseClass<TModule> Methods | Improve this Doc View Source ConfigureServices(IServiceCollection?, IConfiguration?, IHostEnvironment?) Configures the services for the module. Declaration public override IServiceCollection? ConfigureServices(IServiceCollection? services, IConfiguration? configuration, IHostEnvironment? environment) Parameters Type Name Description IServiceCollection services The services collection. IConfiguration configuration The configuration. IHostEnvironment environment The environment. Returns Type Description IServiceCollection Overrides ModuleBaseClass<InMemoryCachingModule>.ConfigureServices(IServiceCollection, IConfiguration, IHostEnvironment) See Also ModuleBaseClass<TModule> Implements IEquatable<T> IModule Extension Methods ExpandoObjectExtensions.ConvertToExpando<TEntity>(TEntity?) GenericExtensions.When<TObject>(TObject, bool, Func<TObject, TObject>) See Also ModuleBaseClass<TModule>"
  },
  "api/Mithril.Caching.InMemory.html": {
    "href": "api/Mithril.Caching.InMemory.html",
    "title": "Namespace Mithril.Caching.InMemory | Mithril API Reference",
    "keywords": "Namespace Mithril.Caching.InMemory Classes InMemoryCachingModule In-Memory caching module"
  },
  "api/Mithril.Communication.Abstractions.Attachment.html": {
    "href": "api/Mithril.Communication.Abstractions.Attachment.html",
    "title": "Class Attachment | Mithril API Reference",
    "keywords": "Class Attachment Message file attachments Inheritance object ModelBase<Attachment> Attachment Implements IModel<Attachment> IModel IEquatable<IModel> IEquatable<IModel<Attachment>> IComparable IComparable<Attachment> IEquatable<ModelBase<Attachment>> Inherited Members ModelBase<Attachment>.Active ModelBase<Attachment>.Creator ModelBase<Attachment>.DateCreated ModelBase<Attachment>.DateModified ModelBase<Attachment>.ID ModelBase<Attachment>.Modifier ModelBase<Attachment>.TenantID ModelBase<Attachment>.All(IDataService) ModelBase<Attachment>.AllActive(IDataService) ModelBase<Attachment>.AllInactive(IDataService) ModelBase<Attachment>.Load(long, IDataService) ModelBase<Attachment>.Query(IDataService) ModelBase<Attachment>.CanBeModifiedBy(ClaimsPrincipal) ModelBase<Attachment>.CanBeViewedBy(ClaimsPrincipal) ModelBase<Attachment>.CompareTo(object) ModelBase<Attachment>.DeleteAsync(IDataService, ClaimsPrincipal, bool) ModelBase<Attachment>.Equals(IModel) ModelBase<Attachment>.Equals(IModel<Attachment>) ModelBase<Attachment>.Equals(ModelBase<Attachment>) ModelBase<Attachment>.SaveAsync(IDataService, ClaimsPrincipal) ModelBase<Attachment>.SetupObject(IDataService, ClaimsPrincipal) ModelBase<Attachment>.SetupObject(IDataService, IUser) ModelBase<Attachment>.SetupObjectAndReturn(IDataService, ClaimsPrincipal) object.Equals(object, object) object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Namespace: Mithril.Communication.Abstractions Assembly: Mithril.Communication.Abstractions.dll Syntax public class Attachment : ModelBase<Attachment>, IModel<Attachment>, IModel, IEquatable<IModel>, IEquatable<IModel<Attachment>>, IComparable, IComparable<Attachment>, IEquatable<ModelBase<Attachment>> Properties | Improve this Doc View Source Content Gets the content. Declaration public byte[] Content { get; } Property Value Type Description byte[] The content. See Also ModelBase<TClass> | Improve this Doc View Source FileHash Gets or sets the file hash. Declaration [MaxLength(512)] [Required] public string? FileHash { get; set; } Property Value Type Description string The file hash. See Also ModelBase<TClass> | Improve this Doc View Source FileName Gets or sets the name of the file. Declaration [MaxLength(128)] public string? FileName { get; set; } Property Value Type Description string The name of the file. See Also ModelBase<TClass> | Improve this Doc View Source Location Gets or sets the location on disk. Declaration [MaxLength(1028)] public string? Location { get; set; } Property Value Type Description string The location on disk. See Also ModelBase<TClass> | Improve this Doc View Source MimeType Gets or sets the type of the MIME. Declaration [MaxLength(64)] public string? MimeType { get; set; } Property Value Type Description string The type of the MIME. See Also ModelBase<TClass> | Improve this Doc View Source Size Gets or sets the size. Declaration public long Size { get; set; } Property Value Type Description long The size. See Also ModelBase<TClass> Methods | Improve this Doc View Source CompareTo(Attachment?) Compares the object to another object Declaration public override int CompareTo(Attachment? other) Parameters Type Name Description Attachment other Object to compare to Returns Type Description int 0 if they are equal, -1 if this is smaller, 1 if it is larger Overrides ModelBase<Attachment>.CompareTo(Attachment) See Also ModelBase<TClass> | Improve this Doc View Source Equals(Attachment) Indicates whether the current object is equal to another object of the same type. Declaration public bool Equals(Attachment other) Parameters Type Name Description Attachment other An object to compare with this object. Returns Type Description bool true if the current object is equal to the other parameter; otherwise, false. See Also ModelBase<TClass> | Improve this Doc View Source Equals(object?) Determines whether the specified object, is equal to this instance. Declaration public override bool Equals(object? obj) Parameters Type Name Description object obj The object to compare with this instance. Returns Type Description bool true if the specified object is equal to this instance; otherwise, false. Overrides ModelBase<Attachment>.Equals(object) See Also ModelBase<TClass> | Improve this Doc View Source GetHashCode() Returns a hash code for this instance. Declaration public override int GetHashCode() Returns Type Description int A hash code for this instance, suitable for use in hashing algorithms and data structures like a hash table. Overrides Mithril.Data.Abstractions.BaseClasses.ModelBase<Mithril.Communication.Abstractions.Attachment>.GetHashCode() See Also ModelBase<TClass> | Improve this Doc View Source ToString() Returns a string that represents this instance. Declaration public override string ToString() Returns Type Description string A string that represents this instance. Overrides object.ToString() See Also ModelBase<TClass> Operators | Improve this Doc View Source operator ==(Attachment, Attachment) Implements the operator ==. Declaration public static bool operator ==(Attachment first, Attachment second) Parameters Type Name Description Attachment first The first. Attachment second The second. Returns Type Description bool The result of the operator. See Also ModelBase<TClass> | Improve this Doc View Source operator >(Attachment, Attachment) Implements the operator >. Declaration public static bool operator >(Attachment left, Attachment right) Parameters Type Name Description Attachment left The left. Attachment right The right. Returns Type Description bool The result of the operator. See Also ModelBase<TClass> | Improve this Doc View Source operator >=(Attachment, Attachment) Implements the operator >=. Declaration public static bool operator >=(Attachment left, Attachment right) Parameters Type Name Description Attachment left The left. Attachment right The right. Returns Type Description bool The result of the operator. See Also ModelBase<TClass> | Improve this Doc View Source operator !=(Attachment, Attachment) Implements the operator !=. Declaration public static bool operator !=(Attachment left, Attachment right) Parameters Type Name Description Attachment left The left. Attachment right The right. Returns Type Description bool The result of the operator. See Also ModelBase<TClass> | Improve this Doc View Source operator <(Attachment, Attachment) Implements the operator <. Declaration public static bool operator <(Attachment left, Attachment right) Parameters Type Name Description Attachment left The left. Attachment right The right. Returns Type Description bool The result of the operator. See Also ModelBase<TClass> | Improve this Doc View Source operator <=(Attachment, Attachment) Implements the operator <=. Declaration public static bool operator <=(Attachment left, Attachment right) Parameters Type Name Description Attachment left The left. Attachment right The right. Returns Type Description bool The result of the operator. See Also ModelBase<TClass> Implements IModel<TClass> IModel IEquatable<T> IEquatable<T> IComparable IComparable<T> IEquatable<T> Extension Methods ExpandoObjectExtensions.ConvertToExpando<TEntity>(TEntity?) GenericExtensions.When<TObject>(TObject, bool, Func<TObject, TObject>) See Also ModelBase<TClass>"
  },
  "api/Mithril.Communication.Abstractions.AttachmentMapping.html": {
    "href": "api/Mithril.Communication.Abstractions.AttachmentMapping.html",
    "title": "Class AttachmentMapping | Mithril API Reference",
    "keywords": "Class AttachmentMapping Attachment mapping Inheritance object MappingBaseClass<Attachment, DefaultDatabase> AttachmentMapping Implements IMapping<Attachment> IMapping Inherited Members MappingBaseClass<Attachment, DefaultDatabase>.AddAutoKey() MappingBaseClass<Attachment, DefaultDatabase>.ContainsProperty(string) MappingBaseClass<Attachment, DefaultDatabase>.Copy(IMapping) MappingBaseClass<Attachment, DefaultDatabase>.CopyProperty(IIDProperty) MappingBaseClass<Attachment, DefaultDatabase>.CopyProperty(IProperty) MappingBaseClass<Attachment, DefaultDatabase>.CopyProperty(IMapProperty) MappingBaseClass<Attachment, DefaultDatabase>.CopyProperty(IManyToOneProperty) MappingBaseClass<Attachment, DefaultDatabase>.CopyProperty(IManyToManyProperty) MappingBaseClass<Attachment, DefaultDatabase>.Equals(object) MappingBaseClass<Attachment, DefaultDatabase>.GetColumnName(string) MappingBaseClass<Attachment, DefaultDatabase>.GetHashCode() MappingBaseClass<Attachment, DefaultDatabase>.ID<TDataType>(Expression<Func<Attachment, TDataType>>) MappingBaseClass<Attachment, DefaultDatabase>.ManyToMany<TDataType>(Expression<Func<Attachment, IList<TDataType>>>) MappingBaseClass<Attachment, DefaultDatabase>.ManyToOne<TDataType>(Expression<Func<Attachment, IList<TDataType>>>) MappingBaseClass<Attachment, DefaultDatabase>.ManyToOne<TDataType>(Expression<Func<Attachment, TDataType>>) MappingBaseClass<Attachment, DefaultDatabase>.Map<TDataType>(Expression<Func<Attachment, TDataType>>) MappingBaseClass<Attachment, DefaultDatabase>.Reduce(ILogger) MappingBaseClass<Attachment, DefaultDatabase>.Reduce(IMapping, ILogger) MappingBaseClass<Attachment, DefaultDatabase>.Reference<TDataType>(Expression<Func<Attachment, TDataType>>) MappingBaseClass<Attachment, DefaultDatabase>.SetQuery(QueryType, string, CommandType, params IParameter[]) MappingBaseClass<Attachment, DefaultDatabase>.Setup() MappingBaseClass<Attachment, DefaultDatabase>.ToString() MappingBaseClass<Attachment, DefaultDatabase>.AutoIDProperties MappingBaseClass<Attachment, DefaultDatabase>.DatabaseConfigType MappingBaseClass<Attachment, DefaultDatabase>.IDProperties MappingBaseClass<Attachment, DefaultDatabase>.ManyToManyProperties MappingBaseClass<Attachment, DefaultDatabase>.ManyToOneProperties MappingBaseClass<Attachment, DefaultDatabase>.MapProperties MappingBaseClass<Attachment, DefaultDatabase>.Merge MappingBaseClass<Attachment, DefaultDatabase>.ObjectType MappingBaseClass<Attachment, DefaultDatabase>.Order MappingBaseClass<Attachment, DefaultDatabase>.Prefix MappingBaseClass<Attachment, DefaultDatabase>.Queries MappingBaseClass<Attachment, DefaultDatabase>.ReferenceProperties MappingBaseClass<Attachment, DefaultDatabase>.SchemaName MappingBaseClass<Attachment, DefaultDatabase>.Suffix MappingBaseClass<Attachment, DefaultDatabase>.TableName object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Mithril.Communication.Abstractions Assembly: Mithril.Communication.Abstractions.dll Syntax public class AttachmentMapping : MappingBaseClass<Attachment, DefaultDatabase>, IMapping<Attachment>, IMapping Constructors | Improve this Doc View Source AttachmentMapping() Initializes a new instance of the AttachmentMapping class. Declaration public AttachmentMapping() See Also MappingBaseClass<TClassType, TDatabaseType> Implements IMapping<TClassType> IMapping Extension Methods ExpandoObjectExtensions.ConvertToExpando<TEntity>(TEntity?) GenericExtensions.When<TObject>(TObject, bool, Func<TObject, TObject>) See Also MappingBaseClass<TClassType, TDatabaseType>"
  },
  "api/Mithril.Communication.Abstractions.BaseClasses.ChannelBaseClass-2.html": {
    "href": "api/Mithril.Communication.Abstractions.BaseClasses.ChannelBaseClass-2.html",
    "title": "Class ChannelBaseClass<TChannel, TMessage> | Mithril API Reference",
    "keywords": "Class ChannelBaseClass<TChannel, TMessage> Communication channel base class Inheritance object ChannelBaseClass<TChannel, TMessage> EmailChannel Implements IChannel Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Mithril.Communication.Abstractions.BaseClasses Assembly: Mithril.Communication.Abstractions.dll Syntax public abstract class ChannelBaseClass<TChannel, TMessage> : IChannel where TChannel : IChannel where TMessage : IMessage, new() Type Parameters Name Description TChannel The type of the channel. TMessage The type of the message. Constructors | Improve this Doc View Source ChannelBaseClass(ILogger<TChannel>?, IFeatureManager?) Initializes a new instance of the ChannelBaseClass<TChannel, TMessage> class. Declaration protected ChannelBaseClass(ILogger<TChannel>? logger, IFeatureManager? featureManager) Parameters Type Name Description ILogger<TChannel> logger The logger. IFeatureManager featureManager The feature manager. See Also IChannel Properties | Improve this Doc View Source FeatureManager Gets the feature manager. Declaration protected IFeatureManager? FeatureManager { get; } Property Value Type Description IFeatureManager The feature manager. See Also IChannel | Improve this Doc View Source Logger Gets the logger. Declaration protected ILogger<TChannel>? Logger { get; } Property Value Type Description ILogger<TChannel> The logger. See Also IChannel | Improve this Doc View Source Name Gets the name. Declaration public abstract string Name { get; } Property Value Type Description string The name. See Also IChannel Methods | Improve this Doc View Source CanHandle(IMessage?) Determines whether this instance can handle the specified message. Declaration public bool CanHandle(IMessage? message) Parameters Type Name Description IMessage message The message. Returns Type Description bool true if this instance can handle the specified message; otherwise, false. See Also IChannel | Improve this Doc View Source CreateMessage() Creates a message object. Declaration public virtual IMessage CreateMessage() Returns Type Description IMessage The message related to the channel. See Also IChannel | Improve this Doc View Source SendMessageAsync(IMessage?) Sends the message asynchronously. Declaration public abstract Task<MessageResult> SendMessageAsync(IMessage? message) Parameters Type Name Description IMessage message The message. Returns Type Description Task<MessageResult> The message result See Also IChannel Implements IChannel Extension Methods ExpandoObjectExtensions.ConvertToExpando<TEntity>(TEntity?) GenericExtensions.When<TObject>(TObject, bool, Func<TObject, TObject>) See Also IChannel"
  },
  "api/Mithril.Communication.Abstractions.BaseClasses.html": {
    "href": "api/Mithril.Communication.Abstractions.BaseClasses.html",
    "title": "Namespace Mithril.Communication.Abstractions.BaseClasses | Mithril API Reference",
    "keywords": "Namespace Mithril.Communication.Abstractions.BaseClasses Classes ChannelBaseClass<TChannel, TMessage> Communication channel base class"
  },
  "api/Mithril.Communication.Abstractions.Commands.SendMessageCommand.html": {
    "href": "api/Mithril.Communication.Abstractions.Commands.SendMessageCommand.html",
    "title": "Class SendMessageCommand | Mithril API Reference",
    "keywords": "Class SendMessageCommand Send message command Inheritance object ModelBase<SendMessageCommand> CommandBaseClass<SendMessageCommand> SendMessageCommand Implements IModel<SendMessageCommand> IEquatable<IModel<SendMessageCommand>> IComparable IComparable<SendMessageCommand> IEquatable<ModelBase<SendMessageCommand>> ICommand IEquatable<ICommand> IModel IEquatable<IModel> IEquatable<CommandBaseClass<SendMessageCommand>> Inherited Members CommandBaseClass<SendMessageCommand>.Name CommandBaseClass<SendMessageCommand>.CompareTo(CommandBaseClass<SendMessageCommand>) CommandBaseClass<SendMessageCommand>.Equals(CommandBaseClass<SendMessageCommand>) CommandBaseClass<SendMessageCommand>.Equals(ICommand) CommandBaseClass<SendMessageCommand>.ToString() ModelBase<SendMessageCommand>.Active ModelBase<SendMessageCommand>.Creator ModelBase<SendMessageCommand>.DateCreated ModelBase<SendMessageCommand>.DateModified ModelBase<SendMessageCommand>.ID ModelBase<SendMessageCommand>.Modifier ModelBase<SendMessageCommand>.TenantID ModelBase<SendMessageCommand>.All(IDataService) ModelBase<SendMessageCommand>.AllActive(IDataService) ModelBase<SendMessageCommand>.AllInactive(IDataService) ModelBase<SendMessageCommand>.Load(long, IDataService) ModelBase<SendMessageCommand>.Query(IDataService) ModelBase<SendMessageCommand>.CanBeModifiedBy(ClaimsPrincipal) ModelBase<SendMessageCommand>.CanBeViewedBy(ClaimsPrincipal) ModelBase<SendMessageCommand>.CompareTo(object) ModelBase<SendMessageCommand>.DeleteAsync(IDataService, ClaimsPrincipal, bool) ModelBase<SendMessageCommand>.Equals(IModel) ModelBase<SendMessageCommand>.Equals(IModel<SendMessageCommand>) ModelBase<SendMessageCommand>.Equals(ModelBase<SendMessageCommand>) ModelBase<SendMessageCommand>.SaveAsync(IDataService, ClaimsPrincipal) ModelBase<SendMessageCommand>.SetupObject(IDataService, ClaimsPrincipal) ModelBase<SendMessageCommand>.SetupObject(IDataService, IUser) ModelBase<SendMessageCommand>.SetupObjectAndReturn(IDataService, ClaimsPrincipal) object.Equals(object, object) object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Namespace: Mithril.Communication.Abstractions.Commands Assembly: Mithril.Communication.Abstractions.dll Syntax public class SendMessageCommand : CommandBaseClass<SendMessageCommand>, IModel<SendMessageCommand>, IEquatable<IModel<SendMessageCommand>>, IComparable, IComparable<SendMessageCommand>, IEquatable<ModelBase<SendMessageCommand>>, ICommand, IEquatable<ICommand>, IModel, IEquatable<IModel>, IEquatable<CommandBaseClass<SendMessageCommand>> Constructors | Improve this Doc View Source SendMessageCommand() Initializes a new instance of the SendMessageCommand class. Declaration public SendMessageCommand() See Also CommandBaseClass<TCommand> | Improve this Doc View Source SendMessageCommand(IMessage?) Initializes a new instance of the SendMessageCommand class. Declaration public SendMessageCommand(IMessage? message) Parameters Type Name Description IMessage message The message. See Also CommandBaseClass<TCommand> Properties | Improve this Doc View Source Message Gets the message. Declaration public virtual IMessage? Message { get; set; } Property Value Type Description IMessage The message. See Also CommandBaseClass<TCommand> Methods | Improve this Doc View Source CompareTo(SendMessageCommand?) Compares the object to another object Declaration public override int CompareTo(SendMessageCommand? other) Parameters Type Name Description SendMessageCommand other Object to compare to Returns Type Description int 0 if they are equal, -1 if this is smaller, 1 if it is larger Overrides ModelBase<SendMessageCommand>.CompareTo(SendMessageCommand) See Also CommandBaseClass<TCommand> | Improve this Doc View Source Equals(SendMessageCommand) Indicates whether the current object is equal to another object of the same type. Declaration public bool Equals(SendMessageCommand other) Parameters Type Name Description SendMessageCommand other An object to compare with this object. Returns Type Description bool true if the current object is equal to the other parameter; otherwise, false. See Also CommandBaseClass<TCommand> | Improve this Doc View Source Equals(object?) Determines whether the specified object, is equal to this instance. Declaration public override bool Equals(object? obj) Parameters Type Name Description object obj The object to compare with this instance. Returns Type Description bool true if the specified object is equal to this instance; otherwise, false. Overrides CommandBaseClass<SendMessageCommand>.Equals(object) See Also CommandBaseClass<TCommand> | Improve this Doc View Source GetHashCode() Returns a hash code for this instance. Declaration public override int GetHashCode() Returns Type Description int A hash code for this instance, suitable for use in hashing algorithms and data structures like a hash table. Overrides CommandBaseClass<SendMessageCommand>.GetHashCode() See Also CommandBaseClass<TCommand> Operators | Improve this Doc View Source operator ==(SendMessageCommand, SendMessageCommand) Implements the operator ==. Declaration public static bool operator ==(SendMessageCommand first, SendMessageCommand second) Parameters Type Name Description SendMessageCommand first The first. SendMessageCommand second The second. Returns Type Description bool The result of the operator. See Also CommandBaseClass<TCommand> | Improve this Doc View Source operator >(SendMessageCommand, SendMessageCommand) Implements the operator >. Declaration public static bool operator >(SendMessageCommand left, SendMessageCommand right) Parameters Type Name Description SendMessageCommand left The left. SendMessageCommand right The right. Returns Type Description bool The result of the operator. See Also CommandBaseClass<TCommand> | Improve this Doc View Source operator >=(SendMessageCommand, SendMessageCommand) Implements the operator >=. Declaration public static bool operator >=(SendMessageCommand left, SendMessageCommand right) Parameters Type Name Description SendMessageCommand left The left. SendMessageCommand right The right. Returns Type Description bool The result of the operator. See Also CommandBaseClass<TCommand> | Improve this Doc View Source operator !=(SendMessageCommand, SendMessageCommand) Implements the operator !=. Declaration public static bool operator !=(SendMessageCommand left, SendMessageCommand right) Parameters Type Name Description SendMessageCommand left The left. SendMessageCommand right The right. Returns Type Description bool The result of the operator. See Also CommandBaseClass<TCommand> | Improve this Doc View Source operator <(SendMessageCommand, SendMessageCommand) Implements the operator <. Declaration public static bool operator <(SendMessageCommand left, SendMessageCommand right) Parameters Type Name Description SendMessageCommand left The left. SendMessageCommand right The right. Returns Type Description bool The result of the operator. See Also CommandBaseClass<TCommand> | Improve this Doc View Source operator <=(SendMessageCommand, SendMessageCommand) Implements the operator <=. Declaration public static bool operator <=(SendMessageCommand left, SendMessageCommand right) Parameters Type Name Description SendMessageCommand left The left. SendMessageCommand right The right. Returns Type Description bool The result of the operator. See Also CommandBaseClass<TCommand> Implements IModel<TClass> IEquatable<T> IComparable IComparable<T> IEquatable<T> ICommand IEquatable<T> IModel IEquatable<T> IEquatable<T> Extension Methods ExpandoObjectExtensions.ConvertToExpando<TEntity>(TEntity?) GenericExtensions.When<TObject>(TObject, bool, Func<TObject, TObject>) See Also CommandBaseClass<TCommand>"
  },
  "api/Mithril.Communication.Abstractions.Commands.html": {
    "href": "api/Mithril.Communication.Abstractions.Commands.html",
    "title": "Namespace Mithril.Communication.Abstractions.Commands | Mithril API Reference",
    "keywords": "Namespace Mithril.Communication.Abstractions.Commands Classes SendMessageCommand Send message command"
  },
  "api/Mithril.Communication.Abstractions.Events.MessageSentEvent.html": {
    "href": "api/Mithril.Communication.Abstractions.Events.MessageSentEvent.html",
    "title": "Class MessageSentEvent | Mithril API Reference",
    "keywords": "Class MessageSentEvent Message sent event Inheritance object ModelBase<MessageSentEvent> EventBaseClass<MessageSentEvent> MessageSentEvent Implements IModel<MessageSentEvent> IEquatable<IModel<MessageSentEvent>> IComparable IComparable<MessageSentEvent> IEquatable<ModelBase<MessageSentEvent>> IEvent IEquatable<IEvent> IModel IEquatable<IModel> IEquatable<EventBaseClass<MessageSentEvent>> Inherited Members EventBaseClass<MessageSentEvent>.Name EventBaseClass<MessageSentEvent>.RetryCount EventBaseClass<MessageSentEvent>.State EventBaseClass<MessageSentEvent>.CanRun() EventBaseClass<MessageSentEvent>.CompareTo(EventBaseClass<MessageSentEvent>) EventBaseClass<MessageSentEvent>.Equals(EventBaseClass<MessageSentEvent>) EventBaseClass<MessageSentEvent>.Equals(IEvent) EventBaseClass<MessageSentEvent>.ToString() ModelBase<MessageSentEvent>.Active ModelBase<MessageSentEvent>.Creator ModelBase<MessageSentEvent>.DateCreated ModelBase<MessageSentEvent>.DateModified ModelBase<MessageSentEvent>.ID ModelBase<MessageSentEvent>.Modifier ModelBase<MessageSentEvent>.TenantID ModelBase<MessageSentEvent>.All(IDataService) ModelBase<MessageSentEvent>.AllActive(IDataService) ModelBase<MessageSentEvent>.AllInactive(IDataService) ModelBase<MessageSentEvent>.Load(long, IDataService) ModelBase<MessageSentEvent>.Query(IDataService) ModelBase<MessageSentEvent>.CanBeModifiedBy(ClaimsPrincipal) ModelBase<MessageSentEvent>.CanBeViewedBy(ClaimsPrincipal) ModelBase<MessageSentEvent>.CompareTo(object) ModelBase<MessageSentEvent>.DeleteAsync(IDataService, ClaimsPrincipal, bool) ModelBase<MessageSentEvent>.Equals(IModel) ModelBase<MessageSentEvent>.Equals(IModel<MessageSentEvent>) ModelBase<MessageSentEvent>.Equals(ModelBase<MessageSentEvent>) ModelBase<MessageSentEvent>.SaveAsync(IDataService, ClaimsPrincipal) ModelBase<MessageSentEvent>.SetupObject(IDataService, ClaimsPrincipal) ModelBase<MessageSentEvent>.SetupObject(IDataService, IUser) ModelBase<MessageSentEvent>.SetupObjectAndReturn(IDataService, ClaimsPrincipal) object.Equals(object, object) object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Namespace: Mithril.Communication.Abstractions.Events Assembly: Mithril.Communication.Abstractions.dll Syntax public class MessageSentEvent : EventBaseClass<MessageSentEvent>, IModel<MessageSentEvent>, IEquatable<IModel<MessageSentEvent>>, IComparable, IComparable<MessageSentEvent>, IEquatable<ModelBase<MessageSentEvent>>, IEvent, IEquatable<IEvent>, IModel, IEquatable<IModel>, IEquatable<EventBaseClass<MessageSentEvent>> Constructors | Improve this Doc View Source MessageSentEvent() Initializes a new instance of the MessageSentEvent class. Declaration public MessageSentEvent() See Also EventBaseClass<TEvent> | Improve this Doc View Source MessageSentEvent(IMessage?, string?) Initializes a new instance of the MessageSentEvent class. Declaration public MessageSentEvent(IMessage? message, string? status) Parameters Type Name Description IMessage message The message. string status The status. See Also EventBaseClass<TEvent> Properties | Improve this Doc View Source Message Gets or sets the message. Declaration public virtual IMessage? Message { get; set; } Property Value Type Description IMessage The message. See Also EventBaseClass<TEvent> | Improve this Doc View Source Status Gets or sets the status. Declaration [MaxLength(128)] public string? Status { get; set; } Property Value Type Description string The status. See Also EventBaseClass<TEvent> Methods | Improve this Doc View Source CompareTo(MessageSentEvent?) Compares the object to another object Declaration public override int CompareTo(MessageSentEvent? other) Parameters Type Name Description MessageSentEvent other Object to compare to Returns Type Description int 0 if they are equal, -1 if this is smaller, 1 if it is larger Overrides ModelBase<MessageSentEvent>.CompareTo(MessageSentEvent) See Also EventBaseClass<TEvent> | Improve this Doc View Source Equals(MessageSentEvent) Indicates whether the current object is equal to another object of the same type. Declaration public bool Equals(MessageSentEvent other) Parameters Type Name Description MessageSentEvent other An object to compare with this object. Returns Type Description bool true if the current object is equal to the other parameter; otherwise, false. See Also EventBaseClass<TEvent> | Improve this Doc View Source Equals(object?) Determines whether the specified object, is equal to this instance. Declaration public override bool Equals(object? obj) Parameters Type Name Description object obj The object to compare with this instance. Returns Type Description bool true if the specified object is equal to this instance; otherwise, false. Overrides EventBaseClass<MessageSentEvent>.Equals(object) See Also EventBaseClass<TEvent> | Improve this Doc View Source GetData() Gets the data within the event. Declaration public override ExpandoObject GetData() Returns Type Description ExpandoObject The data from the event. Overrides EventBaseClass<MessageSentEvent>.GetData() See Also EventBaseClass<TEvent> | Improve this Doc View Source GetHashCode() Returns a hash code for this instance. Declaration public override int GetHashCode() Returns Type Description int A hash code for this instance, suitable for use in hashing algorithms and data structures like a hash table. Overrides EventBaseClass<MessageSentEvent>.GetHashCode() See Also EventBaseClass<TEvent> | Improve this Doc View Source GetSchema() Gets the schema. Declaration public override string GetSchema() Returns Type Description string The data schema. Overrides EventBaseClass<MessageSentEvent>.GetSchema() See Also EventBaseClass<TEvent> Operators | Improve this Doc View Source operator ==(MessageSentEvent, MessageSentEvent) Implements the operator ==. Declaration public static bool operator ==(MessageSentEvent first, MessageSentEvent second) Parameters Type Name Description MessageSentEvent first The first. MessageSentEvent second The second. Returns Type Description bool The result of the operator. See Also EventBaseClass<TEvent> | Improve this Doc View Source operator >(MessageSentEvent, MessageSentEvent) Implements the operator >. Declaration public static bool operator >(MessageSentEvent left, MessageSentEvent right) Parameters Type Name Description MessageSentEvent left The left. MessageSentEvent right The right. Returns Type Description bool The result of the operator. See Also EventBaseClass<TEvent> | Improve this Doc View Source operator >=(MessageSentEvent, MessageSentEvent) Implements the operator >=. Declaration public static bool operator >=(MessageSentEvent left, MessageSentEvent right) Parameters Type Name Description MessageSentEvent left The left. MessageSentEvent right The right. Returns Type Description bool The result of the operator. See Also EventBaseClass<TEvent> | Improve this Doc View Source operator !=(MessageSentEvent, MessageSentEvent) Implements the operator !=. Declaration public static bool operator !=(MessageSentEvent left, MessageSentEvent right) Parameters Type Name Description MessageSentEvent left The left. MessageSentEvent right The right. Returns Type Description bool The result of the operator. See Also EventBaseClass<TEvent> | Improve this Doc View Source operator <(MessageSentEvent, MessageSentEvent) Implements the operator <. Declaration public static bool operator <(MessageSentEvent left, MessageSentEvent right) Parameters Type Name Description MessageSentEvent left The left. MessageSentEvent right The right. Returns Type Description bool The result of the operator. See Also EventBaseClass<TEvent> | Improve this Doc View Source operator <=(MessageSentEvent, MessageSentEvent) Implements the operator <=. Declaration public static bool operator <=(MessageSentEvent left, MessageSentEvent right) Parameters Type Name Description MessageSentEvent left The left. MessageSentEvent right The right. Returns Type Description bool The result of the operator. See Also EventBaseClass<TEvent> Implements IModel<TClass> IEquatable<T> IComparable IComparable<T> IEquatable<T> IEvent IEquatable<T> IModel IEquatable<T> IEquatable<T> Extension Methods ExpandoObjectExtensions.ConvertToExpando<TEntity>(TEntity?) GenericExtensions.When<TObject>(TObject, bool, Func<TObject, TObject>) See Also EventBaseClass<TEvent>"
  },
  "api/Mithril.Communication.Abstractions.Events.html": {
    "href": "api/Mithril.Communication.Abstractions.Events.html",
    "title": "Namespace Mithril.Communication.Abstractions.Events | Mithril API Reference",
    "keywords": "Namespace Mithril.Communication.Abstractions.Events Classes MessageSentEvent Message sent event"
  },
  "api/Mithril.Communication.Abstractions.Interfaces.IChannel.html": {
    "href": "api/Mithril.Communication.Abstractions.Interfaces.IChannel.html",
    "title": "Interface IChannel | Mithril API Reference",
    "keywords": "Interface IChannel Communication channel Namespace: Mithril.Communication.Abstractions.Interfaces Assembly: Mithril.Communication.Abstractions.dll Syntax public interface IChannel Properties | Improve this Doc View Source Name Gets the name. Declaration string Name { get; } Property Value Type Description string The name. Methods | Improve this Doc View Source CanHandle(IMessage?) Determines whether this instance can handle the specified message. Declaration bool CanHandle(IMessage? message) Parameters Type Name Description IMessage message The message. Returns Type Description bool true if this instance can handle the specified message; otherwise, false. | Improve this Doc View Source CreateMessage() Creates a message object. Declaration IMessage CreateMessage() Returns Type Description IMessage The message related to the channel. | Improve this Doc View Source SendMessageAsync(IMessage?) Sends the message asynchronously. Declaration Task<MessageResult> SendMessageAsync(IMessage? message) Parameters Type Name Description IMessage message The message. Returns Type Description Task<MessageResult> The message result Extension Methods ExpandoObjectExtensions.ConvertToExpando<TEntity>(TEntity?) GenericExtensions.When<TObject>(TObject, bool, Func<TObject, TObject>)"
  },
  "api/Mithril.Communication.Abstractions.Interfaces.IMessage.html": {
    "href": "api/Mithril.Communication.Abstractions.Interfaces.IMessage.html",
    "title": "Interface IMessage | Mithril API Reference",
    "keywords": "Interface IMessage Message interface Inherited Members IModel.Active IModel.Creator IModel.DateCreated IModel.DateModified IModel.ID IModel.Modifier IModel.TenantID IModel.CanBeModifiedBy(ClaimsPrincipal) IModel.CanBeViewedBy(ClaimsPrincipal) IModel.DeleteAsync(IDataService, ClaimsPrincipal, bool) IModel.SaveAsync(IDataService, ClaimsPrincipal) IModel.SetupObject(IDataService, ClaimsPrincipal) IModel.SetupObject(IDataService, IUser) IEquatable<IModel>.Equals(IModel) Namespace: Mithril.Communication.Abstractions.Interfaces Assembly: Mithril.Communication.Abstractions.dll Syntax public interface IMessage : IModel, IEquatable<IModel> Properties | Improve this Doc View Source Application Gets or sets the application the message originated from. Declaration [MaxLength(64)] string? Application { get; set; } Property Value Type Description string The application the message originated from. | Improve this Doc View Source Attachments Gets or sets the attachments. Declaration IList<Attachment?> Attachments { get; set; } Property Value Type Description IList<Attachment> The attachments. | Improve this Doc View Source BCC Gets or sets the BCC. Declaration [MaxLength] string? BCC { get; set; } Property Value Type Description string The BCC. | Improve this Doc View Source Body Gets or sets the body. Declaration [MaxLength] string? Body { get; set; } Property Value Type Description string The body. | Improve this Doc View Source CC Gets or sets the cc. Declaration [MaxLength] string? CC { get; set; } Property Value Type Description string The cc. | Improve this Doc View Source From Gets or sets from. Declaration [Required] [MinLength(1)] [MaxLength(128)] string? From { get; set; } Property Value Type Description string From. | Improve this Doc View Source Subject Gets or sets the subject. Declaration [Required] [MinLength(1)] [MaxLength(256)] string? Subject { get; set; } Property Value Type Description string The subject. | Improve this Doc View Source Template Gets or sets the template. Declaration [MaxLength(128)] string? Template { get; set; } Property Value Type Description string The template. | Improve this Doc View Source TemplateData Gets or sets the template data (JSON). Declaration [MaxLength] string? TemplateData { get; set; } Property Value Type Description string The template data in JSON format. | Improve this Doc View Source TemplateFields Gets or sets the template data. Declaration ExpandoObject? TemplateFields { get; } Property Value Type Description ExpandoObject The template data. | Improve this Doc View Source To Gets or sets to. Declaration [Required] [MinLength(1)] [MaxLength] string? To { get; set; } Property Value Type Description string To. Extension Methods ExpandoObjectExtensions.ConvertToExpando<TEntity>(TEntity?) GenericExtensions.When<TObject>(TObject, bool, Func<TObject, TObject>)"
  },
  "api/Mithril.Communication.Abstractions.Interfaces.IMessageTemplate.html": {
    "href": "api/Mithril.Communication.Abstractions.Interfaces.IMessageTemplate.html",
    "title": "Interface IMessageTemplate | Mithril API Reference",
    "keywords": "Interface IMessageTemplate Message template Inherited Members IModel.Active IModel.Creator IModel.DateCreated IModel.DateModified IModel.ID IModel.Modifier IModel.TenantID IModel.CanBeModifiedBy(ClaimsPrincipal) IModel.CanBeViewedBy(ClaimsPrincipal) IModel.DeleteAsync(IDataService, ClaimsPrincipal, bool) IModel.SaveAsync(IDataService, ClaimsPrincipal) IModel.SetupObject(IDataService, ClaimsPrincipal) IModel.SetupObject(IDataService, IUser) IEquatable<IModel>.Equals(IModel) Namespace: Mithril.Communication.Abstractions.Interfaces Assembly: Mithril.Communication.Abstractions.dll Syntax public interface IMessageTemplate : IModel, IEquatable<IModel> Properties | Improve this Doc View Source DisplayName Gets or sets the display name. Declaration string? DisplayName { get; set; } Property Value Type Description string The display name. Methods | Improve this Doc View Source GetContent(IHostEnvironment?) Gets the content. Declaration string GetContent(IHostEnvironment? hostingEnvironment) Parameters Type Name Description IHostEnvironment hostingEnvironment The hosting environment. Returns Type Description string The content | Improve this Doc View Source SetContent(IHostEnvironment?, string) Sets the content. Declaration IMessageTemplate SetContent(IHostEnvironment? hostingEnvironment, string content) Parameters Type Name Description IHostEnvironment hostingEnvironment The hosting environment. string content The content. Returns Type Description IMessageTemplate Extension Methods ExpandoObjectExtensions.ConvertToExpando<TEntity>(TEntity?) GenericExtensions.When<TObject>(TObject, bool, Func<TObject, TObject>)"
  },
  "api/Mithril.Communication.Abstractions.Interfaces.html": {
    "href": "api/Mithril.Communication.Abstractions.Interfaces.html",
    "title": "Namespace Mithril.Communication.Abstractions.Interfaces | Mithril API Reference",
    "keywords": "Namespace Mithril.Communication.Abstractions.Interfaces Interfaces IChannel Communication channel IMessage Message interface IMessageTemplate Message template"
  },
  "api/Mithril.Communication.Abstractions.Mappings.IMessageMapping.html": {
    "href": "api/Mithril.Communication.Abstractions.Mappings.IMessageMapping.html",
    "title": "Class IMessageMapping | Mithril API Reference",
    "keywords": "Class IMessageMapping Message interface mapping Inheritance object MappingBaseClass<IMessage, DefaultDatabase> IMessageMapping Implements IMapping<IMessage> IMapping Inherited Members MappingBaseClass<IMessage, DefaultDatabase>.AddAutoKey() MappingBaseClass<IMessage, DefaultDatabase>.ContainsProperty(string) MappingBaseClass<IMessage, DefaultDatabase>.Copy(IMapping) MappingBaseClass<IMessage, DefaultDatabase>.CopyProperty(IIDProperty) MappingBaseClass<IMessage, DefaultDatabase>.CopyProperty(IProperty) MappingBaseClass<IMessage, DefaultDatabase>.CopyProperty(IMapProperty) MappingBaseClass<IMessage, DefaultDatabase>.CopyProperty(IManyToOneProperty) MappingBaseClass<IMessage, DefaultDatabase>.CopyProperty(IManyToManyProperty) MappingBaseClass<IMessage, DefaultDatabase>.Equals(object) MappingBaseClass<IMessage, DefaultDatabase>.GetColumnName(string) MappingBaseClass<IMessage, DefaultDatabase>.GetHashCode() MappingBaseClass<IMessage, DefaultDatabase>.ID<TDataType>(Expression<Func<IMessage, TDataType>>) MappingBaseClass<IMessage, DefaultDatabase>.ManyToMany<TDataType>(Expression<Func<IMessage, IList<TDataType>>>) MappingBaseClass<IMessage, DefaultDatabase>.ManyToOne<TDataType>(Expression<Func<IMessage, IList<TDataType>>>) MappingBaseClass<IMessage, DefaultDatabase>.ManyToOne<TDataType>(Expression<Func<IMessage, TDataType>>) MappingBaseClass<IMessage, DefaultDatabase>.Map<TDataType>(Expression<Func<IMessage, TDataType>>) MappingBaseClass<IMessage, DefaultDatabase>.Reduce(ILogger) MappingBaseClass<IMessage, DefaultDatabase>.Reduce(IMapping, ILogger) MappingBaseClass<IMessage, DefaultDatabase>.Reference<TDataType>(Expression<Func<IMessage, TDataType>>) MappingBaseClass<IMessage, DefaultDatabase>.SetQuery(QueryType, string, CommandType, params IParameter[]) MappingBaseClass<IMessage, DefaultDatabase>.Setup() MappingBaseClass<IMessage, DefaultDatabase>.ToString() MappingBaseClass<IMessage, DefaultDatabase>.AutoIDProperties MappingBaseClass<IMessage, DefaultDatabase>.DatabaseConfigType MappingBaseClass<IMessage, DefaultDatabase>.IDProperties MappingBaseClass<IMessage, DefaultDatabase>.ManyToManyProperties MappingBaseClass<IMessage, DefaultDatabase>.ManyToOneProperties MappingBaseClass<IMessage, DefaultDatabase>.MapProperties MappingBaseClass<IMessage, DefaultDatabase>.Merge MappingBaseClass<IMessage, DefaultDatabase>.ObjectType MappingBaseClass<IMessage, DefaultDatabase>.Order MappingBaseClass<IMessage, DefaultDatabase>.Prefix MappingBaseClass<IMessage, DefaultDatabase>.Queries MappingBaseClass<IMessage, DefaultDatabase>.ReferenceProperties MappingBaseClass<IMessage, DefaultDatabase>.SchemaName MappingBaseClass<IMessage, DefaultDatabase>.Suffix MappingBaseClass<IMessage, DefaultDatabase>.TableName object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Mithril.Communication.Abstractions.Mappings Assembly: Mithril.Communication.Abstractions.dll Syntax public class IMessageMapping : MappingBaseClass<IMessage, DefaultDatabase>, IMapping<IMessage>, IMapping Constructors | Improve this Doc View Source IMessageMapping() Initializes a new instance of the IMessageMapping class. Declaration public IMessageMapping() See Also MappingBaseClass<TClassType, TDatabaseType> Implements IMapping<TClassType> IMapping Extension Methods ExpandoObjectExtensions.ConvertToExpando<TEntity>(TEntity?) GenericExtensions.When<TObject>(TObject, bool, Func<TObject, TObject>) See Also MappingBaseClass<TClassType, TDatabaseType>"
  },
  "api/Mithril.Communication.Abstractions.Mappings.MessageSentEventMapping.html": {
    "href": "api/Mithril.Communication.Abstractions.Mappings.MessageSentEventMapping.html",
    "title": "Class MessageSentEventMapping | Mithril API Reference",
    "keywords": "Class MessageSentEventMapping Message sent event mapping Inheritance object MappingBaseClass<MessageSentEvent, DefaultDatabase> MessageSentEventMapping Implements IMapping<MessageSentEvent> IMapping Inherited Members MappingBaseClass<MessageSentEvent, DefaultDatabase>.AddAutoKey() MappingBaseClass<MessageSentEvent, DefaultDatabase>.ContainsProperty(string) MappingBaseClass<MessageSentEvent, DefaultDatabase>.Copy(IMapping) MappingBaseClass<MessageSentEvent, DefaultDatabase>.CopyProperty(IIDProperty) MappingBaseClass<MessageSentEvent, DefaultDatabase>.CopyProperty(IProperty) MappingBaseClass<MessageSentEvent, DefaultDatabase>.CopyProperty(IMapProperty) MappingBaseClass<MessageSentEvent, DefaultDatabase>.CopyProperty(IManyToOneProperty) MappingBaseClass<MessageSentEvent, DefaultDatabase>.CopyProperty(IManyToManyProperty) MappingBaseClass<MessageSentEvent, DefaultDatabase>.Equals(object) MappingBaseClass<MessageSentEvent, DefaultDatabase>.GetColumnName(string) MappingBaseClass<MessageSentEvent, DefaultDatabase>.GetHashCode() MappingBaseClass<MessageSentEvent, DefaultDatabase>.ID<TDataType>(Expression<Func<MessageSentEvent, TDataType>>) MappingBaseClass<MessageSentEvent, DefaultDatabase>.ManyToMany<TDataType>(Expression<Func<MessageSentEvent, IList<TDataType>>>) MappingBaseClass<MessageSentEvent, DefaultDatabase>.ManyToOne<TDataType>(Expression<Func<MessageSentEvent, IList<TDataType>>>) MappingBaseClass<MessageSentEvent, DefaultDatabase>.ManyToOne<TDataType>(Expression<Func<MessageSentEvent, TDataType>>) MappingBaseClass<MessageSentEvent, DefaultDatabase>.Map<TDataType>(Expression<Func<MessageSentEvent, TDataType>>) MappingBaseClass<MessageSentEvent, DefaultDatabase>.Reduce(ILogger) MappingBaseClass<MessageSentEvent, DefaultDatabase>.Reduce(IMapping, ILogger) MappingBaseClass<MessageSentEvent, DefaultDatabase>.Reference<TDataType>(Expression<Func<MessageSentEvent, TDataType>>) MappingBaseClass<MessageSentEvent, DefaultDatabase>.SetQuery(QueryType, string, CommandType, params IParameter[]) MappingBaseClass<MessageSentEvent, DefaultDatabase>.Setup() MappingBaseClass<MessageSentEvent, DefaultDatabase>.ToString() MappingBaseClass<MessageSentEvent, DefaultDatabase>.AutoIDProperties MappingBaseClass<MessageSentEvent, DefaultDatabase>.DatabaseConfigType MappingBaseClass<MessageSentEvent, DefaultDatabase>.IDProperties MappingBaseClass<MessageSentEvent, DefaultDatabase>.ManyToManyProperties MappingBaseClass<MessageSentEvent, DefaultDatabase>.ManyToOneProperties MappingBaseClass<MessageSentEvent, DefaultDatabase>.MapProperties MappingBaseClass<MessageSentEvent, DefaultDatabase>.Merge MappingBaseClass<MessageSentEvent, DefaultDatabase>.ObjectType MappingBaseClass<MessageSentEvent, DefaultDatabase>.Order MappingBaseClass<MessageSentEvent, DefaultDatabase>.Prefix MappingBaseClass<MessageSentEvent, DefaultDatabase>.Queries MappingBaseClass<MessageSentEvent, DefaultDatabase>.ReferenceProperties MappingBaseClass<MessageSentEvent, DefaultDatabase>.SchemaName MappingBaseClass<MessageSentEvent, DefaultDatabase>.Suffix MappingBaseClass<MessageSentEvent, DefaultDatabase>.TableName object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Mithril.Communication.Abstractions.Mappings Assembly: Mithril.Communication.Abstractions.dll Syntax public class MessageSentEventMapping : MappingBaseClass<MessageSentEvent, DefaultDatabase>, IMapping<MessageSentEvent>, IMapping Constructors | Improve this Doc View Source MessageSentEventMapping() Initializes a new instance of the MessageSentEventMapping class. Declaration public MessageSentEventMapping() See Also MappingBaseClass<TClassType, TDatabaseType> Implements IMapping<TClassType> IMapping Extension Methods ExpandoObjectExtensions.ConvertToExpando<TEntity>(TEntity?) GenericExtensions.When<TObject>(TObject, bool, Func<TObject, TObject>) See Also MappingBaseClass<TClassType, TDatabaseType>"
  },
  "api/Mithril.Communication.Abstractions.Mappings.SendMessageCommandMapping.html": {
    "href": "api/Mithril.Communication.Abstractions.Mappings.SendMessageCommandMapping.html",
    "title": "Class SendMessageCommandMapping | Mithril API Reference",
    "keywords": "Class SendMessageCommandMapping Send message command mapping Inheritance object MappingBaseClass<SendMessageCommand, DefaultDatabase> SendMessageCommandMapping Implements IMapping<SendMessageCommand> IMapping Inherited Members MappingBaseClass<SendMessageCommand, DefaultDatabase>.AddAutoKey() MappingBaseClass<SendMessageCommand, DefaultDatabase>.ContainsProperty(string) MappingBaseClass<SendMessageCommand, DefaultDatabase>.Copy(IMapping) MappingBaseClass<SendMessageCommand, DefaultDatabase>.CopyProperty(IIDProperty) MappingBaseClass<SendMessageCommand, DefaultDatabase>.CopyProperty(IProperty) MappingBaseClass<SendMessageCommand, DefaultDatabase>.CopyProperty(IMapProperty) MappingBaseClass<SendMessageCommand, DefaultDatabase>.CopyProperty(IManyToOneProperty) MappingBaseClass<SendMessageCommand, DefaultDatabase>.CopyProperty(IManyToManyProperty) MappingBaseClass<SendMessageCommand, DefaultDatabase>.Equals(object) MappingBaseClass<SendMessageCommand, DefaultDatabase>.GetColumnName(string) MappingBaseClass<SendMessageCommand, DefaultDatabase>.GetHashCode() MappingBaseClass<SendMessageCommand, DefaultDatabase>.ID<TDataType>(Expression<Func<SendMessageCommand, TDataType>>) MappingBaseClass<SendMessageCommand, DefaultDatabase>.ManyToMany<TDataType>(Expression<Func<SendMessageCommand, IList<TDataType>>>) MappingBaseClass<SendMessageCommand, DefaultDatabase>.ManyToOne<TDataType>(Expression<Func<SendMessageCommand, IList<TDataType>>>) MappingBaseClass<SendMessageCommand, DefaultDatabase>.ManyToOne<TDataType>(Expression<Func<SendMessageCommand, TDataType>>) MappingBaseClass<SendMessageCommand, DefaultDatabase>.Map<TDataType>(Expression<Func<SendMessageCommand, TDataType>>) MappingBaseClass<SendMessageCommand, DefaultDatabase>.Reduce(ILogger) MappingBaseClass<SendMessageCommand, DefaultDatabase>.Reduce(IMapping, ILogger) MappingBaseClass<SendMessageCommand, DefaultDatabase>.Reference<TDataType>(Expression<Func<SendMessageCommand, TDataType>>) MappingBaseClass<SendMessageCommand, DefaultDatabase>.SetQuery(QueryType, string, CommandType, params IParameter[]) MappingBaseClass<SendMessageCommand, DefaultDatabase>.Setup() MappingBaseClass<SendMessageCommand, DefaultDatabase>.ToString() MappingBaseClass<SendMessageCommand, DefaultDatabase>.AutoIDProperties MappingBaseClass<SendMessageCommand, DefaultDatabase>.DatabaseConfigType MappingBaseClass<SendMessageCommand, DefaultDatabase>.IDProperties MappingBaseClass<SendMessageCommand, DefaultDatabase>.ManyToManyProperties MappingBaseClass<SendMessageCommand, DefaultDatabase>.ManyToOneProperties MappingBaseClass<SendMessageCommand, DefaultDatabase>.MapProperties MappingBaseClass<SendMessageCommand, DefaultDatabase>.Merge MappingBaseClass<SendMessageCommand, DefaultDatabase>.ObjectType MappingBaseClass<SendMessageCommand, DefaultDatabase>.Order MappingBaseClass<SendMessageCommand, DefaultDatabase>.Prefix MappingBaseClass<SendMessageCommand, DefaultDatabase>.Queries MappingBaseClass<SendMessageCommand, DefaultDatabase>.ReferenceProperties MappingBaseClass<SendMessageCommand, DefaultDatabase>.SchemaName MappingBaseClass<SendMessageCommand, DefaultDatabase>.Suffix MappingBaseClass<SendMessageCommand, DefaultDatabase>.TableName object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Mithril.Communication.Abstractions.Mappings Assembly: Mithril.Communication.Abstractions.dll Syntax public class SendMessageCommandMapping : MappingBaseClass<SendMessageCommand, DefaultDatabase>, IMapping<SendMessageCommand>, IMapping Constructors | Improve this Doc View Source SendMessageCommandMapping() Initializes a new instance of the SendMessageCommandMapping class. Declaration public SendMessageCommandMapping() See Also MappingBaseClass<TClassType, TDatabaseType> Implements IMapping<TClassType> IMapping Extension Methods ExpandoObjectExtensions.ConvertToExpando<TEntity>(TEntity?) GenericExtensions.When<TObject>(TObject, bool, Func<TObject, TObject>) See Also MappingBaseClass<TClassType, TDatabaseType>"
  },
  "api/Mithril.Communication.Abstractions.Mappings.html": {
    "href": "api/Mithril.Communication.Abstractions.Mappings.html",
    "title": "Namespace Mithril.Communication.Abstractions.Mappings | Mithril API Reference",
    "keywords": "Namespace Mithril.Communication.Abstractions.Mappings Classes IMessageMapping Message interface mapping MessageSentEventMapping Message sent event mapping SendMessageCommandMapping Send message command mapping"
  },
  "api/Mithril.Communication.Abstractions.MessageResult.html": {
    "href": "api/Mithril.Communication.Abstractions.MessageResult.html",
    "title": "Class MessageResult | Mithril API Reference",
    "keywords": "Class MessageResult Message result Inheritance object GenericResult MessageResult Implements IEquatable<GenericResult> IEquatable<MessageResult> Inherited Members GenericResult.Message GenericResult.Exception GenericResult.IsErrorState object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Mithril.Communication.Abstractions Assembly: Mithril.Communication.Abstractions.dll Syntax public record MessageResult : GenericResult, IEquatable<GenericResult>, IEquatable<MessageResult> Constructors | Improve this Doc View Source MessageResult(string, Exception?) Message result Declaration public MessageResult(string Message, Exception? Exception = null) Parameters Type Name Description string Message Message Exception Exception Exception See Also GenericResult IEquatable<T> IEquatable<T> Implements IEquatable<T> IEquatable<T> Extension Methods ExpandoObjectExtensions.ConvertToExpando<TEntity>(TEntity?) GenericExtensions.When<TObject>(TObject, bool, Func<TObject, TObject>) See Also GenericResult IEquatable<T> IEquatable<T>"
  },
  "api/Mithril.Communication.Abstractions.Services.ICommunicationService.html": {
    "href": "api/Mithril.Communication.Abstractions.Services.ICommunicationService.html",
    "title": "Interface ICommunicationService | Mithril API Reference",
    "keywords": "Interface ICommunicationService Communication service Namespace: Mithril.Communication.Abstractions.Services Assembly: Mithril.Communication.Abstractions.dll Syntax public interface ICommunicationService Methods | Improve this Doc View Source CreateMessage(string) Creates a message based on the channel specified. Declaration IMessage? CreateMessage(string channel) Parameters Type Name Description string channel The channel. Returns Type Description IMessage The message object. | Improve this Doc View Source LoadOrCreateTemplateAsync(string, ClaimsPrincipal?) Loads or creates a template asynchronously. Declaration Task<IMessageTemplate> LoadOrCreateTemplateAsync(string displayName, ClaimsPrincipal? user) Parameters Type Name Description string displayName The display name. ClaimsPrincipal user The user. Returns Type Description Task<IMessageTemplate> The message template. | Improve this Doc View Source SendMessageAsync(IMessage?, ClaimsPrincipal?) Sends the message asynchronously. Declaration Task<MessageResult> SendMessageAsync(IMessage? message, ClaimsPrincipal? user) Parameters Type Name Description IMessage message The message. ClaimsPrincipal user The user. Returns Type Description Task<MessageResult> The message result. Extension Methods ExpandoObjectExtensions.ConvertToExpando<TEntity>(TEntity?) GenericExtensions.When<TObject>(TObject, bool, Func<TObject, TObject>)"
  },
  "api/Mithril.Communication.Abstractions.Services.html": {
    "href": "api/Mithril.Communication.Abstractions.Services.html",
    "title": "Namespace Mithril.Communication.Abstractions.Services | Mithril API Reference",
    "keywords": "Namespace Mithril.Communication.Abstractions.Services Interfaces ICommunicationService Communication service"
  },
  "api/Mithril.Communication.Abstractions.html": {
    "href": "api/Mithril.Communication.Abstractions.html",
    "title": "Namespace Mithril.Communication.Abstractions | Mithril API Reference",
    "keywords": "Namespace Mithril.Communication.Abstractions Classes Attachment Message file attachments AttachmentMapping Attachment mapping MessageResult Message result"
  },
  "api/Mithril.Communication.Admin.MessageTemplateEditor.html": {
    "href": "api/Mithril.Communication.Admin.MessageTemplateEditor.html",
    "title": "Class MessageTemplateEditor | Mithril API Reference",
    "keywords": "Class MessageTemplateEditor Message template editor Inheritance object EntityEditorBaseClass<MessageTemplateVM> EntityEditorBaseClass<MessageTemplateVM, MessageTemplate> MessageTemplateEditor Implements IEntityEditor IEditor Inherited Members EntityEditorBaseClass<MessageTemplateVM, MessageTemplate>.ActivateAsync(long, ClaimsPrincipal) EntityEditorBaseClass<MessageTemplateVM, MessageTemplate>.CanView(ClaimsPrincipal) EntityEditorBaseClass<MessageTemplateVM, MessageTemplate>.DeleteEntityAsync(long, ClaimsPrincipal) EntityEditorBaseClass<MessageTemplateVM, MessageTemplate>.Load(long, ExpandoObject, ClaimsPrincipal) EntityEditorBaseClass<MessageTemplateVM, MessageTemplate>.LoadPageAsync(int, int, string, bool, string, ClaimsPrincipal) EntityEditorBaseClass<MessageTemplateVM, MessageTemplate>.SaveEntityAsync(long, ExpandoObject, ClaimsPrincipal) EntityEditorBaseClass<MessageTemplateVM, MessageTemplate>.TotalActiveAsync(ClaimsPrincipal) EntityEditorBaseClass<MessageTemplateVM, MessageTemplate>.Convert(MessageTemplate, bool) EntityEditorBaseClass<MessageTemplateVM, MessageTemplate>.FilterQueryBySearchQuery(IQueryable<MessageTemplate>, string) EntityEditorBaseClass<MessageTemplateVM, MessageTemplate>.LoadModel(long) EntityEditorBaseClass<MessageTemplateVM, MessageTemplate>.MakeActiveAsync(MessageTemplate) EntityEditorBaseClass<MessageTemplateVM, MessageTemplate>.MakeInactiveAsync(MessageTemplate) EntityEditorBaseClass<MessageTemplateVM>.Category EntityEditorBaseClass<MessageTemplateVM>.ComponentDefinition EntityEditorBaseClass<MessageTemplateVM>.Description EntityEditorBaseClass<MessageTemplateVM>.EntityType EntityEditorBaseClass<MessageTemplateVM>.Name EntityEditorBaseClass<MessageTemplateVM>.DataService EntityEditorBaseClass<MessageTemplateVM>.ActivateAsync(long, ClaimsPrincipal) EntityEditorBaseClass<MessageTemplateVM>.CanView(ClaimsPrincipal) EntityEditorBaseClass<MessageTemplateVM>.DeleteEntityAsync(long, ClaimsPrincipal) EntityEditorBaseClass<MessageTemplateVM>.Load(long, ExpandoObject, ClaimsPrincipal) EntityEditorBaseClass<MessageTemplateVM>.LoadPageAsync(int, int, string, bool, string, ClaimsPrincipal) EntityEditorBaseClass<MessageTemplateVM>.SaveEntityAsync(long, ExpandoObject, ClaimsPrincipal) EntityEditorBaseClass<MessageTemplateVM>.TotalActiveAsync(ClaimsPrincipal) object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Mithril.Communication.Admin Assembly: Mithril.Communication.dll Syntax public class MessageTemplateEditor : EntityEditorBaseClass<MessageTemplateVM, MessageTemplate>, IEntityEditor, IEditor Constructors | Improve this Doc View Source MessageTemplateEditor(IHostEnvironment?, IDataService?, IEntityMetadataService?, string?) Initializes a new instance of the MessageTemplateEditor class. Declaration public MessageTemplateEditor(IHostEnvironment? hostEnvironment, IDataService? dataService, IEntityMetadataService? entityMetadataService, string? dataType = null) Parameters Type Name Description IHostEnvironment hostEnvironment The host environment. IDataService dataService The data service. IEntityMetadataService entityMetadataService The entity metadata service. string dataType Type of the data. See Also EntityEditorBaseClass<TEntity, TModel> Properties | Improve this Doc View Source Icon Gets the icon. Declaration public override string Icon { get; } Property Value Type Description string The icon. Overrides EntityEditorBaseClass<MessageTemplateVM>.Icon See Also EntityEditorBaseClass<TEntity, TModel> Methods | Improve this Doc View Source Convert(MessageTemplate, bool) Converts the model into the appropriate view model. Declaration protected override IEntity Convert(MessageTemplate model, bool full = true) Parameters Type Name Description MessageTemplate model The model. bool full if set to true [full]. Returns Type Description IEntity The view model Overrides EntityEditorBaseClass<MessageTemplateVM, MessageTemplate>.Convert(MessageTemplate, bool) See Also EntityEditorBaseClass<TEntity, TModel> | Improve this Doc View Source FilterQueryBySearchQuery(IQueryable<MessageTemplate>?, string) Filters the query by search term. Declaration protected override IQueryable<MessageTemplate>? FilterQueryBySearchQuery(IQueryable<MessageTemplate>? query, string searchQuery) Parameters Type Name Description IQueryable<MessageTemplate> query The query. string searchQuery The search query. Returns Type Description IQueryable<MessageTemplate> The resulting query. Overrides EntityEditorBaseClass<MessageTemplateVM, MessageTemplate>.FilterQueryBySearchQuery(IQueryable<MessageTemplate>, string) See Also EntityEditorBaseClass<TEntity, TModel> Implements IEntityEditor IEditor Extension Methods ExpandoObjectExtensions.ConvertToExpando<TEntity>(TEntity?) GenericExtensions.When<TObject>(TObject, bool, Func<TObject, TObject>) See Also EntityEditorBaseClass<TEntity, TModel>"
  },
  "api/Mithril.Communication.Admin.ViewModels.MessageTemplateVM.html": {
    "href": "api/Mithril.Communication.Admin.ViewModels.MessageTemplateVM.html",
    "title": "Class MessageTemplateVM | Mithril API Reference",
    "keywords": "Class MessageTemplateVM Message template VM Inheritance object EntityBaseClass<MessageTemplate> MessageTemplateVM Implements IEntity<MessageTemplate> IEntity Inherited Members EntityBaseClass<MessageTemplate>.Active EntityBaseClass<MessageTemplate>.ID object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Mithril.Communication.Admin.ViewModels Assembly: Mithril.Communication.dll Syntax public class MessageTemplateVM : EntityBaseClass<MessageTemplate>, IEntity<MessageTemplate>, IEntity Constructors | Improve this Doc View Source MessageTemplateVM() Initializes a new instance of the MessageTemplateVM class. Declaration public MessageTemplateVM() See Also EntityBaseClass<TEntity> | Improve this Doc View Source MessageTemplateVM(MessageTemplate?, IHostEnvironment?, bool) Initializes a new instance of the MessageTemplateVM class. Declaration public MessageTemplateVM(MessageTemplate? model, IHostEnvironment? hostEnvironment, bool full) Parameters Type Name Description MessageTemplate model The model. IHostEnvironment hostEnvironment The host environment. bool full if set to true [full]. See Also EntityBaseClass<TEntity> Properties | Improve this Doc View Source Content Gets or sets the content. Declaration [Order(2)] public string? Content { get; set; } Property Value Type Description string The content. See Also EntityBaseClass<TEntity> | Improve this Doc View Source DisplayName Gets or sets the display name. Declaration [Order(1)] [Required] [MaxLength(128)] public string? DisplayName { get; set; } Property Value Type Description string The display name. See Also EntityBaseClass<TEntity> Methods | Improve this Doc View Source SaveAsync(long, IDataService?, ClaimsPrincipal?) Saves the changes asynchronously. Declaration public override Task<MessageTemplate?> SaveAsync(long id, IDataService? dataService, ClaimsPrincipal? currentUser) Parameters Type Name Description long id The identifier. IDataService dataService The data service. ClaimsPrincipal currentUser The current user. Returns Type Description Task<MessageTemplate> The async task. Overrides EntityBaseClass<MessageTemplate>.SaveAsync(long, IDataService, ClaimsPrincipal) See Also EntityBaseClass<TEntity> Implements IEntity<TModel> IEntity Extension Methods ExpandoObjectExtensions.ConvertToExpando<TEntity>(TEntity?) GenericExtensions.When<TObject>(TObject, bool, Func<TObject, TObject>) See Also EntityBaseClass<TEntity>"
  },
  "api/Mithril.Communication.Admin.ViewModels.html": {
    "href": "api/Mithril.Communication.Admin.ViewModels.html",
    "title": "Namespace Mithril.Communication.Admin.ViewModels | Mithril API Reference",
    "keywords": "Namespace Mithril.Communication.Admin.ViewModels Classes MessageTemplateVM Message template VM"
  },
  "api/Mithril.Communication.Admin.html": {
    "href": "api/Mithril.Communication.Admin.html",
    "title": "Namespace Mithril.Communication.Admin | Mithril API Reference",
    "keywords": "Namespace Mithril.Communication.Admin Classes MessageTemplateEditor Message template editor"
  },
  "api/Mithril.Communication.Commands.MessageSentDefaultEventHandler.html": {
    "href": "api/Mithril.Communication.Commands.MessageSentDefaultEventHandler.html",
    "title": "Class MessageSentDefaultEventHandler | Mithril API Reference",
    "keywords": "Class MessageSentDefaultEventHandler Message sent default event handler (does nothing) Inheritance object EventHandlerBaseClass<MessageSentDefaultEventHandler, MessageSentEvent> MessageSentDefaultEventHandler Implements IEventHandler Inherited Members EventHandlerBaseClass<MessageSentDefaultEventHandler, MessageSentEvent>.Features EventHandlerBaseClass<MessageSentDefaultEventHandler, MessageSentEvent>.Name EventHandlerBaseClass<MessageSentDefaultEventHandler, MessageSentEvent>.FeatureManager EventHandlerBaseClass<MessageSentDefaultEventHandler, MessageSentEvent>.Logger EventHandlerBaseClass<MessageSentDefaultEventHandler, MessageSentEvent>.Accepts(IEvent) EventHandlerBaseClass<MessageSentDefaultEventHandler, MessageSentEvent>.Handle(IEvent) EventHandlerBaseClass<MessageSentDefaultEventHandler, MessageSentEvent>.Handle(MessageSentEvent) EventHandlerBaseClass<MessageSentDefaultEventHandler, MessageSentEvent>.IsFeatureEnabled() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Mithril.Communication.Commands Assembly: Mithril.Communication.dll Syntax public class MessageSentDefaultEventHandler : EventHandlerBaseClass<MessageSentDefaultEventHandler, MessageSentEvent>, IEventHandler Constructors | Improve this Doc View Source MessageSentDefaultEventHandler(ILogger<MessageSentDefaultEventHandler>?, IFeatureManager?) Initializes a new instance of the MessageSentDefaultEventHandler class. Declaration public MessageSentDefaultEventHandler(ILogger<MessageSentDefaultEventHandler>? logger, IFeatureManager? featureManager) Parameters Type Name Description ILogger<MessageSentDefaultEventHandler> logger IFeatureManager featureManager See Also EventHandlerBaseClass<THandler, TEvent> Methods | Improve this Doc View Source Handle(MessageSentEvent) Handles the specified argument. Declaration protected override EventResult Handle(MessageSentEvent arg) Parameters Type Name Description MessageSentEvent arg The argument. Returns Type Description EventResult The result from processing the event. Overrides EventHandlerBaseClass<MessageSentDefaultEventHandler, MessageSentEvent>.Handle(MessageSentEvent) See Also EventHandlerBaseClass<THandler, TEvent> Implements IEventHandler Extension Methods ExpandoObjectExtensions.ConvertToExpando<TEntity>(TEntity?) GenericExtensions.When<TObject>(TObject, bool, Func<TObject, TObject>) See Also EventHandlerBaseClass<THandler, TEvent>"
  },
  "api/Mithril.Communication.Commands.SendMessageCommandHandler.html": {
    "href": "api/Mithril.Communication.Commands.SendMessageCommandHandler.html",
    "title": "Class SendMessageCommandHandler | Mithril API Reference",
    "keywords": "Class SendMessageCommandHandler Send message command handler Inheritance object CommandHandlerBaseClass<SendMessageCommand, SendMessageCommandVM> SendMessageCommandHandler Implements ICommandHandler<SendMessageCommandVM> ICommandHandler Inherited Members CommandHandlerBaseClass<SendMessageCommand, SendMessageCommandVM>.CommandName CommandHandlerBaseClass<SendMessageCommand, SendMessageCommandVM>.ContentTypeAccepts CommandHandlerBaseClass<SendMessageCommand, SendMessageCommandVM>.Features CommandHandlerBaseClass<SendMessageCommand, SendMessageCommandVM>.Tags CommandHandlerBaseClass<SendMessageCommand, SendMessageCommandVM>.Version CommandHandlerBaseClass<SendMessageCommand, SendMessageCommandVM>.ViewModelType CommandHandlerBaseClass<SendMessageCommand, SendMessageCommandVM>.FeatureManager CommandHandlerBaseClass<SendMessageCommand, SendMessageCommandVM>.Logger CommandHandlerBaseClass<SendMessageCommand, SendMessageCommandVM>.CanHandle(ICommand) CommandHandlerBaseClass<SendMessageCommand, SendMessageCommandVM>.CreateAsync(SendMessageCommandVM, ClaimsPrincipal) CommandHandlerBaseClass<SendMessageCommand, SendMessageCommandVM>.HandleCommandAsync(params ICommand[]) CommandHandlerBaseClass<SendMessageCommand, SendMessageCommandVM>.HandleCommandAsync(SendMessageCommand[]) CommandHandlerBaseClass<SendMessageCommand, SendMessageCommandVM>.IsFeatureEnabled() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Mithril.Communication.Commands Assembly: Mithril.Communication.dll Syntax public class SendMessageCommandHandler : CommandHandlerBaseClass<SendMessageCommand, SendMessageCommandVM>, ICommandHandler<SendMessageCommandVM>, ICommandHandler Constructors | Improve this Doc View Source SendMessageCommandHandler(ILogger<SendMessageCommandHandler>?, IFeatureManager?, ICommunicationService?, IDataService?, IOptions<MithrilConfig>?, IEnumerable<IChannel>) Initializes a new instance of the SendMessageCommandHandler class. Declaration public SendMessageCommandHandler(ILogger<SendMessageCommandHandler>? logger, IFeatureManager? featureManager, ICommunicationService? communicationService, IDataService? dataService, IOptions<MithrilConfig>? mithrilConfig, IEnumerable<IChannel> channels) Parameters Type Name Description ILogger<SendMessageCommandHandler> logger The logger. IFeatureManager featureManager The feature manager. ICommunicationService communicationService The communication service. IDataService dataService The data service. IOptions<MithrilConfig> mithrilConfig The mithril configuration. IEnumerable<IChannel> channels The channels. See Also CommandHandlerBaseClass<TCommand, TViewModel> Properties | Improve this Doc View Source CommandName Gets the command type accepted. Declaration public override string CommandName { get; } Property Value Type Description string The command type accepted. Overrides CommandHandlerBaseClass<SendMessageCommand, SendMessageCommandVM>.CommandName See Also CommandHandlerBaseClass<TCommand, TViewModel> | Improve this Doc View Source Tags Gets the tags (Used by OpenAPI, etc). Declaration public override string[] Tags { get; } Property Value Type Description string[] The tags (Used by OpenAPI, etc). Overrides CommandHandlerBaseClass<SendMessageCommand, SendMessageCommandVM>.Tags See Also CommandHandlerBaseClass<TCommand, TViewModel> Methods | Improve this Doc View Source CreateAsync(SendMessageCommandVM?, ClaimsPrincipal) Creates the specified value. Declaration public override ValueTask<CommandCreationResult?> CreateAsync(SendMessageCommandVM? value, ClaimsPrincipal user) Parameters Type Name Description SendMessageCommandVM value The value. ClaimsPrincipal user The user. Returns Type Description ValueTask<CommandCreationResult> A command value converted from the ExpandoObject. Overrides CommandHandlerBaseClass<SendMessageCommand, SendMessageCommandVM>.CreateAsync(SendMessageCommandVM, ClaimsPrincipal) See Also CommandHandlerBaseClass<TCommand, TViewModel> | Improve this Doc View Source HandleCommandAsync(SendMessageCommand?[]?) Handles the command. Declaration protected override Task<IEvent[]> HandleCommandAsync(SendMessageCommand?[]? args) Parameters Type Name Description SendMessageCommand[] args The arguments. Returns Type Description Task<IEvent[]> The events generated by the command. Overrides CommandHandlerBaseClass<SendMessageCommand, SendMessageCommandVM>.HandleCommandAsync(SendMessageCommand[]) See Also CommandHandlerBaseClass<TCommand, TViewModel> Implements ICommandHandler<TViewModel> ICommandHandler Extension Methods ExpandoObjectExtensions.ConvertToExpando<TEntity>(TEntity?) GenericExtensions.When<TObject>(TObject, bool, Func<TObject, TObject>) See Also CommandHandlerBaseClass<TCommand, TViewModel>"
  },
  "api/Mithril.Communication.Commands.ViewModels.AttachmentVM.html": {
    "href": "api/Mithril.Communication.Commands.ViewModels.AttachmentVM.html",
    "title": "Class AttachmentVM | Mithril API Reference",
    "keywords": "Class AttachmentVM Attachment VM Inheritance object AttachmentVM Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Mithril.Communication.Commands.ViewModels Assembly: Mithril.Communication.dll Syntax public class AttachmentVM Properties | Improve this Doc View Source FileName Gets or sets the name of the file. Declaration [MaxLength(128)] public string? FileName { get; set; } Property Value Type Description string The name of the file. | Improve this Doc View Source Location Gets or sets the location on disk. Declaration [MaxLength(1028)] public string? Location { get; set; } Property Value Type Description string The location on disk. Extension Methods ExpandoObjectExtensions.ConvertToExpando<TEntity>(TEntity?) GenericExtensions.When<TObject>(TObject, bool, Func<TObject, TObject>)"
  },
  "api/Mithril.Communication.Commands.ViewModels.SendMessageCommandVM.html": {
    "href": "api/Mithril.Communication.Commands.ViewModels.SendMessageCommandVM.html",
    "title": "Class SendMessageCommandVM | Mithril API Reference",
    "keywords": "Class SendMessageCommandVM Send message command VM Inheritance object SendMessageCommandVM Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Mithril.Communication.Commands.ViewModels Assembly: Mithril.Communication.dll Syntax public class SendMessageCommandVM Properties | Improve this Doc View Source Attachments Gets or sets the attachments. Declaration public List<AttachmentVM> Attachments { get; set; } Property Value Type Description List<AttachmentVM> The attachments. | Improve this Doc View Source BCC Gets or sets the BCC. Declaration public string? BCC { get; set; } Property Value Type Description string The BCC. | Improve this Doc View Source Body Gets or sets the body. Declaration public string? Body { get; set; } Property Value Type Description string The body. | Improve this Doc View Source CC Gets or sets the cc. Declaration public string? CC { get; set; } Property Value Type Description string The cc. | Improve this Doc View Source Channel Gets or sets the channel. Declaration [Required] [MinLength(1)] [MaxLength(128)] public string? Channel { get; set; } Property Value Type Description string The channel. | Improve this Doc View Source From Gets or sets from. Declaration [Required] [MinLength(1)] [MaxLength(128)] public string? From { get; set; } Property Value Type Description string From. | Improve this Doc View Source Subject Gets or sets the subject. Declaration [Required] [MinLength(1)] [MaxLength(256)] public string? Subject { get; set; } Property Value Type Description string The subject. | Improve this Doc View Source Template Gets or sets the template. Declaration public string? Template { get; set; } Property Value Type Description string The template. | Improve this Doc View Source To Gets or sets to. Declaration public string? To { get; set; } Property Value Type Description string To. Extension Methods ExpandoObjectExtensions.ConvertToExpando<TEntity>(TEntity?) GenericExtensions.When<TObject>(TObject, bool, Func<TObject, TObject>)"
  },
  "api/Mithril.Communication.Commands.ViewModels.html": {
    "href": "api/Mithril.Communication.Commands.ViewModels.html",
    "title": "Namespace Mithril.Communication.Commands.ViewModels | Mithril API Reference",
    "keywords": "Namespace Mithril.Communication.Commands.ViewModels Classes AttachmentVM Attachment VM SendMessageCommandVM Send message command VM"
  },
  "api/Mithril.Communication.Commands.html": {
    "href": "api/Mithril.Communication.Commands.html",
    "title": "Namespace Mithril.Communication.Commands | Mithril API Reference",
    "keywords": "Namespace Mithril.Communication.Commands Classes MessageSentDefaultEventHandler Message sent default event handler (does nothing) SendMessageCommandHandler Send message command handler"
  },
  "api/Mithril.Communication.CommunicationModule.html": {
    "href": "api/Mithril.Communication.CommunicationModule.html",
    "title": "Class CommunicationModule | Mithril API Reference",
    "keywords": "Class CommunicationModule Communication module Inheritance object ModuleBaseClass<CommunicationModule> CommunicationModule Implements IEquatable<CommunicationModule> IModule Inherited Members ModuleBaseClass<CommunicationModule>.Category ModuleBaseClass<CommunicationModule>.ContentPath ModuleBaseClass<CommunicationModule>.Features ModuleBaseClass<CommunicationModule>.ID ModuleBaseClass<CommunicationModule>.LastModified ModuleBaseClass<CommunicationModule>.Name ModuleBaseClass<CommunicationModule>.Order ModuleBaseClass<CommunicationModule>.Tags ModuleBaseClass<CommunicationModule>.Version ModuleBaseClass<CommunicationModule>.ConfigureApplication(IApplicationBuilder, IConfiguration, IHostEnvironment) ModuleBaseClass<CommunicationModule>.ConfigureHostSettings(IHostBuilder, IConfiguration, IHostEnvironment) ModuleBaseClass<CommunicationModule>.ConfigureLoggingSettings(ILoggingBuilder, IConfiguration, IHostEnvironment) ModuleBaseClass<CommunicationModule>.ConfigureMVC(IMvcBuilder, IConfiguration, IHostEnvironment) ModuleBaseClass<CommunicationModule>.ConfigureRoutes(IEndpointRouteBuilder, IConfiguration, IHostEnvironment) ModuleBaseClass<CommunicationModule>.ConfigureWebHostSettings(IWebHostBuilder, IConfiguration, IHostEnvironment) ModuleBaseClass<CommunicationModule>.Equals(object) ModuleBaseClass<CommunicationModule>.Equals(CommunicationModule) ModuleBaseClass<CommunicationModule>.GetHashCode() ModuleBaseClass<CommunicationModule>.InitializeDataAsync(IDataService, IServiceProvider) ModuleBaseClass<CommunicationModule>.OnStarted() ModuleBaseClass<CommunicationModule>.OnStopped() ModuleBaseClass<CommunicationModule>.OnStopping() object.Equals(object, object) object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Mithril.Communication Assembly: Mithril.Communication.dll Syntax public class CommunicationModule : ModuleBaseClass<CommunicationModule>, IEquatable<CommunicationModule>, IModule Methods | Improve this Doc View Source ConfigureServices(IServiceCollection?, IConfiguration?, IHostEnvironment?) Configures the services for the module. Declaration public override IServiceCollection? ConfigureServices(IServiceCollection? services, IConfiguration? configuration, IHostEnvironment? environment) Parameters Type Name Description IServiceCollection services The services collection. IConfiguration configuration The configuration. IHostEnvironment environment The environment. Returns Type Description IServiceCollection Overrides ModuleBaseClass<CommunicationModule>.ConfigureServices(IServiceCollection, IConfiguration, IHostEnvironment) See Also ModuleBaseClass<TModule> Implements IEquatable<T> IModule Extension Methods ExpandoObjectExtensions.ConvertToExpando<TEntity>(TEntity?) GenericExtensions.When<TObject>(TObject, bool, Func<TObject, TObject>) See Also ModuleBaseClass<TModule>"
  },
  "api/Mithril.Communication.Email.Channel.EmailChannel.html": {
    "href": "api/Mithril.Communication.Email.Channel.EmailChannel.html",
    "title": "Class EmailChannel | Mithril API Reference",
    "keywords": "Class EmailChannel Email channel for communication Inheritance object ChannelBaseClass<EmailChannel, EmailMessage> EmailChannel Implements IChannel Inherited Members ChannelBaseClass<EmailChannel, EmailMessage>.Name ChannelBaseClass<EmailChannel, EmailMessage>.FeatureManager ChannelBaseClass<EmailChannel, EmailMessage>.Logger ChannelBaseClass<EmailChannel, EmailMessage>.CanHandle(IMessage) ChannelBaseClass<EmailChannel, EmailMessage>.CreateMessage() ChannelBaseClass<EmailChannel, EmailMessage>.SendMessageAsync(IMessage) object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Mithril.Communication.Email.Channel Assembly: Mithril.Communication.Email.dll Syntax public class EmailChannel : ChannelBaseClass<EmailChannel, EmailMessage>, IChannel Constructors | Improve this Doc View Source EmailChannel(ILogger<EmailChannel>?, IFeatureManager?, IDataService?, IViewRendererService?) Initializes a new instance of the EmailChannel class. Declaration public EmailChannel(ILogger<EmailChannel>? logger, IFeatureManager? featureManager, IDataService? dataService, IViewRendererService? viewRendererService) Parameters Type Name Description ILogger<EmailChannel> logger The logger. IFeatureManager featureManager The feature manager. IDataService dataService The data service. IViewRendererService viewRendererService The view renderer service. See Also ChannelBaseClass<TChannel, TMessage> Properties | Improve this Doc View Source Name Gets the name. Declaration public override string Name { get; } Property Value Type Description string The name. Overrides ChannelBaseClass<EmailChannel, EmailMessage>.Name See Also ChannelBaseClass<TChannel, TMessage> Methods | Improve this Doc View Source SendMessageAsync(IMessage?) Sends the message asynchronously. Declaration public override Task<MessageResult> SendMessageAsync(IMessage? message) Parameters Type Name Description IMessage message The message. Returns Type Description Task<MessageResult> The message result Overrides ChannelBaseClass<EmailChannel, EmailMessage>.SendMessageAsync(IMessage) See Also ChannelBaseClass<TChannel, TMessage> Implements IChannel Extension Methods ExpandoObjectExtensions.ConvertToExpando<TEntity>(TEntity?) GenericExtensions.When<TObject>(TObject, bool, Func<TObject, TObject>) See Also ChannelBaseClass<TChannel, TMessage>"
  },
  "api/Mithril.Communication.Email.Channel.html": {
    "href": "api/Mithril.Communication.Email.Channel.html",
    "title": "Namespace Mithril.Communication.Email.Channel | Mithril API Reference",
    "keywords": "Namespace Mithril.Communication.Email.Channel Classes EmailChannel Email channel for communication"
  },
  "api/Mithril.Communication.Email.EmailModule.html": {
    "href": "api/Mithril.Communication.Email.EmailModule.html",
    "title": "Class EmailModule | Mithril API Reference",
    "keywords": "Class EmailModule Email module Inheritance object ModuleBaseClass<EmailModule> EmailModule Implements IEquatable<EmailModule> IModule Inherited Members ModuleBaseClass<EmailModule>.Category ModuleBaseClass<EmailModule>.ContentPath ModuleBaseClass<EmailModule>.Features ModuleBaseClass<EmailModule>.ID ModuleBaseClass<EmailModule>.LastModified ModuleBaseClass<EmailModule>.Name ModuleBaseClass<EmailModule>.Order ModuleBaseClass<EmailModule>.Tags ModuleBaseClass<EmailModule>.Version ModuleBaseClass<EmailModule>.ConfigureApplication(IApplicationBuilder, IConfiguration, IHostEnvironment) ModuleBaseClass<EmailModule>.ConfigureHostSettings(IHostBuilder, IConfiguration, IHostEnvironment) ModuleBaseClass<EmailModule>.ConfigureLoggingSettings(ILoggingBuilder, IConfiguration, IHostEnvironment) ModuleBaseClass<EmailModule>.ConfigureMVC(IMvcBuilder, IConfiguration, IHostEnvironment) ModuleBaseClass<EmailModule>.ConfigureRoutes(IEndpointRouteBuilder, IConfiguration, IHostEnvironment) ModuleBaseClass<EmailModule>.ConfigureWebHostSettings(IWebHostBuilder, IConfiguration, IHostEnvironment) ModuleBaseClass<EmailModule>.Equals(object) ModuleBaseClass<EmailModule>.Equals(EmailModule) ModuleBaseClass<EmailModule>.GetHashCode() ModuleBaseClass<EmailModule>.OnStarted() ModuleBaseClass<EmailModule>.OnStopped() ModuleBaseClass<EmailModule>.OnStopping() object.Equals(object, object) object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Mithril.Communication.Email Assembly: Mithril.Communication.Email.dll Syntax public class EmailModule : ModuleBaseClass<EmailModule>, IEquatable<EmailModule>, IModule Methods | Improve this Doc View Source ConfigureServices(IServiceCollection?, IConfiguration?, IHostEnvironment?) Configures the services for the module. Declaration public override IServiceCollection? ConfigureServices(IServiceCollection? services, IConfiguration? configuration, IHostEnvironment? environment) Parameters Type Name Description IServiceCollection services The services collection. IConfiguration configuration The configuration. IHostEnvironment environment The environment. Returns Type Description IServiceCollection Services Overrides ModuleBaseClass<EmailModule>.ConfigureServices(IServiceCollection, IConfiguration, IHostEnvironment) See Also ModuleBaseClass<TModule> | Improve this Doc View Source InitializeDataAsync(IDataService?, IServiceProvider?) Initializes the data. Declaration public override Task InitializeDataAsync(IDataService? dataService, IServiceProvider? services) Parameters Type Name Description IDataService dataService Data service IServiceProvider services The services for the application. Returns Type Description Task The async task. Overrides ModuleBaseClass<EmailModule>.InitializeDataAsync(IDataService, IServiceProvider) See Also ModuleBaseClass<TModule> Implements IEquatable<T> IModule Extension Methods ExpandoObjectExtensions.ConvertToExpando<TEntity>(TEntity?) GenericExtensions.When<TObject>(TObject, bool, Func<TObject, TObject>) See Also ModuleBaseClass<TModule>"
  },
  "api/Mithril.Communication.Email.Features.EmailFeature.html": {
    "href": "api/Mithril.Communication.Email.Features.EmailFeature.html",
    "title": "Class EmailFeature | Mithril API Reference",
    "keywords": "Class EmailFeature Email feature. Inheritance object FeatureBaseClass<EmailFeature> EmailFeature Implements IFeature IEquatable<EmailFeature> Inherited Members FeatureBaseClass<EmailFeature>.Instance FeatureBaseClass<EmailFeature>.Equals(object) FeatureBaseClass<EmailFeature>.Equals(EmailFeature) FeatureBaseClass<EmailFeature>.GetHashCode() object.Equals(object, object) object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Mithril.Communication.Email.Features Assembly: Mithril.Communication.Email.dll Syntax public class EmailFeature : FeatureBaseClass<EmailFeature>, IFeature, IEquatable<EmailFeature> Properties | Improve this Doc View Source Category The group (by category) that the feature belongs. If not provided, defaults to 'Uncategorized'. Declaration public override string Category { get; } Property Value Type Description string The category. Overrides FeatureBaseClass<EmailFeature>.Category See Also FeatureBaseClass<TFeature> | Improve this Doc View Source Description Gets or sets the description. Declaration public override string Description { get; } Property Value Type Description string The description. Overrides FeatureBaseClass<EmailFeature>.Description See Also FeatureBaseClass<TFeature> | Improve this Doc View Source Name Human-readable name of the feature. If not provided, the identifier will be used. Declaration public override string Name { get; } Property Value Type Description string The name. Overrides FeatureBaseClass<EmailFeature>.Name See Also FeatureBaseClass<TFeature> Implements IFeature IEquatable<T> Extension Methods ExpandoObjectExtensions.ConvertToExpando<TEntity>(TEntity?) GenericExtensions.When<TObject>(TObject, bool, Func<TObject, TObject>) See Also FeatureBaseClass<TFeature>"
  },
  "api/Mithril.Communication.Email.Features.html": {
    "href": "api/Mithril.Communication.Email.Features.html",
    "title": "Namespace Mithril.Communication.Email.Features | Mithril API Reference",
    "keywords": "Namespace Mithril.Communication.Email.Features Classes EmailFeature Email feature."
  },
  "api/Mithril.Communication.Email.HealthChecks.SMTPHealthCheck.html": {
    "href": "api/Mithril.Communication.Email.HealthChecks.SMTPHealthCheck.html",
    "title": "Class SMTPHealthCheck | Mithril API Reference",
    "keywords": "Class SMTPHealthCheck SMTP health check Inheritance object SMTPHealthCheck Implements IHealthCheck Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Mithril.Communication.Email.HealthChecks Assembly: Mithril.Communication.Email.dll Syntax public class SMTPHealthCheck : IHealthCheck Properties | Improve this Doc View Source DataService Gets the data service. Declaration public static IDataService? DataService { get; set; } Property Value Type Description IDataService The data service. See Also IHealthCheck | Improve this Doc View Source FeatureManager Gets the feature manager. Declaration public static IFeatureManager? FeatureManager { get; set; } Property Value Type Description IFeatureManager The feature manager. See Also IHealthCheck Methods | Improve this Doc View Source CheckHealthAsync(HealthCheckContext, CancellationToken) Runs the health check, returning the status of the component being checked. Declaration public Task<HealthCheckResult> CheckHealthAsync(HealthCheckContext context, CancellationToken cancellationToken = default) Parameters Type Name Description HealthCheckContext context A context object associated with the current execution. CancellationToken cancellationToken A CancellationToken that can be used to cancel the health check. Returns Type Description Task<HealthCheckResult> A Task<TResult> that completes when the health check has finished, yielding the status of the component being checked. See Also IHealthCheck Implements IHealthCheck Extension Methods ExpandoObjectExtensions.ConvertToExpando<TEntity>(TEntity?) GenericExtensions.When<TObject>(TObject, bool, Func<TObject, TObject>) See Also IHealthCheck"
  },
  "api/Mithril.Communication.Email.HealthChecks.html": {
    "href": "api/Mithril.Communication.Email.HealthChecks.html",
    "title": "Namespace Mithril.Communication.Email.HealthChecks | Mithril API Reference",
    "keywords": "Namespace Mithril.Communication.Email.HealthChecks Classes SMTPHealthCheck SMTP health check"
  },
  "api/Mithril.Communication.Email.Models.EmailMessage.html": {
    "href": "api/Mithril.Communication.Email.Models.EmailMessage.html",
    "title": "Class EmailMessage | Mithril API Reference",
    "keywords": "Class EmailMessage Email message Inheritance object ModelBase<EmailMessage> EmailMessage Implements IModel<EmailMessage> IEquatable<IModel<EmailMessage>> IComparable IComparable<EmailMessage> IEquatable<ModelBase<EmailMessage>> IMessage IModel IEquatable<IModel> Inherited Members ModelBase<EmailMessage>.Active ModelBase<EmailMessage>.Creator ModelBase<EmailMessage>.DateCreated ModelBase<EmailMessage>.DateModified ModelBase<EmailMessage>.ID ModelBase<EmailMessage>.Modifier ModelBase<EmailMessage>.TenantID ModelBase<EmailMessage>.All(IDataService) ModelBase<EmailMessage>.AllActive(IDataService) ModelBase<EmailMessage>.AllInactive(IDataService) ModelBase<EmailMessage>.Load(long, IDataService) ModelBase<EmailMessage>.Query(IDataService) ModelBase<EmailMessage>.CanBeModifiedBy(ClaimsPrincipal) ModelBase<EmailMessage>.CanBeViewedBy(ClaimsPrincipal) ModelBase<EmailMessage>.CompareTo(object) ModelBase<EmailMessage>.DeleteAsync(IDataService, ClaimsPrincipal, bool) ModelBase<EmailMessage>.Equals(IModel) ModelBase<EmailMessage>.Equals(IModel<EmailMessage>) ModelBase<EmailMessage>.Equals(ModelBase<EmailMessage>) ModelBase<EmailMessage>.SaveAsync(IDataService, ClaimsPrincipal) ModelBase<EmailMessage>.SetupObject(IDataService, ClaimsPrincipal) ModelBase<EmailMessage>.SetupObject(IDataService, IUser) ModelBase<EmailMessage>.SetupObjectAndReturn(IDataService, ClaimsPrincipal) object.Equals(object, object) object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Namespace: Mithril.Communication.Email.Models Assembly: Mithril.Communication.Email.dll Syntax public class EmailMessage : ModelBase<EmailMessage>, IModel<EmailMessage>, IEquatable<IModel<EmailMessage>>, IComparable, IComparable<EmailMessage>, IEquatable<ModelBase<EmailMessage>>, IMessage, IModel, IEquatable<IModel> Properties | Improve this Doc View Source Application Gets or sets the application the message originated from. Declaration [MaxLength(64)] public string? Application { get; set; } Property Value Type Description string The application the message originated from. See Also ModelBase<TClass> | Improve this Doc View Source Attachments Gets or sets the attachments. Declaration public virtual IList<Attachment?> Attachments { get; set; } Property Value Type Description IList<Attachment> The attachments. See Also ModelBase<TClass> | Improve this Doc View Source BCC Gets or sets the BCC. Declaration [MaxLength] public string? BCC { get; set; } Property Value Type Description string The BCC. See Also ModelBase<TClass> | Improve this Doc View Source Body Gets or sets the body. Declaration [MaxLength] public string? Body { get; set; } Property Value Type Description string The body. See Also ModelBase<TClass> | Improve this Doc View Source CC Gets or sets the cc. Declaration [MaxLength] public string? CC { get; set; } Property Value Type Description string The cc. See Also ModelBase<TClass> | Improve this Doc View Source From Gets or sets from. Declaration [Required] [MinLength(1)] [MaxLength(128)] public string? From { get; set; } Property Value Type Description string From. See Also ModelBase<TClass> | Improve this Doc View Source Subject Gets or sets the subject. Declaration [Required] [MinLength(1)] [MaxLength(256)] public string? Subject { get; set; } Property Value Type Description string The subject. See Also ModelBase<TClass> | Improve this Doc View Source Template Gets or sets the template. Declaration [MaxLength(128)] public string? Template { get; set; } Property Value Type Description string The template. See Also ModelBase<TClass> | Improve this Doc View Source TemplateData Gets or sets the template data (JSON). Declaration [MaxLength] public string? TemplateData { get; set; } Property Value Type Description string The template data in JSON format. See Also ModelBase<TClass> | Improve this Doc View Source TemplateFields Gets or sets the template data. Declaration public ExpandoObject? TemplateFields { get; } Property Value Type Description ExpandoObject The template data. See Also ModelBase<TClass> | Improve this Doc View Source To Gets or sets to. Declaration [Required] [MinLength(1)] [MaxLength] public string? To { get; set; } Property Value Type Description string To. See Also ModelBase<TClass> Methods | Improve this Doc View Source CompareTo(EmailMessage?) Compares the object to another object Declaration public override int CompareTo(EmailMessage? other) Parameters Type Name Description EmailMessage other Object to compare to Returns Type Description int 0 if they are equal, -1 if this is smaller, 1 if it is larger Overrides ModelBase<EmailMessage>.CompareTo(EmailMessage) See Also ModelBase<TClass> | Improve this Doc View Source Equals(EmailMessage) Indicates whether the current object is equal to another object of the same type. Declaration public bool Equals(EmailMessage other) Parameters Type Name Description EmailMessage other An object to compare with this object. Returns Type Description bool true if the current object is equal to the other parameter; otherwise, false. See Also ModelBase<TClass> | Improve this Doc View Source Equals(object?) Determines whether the specified object, is equal to this instance. Declaration public override bool Equals(object? obj) Parameters Type Name Description object obj The object to compare with this instance. Returns Type Description bool true if the specified object is equal to this instance; otherwise, false. Overrides ModelBase<EmailMessage>.Equals(object) See Also ModelBase<TClass> | Improve this Doc View Source GetHashCode() Returns a hash code for this instance. Declaration public override int GetHashCode() Returns Type Description int A hash code for this instance, suitable for use in hashing algorithms and data structures like a hash table. Overrides Mithril.Data.Abstractions.BaseClasses.ModelBase<Mithril.Communication.Email.Models.EmailMessage>.GetHashCode() See Also ModelBase<TClass> | Improve this Doc View Source ToString() Returns a string that represents this instance. Declaration public override string ToString() Returns Type Description string A string that represents this instance. Overrides object.ToString() See Also ModelBase<TClass> Operators | Improve this Doc View Source operator ==(EmailMessage, EmailMessage) Implements the operator ==. Declaration public static bool operator ==(EmailMessage first, EmailMessage second) Parameters Type Name Description EmailMessage first The first. EmailMessage second The second. Returns Type Description bool The result of the operator. See Also ModelBase<TClass> | Improve this Doc View Source operator >(EmailMessage, EmailMessage) Implements the operator >. Declaration public static bool operator >(EmailMessage left, EmailMessage right) Parameters Type Name Description EmailMessage left The left. EmailMessage right The right. Returns Type Description bool The result of the operator. See Also ModelBase<TClass> | Improve this Doc View Source operator >=(EmailMessage, EmailMessage) Implements the operator >=. Declaration public static bool operator >=(EmailMessage left, EmailMessage right) Parameters Type Name Description EmailMessage left The left. EmailMessage right The right. Returns Type Description bool The result of the operator. See Also ModelBase<TClass> | Improve this Doc View Source operator !=(EmailMessage, EmailMessage) Implements the operator !=. Declaration public static bool operator !=(EmailMessage left, EmailMessage right) Parameters Type Name Description EmailMessage left The left. EmailMessage right The right. Returns Type Description bool The result of the operator. See Also ModelBase<TClass> | Improve this Doc View Source operator <(EmailMessage, EmailMessage) Implements the operator <. Declaration public static bool operator <(EmailMessage left, EmailMessage right) Parameters Type Name Description EmailMessage left The left. EmailMessage right The right. Returns Type Description bool The result of the operator. See Also ModelBase<TClass> | Improve this Doc View Source operator <=(EmailMessage, EmailMessage) Implements the operator <=. Declaration public static bool operator <=(EmailMessage left, EmailMessage right) Parameters Type Name Description EmailMessage left The left. EmailMessage right The right. Returns Type Description bool The result of the operator. See Also ModelBase<TClass> Implements IModel<TClass> IEquatable<T> IComparable IComparable<T> IEquatable<T> IMessage IModel IEquatable<T> Extension Methods ExpandoObjectExtensions.ConvertToExpando<TEntity>(TEntity?) GenericExtensions.When<TObject>(TObject, bool, Func<TObject, TObject>) See Also ModelBase<TClass>"
  },
  "api/Mithril.Communication.Email.Models.EmailSettings.html": {
    "href": "api/Mithril.Communication.Email.Models.EmailSettings.html",
    "title": "Class EmailSettings | Mithril API Reference",
    "keywords": "Class EmailSettings Email settings Inheritance object ModelBase<EmailSettings> SettingsBase<EmailSettings> EmailSettings Implements IModel<EmailSettings> IModel IEquatable<IModel> IEquatable<IModel<EmailSettings>> IComparable IComparable<EmailSettings> IEquatable<ModelBase<EmailSettings>> IEquatable<SettingsBase<EmailSettings>> Inherited Members SettingsBase<EmailSettings>.LoadOrCreateAsync(IDataService, ClaimsPrincipal) SettingsBase<EmailSettings>.Equals(ITypedModel) SettingsBase<EmailSettings>.Equals(SettingsBase<EmailSettings>) ModelBase<EmailSettings>.Active ModelBase<EmailSettings>.Creator ModelBase<EmailSettings>.DateCreated ModelBase<EmailSettings>.DateModified ModelBase<EmailSettings>.ID ModelBase<EmailSettings>.Modifier ModelBase<EmailSettings>.TenantID ModelBase<EmailSettings>.All(IDataService) ModelBase<EmailSettings>.AllActive(IDataService) ModelBase<EmailSettings>.AllInactive(IDataService) ModelBase<EmailSettings>.Load(long, IDataService) ModelBase<EmailSettings>.Query(IDataService) ModelBase<EmailSettings>.CanBeModifiedBy(ClaimsPrincipal) ModelBase<EmailSettings>.CanBeViewedBy(ClaimsPrincipal) ModelBase<EmailSettings>.CompareTo(object) ModelBase<EmailSettings>.DeleteAsync(IDataService, ClaimsPrincipal, bool) ModelBase<EmailSettings>.Equals(IModel) ModelBase<EmailSettings>.Equals(IModel<EmailSettings>) ModelBase<EmailSettings>.Equals(ModelBase<EmailSettings>) ModelBase<EmailSettings>.SaveAsync(IDataService, ClaimsPrincipal) ModelBase<EmailSettings>.SetupObject(IDataService, ClaimsPrincipal) ModelBase<EmailSettings>.SetupObject(IDataService, IUser) ModelBase<EmailSettings>.SetupObjectAndReturn(IDataService, ClaimsPrincipal) object.Equals(object, object) object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Namespace: Mithril.Communication.Email.Models Assembly: Mithril.Communication.Email.dll Syntax public class EmailSettings : SettingsBase<EmailSettings>, IModel<EmailSettings>, IModel, IEquatable<IModel>, IEquatable<IModel<EmailSettings>>, IComparable, IComparable<EmailSettings>, IEquatable<ModelBase<EmailSettings>>, IEquatable<SettingsBase<EmailSettings>> Constructors | Improve this Doc View Source EmailSettings() Initializes a new instance of the EmailSettings class. Declaration public EmailSettings() See Also SettingsBase<TClass> Properties | Improve this Doc View Source LocalDomain Gets or sets the local domain. Declaration [MaxLength(256)] public string? LocalDomain { get; set; } Property Value Type Description string The local domain. See Also SettingsBase<TClass> | Improve this Doc View Source Password Gets or sets the password. Declaration public string? Password { get; set; } Property Value Type Description string The password. See Also SettingsBase<TClass> | Improve this Doc View Source Port Gets or sets the port. Declaration public int Port { get; set; } Property Value Type Description int The port. See Also SettingsBase<TClass> | Improve this Doc View Source Server Gets or sets the server. Declaration [Required] [MaxLength(256)] [MinLength(1)] public string? Server { get; set; } Property Value Type Description string The server. See Also SettingsBase<TClass> | Improve this Doc View Source SystemAddress Gets or sets the system address. Declaration [Required] [MaxLength(256)] [MinLength(1)] public string? SystemAddress { get; set; } Property Value Type Description string The system address. See Also SettingsBase<TClass> | Improve this Doc View Source UseSSL Gets or sets a value indicating whether [use SSL]. Declaration public bool UseSSL { get; set; } Property Value Type Description bool true if [use SSL]; otherwise, false. See Also SettingsBase<TClass> | Improve this Doc View Source UserName Gets or sets the name of the user. Declaration [MaxLength(128)] public string? UserName { get; set; } Property Value Type Description string The name of the user. See Also SettingsBase<TClass> Methods | Improve this Doc View Source CompareTo(EmailSettings?) Compares the object to another object Declaration public override int CompareTo(EmailSettings? other) Parameters Type Name Description EmailSettings other Object to compare to Returns Type Description int 0 if they are equal, -1 if this is smaller, 1 if it is larger Overrides SettingsBase<EmailSettings>.CompareTo(EmailSettings) See Also SettingsBase<TClass> | Improve this Doc View Source Equals(EmailSettings) Indicates whether the current object is equal to another object of the same type. Declaration public bool Equals(EmailSettings other) Parameters Type Name Description EmailSettings other An object to compare with this object. Returns Type Description bool true if the current object is equal to the other parameter; otherwise, false. See Also SettingsBase<TClass> | Improve this Doc View Source Equals(object?) Determines whether the specified object, is equal to this instance. Declaration public override bool Equals(object? obj) Parameters Type Name Description object obj The object to compare with this instance. Returns Type Description bool true if the specified object is equal to this instance; otherwise, false. Overrides SettingsBase<EmailSettings>.Equals(object) See Also SettingsBase<TClass> | Improve this Doc View Source GetHashCode() Returns a hash code for this instance. Declaration public override int GetHashCode() Returns Type Description int A hash code for this instance, suitable for use in hashing algorithms and data structures like a hash table. Overrides Mithril.Data.Abstractions.BaseClasses.SettingsBase<Mithril.Communication.Email.Models.EmailSettings>.GetHashCode() See Also SettingsBase<TClass> | Improve this Doc View Source ToString() Returns a string that represents this instance. Declaration public override string ToString() Returns Type Description string A string that represents this instance. Overrides object.ToString() See Also SettingsBase<TClass> Operators | Improve this Doc View Source operator ==(EmailSettings, EmailSettings) Implements the operator ==. Declaration public static bool operator ==(EmailSettings first, EmailSettings second) Parameters Type Name Description EmailSettings first The first. EmailSettings second The second. Returns Type Description bool The result of the operator. See Also SettingsBase<TClass> | Improve this Doc View Source operator >(EmailSettings, EmailSettings) Implements the operator >. Declaration public static bool operator >(EmailSettings left, EmailSettings right) Parameters Type Name Description EmailSettings left The left. EmailSettings right The right. Returns Type Description bool The result of the operator. See Also SettingsBase<TClass> | Improve this Doc View Source operator >=(EmailSettings, EmailSettings) Implements the operator >=. Declaration public static bool operator >=(EmailSettings left, EmailSettings right) Parameters Type Name Description EmailSettings left The left. EmailSettings right The right. Returns Type Description bool The result of the operator. See Also SettingsBase<TClass> | Improve this Doc View Source operator !=(EmailSettings, EmailSettings) Implements the operator !=. Declaration public static bool operator !=(EmailSettings left, EmailSettings right) Parameters Type Name Description EmailSettings left The left. EmailSettings right The right. Returns Type Description bool The result of the operator. See Also SettingsBase<TClass> | Improve this Doc View Source operator <(EmailSettings, EmailSettings) Implements the operator <. Declaration public static bool operator <(EmailSettings left, EmailSettings right) Parameters Type Name Description EmailSettings left The left. EmailSettings right The right. Returns Type Description bool The result of the operator. See Also SettingsBase<TClass> | Improve this Doc View Source operator <=(EmailSettings, EmailSettings) Implements the operator <=. Declaration public static bool operator <=(EmailSettings left, EmailSettings right) Parameters Type Name Description EmailSettings left The left. EmailSettings right The right. Returns Type Description bool The result of the operator. See Also SettingsBase<TClass> Implements IModel<TClass> IModel IEquatable<T> IEquatable<T> IComparable IComparable<T> IEquatable<T> IEquatable<T> Extension Methods ExpandoObjectExtensions.ConvertToExpando<TEntity>(TEntity?) GenericExtensions.When<TObject>(TObject, bool, Func<TObject, TObject>) See Also SettingsBase<TClass>"
  },
  "api/Mithril.Communication.Email.Models.Mappings.EmailMessageMapping.html": {
    "href": "api/Mithril.Communication.Email.Models.Mappings.EmailMessageMapping.html",
    "title": "Class EmailMessageMapping | Mithril API Reference",
    "keywords": "Class EmailMessageMapping Email message mapping Inheritance object MappingBaseClass<EmailMessage, DefaultDatabase> EmailMessageMapping Implements IMapping<EmailMessage> IMapping Inherited Members MappingBaseClass<EmailMessage, DefaultDatabase>.AddAutoKey() MappingBaseClass<EmailMessage, DefaultDatabase>.ContainsProperty(string) MappingBaseClass<EmailMessage, DefaultDatabase>.Copy(IMapping) MappingBaseClass<EmailMessage, DefaultDatabase>.CopyProperty(IIDProperty) MappingBaseClass<EmailMessage, DefaultDatabase>.CopyProperty(IProperty) MappingBaseClass<EmailMessage, DefaultDatabase>.CopyProperty(IMapProperty) MappingBaseClass<EmailMessage, DefaultDatabase>.CopyProperty(IManyToOneProperty) MappingBaseClass<EmailMessage, DefaultDatabase>.CopyProperty(IManyToManyProperty) MappingBaseClass<EmailMessage, DefaultDatabase>.Equals(object) MappingBaseClass<EmailMessage, DefaultDatabase>.GetColumnName(string) MappingBaseClass<EmailMessage, DefaultDatabase>.GetHashCode() MappingBaseClass<EmailMessage, DefaultDatabase>.ID<TDataType>(Expression<Func<EmailMessage, TDataType>>) MappingBaseClass<EmailMessage, DefaultDatabase>.ManyToMany<TDataType>(Expression<Func<EmailMessage, IList<TDataType>>>) MappingBaseClass<EmailMessage, DefaultDatabase>.ManyToOne<TDataType>(Expression<Func<EmailMessage, IList<TDataType>>>) MappingBaseClass<EmailMessage, DefaultDatabase>.ManyToOne<TDataType>(Expression<Func<EmailMessage, TDataType>>) MappingBaseClass<EmailMessage, DefaultDatabase>.Map<TDataType>(Expression<Func<EmailMessage, TDataType>>) MappingBaseClass<EmailMessage, DefaultDatabase>.Reduce(ILogger) MappingBaseClass<EmailMessage, DefaultDatabase>.Reduce(IMapping, ILogger) MappingBaseClass<EmailMessage, DefaultDatabase>.Reference<TDataType>(Expression<Func<EmailMessage, TDataType>>) MappingBaseClass<EmailMessage, DefaultDatabase>.SetQuery(QueryType, string, CommandType, params IParameter[]) MappingBaseClass<EmailMessage, DefaultDatabase>.Setup() MappingBaseClass<EmailMessage, DefaultDatabase>.ToString() MappingBaseClass<EmailMessage, DefaultDatabase>.AutoIDProperties MappingBaseClass<EmailMessage, DefaultDatabase>.DatabaseConfigType MappingBaseClass<EmailMessage, DefaultDatabase>.IDProperties MappingBaseClass<EmailMessage, DefaultDatabase>.ManyToManyProperties MappingBaseClass<EmailMessage, DefaultDatabase>.ManyToOneProperties MappingBaseClass<EmailMessage, DefaultDatabase>.MapProperties MappingBaseClass<EmailMessage, DefaultDatabase>.Merge MappingBaseClass<EmailMessage, DefaultDatabase>.ObjectType MappingBaseClass<EmailMessage, DefaultDatabase>.Order MappingBaseClass<EmailMessage, DefaultDatabase>.Prefix MappingBaseClass<EmailMessage, DefaultDatabase>.Queries MappingBaseClass<EmailMessage, DefaultDatabase>.ReferenceProperties MappingBaseClass<EmailMessage, DefaultDatabase>.SchemaName MappingBaseClass<EmailMessage, DefaultDatabase>.Suffix MappingBaseClass<EmailMessage, DefaultDatabase>.TableName object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Mithril.Communication.Email.Models.Mappings Assembly: Mithril.Communication.Email.dll Syntax public class EmailMessageMapping : MappingBaseClass<EmailMessage, DefaultDatabase>, IMapping<EmailMessage>, IMapping Constructors | Improve this Doc View Source EmailMessageMapping() Initializes a new instance of the EmailMessageMapping class. Declaration public EmailMessageMapping() See Also MappingBaseClass<TClassType, TDatabaseType> Implements IMapping<TClassType> IMapping Extension Methods ExpandoObjectExtensions.ConvertToExpando<TEntity>(TEntity?) GenericExtensions.When<TObject>(TObject, bool, Func<TObject, TObject>) See Also MappingBaseClass<TClassType, TDatabaseType>"
  },
  "api/Mithril.Communication.Email.Models.Mappings.EmailSettingsMapping.html": {
    "href": "api/Mithril.Communication.Email.Models.Mappings.EmailSettingsMapping.html",
    "title": "Class EmailSettingsMapping | Mithril API Reference",
    "keywords": "Class EmailSettingsMapping Email settings mapping Inheritance object MappingBaseClass<EmailSettings, DefaultDatabase> EmailSettingsMapping Implements IMapping<EmailSettings> IMapping Inherited Members MappingBaseClass<EmailSettings, DefaultDatabase>.AddAutoKey() MappingBaseClass<EmailSettings, DefaultDatabase>.ContainsProperty(string) MappingBaseClass<EmailSettings, DefaultDatabase>.Copy(IMapping) MappingBaseClass<EmailSettings, DefaultDatabase>.CopyProperty(IIDProperty) MappingBaseClass<EmailSettings, DefaultDatabase>.CopyProperty(IProperty) MappingBaseClass<EmailSettings, DefaultDatabase>.CopyProperty(IMapProperty) MappingBaseClass<EmailSettings, DefaultDatabase>.CopyProperty(IManyToOneProperty) MappingBaseClass<EmailSettings, DefaultDatabase>.CopyProperty(IManyToManyProperty) MappingBaseClass<EmailSettings, DefaultDatabase>.Equals(object) MappingBaseClass<EmailSettings, DefaultDatabase>.GetColumnName(string) MappingBaseClass<EmailSettings, DefaultDatabase>.GetHashCode() MappingBaseClass<EmailSettings, DefaultDatabase>.ID<TDataType>(Expression<Func<EmailSettings, TDataType>>) MappingBaseClass<EmailSettings, DefaultDatabase>.ManyToMany<TDataType>(Expression<Func<EmailSettings, IList<TDataType>>>) MappingBaseClass<EmailSettings, DefaultDatabase>.ManyToOne<TDataType>(Expression<Func<EmailSettings, IList<TDataType>>>) MappingBaseClass<EmailSettings, DefaultDatabase>.ManyToOne<TDataType>(Expression<Func<EmailSettings, TDataType>>) MappingBaseClass<EmailSettings, DefaultDatabase>.Map<TDataType>(Expression<Func<EmailSettings, TDataType>>) MappingBaseClass<EmailSettings, DefaultDatabase>.Reduce(ILogger) MappingBaseClass<EmailSettings, DefaultDatabase>.Reduce(IMapping, ILogger) MappingBaseClass<EmailSettings, DefaultDatabase>.Reference<TDataType>(Expression<Func<EmailSettings, TDataType>>) MappingBaseClass<EmailSettings, DefaultDatabase>.SetQuery(QueryType, string, CommandType, params IParameter[]) MappingBaseClass<EmailSettings, DefaultDatabase>.Setup() MappingBaseClass<EmailSettings, DefaultDatabase>.ToString() MappingBaseClass<EmailSettings, DefaultDatabase>.AutoIDProperties MappingBaseClass<EmailSettings, DefaultDatabase>.DatabaseConfigType MappingBaseClass<EmailSettings, DefaultDatabase>.IDProperties MappingBaseClass<EmailSettings, DefaultDatabase>.ManyToManyProperties MappingBaseClass<EmailSettings, DefaultDatabase>.ManyToOneProperties MappingBaseClass<EmailSettings, DefaultDatabase>.MapProperties MappingBaseClass<EmailSettings, DefaultDatabase>.Merge MappingBaseClass<EmailSettings, DefaultDatabase>.ObjectType MappingBaseClass<EmailSettings, DefaultDatabase>.Order MappingBaseClass<EmailSettings, DefaultDatabase>.Prefix MappingBaseClass<EmailSettings, DefaultDatabase>.Queries MappingBaseClass<EmailSettings, DefaultDatabase>.ReferenceProperties MappingBaseClass<EmailSettings, DefaultDatabase>.SchemaName MappingBaseClass<EmailSettings, DefaultDatabase>.Suffix MappingBaseClass<EmailSettings, DefaultDatabase>.TableName object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Mithril.Communication.Email.Models.Mappings Assembly: Mithril.Communication.Email.dll Syntax public class EmailSettingsMapping : MappingBaseClass<EmailSettings, DefaultDatabase>, IMapping<EmailSettings>, IMapping Constructors | Improve this Doc View Source EmailSettingsMapping() Initializes a new instance of the EmailSettingsMapping class. Declaration public EmailSettingsMapping() See Also MappingBaseClass<TClassType, TDatabaseType> Implements IMapping<TClassType> IMapping Extension Methods ExpandoObjectExtensions.ConvertToExpando<TEntity>(TEntity?) GenericExtensions.When<TObject>(TObject, bool, Func<TObject, TObject>) See Also MappingBaseClass<TClassType, TDatabaseType>"
  },
  "api/Mithril.Communication.Email.Models.Mappings.html": {
    "href": "api/Mithril.Communication.Email.Models.Mappings.html",
    "title": "Namespace Mithril.Communication.Email.Models.Mappings | Mithril API Reference",
    "keywords": "Namespace Mithril.Communication.Email.Models.Mappings Classes EmailMessageMapping Email message mapping EmailSettingsMapping Email settings mapping"
  },
  "api/Mithril.Communication.Email.Models.html": {
    "href": "api/Mithril.Communication.Email.Models.html",
    "title": "Namespace Mithril.Communication.Email.Models | Mithril API Reference",
    "keywords": "Namespace Mithril.Communication.Email.Models Classes EmailMessage Email message EmailSettings Email settings"
  },
  "api/Mithril.Communication.Email.Utils.EmailSender.html": {
    "href": "api/Mithril.Communication.Email.Utils.EmailSender.html",
    "title": "Class EmailSender | Mithril API Reference",
    "keywords": "Class EmailSender Email sender Inheritance object Email EmailSender Inherited Members Email.Attachments Email.Bcc Email.Body Email.Cc Email.From Email.IgnoreServerCertificateIssues Email.LocalDomain Email.Password Email.Port Email.Priority Email.Server Email.Subject Email.To Email.UserName Email.UseSSL object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Mithril.Communication.Email.Utils Assembly: Mithril.Communication.Email.dll Syntax public class EmailSender : Email Constructors | Improve this Doc View Source EmailSender(IFeatureManager?, IDataService?) Constructor Declaration public EmailSender(IFeatureManager? featureManager, IDataService? dataService) Parameters Type Name Description IFeatureManager featureManager The feature manager. IDataService dataService The data service. See Also Email Properties | Improve this Doc View Source CanSend Gets a value indicating whether this instance can send. Declaration public bool CanSend { get; } Property Value Type Description bool true if this instance can send; otherwise, false. See Also Email Methods | Improve this Doc View Source Send() Logs and sends the email. Declaration public void Send() See Also Email | Improve this Doc View Source SendAsync() Logs and sends the email. Declaration public Task SendAsync() Returns Type Description Task The resulting Task See Also Email Extension Methods ExpandoObjectExtensions.ConvertToExpando<TEntity>(TEntity?) GenericExtensions.When<TObject>(TObject, bool, Func<TObject, TObject>) See Also Email"
  },
  "api/Mithril.Communication.Email.Utils.html": {
    "href": "api/Mithril.Communication.Email.Utils.html",
    "title": "Namespace Mithril.Communication.Email.Utils | Mithril API Reference",
    "keywords": "Namespace Mithril.Communication.Email.Utils Classes EmailSender Email sender"
  },
  "api/Mithril.Communication.Email.html": {
    "href": "api/Mithril.Communication.Email.html",
    "title": "Namespace Mithril.Communication.Email | Mithril API Reference",
    "keywords": "Namespace Mithril.Communication.Email Classes EmailModule Email module"
  },
  "api/Mithril.Communication.Models.Mappings.MessageTemplateMapping.html": {
    "href": "api/Mithril.Communication.Models.Mappings.MessageTemplateMapping.html",
    "title": "Class MessageTemplateMapping | Mithril API Reference",
    "keywords": "Class MessageTemplateMapping Message template mapping Inheritance object MappingBaseClass<MessageTemplate, DefaultDatabase> MessageTemplateMapping Implements IMapping<MessageTemplate> IMapping Inherited Members MappingBaseClass<MessageTemplate, DefaultDatabase>.AddAutoKey() MappingBaseClass<MessageTemplate, DefaultDatabase>.ContainsProperty(string) MappingBaseClass<MessageTemplate, DefaultDatabase>.Copy(IMapping) MappingBaseClass<MessageTemplate, DefaultDatabase>.CopyProperty(IIDProperty) MappingBaseClass<MessageTemplate, DefaultDatabase>.CopyProperty(IProperty) MappingBaseClass<MessageTemplate, DefaultDatabase>.CopyProperty(IMapProperty) MappingBaseClass<MessageTemplate, DefaultDatabase>.CopyProperty(IManyToOneProperty) MappingBaseClass<MessageTemplate, DefaultDatabase>.CopyProperty(IManyToManyProperty) MappingBaseClass<MessageTemplate, DefaultDatabase>.Equals(object) MappingBaseClass<MessageTemplate, DefaultDatabase>.GetColumnName(string) MappingBaseClass<MessageTemplate, DefaultDatabase>.GetHashCode() MappingBaseClass<MessageTemplate, DefaultDatabase>.ID<TDataType>(Expression<Func<MessageTemplate, TDataType>>) MappingBaseClass<MessageTemplate, DefaultDatabase>.ManyToMany<TDataType>(Expression<Func<MessageTemplate, IList<TDataType>>>) MappingBaseClass<MessageTemplate, DefaultDatabase>.ManyToOne<TDataType>(Expression<Func<MessageTemplate, IList<TDataType>>>) MappingBaseClass<MessageTemplate, DefaultDatabase>.ManyToOne<TDataType>(Expression<Func<MessageTemplate, TDataType>>) MappingBaseClass<MessageTemplate, DefaultDatabase>.Map<TDataType>(Expression<Func<MessageTemplate, TDataType>>) MappingBaseClass<MessageTemplate, DefaultDatabase>.Reduce(ILogger) MappingBaseClass<MessageTemplate, DefaultDatabase>.Reduce(IMapping, ILogger) MappingBaseClass<MessageTemplate, DefaultDatabase>.Reference<TDataType>(Expression<Func<MessageTemplate, TDataType>>) MappingBaseClass<MessageTemplate, DefaultDatabase>.SetQuery(QueryType, string, CommandType, params IParameter[]) MappingBaseClass<MessageTemplate, DefaultDatabase>.Setup() MappingBaseClass<MessageTemplate, DefaultDatabase>.ToString() MappingBaseClass<MessageTemplate, DefaultDatabase>.AutoIDProperties MappingBaseClass<MessageTemplate, DefaultDatabase>.DatabaseConfigType MappingBaseClass<MessageTemplate, DefaultDatabase>.IDProperties MappingBaseClass<MessageTemplate, DefaultDatabase>.ManyToManyProperties MappingBaseClass<MessageTemplate, DefaultDatabase>.ManyToOneProperties MappingBaseClass<MessageTemplate, DefaultDatabase>.MapProperties MappingBaseClass<MessageTemplate, DefaultDatabase>.Merge MappingBaseClass<MessageTemplate, DefaultDatabase>.ObjectType MappingBaseClass<MessageTemplate, DefaultDatabase>.Order MappingBaseClass<MessageTemplate, DefaultDatabase>.Prefix MappingBaseClass<MessageTemplate, DefaultDatabase>.Queries MappingBaseClass<MessageTemplate, DefaultDatabase>.ReferenceProperties MappingBaseClass<MessageTemplate, DefaultDatabase>.SchemaName MappingBaseClass<MessageTemplate, DefaultDatabase>.Suffix MappingBaseClass<MessageTemplate, DefaultDatabase>.TableName object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Mithril.Communication.Models.Mappings Assembly: Mithril.Communication.dll Syntax public class MessageTemplateMapping : MappingBaseClass<MessageTemplate, DefaultDatabase>, IMapping<MessageTemplate>, IMapping Constructors | Improve this Doc View Source MessageTemplateMapping() Initializes a new instance of the MessageTemplateMapping class. Declaration public MessageTemplateMapping() See Also MappingBaseClass<TClassType, TDatabaseType> Implements IMapping<TClassType> IMapping Extension Methods ExpandoObjectExtensions.ConvertToExpando<TEntity>(TEntity?) GenericExtensions.When<TObject>(TObject, bool, Func<TObject, TObject>) See Also MappingBaseClass<TClassType, TDatabaseType>"
  },
  "api/Mithril.Communication.Models.Mappings.html": {
    "href": "api/Mithril.Communication.Models.Mappings.html",
    "title": "Namespace Mithril.Communication.Models.Mappings | Mithril API Reference",
    "keywords": "Namespace Mithril.Communication.Models.Mappings Classes MessageTemplateMapping Message template mapping"
  },
  "api/Mithril.Communication.Models.MessageTemplate.html": {
    "href": "api/Mithril.Communication.Models.MessageTemplate.html",
    "title": "Class MessageTemplate | Mithril API Reference",
    "keywords": "Class MessageTemplate Message template Inheritance object ModelBase<MessageTemplate> MessageTemplate Implements IModel<MessageTemplate> IEquatable<IModel<MessageTemplate>> IComparable IComparable<MessageTemplate> IEquatable<ModelBase<MessageTemplate>> IMessageTemplate IModel IEquatable<IModel> Inherited Members ModelBase<MessageTemplate>.Active ModelBase<MessageTemplate>.Creator ModelBase<MessageTemplate>.DateCreated ModelBase<MessageTemplate>.DateModified ModelBase<MessageTemplate>.ID ModelBase<MessageTemplate>.Modifier ModelBase<MessageTemplate>.TenantID ModelBase<MessageTemplate>.All(IDataService) ModelBase<MessageTemplate>.AllActive(IDataService) ModelBase<MessageTemplate>.AllInactive(IDataService) ModelBase<MessageTemplate>.Load(long, IDataService) ModelBase<MessageTemplate>.Query(IDataService) ModelBase<MessageTemplate>.CanBeModifiedBy(ClaimsPrincipal) ModelBase<MessageTemplate>.CanBeViewedBy(ClaimsPrincipal) ModelBase<MessageTemplate>.CompareTo(object) ModelBase<MessageTemplate>.DeleteAsync(IDataService, ClaimsPrincipal, bool) ModelBase<MessageTemplate>.Equals(IModel) ModelBase<MessageTemplate>.Equals(IModel<MessageTemplate>) ModelBase<MessageTemplate>.Equals(ModelBase<MessageTemplate>) ModelBase<MessageTemplate>.SaveAsync(IDataService, ClaimsPrincipal) ModelBase<MessageTemplate>.SetupObject(IDataService, ClaimsPrincipal) ModelBase<MessageTemplate>.SetupObject(IDataService, IUser) ModelBase<MessageTemplate>.SetupObjectAndReturn(IDataService, ClaimsPrincipal) object.Equals(object, object) object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Namespace: Mithril.Communication.Models Assembly: Mithril.Communication.dll Syntax public class MessageTemplate : ModelBase<MessageTemplate>, IModel<MessageTemplate>, IEquatable<IModel<MessageTemplate>>, IComparable, IComparable<MessageTemplate>, IEquatable<ModelBase<MessageTemplate>>, IMessageTemplate, IModel, IEquatable<IModel> Constructors | Improve this Doc View Source MessageTemplate() Initializes a new instance of the MessageTemplate class. Declaration public MessageTemplate() See Also ModelBase<TClass> | Improve this Doc View Source MessageTemplate(string) Initializes a new instance of the MessageTemplate class. Declaration public MessageTemplate(string displayName) Parameters Type Name Description string displayName The display name. Exceptions Type Condition ArgumentNullException displayName ArgumentException displayName See Also ModelBase<TClass> Properties | Improve this Doc View Source DisplayName Gets or sets the display name. Declaration [Required] [MinLength(1)] [MaxLength(128)] public string? DisplayName { get; set; } Property Value Type Description string The display name. See Also ModelBase<TClass> Methods | Improve this Doc View Source CompareTo(MessageTemplate?) Compares the object to another object Declaration public override int CompareTo(MessageTemplate? other) Parameters Type Name Description MessageTemplate other Object to compare to Returns Type Description int 0 if they are equal, -1 if this is smaller, 1 if it is larger Overrides ModelBase<MessageTemplate>.CompareTo(MessageTemplate) See Also ModelBase<TClass> | Improve this Doc View Source Equals(MessageTemplate) Indicates whether the current object is equal to another object of the same type. Declaration public bool Equals(MessageTemplate other) Parameters Type Name Description MessageTemplate other An object to compare with this object. Returns Type Description bool true if the current object is equal to the other parameter; otherwise, false. See Also ModelBase<TClass> | Improve this Doc View Source Equals(object?) Determines whether the specified object, is equal to this instance. Declaration public override bool Equals(object? obj) Parameters Type Name Description object obj The object to compare with this instance. Returns Type Description bool true if the specified object is equal to this instance; otherwise, false. Overrides ModelBase<MessageTemplate>.Equals(object) See Also ModelBase<TClass> | Improve this Doc View Source GetContent(IHostEnvironment?) Gets the content. Declaration public string GetContent(IHostEnvironment? hostingEnvironment) Parameters Type Name Description IHostEnvironment hostingEnvironment The hosting environment. Returns Type Description string The content See Also ModelBase<TClass> | Improve this Doc View Source GetHashCode() Returns a hash code for this instance. Declaration public override int GetHashCode() Returns Type Description int A hash code for this instance, suitable for use in hashing algorithms and data structures like a hash table. Overrides Mithril.Data.Abstractions.BaseClasses.ModelBase<Mithril.Communication.Models.MessageTemplate>.GetHashCode() See Also ModelBase<TClass> | Improve this Doc View Source Load(string, IDataService?) Loads the message template based on the name specified. Declaration public static MessageTemplate? Load(string displayName, IDataService? dataService) Parameters Type Name Description string displayName The display name. IDataService dataService The data service. Returns Type Description MessageTemplate The message template. See Also ModelBase<TClass> | Improve this Doc View Source LoadOrCreateAsync(string, IDataService?, ClaimsPrincipal?) Loads a specific message template or creates it. Declaration public static Task<IMessageTemplate> LoadOrCreateAsync(string displayName, IDataService? dataService, ClaimsPrincipal? user) Parameters Type Name Description string displayName The display name. IDataService dataService The data service. ClaimsPrincipal user The user. Returns Type Description Task<IMessageTemplate> The message template specified. See Also ModelBase<TClass> | Improve this Doc View Source SetContent(IHostEnvironment?, string?) Sets the content. Declaration public IMessageTemplate SetContent(IHostEnvironment? hostingEnvironment, string? content) Parameters Type Name Description IHostEnvironment hostingEnvironment The hosting environment. string content The content. Returns Type Description IMessageTemplate See Also ModelBase<TClass> | Improve this Doc View Source ToString() Returns a string that represents this instance. Declaration public override string ToString() Returns Type Description string A string that represents this instance. Overrides object.ToString() See Also ModelBase<TClass> Operators | Improve this Doc View Source operator ==(MessageTemplate, MessageTemplate) Implements the operator ==. Declaration public static bool operator ==(MessageTemplate first, MessageTemplate second) Parameters Type Name Description MessageTemplate first The first. MessageTemplate second The second. Returns Type Description bool The result of the operator. See Also ModelBase<TClass> | Improve this Doc View Source operator >(MessageTemplate, MessageTemplate) Implements the operator >. Declaration public static bool operator >(MessageTemplate left, MessageTemplate right) Parameters Type Name Description MessageTemplate left The left. MessageTemplate right The right. Returns Type Description bool The result of the operator. See Also ModelBase<TClass> | Improve this Doc View Source operator >=(MessageTemplate, MessageTemplate) Implements the operator >=. Declaration public static bool operator >=(MessageTemplate left, MessageTemplate right) Parameters Type Name Description MessageTemplate left The left. MessageTemplate right The right. Returns Type Description bool The result of the operator. See Also ModelBase<TClass> | Improve this Doc View Source operator !=(MessageTemplate, MessageTemplate) Implements the operator !=. Declaration public static bool operator !=(MessageTemplate left, MessageTemplate right) Parameters Type Name Description MessageTemplate left The left. MessageTemplate right The right. Returns Type Description bool The result of the operator. See Also ModelBase<TClass> | Improve this Doc View Source operator <(MessageTemplate, MessageTemplate) Implements the operator <. Declaration public static bool operator <(MessageTemplate left, MessageTemplate right) Parameters Type Name Description MessageTemplate left The left. MessageTemplate right The right. Returns Type Description bool The result of the operator. See Also ModelBase<TClass> | Improve this Doc View Source operator <=(MessageTemplate, MessageTemplate) Implements the operator <=. Declaration public static bool operator <=(MessageTemplate left, MessageTemplate right) Parameters Type Name Description MessageTemplate left The left. MessageTemplate right The right. Returns Type Description bool The result of the operator. See Also ModelBase<TClass> Implements IModel<TClass> IEquatable<T> IComparable IComparable<T> IEquatable<T> IMessageTemplate IModel IEquatable<T> Extension Methods ExpandoObjectExtensions.ConvertToExpando<TEntity>(TEntity?) GenericExtensions.When<TObject>(TObject, bool, Func<TObject, TObject>) See Also ModelBase<TClass>"
  },
  "api/Mithril.Communication.Models.html": {
    "href": "api/Mithril.Communication.Models.html",
    "title": "Namespace Mithril.Communication.Models | Mithril API Reference",
    "keywords": "Namespace Mithril.Communication.Models Classes MessageTemplate Message template"
  },
  "api/Mithril.Communication.Services.CommunicationService.html": {
    "href": "api/Mithril.Communication.Services.CommunicationService.html",
    "title": "Class CommunicationService | Mithril API Reference",
    "keywords": "Class CommunicationService Communication service Inheritance object CommunicationService Implements ICommunicationService Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Mithril.Communication.Services Assembly: Mithril.Communication.dll Syntax public class CommunicationService : ICommunicationService Constructors | Improve this Doc View Source CommunicationService(IEnumerable<IChannel>, IDataService?) Initializes a new instance of the CommunicationService class. Declaration public CommunicationService(IEnumerable<IChannel> channels, IDataService? dataService) Parameters Type Name Description IEnumerable<IChannel> channels The channels. IDataService dataService The data service. See Also ICommunicationService Methods | Improve this Doc View Source CreateMessage(string) Creates a message based on the channel specified. Declaration public IMessage? CreateMessage(string channel) Parameters Type Name Description string channel The channel. Returns Type Description IMessage The message object. See Also ICommunicationService | Improve this Doc View Source LoadOrCreateTemplateAsync(string, ClaimsPrincipal?) Loads or creates a template asynchronously. Declaration public Task<IMessageTemplate> LoadOrCreateTemplateAsync(string displayName, ClaimsPrincipal? user) Parameters Type Name Description string displayName The display name. ClaimsPrincipal user The user. Returns Type Description Task<IMessageTemplate> The message template. See Also ICommunicationService | Improve this Doc View Source SendMessageAsync(IMessage?, ClaimsPrincipal?) Sends the message asynchronously. Declaration public Task<MessageResult> SendMessageAsync(IMessage? message, ClaimsPrincipal? user) Parameters Type Name Description IMessage message The message. ClaimsPrincipal user The user. Returns Type Description Task<MessageResult> The async task. See Also ICommunicationService Implements ICommunicationService Extension Methods ExpandoObjectExtensions.ConvertToExpando<TEntity>(TEntity?) GenericExtensions.When<TObject>(TObject, bool, Func<TObject, TObject>) See Also ICommunicationService"
  },
  "api/Mithril.Communication.Services.html": {
    "href": "api/Mithril.Communication.Services.html",
    "title": "Namespace Mithril.Communication.Services | Mithril API Reference",
    "keywords": "Namespace Mithril.Communication.Services Classes CommunicationService Communication service"
  },
  "api/Mithril.Communication.html": {
    "href": "api/Mithril.Communication.html",
    "title": "Namespace Mithril.Communication | Mithril API Reference",
    "keywords": "Namespace Mithril.Communication Classes CommunicationModule Communication module"
  },
  "api/Mithril.Content.Abstractions.BaseClasses.ComponentDefinitionBaseClass-1.html": {
    "href": "api/Mithril.Content.Abstractions.BaseClasses.ComponentDefinitionBaseClass-1.html",
    "title": "Class ComponentDefinitionBaseClass<TClass> | Mithril API Reference",
    "keywords": "Class ComponentDefinitionBaseClass<TClass> Component definition base class Inheritance object ComponentDefinitionBaseClass<TClass> DataEditorComponent<TEntity> SettingsEditorComponent<TEntity> Implements IComponentDefinition Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Mithril.Content.Abstractions.BaseClasses Assembly: Mithril.Content.Abstractions.dll Syntax public abstract class ComponentDefinitionBaseClass<TClass> : IComponentDefinition Type Parameters Name Description TClass The type of the class. Constructors | Improve this Doc View Source ComponentDefinitionBaseClass() Initializes a new instance of the ComponentDefinitionBaseClass<TClass> class. Declaration protected ComponentDefinitionBaseClass() See Also IComponentDefinition Properties | Improve this Doc View Source DefaultClass Gets the default class. Declaration public virtual string DefaultClass { get; } Property Value Type Description string The default class. See Also IComponentDefinition | Improve this Doc View Source DefaultProperties Gets the default properties. Declaration public abstract Dictionary<string, string> DefaultProperties { get; } Property Value Type Description Dictionary<string, string> The default properties. See Also IComponentDefinition | Improve this Doc View Source Name Gets the name. Declaration public string Name { get; } Property Value Type Description string The name. See Also IComponentDefinition | Improve this Doc View Source Schema Gets the schema. Declaration public ExpandoObject? Schema { get; } Property Value Type Description ExpandoObject The schema. See Also IComponentDefinition | Improve this Doc View Source ScriptFile Gets the script file. Declaration public virtual string ScriptFile { get; } Property Value Type Description string The script file. See Also IComponentDefinition Implements IComponentDefinition Extension Methods ExpandoObjectExtensions.ConvertToExpando<TEntity>(TEntity?) GenericExtensions.When<TObject>(TObject, bool, Func<TObject, TObject>) See Also IComponentDefinition"
  },
  "api/Mithril.Content.Abstractions.BaseClasses.html": {
    "href": "api/Mithril.Content.Abstractions.BaseClasses.html",
    "title": "Namespace Mithril.Content.Abstractions.BaseClasses | Mithril API Reference",
    "keywords": "Namespace Mithril.Content.Abstractions.BaseClasses Classes ComponentDefinitionBaseClass<TClass> Component definition base class"
  },
  "api/Mithril.Content.Abstractions.Interfaces.IComponentDefinition.html": {
    "href": "api/Mithril.Content.Abstractions.Interfaces.IComponentDefinition.html",
    "title": "Interface IComponentDefinition | Mithril API Reference",
    "keywords": "Interface IComponentDefinition Component definition interface Namespace: Mithril.Content.Abstractions.Interfaces Assembly: Mithril.Content.Abstractions.dll Syntax public interface IComponentDefinition Properties | Improve this Doc View Source DefaultProperties Gets the default properties. Declaration Dictionary<string, string> DefaultProperties { get; } Property Value Type Description Dictionary<string, string> The default properties. | Improve this Doc View Source Name Gets the name. Declaration string Name { get; } Property Value Type Description string The name. | Improve this Doc View Source Schema Gets the schema. Declaration ExpandoObject? Schema { get; } Property Value Type Description ExpandoObject The schema. | Improve this Doc View Source ScriptFile Gets the script file. Declaration string ScriptFile { get; } Property Value Type Description string The script file. Extension Methods ExpandoObjectExtensions.ConvertToExpando<TEntity>(TEntity?) GenericExtensions.When<TObject>(TObject, bool, Func<TObject, TObject>)"
  },
  "api/Mithril.Content.Abstractions.Interfaces.html": {
    "href": "api/Mithril.Content.Abstractions.Interfaces.html",
    "title": "Namespace Mithril.Content.Abstractions.Interfaces | Mithril API Reference",
    "keywords": "Namespace Mithril.Content.Abstractions.Interfaces Interfaces IComponentDefinition Component definition interface"
  },
  "api/Mithril.Content.Abstractions.Services.IComponentService.html": {
    "href": "api/Mithril.Content.Abstractions.Services.IComponentService.html",
    "title": "Interface IComponentService | Mithril API Reference",
    "keywords": "Interface IComponentService Component service Namespace: Mithril.Content.Abstractions.Services Assembly: Mithril.Content.Abstractions.dll Syntax public interface IComponentService Properties | Improve this Doc View Source Components Gets the components. Declaration IEnumerable<IComponentDefinition> Components { get; } Property Value Type Description IEnumerable<IComponentDefinition> The components. Methods | Improve this Doc View Source GetComponent(string) Gets the component renderer. Declaration IComponentDefinition? GetComponent(string componentType) Parameters Type Name Description string componentType Type of the component. Returns Type Description IComponentDefinition The component renderer Extension Methods ExpandoObjectExtensions.ConvertToExpando<TEntity>(TEntity?) GenericExtensions.When<TObject>(TObject, bool, Func<TObject, TObject>)"
  },
  "api/Mithril.Content.Abstractions.Services.html": {
    "href": "api/Mithril.Content.Abstractions.Services.html",
    "title": "Namespace Mithril.Content.Abstractions.Services | Mithril API Reference",
    "keywords": "Namespace Mithril.Content.Abstractions.Services Interfaces IComponentService Component service"
  },
  "api/Mithril.Content.ContentModule.html": {
    "href": "api/Mithril.Content.ContentModule.html",
    "title": "Class ContentModule | Mithril API Reference",
    "keywords": "Class ContentModule Content module Inheritance object ModuleBaseClass<ContentModule> ContentModule Implements IEquatable<ContentModule> IModule Inherited Members ModuleBaseClass<ContentModule>.Category ModuleBaseClass<ContentModule>.ContentPath ModuleBaseClass<ContentModule>.Features ModuleBaseClass<ContentModule>.ID ModuleBaseClass<ContentModule>.LastModified ModuleBaseClass<ContentModule>.Name ModuleBaseClass<ContentModule>.Order ModuleBaseClass<ContentModule>.Tags ModuleBaseClass<ContentModule>.Version ModuleBaseClass<ContentModule>.ConfigureApplication(IApplicationBuilder, IConfiguration, IHostEnvironment) ModuleBaseClass<ContentModule>.ConfigureHostSettings(IHostBuilder, IConfiguration, IHostEnvironment) ModuleBaseClass<ContentModule>.ConfigureLoggingSettings(ILoggingBuilder, IConfiguration, IHostEnvironment) ModuleBaseClass<ContentModule>.ConfigureMVC(IMvcBuilder, IConfiguration, IHostEnvironment) ModuleBaseClass<ContentModule>.ConfigureRoutes(IEndpointRouteBuilder, IConfiguration, IHostEnvironment) ModuleBaseClass<ContentModule>.ConfigureWebHostSettings(IWebHostBuilder, IConfiguration, IHostEnvironment) ModuleBaseClass<ContentModule>.Equals(object) ModuleBaseClass<ContentModule>.Equals(ContentModule) ModuleBaseClass<ContentModule>.GetHashCode() ModuleBaseClass<ContentModule>.InitializeDataAsync(IDataService, IServiceProvider) ModuleBaseClass<ContentModule>.OnStarted() ModuleBaseClass<ContentModule>.OnStopped() ModuleBaseClass<ContentModule>.OnStopping() object.Equals(object, object) object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Mithril.Content Assembly: Mithril.Content.dll Syntax public class ContentModule : ModuleBaseClass<ContentModule>, IEquatable<ContentModule>, IModule Methods | Improve this Doc View Source ConfigureServices(IServiceCollection?, IConfiguration?, IHostEnvironment?) Configures the services for the module. Declaration public override IServiceCollection? ConfigureServices(IServiceCollection? services, IConfiguration? configuration, IHostEnvironment? environment) Parameters Type Name Description IServiceCollection services The services collection. IConfiguration configuration The configuration. IHostEnvironment environment The environment. Returns Type Description IServiceCollection Services Overrides ModuleBaseClass<ContentModule>.ConfigureServices(IServiceCollection, IConfiguration, IHostEnvironment) See Also ModuleBaseClass<TModule> Implements IEquatable<T> IModule Extension Methods ExpandoObjectExtensions.ConvertToExpando<TEntity>(TEntity?) GenericExtensions.When<TObject>(TObject, bool, Func<TObject, TObject>) See Also ModuleBaseClass<TModule>"
  },
  "api/Mithril.Content.Forms.Class1.html": {
    "href": "api/Mithril.Content.Forms.Class1.html",
    "title": "Class Class1 | Mithril API Reference",
    "keywords": "Class Class1 Class 1 Inheritance object Class1 Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Mithril.Content.Forms Assembly: Mithril.Content.Forms.dll Syntax public class Class1 Extension Methods ExpandoObjectExtensions.ConvertToExpando<TEntity>(TEntity?) GenericExtensions.When<TObject>(TObject, bool, Func<TObject, TObject>)"
  },
  "api/Mithril.Content.Forms.html": {
    "href": "api/Mithril.Content.Forms.html",
    "title": "Namespace Mithril.Content.Forms | Mithril API Reference",
    "keywords": "Namespace Mithril.Content.Forms Classes Class1 Class 1"
  },
  "api/Mithril.Content.Services.ComponentService.html": {
    "href": "api/Mithril.Content.Services.ComponentService.html",
    "title": "Class ComponentService | Mithril API Reference",
    "keywords": "Class ComponentService Component service Inheritance object ComponentService Implements IComponentService Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Mithril.Content.Services Assembly: Mithril.Content.dll Syntax public class ComponentService : IComponentService Constructors | Improve this Doc View Source ComponentService(IEnumerable<IComponentDefinition>) Initializes a new instance of the ComponentService class. Declaration public ComponentService(IEnumerable<IComponentDefinition> componentDefinitions) Parameters Type Name Description IEnumerable<IComponentDefinition> componentDefinitions The component definitions. See Also IComponentService Properties | Improve this Doc View Source Components Gets the components. Declaration public IEnumerable<IComponentDefinition> Components { get; } Property Value Type Description IEnumerable<IComponentDefinition> The components. See Also IComponentService Methods | Improve this Doc View Source GetComponent(string) Gets the component renderer. Declaration public IComponentDefinition? GetComponent(string componentType) Parameters Type Name Description string componentType Type of the component. Returns Type Description IComponentDefinition The component renderer See Also IComponentService Implements IComponentService Extension Methods ExpandoObjectExtensions.ConvertToExpando<TEntity>(TEntity?) GenericExtensions.When<TObject>(TObject, bool, Func<TObject, TObject>) See Also IComponentService"
  },
  "api/Mithril.Content.Services.html": {
    "href": "api/Mithril.Content.Services.html",
    "title": "Namespace Mithril.Content.Services | Mithril API Reference",
    "keywords": "Namespace Mithril.Content.Services Classes ComponentService Component service"
  },
  "api/Mithril.Content.html": {
    "href": "api/Mithril.Content.html",
    "title": "Namespace Mithril.Content | Mithril API Reference",
    "keywords": "Namespace Mithril.Content Classes ContentModule Content module"
  },
  "api/Mithril.Controllers.HomeController.html": {
    "href": "api/Mithril.Controllers.HomeController.html",
    "title": "Class HomeController | Mithril API Reference",
    "keywords": "Class HomeController Home controller Inheritance object ControllerBase Controller HomeController Implements IActionFilter IAsyncActionFilter IFilterMetadata IDisposable Inherited Members Controller.View() Controller.View(string) Controller.View(object) Controller.View(string, object) Controller.PartialView() Controller.PartialView(string) Controller.PartialView(object) Controller.PartialView(string, object) Controller.ViewComponent(string) Controller.ViewComponent(Type) Controller.ViewComponent(string, object) Controller.ViewComponent(Type, object) Controller.Json(object) Controller.Json(object, object) Controller.OnActionExecuting(ActionExecutingContext) Controller.OnActionExecuted(ActionExecutedContext) Controller.OnActionExecutionAsync(ActionExecutingContext, ActionExecutionDelegate) Controller.Dispose() Controller.Dispose(bool) Controller.ViewData Controller.TempData Controller.ViewBag ControllerBase.StatusCode(int) ControllerBase.StatusCode(int, object) ControllerBase.Content(string) ControllerBase.Content(string, string) ControllerBase.Content(string, string, Encoding) ControllerBase.Content(string, MediaTypeHeaderValue) ControllerBase.NoContent() ControllerBase.Ok() ControllerBase.Ok(object) ControllerBase.Redirect(string) ControllerBase.RedirectPermanent(string) ControllerBase.RedirectPreserveMethod(string) ControllerBase.RedirectPermanentPreserveMethod(string) ControllerBase.LocalRedirect(string) ControllerBase.LocalRedirectPermanent(string) ControllerBase.LocalRedirectPreserveMethod(string) ControllerBase.LocalRedirectPermanentPreserveMethod(string) ControllerBase.RedirectToAction() ControllerBase.RedirectToAction(string) ControllerBase.RedirectToAction(string, object) ControllerBase.RedirectToAction(string, string) ControllerBase.RedirectToAction(string, string, object) ControllerBase.RedirectToAction(string, string, string) ControllerBase.RedirectToAction(string, string, object, string) ControllerBase.RedirectToActionPreserveMethod(string, string, object, string) ControllerBase.RedirectToActionPermanent(string) ControllerBase.RedirectToActionPermanent(string, object) ControllerBase.RedirectToActionPermanent(string, string) ControllerBase.RedirectToActionPermanent(string, string, string) ControllerBase.RedirectToActionPermanent(string, string, object) ControllerBase.RedirectToActionPermanent(string, string, object, string) ControllerBase.RedirectToActionPermanentPreserveMethod(string, string, object, string) ControllerBase.RedirectToRoute(string) ControllerBase.RedirectToRoute(object) ControllerBase.RedirectToRoute(string, object) ControllerBase.RedirectToRoute(string, string) ControllerBase.RedirectToRoute(string, object, string) ControllerBase.RedirectToRoutePreserveMethod(string, object, string) ControllerBase.RedirectToRoutePermanent(string) ControllerBase.RedirectToRoutePermanent(object) ControllerBase.RedirectToRoutePermanent(string, object) ControllerBase.RedirectToRoutePermanent(string, string) ControllerBase.RedirectToRoutePermanent(string, object, string) ControllerBase.RedirectToRoutePermanentPreserveMethod(string, object, string) ControllerBase.RedirectToPage(string) ControllerBase.RedirectToPage(string, object) ControllerBase.RedirectToPage(string, string) ControllerBase.RedirectToPage(string, string, object) ControllerBase.RedirectToPage(string, string, string) ControllerBase.RedirectToPage(string, string, object, string) ControllerBase.RedirectToPagePermanent(string) ControllerBase.RedirectToPagePermanent(string, object) ControllerBase.RedirectToPagePermanent(string, string) ControllerBase.RedirectToPagePermanent(string, string, string) ControllerBase.RedirectToPagePermanent(string, string, object, string) ControllerBase.RedirectToPagePreserveMethod(string, string, object, string) ControllerBase.RedirectToPagePermanentPreserveMethod(string, string, object, string) ControllerBase.File(byte[], string) ControllerBase.File(byte[], string, bool) ControllerBase.File(byte[], string, string) ControllerBase.File(byte[], string, string, bool) ControllerBase.File(byte[], string, DateTimeOffset?, EntityTagHeaderValue) ControllerBase.File(byte[], string, DateTimeOffset?, EntityTagHeaderValue, bool) ControllerBase.File(byte[], string, string, DateTimeOffset?, EntityTagHeaderValue) ControllerBase.File(byte[], string, string, DateTimeOffset?, EntityTagHeaderValue, bool) ControllerBase.File(Stream, string) ControllerBase.File(Stream, string, bool) ControllerBase.File(Stream, string, string) ControllerBase.File(Stream, string, string, bool) ControllerBase.File(Stream, string, DateTimeOffset?, EntityTagHeaderValue) ControllerBase.File(Stream, string, DateTimeOffset?, EntityTagHeaderValue, bool) ControllerBase.File(Stream, string, string, DateTimeOffset?, EntityTagHeaderValue) ControllerBase.File(Stream, string, string, DateTimeOffset?, EntityTagHeaderValue, bool) ControllerBase.File(string, string) ControllerBase.File(string, string, bool) ControllerBase.File(string, string, string) ControllerBase.File(string, string, string, bool) ControllerBase.File(string, string, DateTimeOffset?, EntityTagHeaderValue) ControllerBase.File(string, string, DateTimeOffset?, EntityTagHeaderValue, bool) ControllerBase.File(string, string, string, DateTimeOffset?, EntityTagHeaderValue) ControllerBase.File(string, string, string, DateTimeOffset?, EntityTagHeaderValue, bool) ControllerBase.PhysicalFile(string, string) ControllerBase.PhysicalFile(string, string, bool) ControllerBase.PhysicalFile(string, string, string) ControllerBase.PhysicalFile(string, string, string, bool) ControllerBase.PhysicalFile(string, string, DateTimeOffset?, EntityTagHeaderValue) ControllerBase.PhysicalFile(string, string, DateTimeOffset?, EntityTagHeaderValue, bool) ControllerBase.PhysicalFile(string, string, string, DateTimeOffset?, EntityTagHeaderValue) ControllerBase.PhysicalFile(string, string, string, DateTimeOffset?, EntityTagHeaderValue, bool) ControllerBase.Unauthorized() ControllerBase.Unauthorized(object) ControllerBase.NotFound() ControllerBase.NotFound(object) ControllerBase.BadRequest() ControllerBase.BadRequest(object) ControllerBase.BadRequest(ModelStateDictionary) ControllerBase.UnprocessableEntity() ControllerBase.UnprocessableEntity(object) ControllerBase.UnprocessableEntity(ModelStateDictionary) ControllerBase.Conflict() ControllerBase.Conflict(object) ControllerBase.Conflict(ModelStateDictionary) ControllerBase.Problem(string, string, int?, string, string) ControllerBase.ValidationProblem(ValidationProblemDetails) ControllerBase.ValidationProblem(ModelStateDictionary) ControllerBase.ValidationProblem() ControllerBase.ValidationProblem(string, string, int?, string, string, ModelStateDictionary) ControllerBase.Created(string, object) ControllerBase.Created(Uri, object) ControllerBase.CreatedAtAction(string, object) ControllerBase.CreatedAtAction(string, object, object) ControllerBase.CreatedAtAction(string, string, object, object) ControllerBase.CreatedAtRoute(string, object) ControllerBase.CreatedAtRoute(object, object) ControllerBase.CreatedAtRoute(string, object, object) ControllerBase.Accepted() ControllerBase.Accepted(object) ControllerBase.Accepted(Uri) ControllerBase.Accepted(string) ControllerBase.Accepted(string, object) ControllerBase.Accepted(Uri, object) ControllerBase.AcceptedAtAction(string) ControllerBase.AcceptedAtAction(string, string) ControllerBase.AcceptedAtAction(string, object) ControllerBase.AcceptedAtAction(string, string, object) ControllerBase.AcceptedAtAction(string, object, object) ControllerBase.AcceptedAtAction(string, string, object, object) ControllerBase.AcceptedAtRoute(object) ControllerBase.AcceptedAtRoute(string) ControllerBase.AcceptedAtRoute(string, object) ControllerBase.AcceptedAtRoute(object, object) ControllerBase.AcceptedAtRoute(string, object, object) ControllerBase.Challenge() ControllerBase.Challenge(params string[]) ControllerBase.Challenge(AuthenticationProperties) ControllerBase.Challenge(AuthenticationProperties, params string[]) ControllerBase.Forbid() ControllerBase.Forbid(params string[]) ControllerBase.Forbid(AuthenticationProperties) ControllerBase.Forbid(AuthenticationProperties, params string[]) ControllerBase.SignIn(ClaimsPrincipal) ControllerBase.SignIn(ClaimsPrincipal, string) ControllerBase.SignIn(ClaimsPrincipal, AuthenticationProperties) ControllerBase.SignIn(ClaimsPrincipal, AuthenticationProperties, string) ControllerBase.SignOut() ControllerBase.SignOut(AuthenticationProperties) ControllerBase.SignOut(params string[]) ControllerBase.SignOut(AuthenticationProperties, params string[]) ControllerBase.TryUpdateModelAsync<TModel>(TModel) ControllerBase.TryUpdateModelAsync<TModel>(TModel, string) ControllerBase.TryUpdateModelAsync<TModel>(TModel, string, IValueProvider) ControllerBase.TryUpdateModelAsync<TModel>(TModel, string, params Expression<Func<TModel, object>>[]) ControllerBase.TryUpdateModelAsync<TModel>(TModel, string, Func<ModelMetadata, bool>) ControllerBase.TryUpdateModelAsync<TModel>(TModel, string, IValueProvider, params Expression<Func<TModel, object>>[]) ControllerBase.TryUpdateModelAsync<TModel>(TModel, string, IValueProvider, Func<ModelMetadata, bool>) ControllerBase.TryUpdateModelAsync(object, Type, string) ControllerBase.TryUpdateModelAsync(object, Type, string, IValueProvider, Func<ModelMetadata, bool>) ControllerBase.TryValidateModel(object) ControllerBase.TryValidateModel(object, string) ControllerBase.HttpContext ControllerBase.Request ControllerBase.Response ControllerBase.RouteData ControllerBase.ModelState ControllerBase.ControllerContext ControllerBase.MetadataProvider ControllerBase.ModelBinderFactory ControllerBase.Url ControllerBase.ObjectValidator ControllerBase.ProblemDetailsFactory ControllerBase.User ControllerBase.Empty object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Mithril.Controllers Assembly: Mithril.dll Syntax public class HomeController : Controller, IActionFilter, IAsyncActionFilter, IFilterMetadata, IDisposable Constructors | Improve this Doc View Source HomeController(ILogger<HomeController>, ISecurityService, ICommunicationService) Initializes a new instance of the HomeController class. Declaration public HomeController(ILogger<HomeController> logger, ISecurityService securityService, ICommunicationService communicationService) Parameters Type Name Description ILogger<HomeController> logger The logger. ISecurityService securityService The security service. ICommunicationService communicationService The communication service. See Also Controller Methods | Improve this Doc View Source EmailTest() Email test. Declaration public Task<IActionResult> EmailTest() Returns Type Description Task<IActionResult> See Also Controller | Improve this Doc View Source Error() Errors this instance. Declaration [ResponseCache(Duration = 0, Location = ResponseCacheLocation.None, NoStore = true)] public IActionResult Error() Returns Type Description IActionResult See Also Controller | Improve this Doc View Source Index() Indexes this instance. Declaration public IActionResult Index() Returns Type Description IActionResult See Also Controller | Improve this Doc View Source Index(IFormCollection) Indexes the specified form. Declaration [HttpPost] public IActionResult Index(IFormCollection form) Parameters Type Name Description IFormCollection form The form. Returns Type Description IActionResult See Also Controller | Improve this Doc View Source Privacy() Privacies this instance. Declaration [Authorize(Policy = \"Test\")] [FeatureGate(new object[] { MyFeatureFlags.ExampleFlag })] [IPFilter(\"AdminSection\")] public IActionResult Privacy() Returns Type Description IActionResult See Also Controller Implements IActionFilter IAsyncActionFilter IFilterMetadata IDisposable Extension Methods ExpandoObjectExtensions.ConvertToExpando<TEntity>(TEntity?) GenericExtensions.When<TObject>(TObject, bool, Func<TObject, TObject>) See Also Controller"
  },
  "api/Mithril.Controllers.MyFeatureFlags.html": {
    "href": "api/Mithril.Controllers.MyFeatureFlags.html",
    "title": "Enum MyFeatureFlags | Mithril API Reference",
    "keywords": "Enum MyFeatureFlags Example feature flags controlled by config Namespace: Mithril.Controllers Assembly: Mithril.dll Syntax public enum MyFeatureFlags Fields Name Description ExampleFlag The example flag Extension Methods ExpandoObjectExtensions.ConvertToExpando<MyFeatureFlags>(MyFeatureFlags) GenericExtensions.When<MyFeatureFlags>(MyFeatureFlags, bool, Func<MyFeatureFlags, MyFeatureFlags>)"
  },
  "api/Mithril.Controllers.html": {
    "href": "api/Mithril.Controllers.html",
    "title": "Namespace Mithril.Controllers | Mithril API Reference",
    "keywords": "Namespace Mithril.Controllers Classes HomeController Home controller Enums MyFeatureFlags Example feature flags controlled by config"
  },
  "api/Mithril.Core.Abstractions.BaseClasses.GenericResult.html": {
    "href": "api/Mithril.Core.Abstractions.BaseClasses.GenericResult.html",
    "title": "Class GenericResult | Mithril API Reference",
    "keywords": "Class GenericResult Generic result Inheritance object GenericResult CommandCreationResult EventResult MessageResult Implements IEquatable<GenericResult> Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Mithril.Core.Abstractions.BaseClasses Assembly: Mithril.Core.Abstractions.dll Syntax public abstract record GenericResult : IEquatable<GenericResult> Constructors | Improve this Doc View Source GenericResult(string, Exception?) Generic result Declaration protected GenericResult(string Message, Exception? Exception = null) Parameters Type Name Description string Message Message Exception Exception Exception See Also IEquatable<T> Properties | Improve this Doc View Source Exception Exception Declaration public Exception? Exception { get; init; } Property Value Type Description Exception See Also IEquatable<T> | Improve this Doc View Source IsErrorState Gets a value indicating whether this instance is error state. Declaration public virtual bool IsErrorState { get; } Property Value Type Description bool true if this instance is error state; otherwise, false. See Also IEquatable<T> | Improve this Doc View Source Message Message Declaration public string Message { get; init; } Property Value Type Description string See Also IEquatable<T> Implements IEquatable<T> Extension Methods ExpandoObjectExtensions.ConvertToExpando<TEntity>(TEntity?) GenericExtensions.When<TObject>(TObject, bool, Func<TObject, TObject>) See Also IEquatable<T>"
  },
  "api/Mithril.Core.Abstractions.BaseClasses.HostedServiceBaseClass-1.html": {
    "href": "api/Mithril.Core.Abstractions.BaseClasses.HostedServiceBaseClass-1.html",
    "title": "Class HostedServiceBaseClass<THostService> | Mithril API Reference",
    "keywords": "Class HostedServiceBaseClass<THostService> Hosted service base class Inheritance object HostedServiceBaseClass<THostService> BackgroundTasksHostedService Implements IHostedService IDisposable Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Mithril.Core.Abstractions.BaseClasses Assembly: Mithril.Core.Abstractions.dll Syntax public abstract class HostedServiceBaseClass<THostService> : IHostedService, IDisposable where THostService : HostedServiceBaseClass<THostService> Type Parameters Name Description THostService Host service type Constructors | Improve this Doc View Source HostedServiceBaseClass(ILogger<THostService>?, double) Initializes a new instance of HostedServiceBaseClass Declaration protected HostedServiceBaseClass(ILogger<THostService>? logger, double frequency) Parameters Type Name Description ILogger<THostService> logger Logger double frequency Frequency that it runs at. Properties | Improve this Doc View Source Description Gets the description for the hosted service. Used for logging. Declaration protected virtual string? Description { get; } Property Value Type Description string | Improve this Doc View Source Logger Gets the logger. Declaration protected ILogger<THostService>? Logger { get; } Property Value Type Description ILogger<THostService> The logger. Methods | Improve this Doc View Source Dispose() Performs application-defined tasks associated with freeing, releasing, or resetting unmanaged resources. Declaration public void Dispose() | Improve this Doc View Source Dispose(bool) Releases unmanaged and - optionally - managed resources. Declaration protected virtual void Dispose(bool managed) Parameters Type Name Description bool managed true to release both managed and unmanaged resources; false to release only unmanaged resources. | Improve this Doc View Source DoWorkAsync() Called to run the service. Declaration protected abstract Task DoWorkAsync() Returns Type Description Task The async task. | Improve this Doc View Source StartAsync(CancellationToken) Triggered when the application host is ready to start the service. Declaration public Task StartAsync(CancellationToken cancellationToken) Parameters Type Name Description CancellationToken cancellationToken Indicates that the start process has been aborted. Returns Type Description Task The async task. | Improve this Doc View Source StopAsync(CancellationToken) Triggered when the application host is performing a graceful shutdown. Declaration public Task StopAsync(CancellationToken cancellationToken) Parameters Type Name Description CancellationToken cancellationToken Indicates that the shutdown process should no longer be graceful. Returns Type Description Task The async task. Implements IHostedService IDisposable Extension Methods ExpandoObjectExtensions.ConvertToExpando<TEntity>(TEntity?) GenericExtensions.When<TObject>(TObject, bool, Func<TObject, TObject>)"
  },
  "api/Mithril.Core.Abstractions.BaseClasses.html": {
    "href": "api/Mithril.Core.Abstractions.BaseClasses.html",
    "title": "Namespace Mithril.Core.Abstractions.BaseClasses | Mithril API Reference",
    "keywords": "Namespace Mithril.Core.Abstractions.BaseClasses Classes GenericResult Generic result HostedServiceBaseClass<THostService> Hosted service base class"
  },
  "api/Mithril.Core.Abstractions.Configuration.Compression.html": {
    "href": "api/Mithril.Core.Abstractions.Configuration.Compression.html",
    "title": "Class Compression | Mithril API Reference",
    "keywords": "Class Compression Compression settings Inheritance object Compression Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Mithril.Core.Abstractions.Configuration Assembly: Mithril.Core.Abstractions.dll Syntax public class Compression Properties | Improve this Doc View Source AllowHttps Gets or sets a value indicating whether [allow HTTPS]. Declaration public bool AllowHttps { get; set; } Property Value Type Description bool true if [allow HTTPS]; otherwise, false. | Improve this Doc View Source DynamicCompression Gets or sets a value indicating whether [dynamic compression]. Declaration public bool DynamicCompression { get; set; } Property Value Type Description bool true if [dynamic compression]; otherwise, false. Extension Methods ExpandoObjectExtensions.ConvertToExpando<TEntity>(TEntity?) GenericExtensions.When<TObject>(TObject, bool, Func<TObject, TObject>)"
  },
  "api/Mithril.Core.Abstractions.Configuration.Mime.html": {
    "href": "api/Mithril.Core.Abstractions.Configuration.Mime.html",
    "title": "Class Mime | Mithril API Reference",
    "keywords": "Class Mime Mime type data holder Inheritance object Mime Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Mithril.Core.Abstractions.Configuration Assembly: Mithril.Core.Abstractions.dll Syntax public class Mime Properties | Improve this Doc View Source Extension Gets or sets the extension. Declaration public string? Extension { get; set; } Property Value Type Description string The extension. | Improve this Doc View Source MimeType Gets or sets the type of the MIME. Declaration public string? MimeType { get; set; } Property Value Type Description string The type of the MIME. Extension Methods ExpandoObjectExtensions.ConvertToExpando<TEntity>(TEntity?) GenericExtensions.When<TObject>(TObject, bool, Func<TObject, TObject>)"
  },
  "api/Mithril.Core.Abstractions.Configuration.MithrilConfig.html": {
    "href": "api/Mithril.Core.Abstractions.Configuration.MithrilConfig.html",
    "title": "Class MithrilConfig | Mithril API Reference",
    "keywords": "Class MithrilConfig Mithril config Inheritance object MithrilConfig Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Mithril.Core.Abstractions.Configuration Assembly: Mithril.Core.Abstractions.dll Syntax public class MithrilConfig Properties | Improve this Doc View Source ApplicationDescription Gets or sets the application description. Declaration public string? ApplicationDescription { get; set; } Property Value Type Description string The application description. | Improve this Doc View Source ApplicationName Gets or sets the name of the application. Declaration public string? ApplicationName { get; set; } Property Value Type Description string The name of the application. | Improve this Doc View Source Compression Gets or sets the compression. Declaration public Compression? Compression { get; set; } Property Value Type Description Compression The compression. | Improve this Doc View Source MimeTypes Gets or sets the file mappings. Declaration public List<Mime>? MimeTypes { get; set; } Property Value Type Description List<Mime> The file mappings. | Improve this Doc View Source Security Gets or sets the security. Declaration public Security? Security { get; set; } Property Value Type Description Security The security. | Improve this Doc View Source StaticFiles Gets or sets the static files. Declaration public StaticFiles? StaticFiles { get; set; } Property Value Type Description StaticFiles The static files. Extension Methods ExpandoObjectExtensions.ConvertToExpando<TEntity>(TEntity?) GenericExtensions.When<TObject>(TObject, bool, Func<TObject, TObject>)"
  },
  "api/Mithril.Core.Abstractions.Configuration.Security.html": {
    "href": "api/Mithril.Core.Abstractions.Configuration.Security.html",
    "title": "Class Security | Mithril API Reference",
    "keywords": "Class Security Security options Inheritance object Security Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Mithril.Core.Abstractions.Configuration Assembly: Mithril.Core.Abstractions.dll Syntax public class Security Properties | Improve this Doc View Source ContentSecurityPolicy Gets or sets the content security policy. Declaration public string? ContentSecurityPolicy { get; set; } Property Value Type Description string The content security policy. | Improve this Doc View Source DefaultCorsPolicy Gets or sets the default cors origins (if empty, CORS is not enabled by default). Declaration public string? DefaultCorsPolicy { get; set; } Property Value Type Description string The default cors origins (if empty, CORS is not enabled by default). | Improve this Doc View Source RequireHttps Gets or sets the require HTTPS. Declaration public bool RequireHttps { get; set; } Property Value Type Description bool The require HTTPS. | Improve this Doc View Source XFrameOptions Gets or sets the x-frame options. Declaration public string? XFrameOptions { get; set; } Property Value Type Description string The x-frame options. Extension Methods ExpandoObjectExtensions.ConvertToExpando<TEntity>(TEntity?) GenericExtensions.When<TObject>(TObject, bool, Func<TObject, TObject>)"
  },
  "api/Mithril.Core.Abstractions.Configuration.StaticFiles.html": {
    "href": "api/Mithril.Core.Abstractions.Configuration.StaticFiles.html",
    "title": "Class StaticFiles | Mithril API Reference",
    "keywords": "Class StaticFiles Static files Inheritance object StaticFiles Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Mithril.Core.Abstractions.Configuration Assembly: Mithril.Core.Abstractions.dll Syntax public class StaticFiles Properties | Improve this Doc View Source CacheControlMaxAge Gets or sets the maximum age. Declaration public long CacheControlMaxAge { get; set; } Property Value Type Description long The maximum age. Extension Methods ExpandoObjectExtensions.ConvertToExpando<TEntity>(TEntity?) GenericExtensions.When<TObject>(TObject, bool, Func<TObject, TObject>)"
  },
  "api/Mithril.Core.Abstractions.Configuration.html": {
    "href": "api/Mithril.Core.Abstractions.Configuration.html",
    "title": "Namespace Mithril.Core.Abstractions.Configuration | Mithril API Reference",
    "keywords": "Namespace Mithril.Core.Abstractions.Configuration Classes Compression Compression settings Mime Mime type data holder MithrilConfig Mithril config Security Security options StaticFiles Static files"
  },
  "api/Mithril.Core.Abstractions.Extensions.ExpandoObjectExtensions.html": {
    "href": "api/Mithril.Core.Abstractions.Extensions.ExpandoObjectExtensions.html",
    "title": "Class ExpandoObjectExtensions | Mithril API Reference",
    "keywords": "Class ExpandoObjectExtensions ExpandoObject extension methods Inheritance object ExpandoObjectExtensions Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Mithril.Core.Abstractions.Extensions Assembly: Mithril.Core.Abstractions.dll Syntax public static class ExpandoObjectExtensions Methods | Improve this Doc View Source ConvertExpando<TEntity>(ExpandoObject?) Converts the ExpandoObject to the type specified. Declaration public static TEntity? ConvertExpando<TEntity>(this ExpandoObject? value) Parameters Type Name Description ExpandoObject value The value. Returns Type Description TEntity The view model equivalent. Type Parameters Name Description TEntity The type of the entity. | Improve this Doc View Source ConvertToExpando<TEntity>(TEntity?) Converts the object to an expando. Declaration public static ExpandoObject? ConvertToExpando<TEntity>(this TEntity? value) Parameters Type Name Description TEntity value The value. Returns Type Description ExpandoObject The resulting object Type Parameters Name Description TEntity The type of the entity."
  },
  "api/Mithril.Core.Abstractions.Extensions.IConfigurationExtensions.html": {
    "href": "api/Mithril.Core.Abstractions.Extensions.IConfigurationExtensions.html",
    "title": "Class IConfigurationExtensions | Mithril API Reference",
    "keywords": "Class IConfigurationExtensions Configuration extensions Inheritance object IConfigurationExtensions Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Mithril.Core.Abstractions.Extensions Assembly: Mithril.Core.Abstractions.dll Syntax public static class IConfigurationExtensions Methods | Improve this Doc View Source GetConfig<TOptions>(IConfiguration?, string) Gets the configuration section requested. Declaration public static TOptions? GetConfig<TOptions>(this IConfiguration? configuration, string section) where TOptions : class Parameters Type Name Description IConfiguration configuration The configuration. string section The section. Returns Type Description TOptions The config specified. Type Parameters Name Description TOptions The type of the options. | Improve this Doc View Source GetSystemConfig(IConfiguration?) Gets the system configuration. Declaration public static MithrilConfig? GetSystemConfig(this IConfiguration? configuration) Parameters Type Name Description IConfiguration configuration The configuration. Returns Type Description MithrilConfig The system configuration."
  },
  "api/Mithril.Core.Abstractions.Extensions.IFeatureManagerExtensions.html": {
    "href": "api/Mithril.Core.Abstractions.Extensions.IFeatureManagerExtensions.html",
    "title": "Class IFeatureManagerExtensions | Mithril API Reference",
    "keywords": "Class IFeatureManagerExtensions Feature manager extension Inheritance object IFeatureManagerExtensions Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Mithril.Core.Abstractions.Extensions Assembly: Mithril.Core.Abstractions.dll Syntax public static class IFeatureManagerExtensions Methods | Improve this Doc View Source AreFeaturesEnabled(IFeatureManager?, params IFeature[]) Determines if the features are enabled. Declaration public static bool AreFeaturesEnabled(this IFeatureManager? featureManager, params IFeature[] features) Parameters Type Name Description IFeatureManager featureManager The feature manager. IFeature[] features The features. Returns Type Description bool True if they are, false otherwise."
  },
  "api/Mithril.Core.Abstractions.Extensions.IServiceProviderExtensions.html": {
    "href": "api/Mithril.Core.Abstractions.Extensions.IServiceProviderExtensions.html",
    "title": "Class IServiceProviderExtensions | Mithril API Reference",
    "keywords": "Class IServiceProviderExtensions Service provider extensions Inheritance object IServiceProviderExtensions Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Mithril.Core.Abstractions.Extensions Assembly: Mithril.Core.Abstractions.dll Syntax public static class IServiceProviderExtensions Methods | Improve this Doc View Source Exists<TClass>(IServiceProvider?) Determines if the service has been registered. Declaration public static bool Exists<TClass>(this IServiceProvider? services) where TClass : class Parameters Type Name Description IServiceProvider services The service provider. Returns Type Description bool True if it exists, false otherwise. Type Parameters Name Description TClass The type of the class."
  },
  "api/Mithril.Core.Abstractions.Extensions.StringExtensions.html": {
    "href": "api/Mithril.Core.Abstractions.Extensions.StringExtensions.html",
    "title": "Class StringExtensions | Mithril API Reference",
    "keywords": "Class StringExtensions String extension methods Inheritance object StringExtensions Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Mithril.Core.Abstractions.Extensions Assembly: Mithril.Core.Abstractions.dll Syntax public static class StringExtensions Methods | Improve this Doc View Source ToPascalCase(string?) Converts the string to pascal case. Declaration public static string ToPascalCase(this string? value) Parameters Type Name Description string value The value. Returns Type Description string The value in pascal case."
  },
  "api/Mithril.Core.Abstractions.Extensions.html": {
    "href": "api/Mithril.Core.Abstractions.Extensions.html",
    "title": "Namespace Mithril.Core.Abstractions.Extensions | Mithril API Reference",
    "keywords": "Namespace Mithril.Core.Abstractions.Extensions Classes ExpandoObjectExtensions ExpandoObject extension methods IConfigurationExtensions Configuration extensions IFeatureManagerExtensions Feature manager extension IServiceProviderExtensions Service provider extensions StringExtensions String extension methods"
  },
  "api/Mithril.Core.Abstractions.Modules.BaseClasses.FeatureBaseClass-1.html": {
    "href": "api/Mithril.Core.Abstractions.Modules.BaseClasses.FeatureBaseClass-1.html",
    "title": "Class FeatureBaseClass<TFeature> | Mithril API Reference",
    "keywords": "Class FeatureBaseClass<TFeature> Feature base class Inheritance object FeatureBaseClass<TFeature> APMFeature EmailFeature ContentFeature GenericFeature IndexingFeature MediaFeature WorkflowFeature LoggingFeature NavigationFeature Implements IFeature IEquatable<TFeature> Inherited Members object.Equals(object, object) object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Mithril.Core.Abstractions.Modules.BaseClasses Assembly: Mithril.Core.Abstractions.dll Syntax public abstract class FeatureBaseClass<TFeature> : IFeature, IEquatable<TFeature> where TFeature : FeatureBaseClass<TFeature>, new() Type Parameters Name Description TFeature The type of the feature. Constructors | Improve this Doc View Source FeatureBaseClass() Initializes a new instance of the FeatureBaseClass<TFeature> class. Declaration protected FeatureBaseClass() See Also IFeature IEquatable<T> IEquatable<T> IFeature Properties | Improve this Doc View Source Category The group (by category) that the feature belongs. Declaration public abstract string Category { get; } Property Value Type Description string The category. See Also IFeature IEquatable<T> IEquatable<T> IFeature | Improve this Doc View Source Description Gets or sets the description. Declaration public abstract string Description { get; } Property Value Type Description string The description. See Also IFeature IEquatable<T> IEquatable<T> IFeature | Improve this Doc View Source Instance Gets an instance of the feature. Declaration public static TFeature Instance { get; } Property Value Type Description TFeature The feature instance. See Also IFeature IEquatable<T> IEquatable<T> IFeature | Improve this Doc View Source Name Human-readable name of the feature. Declaration public abstract string Name { get; } Property Value Type Description string The name. See Also IFeature IEquatable<T> IEquatable<T> IFeature Methods | Improve this Doc View Source Equals(object?) Determines whether the specified object, is equal to this instance. Declaration public override bool Equals(object? obj) Parameters Type Name Description object obj The object to compare with this instance. Returns Type Description bool true if the specified object is equal to this instance; otherwise, false. Overrides object.Equals(object) See Also IFeature IEquatable<T> IEquatable<T> IFeature | Improve this Doc View Source Equals(TFeature?) Indicates whether the current object is equal to another object of the same type. Declaration public bool Equals(TFeature? other) Parameters Type Name Description TFeature other An object to compare with this object. Returns Type Description bool true if the current object is equal to the other parameter; otherwise, false. See Also IFeature IEquatable<T> IEquatable<T> IFeature | Improve this Doc View Source GetHashCode() Returns a hash code for this instance. Declaration public override int GetHashCode() Returns Type Description int A hash code for this instance, suitable for use in hashing algorithms and data structures like a hash table. Overrides object.GetHashCode() See Also IFeature IEquatable<T> IEquatable<T> IFeature Operators | Improve this Doc View Source operator ==(FeatureBaseClass<TFeature>?, FeatureBaseClass<TFeature>?) Implements the operator ==. Declaration public static bool operator ==(FeatureBaseClass<TFeature>? class1, FeatureBaseClass<TFeature>? class2) Parameters Type Name Description FeatureBaseClass<TFeature> class1 The class1. FeatureBaseClass<TFeature> class2 The class2. Returns Type Description bool The result of the operator. See Also IFeature IEquatable<T> IEquatable<T> IFeature | Improve this Doc View Source operator !=(FeatureBaseClass<TFeature>?, FeatureBaseClass<TFeature>?) Implements the operator !=. Declaration public static bool operator !=(FeatureBaseClass<TFeature>? class1, FeatureBaseClass<TFeature>? class2) Parameters Type Name Description FeatureBaseClass<TFeature> class1 The class1. FeatureBaseClass<TFeature> class2 The class2. Returns Type Description bool The result of the operator. See Also IFeature IEquatable<T> IEquatable<T> IFeature Implements IFeature IEquatable<T> Extension Methods ExpandoObjectExtensions.ConvertToExpando<TEntity>(TEntity?) GenericExtensions.When<TObject>(TObject, bool, Func<TObject, TObject>) See Also IFeature IEquatable<T> IEquatable<T> IFeature"
  },
  "api/Mithril.Core.Abstractions.Modules.BaseClasses.ModuleBaseClass-1.html": {
    "href": "api/Mithril.Core.Abstractions.Modules.BaseClasses.ModuleBaseClass-1.html",
    "title": "Class ModuleBaseClass<TModule> | Mithril API Reference",
    "keywords": "Class ModuleBaseClass<TModule> Module base class Inheritance object ModuleBaseClass<TModule> APIModule CommandModule GraphQLModule SwaggerModule AdminModule DefaultApmModule BackgroundModule InMemoryCachingModule CommunicationModule EmailModule ContentModule MithrilModule DataModule FeatureModule FileSystemModule HealthCheckModule LoggingModule SerilogModule TestModule MvcModule NavigationModule RoutingModule AuthenticationModule WindowsAuthenticationModule DefaultThemeModule ThemesModule Implements IEquatable<TModule> IModule Inherited Members object.Equals(object, object) object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Mithril.Core.Abstractions.Modules.BaseClasses Assembly: Mithril.Core.Abstractions.dll Syntax public abstract class ModuleBaseClass<TModule> : IEquatable<TModule>, IModule where TModule : ModuleBaseClass<TModule>, new() Type Parameters Name Description TModule The type of the module. Constructors | Improve this Doc View Source ModuleBaseClass() Initializes a new instance of the ModuleBaseClass<TModule> class. Declaration protected ModuleBaseClass() See Also IModule IEquatable<T> IEquatable<T> IModule | Improve this Doc View Source ModuleBaseClass(string?, string?, params string[]) Initializes a new instance of the ModuleBaseClass<TModule> class. Declaration protected ModuleBaseClass(string? name, string? category, params string[] tags) Parameters Type Name Description string name The name. string category The category. string[] tags The tags. See Also IModule IEquatable<T> IEquatable<T> IModule Properties | Improve this Doc View Source Category Gets the type. Declaration public string Category { get; protected set; } Property Value Type Description string The type. See Also IModule IEquatable<T> IEquatable<T> IModule | Improve this Doc View Source ContentPath The content path Declaration public string ContentPath { get; protected set; } Property Value Type Description string The content path. See Also IModule IEquatable<T> IEquatable<T> IModule | Improve this Doc View Source Features Gets the features. Declaration public virtual IFeature[] Features { get; protected set; } Property Value Type Description IFeature[] The features. See Also IModule IEquatable<T> IEquatable<T> IModule | Improve this Doc View Source ID Gets the identifier. Declaration public string ID { get; protected set; } Property Value Type Description string The identifier. See Also IModule IEquatable<T> IEquatable<T> IModule | Improve this Doc View Source LastModified Gets the last modified. Declaration public DateTime LastModified { get; } Property Value Type Description DateTime The last modified. See Also IModule IEquatable<T> IEquatable<T> IModule | Improve this Doc View Source Name Gets the name. Declaration public string Name { get; protected set; } Property Value Type Description string The name. See Also IModule IEquatable<T> IEquatable<T> IModule | Improve this Doc View Source Order Gets the order that they are initialized in. Declaration public virtual int Order { get; protected set; } Property Value Type Description int The order that they are initialized in. See Also IModule IEquatable<T> IEquatable<T> IModule | Improve this Doc View Source Tags Gets the tags. Declaration public string[] Tags { get; protected set; } Property Value Type Description string[] The tags. See Also IModule IEquatable<T> IEquatable<T> IModule | Improve this Doc View Source Version Gets the version. Declaration public string Version { get; } Property Value Type Description string The version. See Also IModule IEquatable<T> IEquatable<T> IModule Methods | Improve this Doc View Source ConfigureApplication(IApplicationBuilder?, IConfiguration?, IHostEnvironment?) Configures the application. Declaration public virtual IApplicationBuilder? ConfigureApplication(IApplicationBuilder? app, IConfiguration? configuration, IHostEnvironment? environment) Parameters Type Name Description IApplicationBuilder app The application. IConfiguration configuration The configuration. IHostEnvironment environment The environment. Returns Type Description IApplicationBuilder Application builder See Also IModule IEquatable<T> IEquatable<T> IModule | Improve this Doc View Source ConfigureHostSettings(IHostBuilder?, IConfiguration?, IHostEnvironment?) Configures the host settings. Declaration public virtual IHostBuilder? ConfigureHostSettings(IHostBuilder? host, IConfiguration? configuration, IHostEnvironment? environment) Parameters Type Name Description IHostBuilder host The host. IConfiguration configuration The configuration. IHostEnvironment environment The environment. Returns Type Description IHostBuilder Host builder See Also IModule IEquatable<T> IEquatable<T> IModule | Improve this Doc View Source ConfigureLoggingSettings(ILoggingBuilder?, IConfiguration?, IHostEnvironment?) Configures the logging settings. Declaration public virtual ILoggingBuilder? ConfigureLoggingSettings(ILoggingBuilder? logging, IConfiguration? configuration, IHostEnvironment? environment) Parameters Type Name Description ILoggingBuilder logging The logging. IConfiguration configuration The configuration. IHostEnvironment environment The environment. Returns Type Description ILoggingBuilder Logging builder See Also IModule IEquatable<T> IEquatable<T> IModule | Improve this Doc View Source ConfigureMVC(IMvcBuilder?, IConfiguration?, IHostEnvironment?) Configures the MVC. Declaration public virtual IMvcBuilder? ConfigureMVC(IMvcBuilder? mvcBuilder, IConfiguration? configuration, IHostEnvironment? environment) Parameters Type Name Description IMvcBuilder mvcBuilder The MVC builder. IConfiguration configuration The configuration. IHostEnvironment environment The environment. Returns Type Description IMvcBuilder MVC Builder See Also IModule IEquatable<T> IEquatable<T> IModule | Improve this Doc View Source ConfigureRoutes(IEndpointRouteBuilder?, IConfiguration?, IHostEnvironment?) Configures the routes. Declaration public virtual IEndpointRouteBuilder? ConfigureRoutes(IEndpointRouteBuilder? endpoints, IConfiguration? configuration, IHostEnvironment? environment) Parameters Type Name Description IEndpointRouteBuilder endpoints The endpoints. IConfiguration configuration The configuration. IHostEnvironment environment The environment. Returns Type Description IEndpointRouteBuilder Endpoint route builder See Also IModule IEquatable<T> IEquatable<T> IModule | Improve this Doc View Source ConfigureServices(IServiceCollection?, IConfiguration?, IHostEnvironment?) Configures the services for the module. Declaration public virtual IServiceCollection? ConfigureServices(IServiceCollection? services, IConfiguration? configuration, IHostEnvironment? environment) Parameters Type Name Description IServiceCollection services The services collection. IConfiguration configuration The configuration. IHostEnvironment environment The environment. Returns Type Description IServiceCollection Services See Also IModule IEquatable<T> IEquatable<T> IModule | Improve this Doc View Source ConfigureWebHostSettings(IWebHostBuilder?, IConfiguration?, IHostEnvironment?) Configures the web host settings. Declaration public virtual IWebHostBuilder? ConfigureWebHostSettings(IWebHostBuilder? webHost, IConfiguration? configuration, IHostEnvironment? environment) Parameters Type Name Description IWebHostBuilder webHost The web host. IConfiguration configuration The configuration. IHostEnvironment environment The environment. Returns Type Description IWebHostBuilder Web host builder. See Also IModule IEquatable<T> IEquatable<T> IModule | Improve this Doc View Source Equals(object?) Determines whether the specified object, is equal to this instance. Declaration public override bool Equals(object? obj) Parameters Type Name Description object obj The object to compare with this instance. Returns Type Description bool true if the specified object is equal to this instance; otherwise, false. Overrides object.Equals(object) See Also IModule IEquatable<T> IEquatable<T> IModule | Improve this Doc View Source Equals(TModule?) Indicates whether the current object is equal to another object of the same type. Declaration public bool Equals(TModule? other) Parameters Type Name Description TModule other An object to compare with this object. Returns Type Description bool true if the current object is equal to the other parameter; otherwise, false. See Also IModule IEquatable<T> IEquatable<T> IModule | Improve this Doc View Source GetHashCode() Returns a hash code for this instance. Declaration public override int GetHashCode() Returns Type Description int A hash code for this instance, suitable for use in hashing algorithms and data structures like a hash table. Overrides object.GetHashCode() See Also IModule IEquatable<T> IEquatable<T> IModule | Improve this Doc View Source InitializeDataAsync(IDataService?, IServiceProvider?) Initializes the data. Declaration public virtual Task InitializeDataAsync(IDataService? dataService, IServiceProvider? services) Parameters Type Name Description IDataService dataService The data service. IServiceProvider services The services for the application. Returns Type Description Task The async task. See Also IModule IEquatable<T> IEquatable<T> IModule | Improve this Doc View Source OnStarted() Called when the application is [started]. Declaration public virtual void OnStarted() See Also IModule IEquatable<T> IEquatable<T> IModule | Improve this Doc View Source OnStopped() Called when the application is [stopped]. Declaration public virtual void OnStopped() See Also IModule IEquatable<T> IEquatable<T> IModule | Improve this Doc View Source OnStopping() Called when the application is [stopping]. Declaration public virtual void OnStopping() See Also IModule IEquatable<T> IEquatable<T> IModule Operators | Improve this Doc View Source operator ==(ModuleBaseClass<TModule>?, ModuleBaseClass<TModule>?) Implements the operator ==. Declaration public static bool operator ==(ModuleBaseClass<TModule>? class1, ModuleBaseClass<TModule>? class2) Parameters Type Name Description ModuleBaseClass<TModule> class1 The class1. ModuleBaseClass<TModule> class2 The class2. Returns Type Description bool The result of the operator. See Also IModule IEquatable<T> IEquatable<T> IModule | Improve this Doc View Source operator !=(ModuleBaseClass<TModule>?, ModuleBaseClass<TModule>?) Implements the operator !=. Declaration public static bool operator !=(ModuleBaseClass<TModule>? class1, ModuleBaseClass<TModule>? class2) Parameters Type Name Description ModuleBaseClass<TModule> class1 The class1. ModuleBaseClass<TModule> class2 The class2. Returns Type Description bool The result of the operator. See Also IModule IEquatable<T> IEquatable<T> IModule Implements IEquatable<T> IModule Extension Methods ExpandoObjectExtensions.ConvertToExpando<TEntity>(TEntity?) GenericExtensions.When<TObject>(TObject, bool, Func<TObject, TObject>) See Also IModule IEquatable<T> IEquatable<T> IModule"
  },
  "api/Mithril.Core.Abstractions.Modules.BaseClasses.html": {
    "href": "api/Mithril.Core.Abstractions.Modules.BaseClasses.html",
    "title": "Namespace Mithril.Core.Abstractions.Modules.BaseClasses | Mithril API Reference",
    "keywords": "Namespace Mithril.Core.Abstractions.Modules.BaseClasses Classes FeatureBaseClass<TFeature> Feature base class ModuleBaseClass<TModule> Module base class"
  },
  "api/Mithril.Core.Abstractions.Modules.Features.ContentFeature.html": {
    "href": "api/Mithril.Core.Abstractions.Modules.Features.ContentFeature.html",
    "title": "Class ContentFeature | Mithril API Reference",
    "keywords": "Class ContentFeature Content feature Inheritance object FeatureBaseClass<ContentFeature> ContentFeature Implements IFeature IEquatable<ContentFeature> Inherited Members FeatureBaseClass<ContentFeature>.Instance FeatureBaseClass<ContentFeature>.Equals(object) FeatureBaseClass<ContentFeature>.Equals(ContentFeature) FeatureBaseClass<ContentFeature>.GetHashCode() object.Equals(object, object) object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Mithril.Core.Abstractions.Modules.Features Assembly: Mithril.Core.Abstractions.dll Syntax public class ContentFeature : FeatureBaseClass<ContentFeature>, IFeature, IEquatable<ContentFeature> Properties | Improve this Doc View Source Category The group (by category) that the feature belongs. If not provided, defaults to 'Uncategorized'. Declaration public override string Category { get; } Property Value Type Description string The category. Overrides FeatureBaseClass<ContentFeature>.Category See Also FeatureBaseClass<TFeature> | Improve this Doc View Source Description Gets or sets the description. Declaration public override string Description { get; } Property Value Type Description string The description. Overrides FeatureBaseClass<ContentFeature>.Description See Also FeatureBaseClass<TFeature> | Improve this Doc View Source Name Human-readable name of the feature. If not provided, the identifier will be used. Declaration public override string Name { get; } Property Value Type Description string The name. Overrides FeatureBaseClass<ContentFeature>.Name See Also FeatureBaseClass<TFeature> Implements IFeature IEquatable<T> Extension Methods ExpandoObjectExtensions.ConvertToExpando<TEntity>(TEntity?) GenericExtensions.When<TObject>(TObject, bool, Func<TObject, TObject>) See Also FeatureBaseClass<TFeature>"
  },
  "api/Mithril.Core.Abstractions.Modules.Features.GenericFeature.html": {
    "href": "api/Mithril.Core.Abstractions.Modules.Features.GenericFeature.html",
    "title": "Class GenericFeature | Mithril API Reference",
    "keywords": "Class GenericFeature Generic feature (can be used for adhoc situations but should be done so sparingly) Inheritance object FeatureBaseClass<GenericFeature> GenericFeature Implements IFeature IEquatable<GenericFeature> Inherited Members FeatureBaseClass<GenericFeature>.Instance FeatureBaseClass<GenericFeature>.Equals(object) FeatureBaseClass<GenericFeature>.Equals(GenericFeature) FeatureBaseClass<GenericFeature>.GetHashCode() object.Equals(object, object) object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Mithril.Core.Abstractions.Modules.Features Assembly: Mithril.Core.Abstractions.dll Syntax public class GenericFeature : FeatureBaseClass<GenericFeature>, IFeature, IEquatable<GenericFeature> Constructors | Improve this Doc View Source GenericFeature() Initializes a new instance of the GenericFeature class. Declaration public GenericFeature() See Also FeatureBaseClass<TFeature> | Improve this Doc View Source GenericFeature(string, string, string) Initializes a new instance of the GenericFeature class. Declaration public GenericFeature(string name, string category, string description) Parameters Type Name Description string name The name. string category The category. string description The description. See Also FeatureBaseClass<TFeature> Properties | Improve this Doc View Source Category The group (by category) that the feature belongs. If not provided, defaults to 'Uncategorized'. Declaration public override string Category { get; } Property Value Type Description string The category. Overrides FeatureBaseClass<GenericFeature>.Category See Also FeatureBaseClass<TFeature> | Improve this Doc View Source Description Gets or sets the description. Declaration public override string Description { get; } Property Value Type Description string The description. Overrides FeatureBaseClass<GenericFeature>.Description See Also FeatureBaseClass<TFeature> | Improve this Doc View Source Name Human-readable name of the feature. If not provided, the identifier will be used. Declaration public override string Name { get; } Property Value Type Description string The name. Overrides FeatureBaseClass<GenericFeature>.Name See Also FeatureBaseClass<TFeature> Implements IFeature IEquatable<T> Extension Methods ExpandoObjectExtensions.ConvertToExpando<TEntity>(TEntity?) GenericExtensions.When<TObject>(TObject, bool, Func<TObject, TObject>) See Also FeatureBaseClass<TFeature>"
  },
  "api/Mithril.Core.Abstractions.Modules.Features.IndexingFeature.html": {
    "href": "api/Mithril.Core.Abstractions.Modules.Features.IndexingFeature.html",
    "title": "Class IndexingFeature | Mithril API Reference",
    "keywords": "Class IndexingFeature Indexing feature Inheritance object FeatureBaseClass<IndexingFeature> IndexingFeature Implements IFeature IEquatable<IndexingFeature> Inherited Members FeatureBaseClass<IndexingFeature>.Instance FeatureBaseClass<IndexingFeature>.Equals(object) FeatureBaseClass<IndexingFeature>.Equals(IndexingFeature) FeatureBaseClass<IndexingFeature>.GetHashCode() object.Equals(object, object) object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Mithril.Core.Abstractions.Modules.Features Assembly: Mithril.Core.Abstractions.dll Syntax public class IndexingFeature : FeatureBaseClass<IndexingFeature>, IFeature, IEquatable<IndexingFeature> Properties | Improve this Doc View Source Category The group (by category) that the feature belongs. If not provided, defaults to 'Uncategorized'. Declaration public override string Category { get; } Property Value Type Description string The category. Overrides FeatureBaseClass<IndexingFeature>.Category See Also FeatureBaseClass<TFeature> | Improve this Doc View Source Description Gets or sets the description. Declaration public override string Description { get; } Property Value Type Description string The description. Overrides FeatureBaseClass<IndexingFeature>.Description See Also FeatureBaseClass<TFeature> | Improve this Doc View Source Name Human-readable name of the feature. If not provided, the identifier will be used. Declaration public override string Name { get; } Property Value Type Description string The name. Overrides FeatureBaseClass<IndexingFeature>.Name See Also FeatureBaseClass<TFeature> Implements IFeature IEquatable<T> Extension Methods ExpandoObjectExtensions.ConvertToExpando<TEntity>(TEntity?) GenericExtensions.When<TObject>(TObject, bool, Func<TObject, TObject>) See Also FeatureBaseClass<TFeature>"
  },
  "api/Mithril.Core.Abstractions.Modules.Features.MediaFeature.html": {
    "href": "api/Mithril.Core.Abstractions.Modules.Features.MediaFeature.html",
    "title": "Class MediaFeature | Mithril API Reference",
    "keywords": "Class MediaFeature Media feature Inheritance object FeatureBaseClass<MediaFeature> MediaFeature Implements IFeature IEquatable<MediaFeature> Inherited Members FeatureBaseClass<MediaFeature>.Instance FeatureBaseClass<MediaFeature>.Equals(object) FeatureBaseClass<MediaFeature>.Equals(MediaFeature) FeatureBaseClass<MediaFeature>.GetHashCode() object.Equals(object, object) object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Mithril.Core.Abstractions.Modules.Features Assembly: Mithril.Core.Abstractions.dll Syntax public class MediaFeature : FeatureBaseClass<MediaFeature>, IFeature, IEquatable<MediaFeature> Properties | Improve this Doc View Source Category The group (by category) that the feature belongs. If not provided, defaults to 'Uncategorized'. Declaration public override string Category { get; } Property Value Type Description string The category. Overrides FeatureBaseClass<MediaFeature>.Category See Also FeatureBaseClass<TFeature> | Improve this Doc View Source Description Gets or sets the description. Declaration public override string Description { get; } Property Value Type Description string The description. Overrides FeatureBaseClass<MediaFeature>.Description See Also FeatureBaseClass<TFeature> | Improve this Doc View Source Name Human-readable name of the feature. If not provided, the identifier will be used. Declaration public override string Name { get; } Property Value Type Description string The name. Overrides FeatureBaseClass<MediaFeature>.Name See Also FeatureBaseClass<TFeature> Implements IFeature IEquatable<T> Extension Methods ExpandoObjectExtensions.ConvertToExpando<TEntity>(TEntity?) GenericExtensions.When<TObject>(TObject, bool, Func<TObject, TObject>) See Also FeatureBaseClass<TFeature>"
  },
  "api/Mithril.Core.Abstractions.Modules.Features.WorkflowFeature.html": {
    "href": "api/Mithril.Core.Abstractions.Modules.Features.WorkflowFeature.html",
    "title": "Class WorkflowFeature | Mithril API Reference",
    "keywords": "Class WorkflowFeature Workflow feature Inheritance object FeatureBaseClass<WorkflowFeature> WorkflowFeature Implements IFeature IEquatable<WorkflowFeature> Inherited Members FeatureBaseClass<WorkflowFeature>.Instance FeatureBaseClass<WorkflowFeature>.Equals(object) FeatureBaseClass<WorkflowFeature>.Equals(WorkflowFeature) FeatureBaseClass<WorkflowFeature>.GetHashCode() object.Equals(object, object) object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Mithril.Core.Abstractions.Modules.Features Assembly: Mithril.Core.Abstractions.dll Syntax public class WorkflowFeature : FeatureBaseClass<WorkflowFeature>, IFeature, IEquatable<WorkflowFeature> Properties | Improve this Doc View Source Category The group (by category) that the feature belongs. If not provided, defaults to 'Uncategorized'. Declaration public override string Category { get; } Property Value Type Description string The category. Overrides FeatureBaseClass<WorkflowFeature>.Category See Also FeatureBaseClass<TFeature> | Improve this Doc View Source Description Gets or sets the description. Declaration public override string Description { get; } Property Value Type Description string The description. Overrides FeatureBaseClass<WorkflowFeature>.Description See Also FeatureBaseClass<TFeature> | Improve this Doc View Source Name Human-readable name of the feature. If not provided, the identifier will be used. Declaration public override string Name { get; } Property Value Type Description string The name. Overrides FeatureBaseClass<WorkflowFeature>.Name See Also FeatureBaseClass<TFeature> Implements IFeature IEquatable<T> Extension Methods ExpandoObjectExtensions.ConvertToExpando<TEntity>(TEntity?) GenericExtensions.When<TObject>(TObject, bool, Func<TObject, TObject>) See Also FeatureBaseClass<TFeature>"
  },
  "api/Mithril.Core.Abstractions.Modules.Features.html": {
    "href": "api/Mithril.Core.Abstractions.Modules.Features.html",
    "title": "Namespace Mithril.Core.Abstractions.Modules.Features | Mithril API Reference",
    "keywords": "Namespace Mithril.Core.Abstractions.Modules.Features Classes ContentFeature Content feature GenericFeature Generic feature (can be used for adhoc situations but should be done so sparingly) IndexingFeature Indexing feature MediaFeature Media feature WorkflowFeature Workflow feature"
  },
  "api/Mithril.Core.Abstractions.Modules.Interfaces.IFeature.html": {
    "href": "api/Mithril.Core.Abstractions.Modules.Interfaces.IFeature.html",
    "title": "Interface IFeature | Mithril API Reference",
    "keywords": "Interface IFeature Feature interface. Defines information about the feature. Namespace: Mithril.Core.Abstractions.Modules.Interfaces Assembly: Mithril.Core.Abstractions.dll Syntax public interface IFeature Properties | Improve this Doc View Source Category The group (by category) that the feature belongs. If not provided, defaults to 'Uncategorized'. Declaration string Category { get; } Property Value Type Description string The category. | Improve this Doc View Source Description Gets or sets the description. Declaration string Description { get; } Property Value Type Description string The description. | Improve this Doc View Source Name Human-readable name of the feature. If not provided, the identifier will be used. Declaration string Name { get; } Property Value Type Description string The name. Extension Methods ExpandoObjectExtensions.ConvertToExpando<TEntity>(TEntity?) GenericExtensions.When<TObject>(TObject, bool, Func<TObject, TObject>)"
  },
  "api/Mithril.Core.Abstractions.Modules.Interfaces.IModule.html": {
    "href": "api/Mithril.Core.Abstractions.Modules.Interfaces.IModule.html",
    "title": "Interface IModule | Mithril API Reference",
    "keywords": "Interface IModule Module interface. Defines a module and initializes it. Namespace: Mithril.Core.Abstractions.Modules.Interfaces Assembly: Mithril.Core.Abstractions.dll Syntax public interface IModule Properties | Improve this Doc View Source Category Gets the type. Declaration string Category { get; } Property Value Type Description string The type. | Improve this Doc View Source ContentPath The content path Declaration string ContentPath { get; } Property Value Type Description string The content path. | Improve this Doc View Source Features Gets the features. Declaration IFeature[] Features { get; } Property Value Type Description IFeature[] The features. | Improve this Doc View Source ID Gets the identifier. Declaration string ID { get; } Property Value Type Description string The identifier. | Improve this Doc View Source LastModified Gets the last modified. Declaration DateTime LastModified { get; } Property Value Type Description DateTime The last modified. | Improve this Doc View Source Name Gets the name. Declaration string Name { get; } Property Value Type Description string The name. | Improve this Doc View Source Order Gets the order. Declaration int Order { get; } Property Value Type Description int The order. | Improve this Doc View Source Tags Gets the tags. Declaration string[] Tags { get; } Property Value Type Description string[] The tags. | Improve this Doc View Source Version Gets the version. Declaration string Version { get; } Property Value Type Description string The version. Methods | Improve this Doc View Source ConfigureApplication(IApplicationBuilder?, IConfiguration?, IHostEnvironment?) Configures the application. Declaration IApplicationBuilder? ConfigureApplication(IApplicationBuilder? app, IConfiguration? configuration, IHostEnvironment? environment) Parameters Type Name Description IApplicationBuilder app The application. IConfiguration configuration The configuration. IHostEnvironment environment The environment. Returns Type Description IApplicationBuilder Application builder | Improve this Doc View Source ConfigureHostSettings(IHostBuilder?, IConfiguration?, IHostEnvironment?) Configures the host settings. Declaration IHostBuilder? ConfigureHostSettings(IHostBuilder? host, IConfiguration? configuration, IHostEnvironment? environment) Parameters Type Name Description IHostBuilder host The host. IConfiguration configuration The configuration. IHostEnvironment environment The environment. Returns Type Description IHostBuilder Host builder | Improve this Doc View Source ConfigureLoggingSettings(ILoggingBuilder?, IConfiguration?, IHostEnvironment?) Configures the logging settings. Declaration ILoggingBuilder? ConfigureLoggingSettings(ILoggingBuilder? logging, IConfiguration? configuration, IHostEnvironment? environment) Parameters Type Name Description ILoggingBuilder logging The logging. IConfiguration configuration The configuration. IHostEnvironment environment The environment. Returns Type Description ILoggingBuilder Logging builder | Improve this Doc View Source ConfigureMVC(IMvcBuilder?, IConfiguration?, IHostEnvironment?) Configures the MVC. Declaration IMvcBuilder? ConfigureMVC(IMvcBuilder? mvcBuilder, IConfiguration? configuration, IHostEnvironment? environment) Parameters Type Name Description IMvcBuilder mvcBuilder The MVC builder. IConfiguration configuration The configuration. IHostEnvironment environment The environment. Returns Type Description IMvcBuilder MVC Builder | Improve this Doc View Source ConfigureRoutes(IEndpointRouteBuilder?, IConfiguration?, IHostEnvironment?) Configures the routes. Declaration IEndpointRouteBuilder? ConfigureRoutes(IEndpointRouteBuilder? endpoints, IConfiguration? configuration, IHostEnvironment? environment) Parameters Type Name Description IEndpointRouteBuilder endpoints The endpoints. IConfiguration configuration The configuration. IHostEnvironment environment The environment. Returns Type Description IEndpointRouteBuilder Endpoint route builder | Improve this Doc View Source ConfigureServices(IServiceCollection?, IConfiguration?, IHostEnvironment?) Configures the services for the module. Declaration IServiceCollection? ConfigureServices(IServiceCollection? services, IConfiguration? configuration, IHostEnvironment? environment) Parameters Type Name Description IServiceCollection services The services collection. IConfiguration configuration The configuration. IHostEnvironment environment The environment. Returns Type Description IServiceCollection Services | Improve this Doc View Source ConfigureWebHostSettings(IWebHostBuilder?, IConfiguration?, IHostEnvironment?) Configures the web host settings. Declaration IWebHostBuilder? ConfigureWebHostSettings(IWebHostBuilder? webHost, IConfiguration? configuration, IHostEnvironment? environment) Parameters Type Name Description IWebHostBuilder webHost The web host. IConfiguration configuration The configuration. IHostEnvironment environment The environment. Returns Type Description IWebHostBuilder Web host builder. | Improve this Doc View Source InitializeDataAsync(IDataService?, IServiceProvider?) Initializes the data. Declaration Task InitializeDataAsync(IDataService? dataService, IServiceProvider? services) Parameters Type Name Description IDataService dataService The data service. IServiceProvider services The services for the application. Returns Type Description Task The async task. | Improve this Doc View Source OnStarted() Called when the application is [started]. Declaration void OnStarted() | Improve this Doc View Source OnStopped() Called when the application is [stopped]. Declaration void OnStopped() | Improve this Doc View Source OnStopping() Called when the application is [stopping]. Declaration void OnStopping() Extension Methods ExpandoObjectExtensions.ConvertToExpando<TEntity>(TEntity?) GenericExtensions.When<TObject>(TObject, bool, Func<TObject, TObject>)"
  },
  "api/Mithril.Core.Abstractions.Modules.Interfaces.html": {
    "href": "api/Mithril.Core.Abstractions.Modules.Interfaces.html",
    "title": "Namespace Mithril.Core.Abstractions.Modules.Interfaces | Mithril API Reference",
    "keywords": "Namespace Mithril.Core.Abstractions.Modules.Interfaces Interfaces IFeature Feature interface. Defines information about the feature. IModule Module interface. Defines a module and initializes it."
  },
  "api/Mithril.Core.Abstractions.Mvc.Attributes.AddHeaderAttribute.html": {
    "href": "api/Mithril.Core.Abstractions.Mvc.Attributes.AddHeaderAttribute.html",
    "title": "Class AddHeaderAttribute | Mithril API Reference",
    "keywords": "Class AddHeaderAttribute Add Header Attribute Inheritance object Attribute ActionFilterAttribute AddHeaderAttribute Implements IActionFilter IAsyncActionFilter IResultFilter IAsyncResultFilter IOrderedFilter IFilterMetadata Inherited Members ActionFilterAttribute.OnActionExecuted(ActionExecutedContext) ActionFilterAttribute.OnActionExecutionAsync(ActionExecutingContext, ActionExecutionDelegate) ActionFilterAttribute.OnResultExecuting(ResultExecutingContext) ActionFilterAttribute.OnResultExecuted(ResultExecutedContext) ActionFilterAttribute.OnResultExecutionAsync(ResultExecutingContext, ResultExecutionDelegate) ActionFilterAttribute.Order Attribute.Equals(object) Attribute.GetCustomAttribute(Assembly, Type) Attribute.GetCustomAttribute(Assembly, Type, bool) Attribute.GetCustomAttribute(MemberInfo, Type) Attribute.GetCustomAttribute(MemberInfo, Type, bool) Attribute.GetCustomAttribute(Module, Type) Attribute.GetCustomAttribute(Module, Type, bool) Attribute.GetCustomAttribute(ParameterInfo, Type) Attribute.GetCustomAttribute(ParameterInfo, Type, bool) Attribute.GetCustomAttributes(Assembly) Attribute.GetCustomAttributes(Assembly, bool) Attribute.GetCustomAttributes(Assembly, Type) Attribute.GetCustomAttributes(Assembly, Type, bool) Attribute.GetCustomAttributes(MemberInfo) Attribute.GetCustomAttributes(MemberInfo, bool) Attribute.GetCustomAttributes(MemberInfo, Type) Attribute.GetCustomAttributes(MemberInfo, Type, bool) Attribute.GetCustomAttributes(Module) Attribute.GetCustomAttributes(Module, bool) Attribute.GetCustomAttributes(Module, Type) Attribute.GetCustomAttributes(Module, Type, bool) Attribute.GetCustomAttributes(ParameterInfo) Attribute.GetCustomAttributes(ParameterInfo, bool) Attribute.GetCustomAttributes(ParameterInfo, Type) Attribute.GetCustomAttributes(ParameterInfo, Type, bool) Attribute.GetHashCode() Attribute.IsDefaultAttribute() Attribute.IsDefined(Assembly, Type) Attribute.IsDefined(Assembly, Type, bool) Attribute.IsDefined(MemberInfo, Type) Attribute.IsDefined(MemberInfo, Type, bool) Attribute.IsDefined(Module, Type) Attribute.IsDefined(Module, Type, bool) Attribute.IsDefined(ParameterInfo, Type) Attribute.IsDefined(ParameterInfo, Type, bool) Attribute.Match(object) Attribute.TypeId object.Equals(object, object) object.GetType() object.ReferenceEquals(object, object) object.ToString() Namespace: Mithril.Core.Abstractions.Mvc.Attributes Assembly: Mithril.Core.Abstractions.dll Syntax public sealed class AddHeaderAttribute : ActionFilterAttribute, IActionFilter, IAsyncActionFilter, IResultFilter, IAsyncResultFilter, IOrderedFilter, IFilterMetadata Constructors | Improve this Doc View Source AddHeaderAttribute(string, string) Initializes a new instance of the AddHeaderAttribute class. Declaration public AddHeaderAttribute(string key, string value) Parameters Type Name Description string key The key. string value The value. See Also ActionFilterAttribute | Improve this Doc View Source AddHeaderAttribute(string, string[]) Initializes a new instance of the AddHeaderAttribute class. Declaration public AddHeaderAttribute(string key, string[] values) Parameters Type Name Description string key The key. string[] values The values. See Also ActionFilterAttribute Methods | Improve this Doc View Source OnActionExecuting(ActionExecutingContext) On Action Executing. Declaration public override void OnActionExecuting(ActionExecutingContext context) Parameters Type Name Description ActionExecutingContext context Context Overrides ActionFilterAttribute.OnActionExecuting(ActionExecutingContext) See Also ActionFilterAttribute Implements IActionFilter IAsyncActionFilter IResultFilter IAsyncResultFilter IOrderedFilter IFilterMetadata Extension Methods ExpandoObjectExtensions.ConvertToExpando<TEntity>(TEntity?) GenericExtensions.When<TObject>(TObject, bool, Func<TObject, TObject>) See Also ActionFilterAttribute"
  },
  "api/Mithril.Core.Abstractions.Mvc.Attributes.IPFilterAttribute.html": {
    "href": "api/Mithril.Core.Abstractions.Mvc.Attributes.IPFilterAttribute.html",
    "title": "Class IPFilterAttribute | Mithril API Reference",
    "keywords": "Class IPFilterAttribute IP Filter attribute Inheritance object Attribute ActionFilterAttribute IPFilterAttribute Implements IActionFilter IAsyncActionFilter IResultFilter IAsyncResultFilter IOrderedFilter IFilterMetadata Inherited Members ActionFilterAttribute.OnActionExecuted(ActionExecutedContext) ActionFilterAttribute.OnActionExecutionAsync(ActionExecutingContext, ActionExecutionDelegate) ActionFilterAttribute.OnResultExecuting(ResultExecutingContext) ActionFilterAttribute.OnResultExecuted(ResultExecutedContext) ActionFilterAttribute.OnResultExecutionAsync(ResultExecutingContext, ResultExecutionDelegate) ActionFilterAttribute.Order Attribute.Equals(object) Attribute.GetCustomAttribute(Assembly, Type) Attribute.GetCustomAttribute(Assembly, Type, bool) Attribute.GetCustomAttribute(MemberInfo, Type) Attribute.GetCustomAttribute(MemberInfo, Type, bool) Attribute.GetCustomAttribute(Module, Type) Attribute.GetCustomAttribute(Module, Type, bool) Attribute.GetCustomAttribute(ParameterInfo, Type) Attribute.GetCustomAttribute(ParameterInfo, Type, bool) Attribute.GetCustomAttributes(Assembly) Attribute.GetCustomAttributes(Assembly, bool) Attribute.GetCustomAttributes(Assembly, Type) Attribute.GetCustomAttributes(Assembly, Type, bool) Attribute.GetCustomAttributes(MemberInfo) Attribute.GetCustomAttributes(MemberInfo, bool) Attribute.GetCustomAttributes(MemberInfo, Type) Attribute.GetCustomAttributes(MemberInfo, Type, bool) Attribute.GetCustomAttributes(Module) Attribute.GetCustomAttributes(Module, bool) Attribute.GetCustomAttributes(Module, Type) Attribute.GetCustomAttributes(Module, Type, bool) Attribute.GetCustomAttributes(ParameterInfo) Attribute.GetCustomAttributes(ParameterInfo, bool) Attribute.GetCustomAttributes(ParameterInfo, Type) Attribute.GetCustomAttributes(ParameterInfo, Type, bool) Attribute.GetHashCode() Attribute.IsDefaultAttribute() Attribute.IsDefined(Assembly, Type) Attribute.IsDefined(Assembly, Type, bool) Attribute.IsDefined(MemberInfo, Type) Attribute.IsDefined(MemberInfo, Type, bool) Attribute.IsDefined(Module, Type) Attribute.IsDefined(Module, Type, bool) Attribute.IsDefined(ParameterInfo, Type) Attribute.IsDefined(ParameterInfo, Type, bool) Attribute.Match(object) Attribute.TypeId object.Equals(object, object) object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Mithril.Core.Abstractions.Mvc.Attributes Assembly: Mithril.Core.Abstractions.dll Syntax [AttributeUsage(AttributeTargets.Class|AttributeTargets.Method)] public class IPFilterAttribute : ActionFilterAttribute, IActionFilter, IAsyncActionFilter, IResultFilter, IAsyncResultFilter, IOrderedFilter, IFilterMetadata Constructors | Improve this Doc View Source IPFilterAttribute(string) Initializes a new instance of the IPFilterAttribute class. Declaration public IPFilterAttribute(string policyName) Parameters Type Name Description string policyName Name of the policy. See Also Attribute Methods | Improve this Doc View Source OnActionExecuting(ActionExecutingContext) Called before the action executes, after model binding is complete. Declaration public override void OnActionExecuting(ActionExecutingContext context) Parameters Type Name Description ActionExecutingContext context The ActionExecutingContext. Overrides ActionFilterAttribute.OnActionExecuting(ActionExecutingContext) See Also Attribute Implements IActionFilter IAsyncActionFilter IResultFilter IAsyncResultFilter IOrderedFilter IFilterMetadata Extension Methods ExpandoObjectExtensions.ConvertToExpando<TEntity>(TEntity?) GenericExtensions.When<TObject>(TObject, bool, Func<TObject, TObject>) See Also Attribute"
  },
  "api/Mithril.Core.Abstractions.Mvc.Attributes.html": {
    "href": "api/Mithril.Core.Abstractions.Mvc.Attributes.html",
    "title": "Namespace Mithril.Core.Abstractions.Mvc.Attributes | Mithril API Reference",
    "keywords": "Namespace Mithril.Core.Abstractions.Mvc.Attributes Classes AddHeaderAttribute Add Header Attribute IPFilterAttribute IP Filter attribute"
  },
  "api/Mithril.Core.Abstractions.Mvc.Context.HttpContext.html": {
    "href": "api/Mithril.Core.Abstractions.Mvc.Context.HttpContext.html",
    "title": "Class HttpContext | Mithril API Reference",
    "keywords": "Class HttpContext Static http context Inheritance object HttpContext Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Mithril.Core.Abstractions.Mvc.Context Assembly: Mithril.Core.Abstractions.dll Syntax public static class HttpContext Properties | Improve this Doc View Source Current Gets the current. Declaration public static HttpContext? Current { get; } Property Value Type Description HttpContext The current. Methods | Improve this Doc View Source Configure(IHttpContextAccessor?) Configures the specified context accessor. Declaration public static void Configure(IHttpContextAccessor? contextAccessor) Parameters Type Name Description IHttpContextAccessor contextAccessor The context accessor."
  },
  "api/Mithril.Core.Abstractions.Mvc.Context.html": {
    "href": "api/Mithril.Core.Abstractions.Mvc.Context.html",
    "title": "Namespace Mithril.Core.Abstractions.Mvc.Context | Mithril API Reference",
    "keywords": "Namespace Mithril.Core.Abstractions.Mvc.Context Classes HttpContext Static http context"
  },
  "api/Mithril.Core.Abstractions.Services.IIPFilterService.html": {
    "href": "api/Mithril.Core.Abstractions.Services.IIPFilterService.html",
    "title": "Interface IIPFilterService | Mithril API Reference",
    "keywords": "Interface IIPFilterService IP filter service Namespace: Mithril.Core.Abstractions.Services Assembly: Mithril.Core.Abstractions.dll Syntax public interface IIPFilterService Methods | Improve this Doc View Source CheckIPAllowed(HttpContext, string) Checks if the ip associated with the request is allowed. Declaration bool CheckIPAllowed(HttpContext context, string policyName) Parameters Type Name Description HttpContext context The context. string policyName Name of the policy. Returns Type Description bool True if it is, false otherwise. Extension Methods ExpandoObjectExtensions.ConvertToExpando<TEntity>(TEntity?) GenericExtensions.When<TObject>(TObject, bool, Func<TObject, TObject>)"
  },
  "api/Mithril.Core.Abstractions.Services.Options.IPFilterOptions.html": {
    "href": "api/Mithril.Core.Abstractions.Services.Options.IPFilterOptions.html",
    "title": "Class IPFilterOptions | Mithril API Reference",
    "keywords": "Class IPFilterOptions IP filter options Inheritance object IPFilterOptions Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Mithril.Core.Abstractions.Services.Options Assembly: Mithril.Core.Abstractions.dll Syntax public class IPFilterOptions Methods | Improve this Doc View Source AddDefaultPolicy() Adds the default policy. Declaration public IPFilterPolicy? AddDefaultPolicy() Returns Type Description IPFilterPolicy The default policy. | Improve this Doc View Source AddPolicy(string) Adds a policy with the name, or if it already exists returns it. Declaration public IPFilterPolicy? AddPolicy(string name) Parameters Type Name Description string name The name. Returns Type Description IPFilterPolicy The IP filter policy specified. | Improve this Doc View Source TryGetPolicy(string, out IPFilterPolicy?) Tries to get the policy specified. Declaration public bool TryGetPolicy(string policyName, out IPFilterPolicy? policy) Parameters Type Name Description string policyName Name of the policy. IPFilterPolicy policy The policy. Returns Type Description bool True if it is found, false otherwise. Extension Methods ExpandoObjectExtensions.ConvertToExpando<TEntity>(TEntity?) GenericExtensions.When<TObject>(TObject, bool, Func<TObject, TObject>)"
  },
  "api/Mithril.Core.Abstractions.Services.Options.IPFilterPolicy.html": {
    "href": "api/Mithril.Core.Abstractions.Services.Options.IPFilterPolicy.html",
    "title": "Class IPFilterPolicy | Mithril API Reference",
    "keywords": "Class IPFilterPolicy IP Filter policy Inheritance object IPFilterPolicy Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Mithril.Core.Abstractions.Services.Options Assembly: Mithril.Core.Abstractions.dll Syntax public class IPFilterPolicy Constructors | Improve this Doc View Source IPFilterPolicy(string?) Initializes a new instance of the IPFilterPolicy class. Declaration public IPFilterPolicy(string? name) Parameters Type Name Description string name The name. Properties | Improve this Doc View Source BlackList Gets or sets the black list. Declaration public string? BlackList { get; } Property Value Type Description string The black list. | Improve this Doc View Source Name Gets or sets the name. Declaration public string Name { get; } Property Value Type Description string The name. | Improve this Doc View Source WhiteList Gets or sets the white list. Declaration public string? WhiteList { get; } Property Value Type Description string The white list. Methods | Improve this Doc View Source IsAllowed(string) Determines whether the specified ip address is allowed. Declaration public bool IsAllowed(string ipAddress) Parameters Type Name Description string ipAddress The ip address. Returns Type Description bool true if the specified ip address is allowed; otherwise, false. | Improve this Doc View Source SetBlackList(string?) Sets the black list for this policy. Declaration public IPFilterPolicy SetBlackList(string? blackList) Parameters Type Name Description string blackList The black list. Returns Type Description IPFilterPolicy This. | Improve this Doc View Source SetWhiteList(string?) Sets the white list for this policy. Declaration public IPFilterPolicy SetWhiteList(string? whiteList) Parameters Type Name Description string whiteList The white list. Returns Type Description IPFilterPolicy This. Extension Methods ExpandoObjectExtensions.ConvertToExpando<TEntity>(TEntity?) GenericExtensions.When<TObject>(TObject, bool, Func<TObject, TObject>)"
  },
  "api/Mithril.Core.Abstractions.Services.Options.html": {
    "href": "api/Mithril.Core.Abstractions.Services.Options.html",
    "title": "Namespace Mithril.Core.Abstractions.Services.Options | Mithril API Reference",
    "keywords": "Namespace Mithril.Core.Abstractions.Services.Options Classes IPFilterOptions IP filter options IPFilterPolicy IP Filter policy"
  },
  "api/Mithril.Core.Abstractions.Services.html": {
    "href": "api/Mithril.Core.Abstractions.Services.html",
    "title": "Namespace Mithril.Core.Abstractions.Services | Mithril API Reference",
    "keywords": "Namespace Mithril.Core.Abstractions.Services Interfaces IIPFilterService IP filter service"
  },
  "api/Mithril.Core.Application.html": {
    "href": "api/Mithril.Core.Application.html",
    "title": "Class Application | Mithril API Reference",
    "keywords": "Class Application Application info holder. Inheritance object Application Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Mithril.Core Assembly: Mithril.Core.dll Syntax public class Application Constructors | Improve this Doc View Source Application(IConfiguration?, IHostEnvironment?) Initializes a new instance of the Application class. Declaration public Application(IConfiguration? configuration, IHostEnvironment? env) Parameters Type Name Description IConfiguration configuration The configuration. IHostEnvironment env The host environment Properties | Improve this Doc View Source Configuration Gets the configuration. Declaration public IConfiguration? Configuration { get; } Property Value Type Description IConfiguration The configuration. | Improve this Doc View Source Environment Gets the environment. Declaration public IHostEnvironment? Environment { get; } Property Value Type Description IHostEnvironment The environment. | Improve this Doc View Source Modules Gets the modules. Declaration public IModule[] Modules { get; } Property Value Type Description IModule[] The modules. | Improve this Doc View Source Name Gets the name. Declaration public string Name { get; } Property Value Type Description string The name. Methods | Improve this Doc View Source ConfigureApplication(WebApplication?) Allows configuration of MVC related items. Declaration public WebApplication? ConfigureApplication(WebApplication? app) Parameters Type Name Description WebApplication app The application. Returns Type Description WebApplication The application object. | Improve this Doc View Source ConfigureHostSettings(IHostBuilder?) Configures the host settings. Declaration public void ConfigureHostSettings(IHostBuilder? host) Parameters Type Name Description IHostBuilder host The host. | Improve this Doc View Source ConfigureLoggingSettings(ILoggingBuilder?) Configures the logging settings. Declaration public void ConfigureLoggingSettings(ILoggingBuilder? logging) Parameters Type Name Description ILoggingBuilder logging The logging. | Improve this Doc View Source ConfigureMVC(IServiceCollection) Configures the MVC. Declaration public IServiceCollection? ConfigureMVC(IServiceCollection services) Parameters Type Name Description IServiceCollection services The services. Returns Type Description IServiceCollection The services | Improve this Doc View Source ConfigureServices(IServiceCollection?) Configures the services for MVC. Declaration public IServiceCollection? ConfigureServices(IServiceCollection? services) Parameters Type Name Description IServiceCollection services The services collection. Returns Type Description IServiceCollection The service collection | Improve this Doc View Source ConfigureWebHostSettings(IWebHostBuilder?) Configures the web host settings. Declaration public void ConfigureWebHostSettings(IWebHostBuilder? webHost) Parameters Type Name Description IWebHostBuilder webHost The web host. | Improve this Doc View Source InitializeData(IServiceProvider?) Initializes any data associated with the modules. Declaration public void InitializeData(IServiceProvider? services) Parameters Type Name Description IServiceProvider services The services. Extension Methods ExpandoObjectExtensions.ConvertToExpando<TEntity>(TEntity?) GenericExtensions.When<TObject>(TObject, bool, Func<TObject, TObject>)"
  },
  "api/Mithril.Core.Extensions.GenericExtensions.html": {
    "href": "api/Mithril.Core.Extensions.GenericExtensions.html",
    "title": "Class GenericExtensions | Mithril API Reference",
    "keywords": "Class GenericExtensions Generic Extensions Inheritance object GenericExtensions Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Mithril.Core.Extensions Assembly: Mithril.Core.dll Syntax public static class GenericExtensions Methods | Improve this Doc View Source When<TObject>(TObject, bool, Func<TObject, TObject>) Whens the predicate is true, run the method. Declaration public static TObject When<TObject>(this TObject obj, bool predicate, Func<TObject, TObject> method) Parameters Type Name Description TObject obj The object. bool predicate if set to true [predicate]. Func<TObject, TObject> method The method to run if true. Returns Type Description TObject The builder. Type Parameters Name Description TObject The type of the object."
  },
  "api/Mithril.Core.Extensions.IEndpointRouteBuilderExtensions.html": {
    "href": "api/Mithril.Core.Extensions.IEndpointRouteBuilderExtensions.html",
    "title": "Class IEndpointRouteBuilderExtensions | Mithril API Reference",
    "keywords": "Class IEndpointRouteBuilderExtensions IEndpointRouteBuilder extensions Inheritance object IEndpointRouteBuilderExtensions Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Mithril.Core.Extensions Assembly: Mithril.Core.dll Syntax public static class IEndpointRouteBuilderExtensions Methods | Improve this Doc View Source IsSetup(IEndpointRouteBuilder?) Determines whether this instance is setup. Declaration public static bool IsSetup(this IEndpointRouteBuilder? endpointRouteBuilder) Parameters Type Name Description IEndpointRouteBuilder endpointRouteBuilder The endpoint route builder. Returns Type Description bool true if the specified endpoint route builder is setup; otherwise, false."
  },
  "api/Mithril.Core.Extensions.StaticHttpContextExtensions.html": {
    "href": "api/Mithril.Core.Extensions.StaticHttpContextExtensions.html",
    "title": "Class StaticHttpContextExtensions | Mithril API Reference",
    "keywords": "Class StaticHttpContextExtensions Static HTTP context extensions. Inheritance object StaticHttpContextExtensions Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Mithril.Core.Extensions Assembly: Mithril.Core.dll Syntax public static class StaticHttpContextExtensions Methods | Improve this Doc View Source AddStaticHttpContextAccessor(IServiceCollection?) Adds the HTTP context accessor. Declaration public static IServiceCollection? AddStaticHttpContextAccessor(this IServiceCollection? services) Parameters Type Name Description IServiceCollection services The services. Returns Type Description IServiceCollection | Improve this Doc View Source UseStaticHttpContext(IApplicationBuilder?) Uses the static HTTP context. Declaration public static IApplicationBuilder? UseStaticHttpContext(this IApplicationBuilder? app) Parameters Type Name Description IApplicationBuilder app The application. Returns Type Description IApplicationBuilder The app builder"
  },
  "api/Mithril.Core.Extensions.html": {
    "href": "api/Mithril.Core.Extensions.html",
    "title": "Namespace Mithril.Core.Extensions | Mithril API Reference",
    "keywords": "Namespace Mithril.Core.Extensions Classes GenericExtensions Generic Extensions IEndpointRouteBuilderExtensions IEndpointRouteBuilder extensions StaticHttpContextExtensions Static HTTP context extensions."
  },
  "api/Mithril.Core.Middleware.CSPMiddleware.html": {
    "href": "api/Mithril.Core.Middleware.CSPMiddleware.html",
    "title": "Class CSPMiddleware | Mithril API Reference",
    "keywords": "Class CSPMiddleware CSP Middleware Inheritance object CSPMiddleware Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Mithril.Core.Middleware Assembly: Mithril.Core.dll Syntax public class CSPMiddleware Constructors | Improve this Doc View Source CSPMiddleware(RequestDelegate?, IOptions<MithrilConfig>?) Initializes a new instance of the CSPMiddleware class. Declaration public CSPMiddleware(RequestDelegate? next, IOptions<MithrilConfig>? configuration) Parameters Type Name Description RequestDelegate next The next. IOptions<MithrilConfig> configuration The configuration. Methods | Improve this Doc View Source InvokeAsync(HttpContext) Invokes the specified context. Declaration public Task InvokeAsync(HttpContext context) Parameters Type Name Description HttpContext context The context. Returns Type Description Task Async task Extension Methods ExpandoObjectExtensions.ConvertToExpando<TEntity>(TEntity?) GenericExtensions.When<TObject>(TObject, bool, Func<TObject, TObject>)"
  },
  "api/Mithril.Core.Middleware.IPFilterMiddleware.html": {
    "href": "api/Mithril.Core.Middleware.IPFilterMiddleware.html",
    "title": "Class IPFilterMiddleware | Mithril API Reference",
    "keywords": "Class IPFilterMiddleware IP Filter Middleware Inheritance object IPFilterMiddleware Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Mithril.Core.Middleware Assembly: Mithril.Core.dll Syntax public class IPFilterMiddleware Constructors | Improve this Doc View Source IPFilterMiddleware(RequestDelegate?, IIPFilterService?, ILogger<IPFilterMiddleware>?) Initializes a new instance of the IPFilterMiddleware class. Declaration public IPFilterMiddleware(RequestDelegate? next, IIPFilterService? iPFilterService, ILogger<IPFilterMiddleware>? logger) Parameters Type Name Description RequestDelegate next The next. IIPFilterService iPFilterService The i p filter service. ILogger<IPFilterMiddleware> logger The logger. Methods | Improve this Doc View Source InvokeAsync(HttpContext) Invokes the specified context. Declaration public Task InvokeAsync(HttpContext context) Parameters Type Name Description HttpContext context The context. Returns Type Description Task Async task Extension Methods ExpandoObjectExtensions.ConvertToExpando<TEntity>(TEntity?) GenericExtensions.When<TObject>(TObject, bool, Func<TObject, TObject>)"
  },
  "api/Mithril.Core.Middleware.XFrameOptionsMiddleware.html": {
    "href": "api/Mithril.Core.Middleware.XFrameOptionsMiddleware.html",
    "title": "Class XFrameOptionsMiddleware | Mithril API Reference",
    "keywords": "Class XFrameOptionsMiddleware X-Frame-Options Middleware Inheritance object XFrameOptionsMiddleware Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Mithril.Core.Middleware Assembly: Mithril.Core.dll Syntax public class XFrameOptionsMiddleware Constructors | Improve this Doc View Source XFrameOptionsMiddleware(RequestDelegate?, IOptions<MithrilConfig>?) Initializes a new instance of the XFrameOptionsMiddleware class. Declaration public XFrameOptionsMiddleware(RequestDelegate? next, IOptions<MithrilConfig>? configuration) Parameters Type Name Description RequestDelegate next The next. IOptions<MithrilConfig> configuration The configuration. Methods | Improve this Doc View Source InvokeAsync(HttpContext) Invokes the specified context. Declaration public Task InvokeAsync(HttpContext context) Parameters Type Name Description HttpContext context The context. Returns Type Description Task Async task Extension Methods ExpandoObjectExtensions.ConvertToExpando<TEntity>(TEntity?) GenericExtensions.When<TObject>(TObject, bool, Func<TObject, TObject>)"
  },
  "api/Mithril.Core.Middleware.html": {
    "href": "api/Mithril.Core.Middleware.html",
    "title": "Namespace Mithril.Core.Middleware | Mithril API Reference",
    "keywords": "Namespace Mithril.Core.Middleware Classes CSPMiddleware CSP Middleware IPFilterMiddleware IP Filter Middleware XFrameOptionsMiddleware X-Frame-Options Middleware"
  },
  "api/Mithril.Core.Modules.MithrilModule.html": {
    "href": "api/Mithril.Core.Modules.MithrilModule.html",
    "title": "Class MithrilModule | Mithril API Reference",
    "keywords": "Class MithrilModule Mithril module Inheritance object ModuleBaseClass<MithrilModule> MithrilModule Implements IEquatable<MithrilModule> IModule Inherited Members ModuleBaseClass<MithrilModule>.Category ModuleBaseClass<MithrilModule>.ContentPath ModuleBaseClass<MithrilModule>.ID ModuleBaseClass<MithrilModule>.LastModified ModuleBaseClass<MithrilModule>.Name ModuleBaseClass<MithrilModule>.Tags ModuleBaseClass<MithrilModule>.Version ModuleBaseClass<MithrilModule>.ConfigureHostSettings(IHostBuilder, IConfiguration, IHostEnvironment) ModuleBaseClass<MithrilModule>.ConfigureLoggingSettings(ILoggingBuilder, IConfiguration, IHostEnvironment) ModuleBaseClass<MithrilModule>.ConfigureMVC(IMvcBuilder, IConfiguration, IHostEnvironment) ModuleBaseClass<MithrilModule>.ConfigureWebHostSettings(IWebHostBuilder, IConfiguration, IHostEnvironment) ModuleBaseClass<MithrilModule>.Equals(object) ModuleBaseClass<MithrilModule>.Equals(MithrilModule) ModuleBaseClass<MithrilModule>.GetHashCode() ModuleBaseClass<MithrilModule>.InitializeDataAsync(IDataService, IServiceProvider) ModuleBaseClass<MithrilModule>.OnStarted() ModuleBaseClass<MithrilModule>.OnStopped() ModuleBaseClass<MithrilModule>.OnStopping() object.Equals(object, object) object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Mithril.Core.Modules Assembly: Mithril.Core.dll Syntax public class MithrilModule : ModuleBaseClass<MithrilModule>, IEquatable<MithrilModule>, IModule Constructors | Improve this Doc View Source MithrilModule() Initializes a new instance of the MithrilModule class. Declaration public MithrilModule() See Also ModuleBaseClass<TModule> Properties | Improve this Doc View Source Features Gets the features. Declaration public override IFeature[] Features { get; protected set; } Property Value Type Description IFeature[] The features. Overrides ModuleBaseClass<MithrilModule>.Features See Also ModuleBaseClass<TModule> | Improve this Doc View Source Order Gets the order that they are initialized in. Declaration public override int Order { get; protected set; } Property Value Type Description int The order that they are initialized in. Overrides ModuleBaseClass<MithrilModule>.Order See Also ModuleBaseClass<TModule> Methods | Improve this Doc View Source ConfigureApplication(IApplicationBuilder?, IConfiguration?, IHostEnvironment?) Configures the application. Declaration public override IApplicationBuilder? ConfigureApplication(IApplicationBuilder? app, IConfiguration? configuration, IHostEnvironment? environment) Parameters Type Name Description IApplicationBuilder app The application. IConfiguration configuration The configuration. IHostEnvironment environment The environment. Returns Type Description IApplicationBuilder Overrides ModuleBaseClass<MithrilModule>.ConfigureApplication(IApplicationBuilder, IConfiguration, IHostEnvironment) See Also ModuleBaseClass<TModule> | Improve this Doc View Source ConfigureRoutes(IEndpointRouteBuilder?, IConfiguration?, IHostEnvironment?) Configures the routes. Declaration public override IEndpointRouteBuilder? ConfigureRoutes(IEndpointRouteBuilder? endpoints, IConfiguration? configuration, IHostEnvironment? environment) Parameters Type Name Description IEndpointRouteBuilder endpoints The endpoints. IConfiguration configuration The configuration. IHostEnvironment environment The environment. Returns Type Description IEndpointRouteBuilder Overrides ModuleBaseClass<MithrilModule>.ConfigureRoutes(IEndpointRouteBuilder, IConfiguration, IHostEnvironment) See Also ModuleBaseClass<TModule> | Improve this Doc View Source ConfigureServices(IServiceCollection?, IConfiguration?, IHostEnvironment?) Configures the services for the module. Declaration public override IServiceCollection? ConfigureServices(IServiceCollection? services, IConfiguration? configuration, IHostEnvironment? environment) Parameters Type Name Description IServiceCollection services The services collection. IConfiguration configuration The configuration. IHostEnvironment environment The environment. Returns Type Description IServiceCollection Overrides ModuleBaseClass<MithrilModule>.ConfigureServices(IServiceCollection, IConfiguration, IHostEnvironment) See Also ModuleBaseClass<TModule> Implements IEquatable<T> IModule Extension Methods ExpandoObjectExtensions.ConvertToExpando<TEntity>(TEntity?) GenericExtensions.When<TObject>(TObject, bool, Func<TObject, TObject>) See Also ModuleBaseClass<TModule>"
  },
  "api/Mithril.Core.Modules.html": {
    "href": "api/Mithril.Core.Modules.html",
    "title": "Namespace Mithril.Core.Modules | Mithril API Reference",
    "keywords": "Namespace Mithril.Core.Modules Classes MithrilModule Mithril module"
  },
  "api/Mithril.Core.Services.IPFilterService.html": {
    "href": "api/Mithril.Core.Services.IPFilterService.html",
    "title": "Class IPFilterService | Mithril API Reference",
    "keywords": "Class IPFilterService IP Filter service Inheritance object IPFilterService Implements IIPFilterService Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Mithril.Core.Services Assembly: Mithril.Core.dll Syntax public class IPFilterService : IIPFilterService Constructors | Improve this Doc View Source IPFilterService(IOptions<IPFilterOptions>?, ILogger<IPFilterService>?) Initializes a new instance of the IPFilterService class. Declaration public IPFilterService(IOptions<IPFilterOptions>? options, ILogger<IPFilterService>? logger) Parameters Type Name Description IOptions<IPFilterOptions> options The options. ILogger<IPFilterService> logger The logger. See Also IIPFilterService Methods | Improve this Doc View Source CheckIPAllowed(HttpContext, string) Checks if the ip associated with the request is allowed. Declaration public bool CheckIPAllowed(HttpContext context, string policyName) Parameters Type Name Description HttpContext context The context. string policyName Name of the policy. Returns Type Description bool True if it is, false otherwise. See Also IIPFilterService Implements IIPFilterService Extension Methods ExpandoObjectExtensions.ConvertToExpando<TEntity>(TEntity?) GenericExtensions.When<TObject>(TObject, bool, Func<TObject, TObject>) See Also IIPFilterService"
  },
  "api/Mithril.Core.Services.html": {
    "href": "api/Mithril.Core.Services.html",
    "title": "Namespace Mithril.Core.Services | Mithril API Reference",
    "keywords": "Namespace Mithril.Core.Services Classes IPFilterService IP Filter service"
  },
  "api/Mithril.Core.html": {
    "href": "api/Mithril.Core.html",
    "title": "Namespace Mithril.Core | Mithril API Reference",
    "keywords": "Namespace Mithril.Core Classes Application Application info holder."
  },
  "api/Mithril.Data.Abstractions.BaseClasses.LookUpEnumBaseClass-1.html": {
    "href": "api/Mithril.Data.Abstractions.BaseClasses.LookUpEnumBaseClass-1.html",
    "title": "Class LookUpEnumBaseClass<TClass> | Mithril API Reference",
    "keywords": "Class LookUpEnumBaseClass<TClass> LookUp \"enum\" base class Inheritance object StringEnumBaseClass<TClass> LookUpEnumBaseClass<TClass> EventStateTypes ContactInfoType UserClaimTypes Inherited Members StringEnumBaseClass<TClass>.ToStringEnumBaseClass(string) StringEnumBaseClass<TClass>.ToString() StringEnumBaseClass<TClass>.Name object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Namespace: Mithril.Data.Abstractions.BaseClasses Assembly: Mithril.Data.Abstractions.dll Syntax public abstract class LookUpEnumBaseClass<TClass> : StringEnumBaseClass<TClass> where TClass : LookUpEnumBaseClass<TClass>, new() Type Parameters Name Description TClass Constructors | Improve this Doc View Source LookUpEnumBaseClass(string, string) Initializes a new instance of the LookUpEnumBaseClass<TClass> class. Declaration protected LookUpEnumBaseClass(string name, string icon) Parameters Type Name Description string name The name. string icon The icon. See Also StringEnumBaseClass<TClass> Properties | Improve this Doc View Source Icon Gets or sets the icon. Declaration public string? Icon { get; } Property Value Type Description string The icon. See Also StringEnumBaseClass<TClass> | Improve this Doc View Source NameMapping The name mapping Declaration protected static Dictionary<string, TClass> NameMapping { get; set; } Property Value Type Description Dictionary<string, TClass> The name mapping. See Also StringEnumBaseClass<TClass> Methods | Improve this Doc View Source GetEnum(string) Gets the type of the address. Declaration public static TClass? GetEnum(string name) Parameters Type Name Description string name The name. Returns Type Description TClass The address type specified See Also StringEnumBaseClass<TClass> | Improve this Doc View Source GetEnums() Gets the enum types. Declaration public static IEnumerable<TClass> GetEnums() Returns Type Description IEnumerable<TClass> The various enum types. See Also StringEnumBaseClass<TClass> Extension Methods ExpandoObjectExtensions.ConvertToExpando<TEntity>(TEntity?) GenericExtensions.When<TObject>(TObject, bool, Func<TObject, TObject>) See Also StringEnumBaseClass<TClass>"
  },
  "api/Mithril.Data.Abstractions.BaseClasses.ModelBase-1.html": {
    "href": "api/Mithril.Data.Abstractions.BaseClasses.ModelBase-1.html",
    "title": "Class ModelBase<TClass> | Mithril API Reference",
    "keywords": "Class ModelBase<TClass> Model base Inheritance object ModelBase<TClass> CommandBaseClass<TCommand> EventBaseClass<TEvent> RequestMetaData RequestMetric RequestTrace Attachment EmailMessage MessageTemplate SettingsBase<TClass> TypedModelBase<TClass> LookUp LookUpType Feature Menu MenuItem RouteEntry Permission Tenant User UserClaim Theme Implements IModel<TClass> IModel IEquatable<IModel> IEquatable<IModel<TClass>> IComparable IComparable<TClass> IEquatable<ModelBase<TClass>> Inherited Members object.Equals(object, object) object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Mithril.Data.Abstractions.BaseClasses Assembly: Mithril.Data.Abstractions.dll Syntax public abstract class ModelBase<TClass> : IModel<TClass>, IModel, IEquatable<IModel>, IEquatable<IModel<TClass>>, IComparable, IComparable<TClass>, IEquatable<ModelBase<TClass>> where TClass : ModelBase<TClass>, new() Type Parameters Name Description TClass The type of the class. Constructors | Improve this Doc View Source ModelBase() Initializes a new instance of the ModelBase<TClass> class. Declaration protected ModelBase() See Also IModel IComparable IComparable<T> Properties | Improve this Doc View Source Active Gets or sets a value indicating whether this is active. Declaration public bool Active { get; set; } Property Value Type Description bool true if active; otherwise, false. See Also IModel IComparable IComparable<T> | Improve this Doc View Source Creator Gets or sets the creator. Declaration public virtual IUser? Creator { get; set; } Property Value Type Description IUser The creator. See Also IModel IComparable IComparable<T> | Improve this Doc View Source DateCreated Gets or sets the date created. Declaration public DateTime DateCreated { get; set; } Property Value Type Description DateTime The date created. See Also IModel IComparable IComparable<T> | Improve this Doc View Source DateModified Gets or sets the date modified. Declaration public DateTime DateModified { get; set; } Property Value Type Description DateTime The date modified. See Also IModel IComparable IComparable<T> | Improve this Doc View Source ID Gets or sets the identifier. Declaration public long ID { get; set; } Property Value Type Description long The identifier. See Also IModel IComparable IComparable<T> | Improve this Doc View Source Modifier Gets or sets the modifier. Declaration public virtual IUser? Modifier { get; set; } Property Value Type Description IUser The modifier. See Also IModel IComparable IComparable<T> | Improve this Doc View Source TenantID Gets or sets the tenant associated with the object. Declaration public long TenantID { get; set; } Property Value Type Description long The tenant associated with the object. See Also IModel IComparable IComparable<T> Methods | Improve this Doc View Source All(IDataService?) Gets all entries. Declaration public static IEnumerable<TClass> All(IDataService? dataService) Parameters Type Name Description IDataService dataService The data service. Returns Type Description IEnumerable<TClass> All entries. See Also IModel IComparable IComparable<T> | Improve this Doc View Source AllActive(IDataService?) Gets all active entries. Declaration public static IEnumerable<TClass> AllActive(IDataService? dataService) Parameters Type Name Description IDataService dataService The data service. Returns Type Description IEnumerable<TClass> The active entries. See Also IModel IComparable IComparable<T> | Improve this Doc View Source AllInactive(IDataService?) Gets all inactive entries. Declaration public static IEnumerable<TClass> AllInactive(IDataService? dataService) Parameters Type Name Description IDataService dataService The data service. Returns Type Description IEnumerable<TClass> The inactive entries. See Also IModel IComparable IComparable<T> | Improve this Doc View Source CanBeModifiedBy(ClaimsPrincipal?) Determines whether this instance [can be modified by] the specified user. Declaration public virtual bool CanBeModifiedBy(ClaimsPrincipal? user) Parameters Type Name Description ClaimsPrincipal user The user. Returns Type Description bool true if this instance [can be modified by] the specified user; otherwise, false. See Also IModel IComparable IComparable<T> | Improve this Doc View Source CanBeViewedBy(ClaimsPrincipal?) Determines whether this instance [can be viewed by] the specified user. Declaration public virtual bool CanBeViewedBy(ClaimsPrincipal? user) Parameters Type Name Description ClaimsPrincipal user The user. Returns Type Description bool true if this instance [can be viewed by] the specified user; otherwise, false. See Also IModel IComparable IComparable<T> | Improve this Doc View Source CompareTo(object?) Compares the object to another object Declaration public int CompareTo(object? obj) Parameters Type Name Description object obj Object to compare to Returns Type Description int 0 if they are equal, -1 if this is smaller, 1 if it is larger See Also IModel IComparable IComparable<T> | Improve this Doc View Source CompareTo(TClass?) Compares the object to another object Declaration public virtual int CompareTo(TClass? other) Parameters Type Name Description TClass other Object to compare to Returns Type Description int 0 if they are equal, -1 if this is smaller, 1 if it is larger See Also IModel IComparable IComparable<T> | Improve this Doc View Source DeleteAsync(IDataService?, ClaimsPrincipal?, bool) Deletes this instance. Declaration public Task DeleteAsync(IDataService? dataService, ClaimsPrincipal? currentUser, bool softDelete = true) Parameters Type Name Description IDataService dataService The data service. ClaimsPrincipal currentUser The current user. bool softDelete if set to true [soft delete]. Returns Type Description Task The async task. See Also IModel IComparable IComparable<T> | Improve this Doc View Source Equals(ModelBase<TClass>?) Indicates whether the current object is equal to another object of the same type. Declaration public bool Equals(ModelBase<TClass>? other) Parameters Type Name Description ModelBase<TClass> other An object to compare with this object. Returns Type Description bool true if the current object is equal to the other parameter; otherwise, false. See Also IModel IComparable IComparable<T> | Improve this Doc View Source Equals(IModel?) Indicates whether the current object is equal to another object of the same type. Declaration public bool Equals(IModel? other) Parameters Type Name Description IModel other An object to compare with this object. Returns Type Description bool true if the current object is equal to the other parameter; otherwise, false. See Also IModel IComparable IComparable<T> | Improve this Doc View Source Equals(IModel<TClass>?) Indicates whether the current object is equal to another object of the same type. Declaration public bool Equals(IModel<TClass>? other) Parameters Type Name Description IModel<TClass> other An object to compare with this object. Returns Type Description bool true if the current object is equal to the other parameter; otherwise, false. See Also IModel IComparable IComparable<T> | Improve this Doc View Source Equals(object?) Determines if two items are equal Declaration public override bool Equals(object? obj) Parameters Type Name Description object obj The object to compare this to Returns Type Description bool true if they are the same, false otherwise Overrides object.Equals(object) See Also IModel IComparable IComparable<T> | Improve this Doc View Source GetHashCode() Returns the hash of this item Declaration public override int GetHashCode() Returns Type Description int the int hash of the item Overrides object.GetHashCode() See Also IModel IComparable IComparable<T> | Improve this Doc View Source Load(long, IDataService?) Loads the item based on the ID Declaration public static TClass? Load(long id, IDataService? dataService) Parameters Type Name Description long id ID of the item to load IDataService dataService The data service. Returns Type Description TClass The specified item See Also IModel IComparable IComparable<T> | Improve this Doc View Source Query(IDataService?) Queries this instance. Declaration public static IQueryable<TClass>? Query(IDataService? context) Parameters Type Name Description IDataService context The context. Returns Type Description IQueryable<TClass> The IQueryable See Also IModel IComparable IComparable<T> | Improve this Doc View Source SaveAsync(IDataService?, ClaimsPrincipal?) Saves this instance. Declaration public Task SaveAsync(IDataService? dataService, ClaimsPrincipal? currentUser) Parameters Type Name Description IDataService dataService The data service. ClaimsPrincipal currentUser The current user. Returns Type Description Task This. See Also IModel IComparable IComparable<T> | Improve this Doc View Source SetupObject(IDataService?, IUser?) Sets up the object. Declaration public virtual void SetupObject(IDataService? dataService, IUser? currentUser) Parameters Type Name Description IDataService dataService The data service. IUser currentUser The current user. See Also IModel IComparable IComparable<T> | Improve this Doc View Source SetupObject(IDataService?, ClaimsPrincipal?) Sets up the object. Declaration public virtual void SetupObject(IDataService? dataService, ClaimsPrincipal? currentUser) Parameters Type Name Description IDataService dataService The data service. ClaimsPrincipal currentUser The current user. See Also IModel IComparable IComparable<T> | Improve this Doc View Source SetupObjectAndReturn(IDataService?, ClaimsPrincipal?) Sets up the object for saving purposes Declaration public virtual TClass SetupObjectAndReturn(IDataService? dataService, ClaimsPrincipal? currentUser) Parameters Type Name Description IDataService dataService The data service. ClaimsPrincipal currentUser The current user. Returns Type Description TClass This. See Also IModel IComparable IComparable<T> Operators | Improve this Doc View Source operator ==(ModelBase<TClass>?, ModelBase<TClass>?) The == operator Declaration public static bool operator ==(ModelBase<TClass>? first, ModelBase<TClass>? second) Parameters Type Name Description ModelBase<TClass> first First item ModelBase<TClass> second Second item Returns Type Description bool true if the first and second item are the same, false otherwise See Also IModel IComparable IComparable<T> | Improve this Doc View Source operator >(ModelBase<TClass>?, ModelBase<TClass>?) The > operator Declaration public static bool operator >(ModelBase<TClass>? first, ModelBase<TClass>? second) Parameters Type Name Description ModelBase<TClass> first First item ModelBase<TClass> second Second item Returns Type Description bool True if the first item is greater than the second, false otherwise See Also IModel IComparable IComparable<T> | Improve this Doc View Source operator >=(ModelBase<TClass>?, ModelBase<TClass>?) Implements the operator >=. Declaration public static bool operator >=(ModelBase<TClass>? first, ModelBase<TClass>? second) Parameters Type Name Description ModelBase<TClass> first The first. ModelBase<TClass> second The second. Returns Type Description bool The result of the operator. See Also IModel IComparable IComparable<T> | Improve this Doc View Source operator !=(ModelBase<TClass>?, ModelBase<TClass>?) != operator Declaration public static bool operator !=(ModelBase<TClass>? first, ModelBase<TClass>? second) Parameters Type Name Description ModelBase<TClass> first First item ModelBase<TClass> second Second item Returns Type Description bool returns true if they are not equal, false otherwise See Also IModel IComparable IComparable<T> | Improve this Doc View Source operator <(ModelBase<TClass>?, ModelBase<TClass>?) The < operator Declaration public static bool operator <(ModelBase<TClass>? first, ModelBase<TClass>? second) Parameters Type Name Description ModelBase<TClass> first First item ModelBase<TClass> second Second item Returns Type Description bool True if the first item is less than the second, false otherwise See Also IModel IComparable IComparable<T> | Improve this Doc View Source operator <=(ModelBase<TClass>?, ModelBase<TClass>?) Implements the operator <=. Declaration public static bool operator <=(ModelBase<TClass>? first, ModelBase<TClass>? second) Parameters Type Name Description ModelBase<TClass> first The first. ModelBase<TClass> second The second. Returns Type Description bool The result of the operator. See Also IModel IComparable IComparable<T> Implements IModel<TClass> IModel IEquatable<T> IEquatable<T> IComparable IComparable<T> IEquatable<T> Extension Methods ExpandoObjectExtensions.ConvertToExpando<TEntity>(TEntity?) GenericExtensions.When<TObject>(TObject, bool, Func<TObject, TObject>) See Also IModel IComparable IComparable<T>"
  },
  "api/Mithril.Data.Abstractions.BaseClasses.SettingsBase-1.html": {
    "href": "api/Mithril.Data.Abstractions.BaseClasses.SettingsBase-1.html",
    "title": "Class SettingsBase<TClass> | Mithril API Reference",
    "keywords": "Class SettingsBase<TClass> Settings base class Inheritance object ModelBase<TClass> SettingsBase<TClass> EmailSettings Implements IModel<TClass> IModel IEquatable<IModel> IEquatable<IModel<TClass>> IComparable IComparable<TClass> IEquatable<ModelBase<TClass>> IEquatable<SettingsBase<TClass>> Inherited Members ModelBase<TClass>.Active ModelBase<TClass>.Creator ModelBase<TClass>.DateCreated ModelBase<TClass>.DateModified ModelBase<TClass>.ID ModelBase<TClass>.Modifier ModelBase<TClass>.TenantID ModelBase<TClass>.All(IDataService) ModelBase<TClass>.AllActive(IDataService) ModelBase<TClass>.AllInactive(IDataService) ModelBase<TClass>.Load(long, IDataService) ModelBase<TClass>.Query(IDataService) ModelBase<TClass>.CanBeModifiedBy(ClaimsPrincipal) ModelBase<TClass>.CanBeViewedBy(ClaimsPrincipal) ModelBase<TClass>.CompareTo(object) ModelBase<TClass>.DeleteAsync(IDataService, ClaimsPrincipal, bool) ModelBase<TClass>.Equals(IModel) ModelBase<TClass>.Equals(IModel<TClass>) ModelBase<TClass>.Equals(ModelBase<TClass>) ModelBase<TClass>.SaveAsync(IDataService, ClaimsPrincipal) ModelBase<TClass>.SetupObject(IDataService, ClaimsPrincipal) ModelBase<TClass>.SetupObject(IDataService, IUser) ModelBase<TClass>.SetupObjectAndReturn(IDataService, ClaimsPrincipal) object.Equals(object, object) object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Mithril.Data.Abstractions.BaseClasses Assembly: Mithril.Data.Abstractions.dll Syntax public abstract class SettingsBase<TClass> : ModelBase<TClass>, IModel<TClass>, IModel, IEquatable<IModel>, IEquatable<IModel<TClass>>, IComparable, IComparable<TClass>, IEquatable<ModelBase<TClass>>, IEquatable<SettingsBase<TClass>> where TClass : SettingsBase<TClass>, new() Type Parameters Name Description TClass The type of the class. Constructors | Improve this Doc View Source SettingsBase() Initializes a new instance of the SettingsBase<TClass> class. Declaration protected SettingsBase() See Also ModelBase<TClass> Methods | Improve this Doc View Source CompareTo(TClass?) Compares to. Declaration public override int CompareTo(TClass? other) Parameters Type Name Description TClass other The other. Returns Type Description int 0 if they are equal, -1 if this is smaller, 1 if it is larger Overrides ModelBase<TClass>.CompareTo(TClass) See Also ModelBase<TClass> | Improve this Doc View Source Equals(SettingsBase<TClass>?) Indicates whether the current object is equal to another object of the same type. Declaration public bool Equals(SettingsBase<TClass>? other) Parameters Type Name Description SettingsBase<TClass> other An object to compare with this object. Returns Type Description bool true if the current object is equal to the other parameter; otherwise, false. See Also ModelBase<TClass> | Improve this Doc View Source Equals(ITypedModel?) Indicates whether the current object is equal to another object of the same type. Declaration public bool Equals(ITypedModel? other) Parameters Type Name Description ITypedModel other An object to compare with this object. Returns Type Description bool true if the current object is equal to the other parameter; otherwise, false. See Also ModelBase<TClass> | Improve this Doc View Source Equals(object?) Determines whether the specified object, is equal to this instance. Declaration public override bool Equals(object? obj) Parameters Type Name Description object obj The object to compare with this instance. Returns Type Description bool true if the specified object is equal to this instance; otherwise, false. Overrides ModelBase<TClass>.Equals(object) See Also ModelBase<TClass> | Improve this Doc View Source GetHashCode() Returns a hash code for this instance. Declaration public override int GetHashCode() Returns Type Description int A hash code for this instance, suitable for use in hashing algorithms and data structures like a hash table. Overrides ModelBase<TClass>.GetHashCode() See Also ModelBase<TClass> | Improve this Doc View Source LoadOrCreateAsync(IDataService?, ClaimsPrincipal?) Loads or creates the settings asynchronously. Declaration public static Task<TClass> LoadOrCreateAsync(IDataService? dataService, ClaimsPrincipal? user) Parameters Type Name Description IDataService dataService The data service. ClaimsPrincipal user The user. Returns Type Description Task<TClass> The settings See Also ModelBase<TClass> Operators | Improve this Doc View Source operator ==(SettingsBase<TClass>?, SettingsBase<TClass>?) Implements the operator ==. Declaration public static bool operator ==(SettingsBase<TClass>? first, SettingsBase<TClass>? second) Parameters Type Name Description SettingsBase<TClass> first The first. SettingsBase<TClass> second The second. Returns Type Description bool The result of the operator. See Also ModelBase<TClass> | Improve this Doc View Source operator >(SettingsBase<TClass>?, SettingsBase<TClass>?) Implements the operator >. Declaration public static bool operator >(SettingsBase<TClass>? left, SettingsBase<TClass>? right) Parameters Type Name Description SettingsBase<TClass> left The left. SettingsBase<TClass> right The right. Returns Type Description bool The result of the operator. See Also ModelBase<TClass> | Improve this Doc View Source operator >=(SettingsBase<TClass>?, SettingsBase<TClass>?) Implements the operator >=. Declaration public static bool operator >=(SettingsBase<TClass>? left, SettingsBase<TClass>? right) Parameters Type Name Description SettingsBase<TClass> left The left. SettingsBase<TClass> right The right. Returns Type Description bool The result of the operator. See Also ModelBase<TClass> | Improve this Doc View Source operator !=(SettingsBase<TClass>?, SettingsBase<TClass>?) Implements the operator !=. Declaration public static bool operator !=(SettingsBase<TClass>? left, SettingsBase<TClass>? right) Parameters Type Name Description SettingsBase<TClass> left The left. SettingsBase<TClass> right The right. Returns Type Description bool The result of the operator. See Also ModelBase<TClass> | Improve this Doc View Source operator <(SettingsBase<TClass>?, SettingsBase<TClass>?) Implements the operator <. Declaration public static bool operator <(SettingsBase<TClass>? left, SettingsBase<TClass>? right) Parameters Type Name Description SettingsBase<TClass> left The left. SettingsBase<TClass> right The right. Returns Type Description bool The result of the operator. See Also ModelBase<TClass> | Improve this Doc View Source operator <=(SettingsBase<TClass>?, SettingsBase<TClass>?) Implements the operator <=. Declaration public static bool operator <=(SettingsBase<TClass>? left, SettingsBase<TClass>? right) Parameters Type Name Description SettingsBase<TClass> left The left. SettingsBase<TClass> right The right. Returns Type Description bool The result of the operator. See Also ModelBase<TClass> Implements IModel<TClass> IModel IEquatable<T> IEquatable<T> IComparable IComparable<T> IEquatable<T> IEquatable<T> Extension Methods ExpandoObjectExtensions.ConvertToExpando<TEntity>(TEntity?) GenericExtensions.When<TObject>(TObject, bool, Func<TObject, TObject>) See Also ModelBase<TClass>"
  },
  "api/Mithril.Data.Abstractions.BaseClasses.TypedModelBase-1.html": {
    "href": "api/Mithril.Data.Abstractions.BaseClasses.TypedModelBase-1.html",
    "title": "Class TypedModelBase<TClass> | Mithril API Reference",
    "keywords": "Class TypedModelBase<TClass> Typed model base Inheritance object ModelBase<TClass> TypedModelBase<TClass> ContactInfo Implements IModel<TClass> IEquatable<IModel<TClass>> IComparable IComparable<TClass> IEquatable<ModelBase<TClass>> ITypedModel IModel IEquatable<IModel> IEquatable<ITypedModel> IEquatable<TypedModelBase<TClass>> Inherited Members ModelBase<TClass>.Active ModelBase<TClass>.Creator ModelBase<TClass>.DateCreated ModelBase<TClass>.DateModified ModelBase<TClass>.ID ModelBase<TClass>.Modifier ModelBase<TClass>.TenantID ModelBase<TClass>.All(IDataService) ModelBase<TClass>.AllActive(IDataService) ModelBase<TClass>.AllInactive(IDataService) ModelBase<TClass>.Load(long, IDataService) ModelBase<TClass>.Query(IDataService) ModelBase<TClass>.CanBeModifiedBy(ClaimsPrincipal) ModelBase<TClass>.CanBeViewedBy(ClaimsPrincipal) ModelBase<TClass>.CompareTo(object) ModelBase<TClass>.DeleteAsync(IDataService, ClaimsPrincipal, bool) ModelBase<TClass>.Equals(IModel) ModelBase<TClass>.Equals(IModel<TClass>) ModelBase<TClass>.Equals(ModelBase<TClass>) ModelBase<TClass>.SaveAsync(IDataService, ClaimsPrincipal) ModelBase<TClass>.SetupObject(IDataService, ClaimsPrincipal) ModelBase<TClass>.SetupObject(IDataService, IUser) ModelBase<TClass>.SetupObjectAndReturn(IDataService, ClaimsPrincipal) object.Equals(object, object) object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Mithril.Data.Abstractions.BaseClasses Assembly: Mithril.Data.Abstractions.dll Syntax public abstract class TypedModelBase<TClass> : ModelBase<TClass>, IModel<TClass>, IEquatable<IModel<TClass>>, IComparable, IComparable<TClass>, IEquatable<ModelBase<TClass>>, ITypedModel, IModel, IEquatable<IModel>, IEquatable<ITypedModel>, IEquatable<TypedModelBase<TClass>> where TClass : TypedModelBase<TClass>, new() Type Parameters Name Description TClass The type of the class. Constructors | Improve this Doc View Source TypedModelBase() Initializes a new instance of the TypedModelBase<TClass> class. Declaration protected TypedModelBase() See Also ModelBase<TClass> | Improve this Doc View Source TypedModelBase(ILookUp) Initializes a new instance of the TypedModelBase<TClass> class. Declaration protected TypedModelBase(ILookUp type) Parameters Type Name Description ILookUp type The type. See Also ModelBase<TClass> | Improve this Doc View Source TypedModelBase(string?) Initializes a new instance of the TypedModelBase<TClass> class. Declaration protected TypedModelBase(string? type) Parameters Type Name Description string type The type. Exceptions Type Condition ArgumentNullException type ArgumentOutOfRangeException type See Also ModelBase<TClass> Properties | Improve this Doc View Source Type Gets or sets the type. Declaration [Required] [MaxLength(64)] public string? Type { get; set; } Property Value Type Description string The type. See Also ModelBase<TClass> Methods | Improve this Doc View Source CompareTo(TClass?) Compares to. Declaration public override int CompareTo(TClass? other) Parameters Type Name Description TClass other The other. Returns Type Description int 0 if they are equal, -1 if this is smaller, 1 if it is larger Overrides ModelBase<TClass>.CompareTo(TClass) See Also ModelBase<TClass> | Improve this Doc View Source Equals(TypedModelBase<TClass>?) Indicates whether the current object is equal to another object of the same type. Declaration public bool Equals(TypedModelBase<TClass>? other) Parameters Type Name Description TypedModelBase<TClass> other An object to compare with this object. Returns Type Description bool true if the current object is equal to the other parameter; otherwise, false. See Also ModelBase<TClass> | Improve this Doc View Source Equals(ITypedModel?) Indicates whether the current object is equal to another object of the same type. Declaration public bool Equals(ITypedModel? other) Parameters Type Name Description ITypedModel other An object to compare with this object. Returns Type Description bool true if the current object is equal to the other parameter; otherwise, false. See Also ModelBase<TClass> | Improve this Doc View Source Equals(object?) Determines whether the specified object, is equal to this instance. Declaration public override bool Equals(object? obj) Parameters Type Name Description object obj The object to compare with this instance. Returns Type Description bool true if the specified object is equal to this instance; otherwise, false. Overrides ModelBase<TClass>.Equals(object) See Also ModelBase<TClass> | Improve this Doc View Source GetHashCode() Returns a hash code for this instance. Declaration public override int GetHashCode() Returns Type Description int A hash code for this instance, suitable for use in hashing algorithms and data structures like a hash table. Overrides ModelBase<TClass>.GetHashCode() See Also ModelBase<TClass> | Improve this Doc View Source OfType(params ILookUp?[]?) Determines if the object is of a specific type Declaration public bool OfType(params ILookUp?[]? lookUps) Parameters Type Name Description ILookUp[] lookUps The look ups. Returns Type Description bool True if it is, false otherwise See Also ModelBase<TClass> | Improve this Doc View Source OfType(params string?[]?) Determines if the object is of a specific type Declaration public bool OfType(params string?[]? typeNames) Parameters Type Name Description string[] typeNames Type name Returns Type Description bool True if it is, false otherwise See Also ModelBase<TClass> Operators | Improve this Doc View Source operator ==(TypedModelBase<TClass>?, TypedModelBase<TClass>?) Implements the operator ==. Declaration public static bool operator ==(TypedModelBase<TClass>? first, TypedModelBase<TClass>? second) Parameters Type Name Description TypedModelBase<TClass> first The first. TypedModelBase<TClass> second The second. Returns Type Description bool The result of the operator. See Also ModelBase<TClass> | Improve this Doc View Source operator >(TypedModelBase<TClass>?, TypedModelBase<TClass>?) Implements the operator >. Declaration public static bool operator >(TypedModelBase<TClass>? left, TypedModelBase<TClass>? right) Parameters Type Name Description TypedModelBase<TClass> left The left. TypedModelBase<TClass> right The right. Returns Type Description bool The result of the operator. See Also ModelBase<TClass> | Improve this Doc View Source operator >=(TypedModelBase<TClass>?, TypedModelBase<TClass>?) Implements the operator >=. Declaration public static bool operator >=(TypedModelBase<TClass>? left, TypedModelBase<TClass>? right) Parameters Type Name Description TypedModelBase<TClass> left The left. TypedModelBase<TClass> right The right. Returns Type Description bool The result of the operator. See Also ModelBase<TClass> | Improve this Doc View Source operator !=(TypedModelBase<TClass>?, TypedModelBase<TClass>?) Implements the operator !=. Declaration public static bool operator !=(TypedModelBase<TClass>? left, TypedModelBase<TClass>? right) Parameters Type Name Description TypedModelBase<TClass> left The left. TypedModelBase<TClass> right The right. Returns Type Description bool The result of the operator. See Also ModelBase<TClass> | Improve this Doc View Source operator <(TypedModelBase<TClass>?, TypedModelBase<TClass>?) Implements the operator <. Declaration public static bool operator <(TypedModelBase<TClass>? left, TypedModelBase<TClass>? right) Parameters Type Name Description TypedModelBase<TClass> left The left. TypedModelBase<TClass> right The right. Returns Type Description bool The result of the operator. See Also ModelBase<TClass> | Improve this Doc View Source operator <=(TypedModelBase<TClass>?, TypedModelBase<TClass>?) Implements the operator <=. Declaration public static bool operator <=(TypedModelBase<TClass>? left, TypedModelBase<TClass>? right) Parameters Type Name Description TypedModelBase<TClass> left The left. TypedModelBase<TClass> right The right. Returns Type Description bool The result of the operator. See Also ModelBase<TClass> Implements IModel<TClass> IEquatable<T> IComparable IComparable<T> IEquatable<T> ITypedModel IModel IEquatable<T> IEquatable<T> IEquatable<T> Extension Methods ExpandoObjectExtensions.ConvertToExpando<TEntity>(TEntity?) GenericExtensions.When<TObject>(TObject, bool, Func<TObject, TObject>) See Also ModelBase<TClass>"
  },
  "api/Mithril.Data.Abstractions.BaseClasses.html": {
    "href": "api/Mithril.Data.Abstractions.BaseClasses.html",
    "title": "Namespace Mithril.Data.Abstractions.BaseClasses | Mithril API Reference",
    "keywords": "Namespace Mithril.Data.Abstractions.BaseClasses Classes LookUpEnumBaseClass<TClass> LookUp \"enum\" base class ModelBase<TClass> Model base SettingsBase<TClass> Settings base class TypedModelBase<TClass> Typed model base"
  },
  "api/Mithril.Data.Abstractions.Databases.DefaultDatabase.html": {
    "href": "api/Mithril.Data.Abstractions.Databases.DefaultDatabase.html",
    "title": "Class DefaultDatabase | Mithril API Reference",
    "keywords": "Class DefaultDatabase Default database Inheritance object DefaultDatabase Implements IDatabase Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Mithril.Data.Abstractions.Databases Assembly: Mithril.Data.Abstractions.dll Syntax public class DefaultDatabase : IDatabase Properties | Improve this Doc View Source Name Name associated with the database/connection string Declaration public string Name { get; } Property Value Type Description string The name. See Also IDatabase | Improve this Doc View Source Order Order that this database should be in (if only one database is being used, it is ignored) Declaration public int Order { get; } Property Value Type Description int The order. See Also IDatabase | Improve this Doc View Source Provider Gets the provider. Declaration public DbProviderFactory Provider { get; } Property Value Type Description DbProviderFactory The provider. See Also IDatabase | Improve this Doc View Source SourceOptions Gets the source options. Declaration public Options SourceOptions { get; } Property Value Type Description Options The source options. See Also IDatabase Implements IDatabase Extension Methods ExpandoObjectExtensions.ConvertToExpando<TEntity>(TEntity?) GenericExtensions.When<TObject>(TObject, bool, Func<TObject, TObject>) See Also IDatabase"
  },
  "api/Mithril.Data.Abstractions.Databases.html": {
    "href": "api/Mithril.Data.Abstractions.Databases.html",
    "title": "Namespace Mithril.Data.Abstractions.Databases | Mithril API Reference",
    "keywords": "Namespace Mithril.Data.Abstractions.Databases Classes DefaultDatabase Default database"
  },
  "api/Mithril.Data.Abstractions.Enums.ContactInfoType.html": {
    "href": "api/Mithril.Data.Abstractions.Enums.ContactInfoType.html",
    "title": "Class ContactInfoType | Mithril API Reference",
    "keywords": "Class ContactInfoType ContactInfo types Inheritance object StringEnumBaseClass<ContactInfoType> LookUpEnumBaseClass<ContactInfoType> ContactInfoType Inherited Members LookUpEnumBaseClass<ContactInfoType>.Icon LookUpEnumBaseClass<ContactInfoType>.NameMapping LookUpEnumBaseClass<ContactInfoType>.GetEnum(string) LookUpEnumBaseClass<ContactInfoType>.GetEnums() StringEnumBaseClass<ContactInfoType>.ToStringEnumBaseClass(string) StringEnumBaseClass<ContactInfoType>.ToString() StringEnumBaseClass<ContactInfoType>.Name object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Namespace: Mithril.Data.Abstractions.Enums Assembly: Mithril.Data.Abstractions.dll Syntax public class ContactInfoType : LookUpEnumBaseClass<ContactInfoType> Constructors | Improve this Doc View Source ContactInfoType() Initializes a new instance of the ContactInfoType class. Declaration public ContactInfoType() See Also LookUpEnumBaseClass<TClass> | Improve this Doc View Source ContactInfoType(string, string) Initializes a new instance of the ContactInfoType class. Declaration public ContactInfoType(string name, string icon = \"fa-phone\") Parameters Type Name Description string name The name. string icon The icon. See Also LookUpEnumBaseClass<TClass> Properties | Improve this Doc View Source CellPhone Gets the mobile. Declaration public static ContactInfoType CellPhone { get; } Property Value Type Description ContactInfoType The mobile. See Also LookUpEnumBaseClass<TClass> | Improve this Doc View Source Email Gets the email. Declaration public static ContactInfoType Email { get; } Property Value Type Description ContactInfoType The email. See Also LookUpEnumBaseClass<TClass> | Improve this Doc View Source Extension Gets the extension. Declaration public static ContactInfoType Extension { get; } Property Value Type Description ContactInfoType The extension. See Also LookUpEnumBaseClass<TClass> | Improve this Doc View Source Facebook Gets the facebook. Declaration public static ContactInfoType Facebook { get; } Property Value Type Description ContactInfoType The facebook. See Also LookUpEnumBaseClass<TClass> | Improve this Doc View Source Fax Gets the fax. Declaration public static ContactInfoType Fax { get; } Property Value Type Description ContactInfoType The fax. See Also LookUpEnumBaseClass<TClass> | Improve this Doc View Source GitHub Gets the git hub. Declaration public static ContactInfoType GitHub { get; } Property Value Type Description ContactInfoType The git hub. See Also LookUpEnumBaseClass<TClass> | Improve this Doc View Source LinkedIn Gets the linked in. Declaration public static ContactInfoType LinkedIn { get; } Property Value Type Description ContactInfoType The linked in. See Also LookUpEnumBaseClass<TClass> | Improve this Doc View Source Phone Gets the phone. Declaration public static ContactInfoType Phone { get; } Property Value Type Description ContactInfoType The phone. See Also LookUpEnumBaseClass<TClass> | Improve this Doc View Source Twitter Gets the twitter. Declaration public static ContactInfoType Twitter { get; } Property Value Type Description ContactInfoType The twitter. See Also LookUpEnumBaseClass<TClass> | Improve this Doc View Source WebSite Gets the web site. Declaration public static ContactInfoType WebSite { get; } Property Value Type Description ContactInfoType The web site. See Also LookUpEnumBaseClass<TClass> Extension Methods ExpandoObjectExtensions.ConvertToExpando<TEntity>(TEntity?) GenericExtensions.When<TObject>(TObject, bool, Func<TObject, TObject>) See Also LookUpEnumBaseClass<TClass>"
  },
  "api/Mithril.Data.Abstractions.Enums.LookUpTypeEnum.html": {
    "href": "api/Mithril.Data.Abstractions.Enums.LookUpTypeEnum.html",
    "title": "Class LookUpTypeEnum | Mithril API Reference",
    "keywords": "Class LookUpTypeEnum LookUpType enum Inheritance object StringEnumBaseClass<LookUpTypeEnum> LookUpTypeEnum Inherited Members StringEnumBaseClass<LookUpTypeEnum>.ToStringEnumBaseClass(string) StringEnumBaseClass<LookUpTypeEnum>.ToString() StringEnumBaseClass<LookUpTypeEnum>.Name object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Namespace: Mithril.Data.Abstractions.Enums Assembly: Mithril.Data.Abstractions.dll Syntax public class LookUpTypeEnum : StringEnumBaseClass<LookUpTypeEnum> Constructors | Improve this Doc View Source LookUpTypeEnum() Initializes a new instance of the LookUpTypeEnum class. Declaration public LookUpTypeEnum() See Also StringEnumBaseClass<TClass> | Improve this Doc View Source LookUpTypeEnum(string, string?) Initializes a new instance of the LookUpTypeEnum class. Declaration public LookUpTypeEnum(string name, string? description = null) Parameters Type Name Description string name The name. string description The description. See Also StringEnumBaseClass<TClass> Properties | Improve this Doc View Source ComponentContainerType Gets the type of the component container. Declaration public static LookUpTypeEnum ComponentContainerType { get; } Property Value Type Description LookUpTypeEnum The type of the component container. See Also StringEnumBaseClass<TClass> | Improve this Doc View Source ContactInfoType Contact info type Declaration public static LookUpTypeEnum ContactInfoType { get; } Property Value Type Description LookUpTypeEnum Contact info type See Also StringEnumBaseClass<TClass> | Improve this Doc View Source Description Gets the description. Declaration public string? Description { get; } Property Value Type Description string The description. See Also StringEnumBaseClass<TClass> | Improve this Doc View Source DocumentType Gets the type of the document. Declaration public static LookUpTypeEnum DocumentType { get; } Property Value Type Description LookUpTypeEnum The type of the document. See Also StringEnumBaseClass<TClass> | Improve this Doc View Source FeedType Gets the type of the feed. Declaration public static LookUpTypeEnum FeedType { get; } Property Value Type Description LookUpTypeEnum The type of the feed. See Also StringEnumBaseClass<TClass> | Improve this Doc View Source FieldType Gets the type of the field. Declaration public static LookUpTypeEnum FieldType { get; } Property Value Type Description LookUpTypeEnum The type of the field. See Also StringEnumBaseClass<TClass> | Improve this Doc View Source FormElementType Gets the type of the form element. Declaration public static LookUpTypeEnum FormElementType { get; } Property Value Type Description LookUpTypeEnum The type of the form element. See Also StringEnumBaseClass<TClass> | Improve this Doc View Source ParameterType Gets the type of the parameter. Declaration public static LookUpTypeEnum ParameterType { get; } Property Value Type Description LookUpTypeEnum The type of the parameter. See Also StringEnumBaseClass<TClass> | Improve this Doc View Source QueryColumnType Gets the type of the query column. Declaration public static LookUpTypeEnum QueryColumnType { get; } Property Value Type Description LookUpTypeEnum The type of the query column. See Also StringEnumBaseClass<TClass> | Improve this Doc View Source QueryType Gets the type of the query. Declaration public static LookUpTypeEnum QueryType { get; } Property Value Type Description LookUpTypeEnum The type of the query. See Also StringEnumBaseClass<TClass> | Improve this Doc View Source ReportType Gets the type of the report. Declaration public static LookUpTypeEnum ReportType { get; } Property Value Type Description LookUpTypeEnum The type of the report. See Also StringEnumBaseClass<TClass> Methods | Improve this Doc View Source GetLookUpTypes() Gets the enum types. Declaration public static IEnumerable<LookUpTypeEnum> GetLookUpTypes() Returns Type Description IEnumerable<LookUpTypeEnum> The various enum types. See Also StringEnumBaseClass<TClass> Extension Methods ExpandoObjectExtensions.ConvertToExpando<TEntity>(TEntity?) GenericExtensions.When<TObject>(TObject, bool, Func<TObject, TObject>) See Also StringEnumBaseClass<TClass>"
  },
  "api/Mithril.Data.Abstractions.Enums.UserClaimTypes.html": {
    "href": "api/Mithril.Data.Abstractions.Enums.UserClaimTypes.html",
    "title": "Class UserClaimTypes | Mithril API Reference",
    "keywords": "Class UserClaimTypes Claim types that are available Inheritance object StringEnumBaseClass<UserClaimTypes> LookUpEnumBaseClass<UserClaimTypes> UserClaimTypes Inherited Members LookUpEnumBaseClass<UserClaimTypes>.Icon LookUpEnumBaseClass<UserClaimTypes>.NameMapping LookUpEnumBaseClass<UserClaimTypes>.GetEnum(string) LookUpEnumBaseClass<UserClaimTypes>.GetEnums() StringEnumBaseClass<UserClaimTypes>.ToStringEnumBaseClass(string) StringEnumBaseClass<UserClaimTypes>.ToString() StringEnumBaseClass<UserClaimTypes>.Name object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Namespace: Mithril.Data.Abstractions.Enums Assembly: Mithril.Data.Abstractions.dll Syntax public class UserClaimTypes : LookUpEnumBaseClass<UserClaimTypes> Constructors | Improve this Doc View Source UserClaimTypes() Initializes a new instance of the UserClaimTypes class. Declaration public UserClaimTypes() See Also LookUpEnumBaseClass<TClass> | Improve this Doc View Source UserClaimTypes(string) Initializes a new instance of the UserClaimTypes class. Declaration public UserClaimTypes(string name) Parameters Type Name Description string name The name. See Also LookUpEnumBaseClass<TClass> Properties | Improve this Doc View Source ADGroup Gets the ad group claim type. Declaration public static UserClaimTypes ADGroup { get; } Property Value Type Description UserClaimTypes The claim corresponding to the AD group. See Also LookUpEnumBaseClass<TClass> | Improve this Doc View Source AttorneyLevel Gets the attorney level. Declaration public static UserClaimTypes AttorneyLevel { get; } Property Value Type Description UserClaimTypes The attorney level. See Also LookUpEnumBaseClass<TClass> | Improve this Doc View Source Committee The committee claim type Declaration public static UserClaimTypes Committee { get; } Property Value Type Description UserClaimTypes The claim corresponding to the committee. See Also LookUpEnumBaseClass<TClass> | Improve this Doc View Source Group The group claim type Declaration public static UserClaimTypes Group { get; } Property Value Type Description UserClaimTypes The claim corresponding to the group. See Also LookUpEnumBaseClass<TClass> | Improve this Doc View Source Manager The manager claim type Declaration public static UserClaimTypes Manager { get; } Property Value Type Description UserClaimTypes The claim corresponding to who the person's manager is. See Also LookUpEnumBaseClass<TClass> | Improve this Doc View Source ManagerFor The manager for claim type Declaration public static UserClaimTypes ManagerFor { get; } Property Value Type Description UserClaimTypes The claim corresponding to who the person is a manager for. See Also LookUpEnumBaseClass<TClass> | Improve this Doc View Source Office The office claim type Declaration public static UserClaimTypes Office { get; } Property Value Type Description UserClaimTypes The claim corresponding to the person's office. See Also LookUpEnumBaseClass<TClass> | Improve this Doc View Source Role The role claim type Declaration public static UserClaimTypes Role { get; } Property Value Type Description UserClaimTypes The claim corresponding to the role. See Also LookUpEnumBaseClass<TClass> | Improve this Doc View Source Secretary The secretary claim type Declaration public static UserClaimTypes Secretary { get; } Property Value Type Description UserClaimTypes The claim corresponding to who the person's secretary is. See Also LookUpEnumBaseClass<TClass> | Improve this Doc View Source SecretaryFor The secretary for claim type Declaration public static UserClaimTypes SecretaryFor { get; } Property Value Type Description UserClaimTypes The claim corresponding to who the person is a secretary for. See Also LookUpEnumBaseClass<TClass> | Improve this Doc View Source Section Gets the section. Declaration public static UserClaimTypes Section { get; } Property Value Type Description UserClaimTypes The section. See Also LookUpEnumBaseClass<TClass> | Improve this Doc View Source SectionHead The section head claim type Declaration public static UserClaimTypes SectionHead { get; } Property Value Type Description UserClaimTypes The claim corresponding to the person's section head. See Also LookUpEnumBaseClass<TClass> | Improve this Doc View Source SectionHeadFor The section head for claim type Declaration public static UserClaimTypes SectionHeadFor { get; } Property Value Type Description UserClaimTypes The claim corresponding to who the person is section head for. See Also LookUpEnumBaseClass<TClass> | Improve this Doc View Source StaffType The staff type claim type Declaration public static UserClaimTypes StaffType { get; } Property Value Type Description UserClaimTypes The claim corresponding to the person's staff type. See Also LookUpEnumBaseClass<TClass> | Improve this Doc View Source UserName The user name claim type Declaration public static UserClaimTypes UserName { get; } Property Value Type Description UserClaimTypes The claim corresponding to the user name. See Also LookUpEnumBaseClass<TClass> Extension Methods ExpandoObjectExtensions.ConvertToExpando<TEntity>(TEntity?) GenericExtensions.When<TObject>(TObject, bool, Func<TObject, TObject>) See Also LookUpEnumBaseClass<TClass>"
  },
  "api/Mithril.Data.Abstractions.Enums.html": {
    "href": "api/Mithril.Data.Abstractions.Enums.html",
    "title": "Namespace Mithril.Data.Abstractions.Enums | Mithril API Reference",
    "keywords": "Namespace Mithril.Data.Abstractions.Enums Classes ContactInfoType ContactInfo types LookUpTypeEnum LookUpType enum UserClaimTypes Claim types that are available"
  },
  "api/Mithril.Data.Abstractions.ExtensionMethods.ClaimsPrincipalExtensions.html": {
    "href": "api/Mithril.Data.Abstractions.ExtensionMethods.ClaimsPrincipalExtensions.html",
    "title": "Class ClaimsPrincipalExtensions | Mithril API Reference",
    "keywords": "Class ClaimsPrincipalExtensions ClaimsPrincipal extensions Inheritance object ClaimsPrincipalExtensions Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Mithril.Data.Abstractions.ExtensionMethods Assembly: Mithril.Data.Abstractions.dll Syntax public static class ClaimsPrincipalExtensions Methods | Improve this Doc View Source GetName(ClaimsPrincipal?, bool) Gets the name. Declaration public static string GetName(this ClaimsPrincipal? claimsPrincipal, bool removeDomain = false) Parameters Type Name Description ClaimsPrincipal claimsPrincipal The claims principal. bool removeDomain if set to true [remove the domain]. As an example, for windows auth, the bit before the ''. If using email addresses for auth, remove the '@domain.com' bit). Returns Type Description string The user's name | Improve this Doc View Source TryGetTennant(ClaimsPrincipal?, out long) Gets the tennant ID for the user if it exists. Declaration public static bool TryGetTennant(this ClaimsPrincipal? claimsPrincipal, out long tennantID) Parameters Type Name Description ClaimsPrincipal claimsPrincipal The claims principal. long tennantID The tennant identifier. Returns Type Description bool True if it exists, false otherwise."
  },
  "api/Mithril.Data.Abstractions.ExtensionMethods.html": {
    "href": "api/Mithril.Data.Abstractions.ExtensionMethods.html",
    "title": "Namespace Mithril.Data.Abstractions.ExtensionMethods | Mithril API Reference",
    "keywords": "Namespace Mithril.Data.Abstractions.ExtensionMethods Classes ClaimsPrincipalExtensions ClaimsPrincipal extensions"
  },
  "api/Mithril.Data.Abstractions.Interfaces.IIndexedModel.html": {
    "href": "api/Mithril.Data.Abstractions.Interfaces.IIndexedModel.html",
    "title": "Interface IIndexedModel | Mithril API Reference",
    "keywords": "Interface IIndexedModel Indexable model interface Inherited Members IModel.Active IModel.Creator IModel.DateCreated IModel.DateModified IModel.ID IModel.Modifier IModel.TenantID IModel.CanBeModifiedBy(ClaimsPrincipal) IModel.CanBeViewedBy(ClaimsPrincipal) IModel.DeleteAsync(IDataService, ClaimsPrincipal, bool) IModel.SaveAsync(IDataService, ClaimsPrincipal) IModel.SetupObject(IDataService, ClaimsPrincipal) IModel.SetupObject(IDataService, IUser) IEquatable<IModel>.Equals(IModel) Namespace: Mithril.Data.Abstractions.Interfaces Assembly: Mithril.Data.Abstractions.dll Syntax public interface IIndexedModel : IModel, IEquatable<IModel> Extension Methods ExpandoObjectExtensions.ConvertToExpando<TEntity>(TEntity?) GenericExtensions.When<TObject>(TObject, bool, Func<TObject, TObject>) See Also IModel"
  },
  "api/Mithril.Data.Abstractions.Interfaces.ILookUp.html": {
    "href": "api/Mithril.Data.Abstractions.Interfaces.ILookUp.html",
    "title": "Interface ILookUp | Mithril API Reference",
    "keywords": "Interface ILookUp LookUp interface Inherited Members IModel.Active IModel.Creator IModel.DateCreated IModel.DateModified IModel.ID IModel.Modifier IModel.TenantID IModel.CanBeModifiedBy(ClaimsPrincipal) IModel.CanBeViewedBy(ClaimsPrincipal) IModel.DeleteAsync(IDataService, ClaimsPrincipal, bool) IModel.SaveAsync(IDataService, ClaimsPrincipal) IModel.SetupObject(IDataService, ClaimsPrincipal) IModel.SetupObject(IDataService, IUser) IEquatable<IModel>.Equals(IModel) IEquatable<ILookUp>.Equals(ILookUp) Namespace: Mithril.Data.Abstractions.Interfaces Assembly: Mithril.Data.Abstractions.dll Syntax public interface ILookUp : IModel, IEquatable<IModel>, IEquatable<ILookUp> Properties | Improve this Doc View Source DisplayName Display name Declaration [Required] [MinLength(1)] [MaxLength(64)] string? DisplayName { get; set; } Property Value Type Description string See Also IModel IEquatable<T> | Improve this Doc View Source Icon Gets or sets the icon. Declaration [Required] [MinLength(1)] [MaxLength(64)] string? Icon { get; set; } Property Value Type Description string The icon. See Also IModel IEquatable<T> | Improve this Doc View Source Type Gets or sets the type. Declaration ILookUpType? Type { get; set; } Property Value Type Description ILookUpType The type. See Also IModel IEquatable<T> Extension Methods ExpandoObjectExtensions.ConvertToExpando<TEntity>(TEntity?) GenericExtensions.When<TObject>(TObject, bool, Func<TObject, TObject>) See Also IModel IEquatable<T>"
  },
  "api/Mithril.Data.Abstractions.Interfaces.ILookUpType.html": {
    "href": "api/Mithril.Data.Abstractions.Interfaces.ILookUpType.html",
    "title": "Interface ILookUpType | Mithril API Reference",
    "keywords": "Interface ILookUpType LookUpType interface Inherited Members IModel.Active IModel.Creator IModel.DateCreated IModel.DateModified IModel.ID IModel.Modifier IModel.TenantID IModel.CanBeModifiedBy(ClaimsPrincipal) IModel.CanBeViewedBy(ClaimsPrincipal) IModel.DeleteAsync(IDataService, ClaimsPrincipal, bool) IModel.SaveAsync(IDataService, ClaimsPrincipal) IModel.SetupObject(IDataService, ClaimsPrincipal) IModel.SetupObject(IDataService, IUser) IEquatable<IModel>.Equals(IModel) IEquatable<ILookUpType>.Equals(ILookUpType) Namespace: Mithril.Data.Abstractions.Interfaces Assembly: Mithril.Data.Abstractions.dll Syntax public interface ILookUpType : IModel, IEquatable<IModel>, IEquatable<ILookUpType> Properties | Improve this Doc View Source Description Gets or sets the description. Declaration [MaxLength(500)] string? Description { get; set; } Property Value Type Description string The description. See Also IEquatable<T> IModel | Improve this Doc View Source DisplayName Gets or sets the display name. Declaration [Required] [MinLength(1)] [MaxLength(64)] string? DisplayName { get; set; } Property Value Type Description string The display name. See Also IEquatable<T> IModel | Improve this Doc View Source LookUps Gets or sets the look ups. Declaration IList<ILookUp> LookUps { get; set; } Property Value Type Description IList<ILookUp> The look ups. See Also IEquatable<T> IModel Extension Methods ExpandoObjectExtensions.ConvertToExpando<TEntity>(TEntity?) GenericExtensions.When<TObject>(TObject, bool, Func<TObject, TObject>) See Also IEquatable<T> IModel"
  },
  "api/Mithril.Data.Abstractions.Interfaces.IModel-1.html": {
    "href": "api/Mithril.Data.Abstractions.Interfaces.IModel-1.html",
    "title": "Interface IModel<TClass> | Mithril API Reference",
    "keywords": "Interface IModel<TClass> IModel interface Inherited Members IModel.Active IModel.Creator IModel.DateCreated IModel.DateModified IModel.ID IModel.Modifier IModel.TenantID IModel.CanBeModifiedBy(ClaimsPrincipal) IModel.CanBeViewedBy(ClaimsPrincipal) IModel.DeleteAsync(IDataService, ClaimsPrincipal, bool) IModel.SaveAsync(IDataService, ClaimsPrincipal) IModel.SetupObject(IDataService, ClaimsPrincipal) IModel.SetupObject(IDataService, IUser) IEquatable<IModel>.Equals(IModel) IEquatable<IModel<TClass>>.Equals(IModel<TClass>) Namespace: Mithril.Data.Abstractions.Interfaces Assembly: Mithril.Data.Abstractions.dll Syntax public interface IModel<TClass> : IModel, IEquatable<IModel>, IEquatable<IModel<TClass>> where TClass : IModel<TClass>, new() Type Parameters Name Description TClass The type of the class. Methods | Improve this Doc View Source SetupObjectAndReturn(IDataService, ClaimsPrincipal?) Setups the object and returns it. Declaration TClass SetupObjectAndReturn(IDataService dataService, ClaimsPrincipal? currentUser) Parameters Type Name Description IDataService dataService The data service. ClaimsPrincipal currentUser The current user. Returns Type Description TClass This. See Also IModel Extension Methods ExpandoObjectExtensions.ConvertToExpando<TEntity>(TEntity?) GenericExtensions.When<TObject>(TObject, bool, Func<TObject, TObject>) See Also IModel"
  },
  "api/Mithril.Data.Abstractions.Interfaces.IModel.html": {
    "href": "api/Mithril.Data.Abstractions.Interfaces.IModel.html",
    "title": "Interface IModel | Mithril API Reference",
    "keywords": "Interface IModel Model interface Inherited Members IEquatable<IModel>.Equals(IModel) Namespace: Mithril.Data.Abstractions.Interfaces Assembly: Mithril.Data.Abstractions.dll Syntax public interface IModel : IEquatable<IModel> Properties | Improve this Doc View Source Active Gets or sets a value indicating whether this IModel is active. Declaration bool Active { get; set; } Property Value Type Description bool true if active; otherwise, false. See Also IEquatable<T> | Improve this Doc View Source Creator Gets or sets the creator. Declaration IUser? Creator { get; set; } Property Value Type Description IUser The creator. See Also IEquatable<T> | Improve this Doc View Source DateCreated Gets or sets the date created. Declaration [Between(\"1/1/1900\", \"1/1/2100\", \"\")] DateTime DateCreated { get; set; } Property Value Type Description DateTime The date created. See Also IEquatable<T> | Improve this Doc View Source DateModified Gets or sets the date modified. Declaration [Between(\"1/1/1900\", \"1/1/2100\", \"\")] DateTime DateModified { get; set; } Property Value Type Description DateTime The date modified. See Also IEquatable<T> | Improve this Doc View Source ID Gets or sets the identifier. Declaration long ID { get; set; } Property Value Type Description long The identifier. See Also IEquatable<T> | Improve this Doc View Source Modifier Gets or sets the modifier. Declaration IUser? Modifier { get; set; } Property Value Type Description IUser The modifier. See Also IEquatable<T> | Improve this Doc View Source TenantID Gets or sets the tenant associated with the object. Declaration long TenantID { get; set; } Property Value Type Description long The tenant associated with the object. See Also IEquatable<T> Methods | Improve this Doc View Source CanBeModifiedBy(ClaimsPrincipal?) Determines whether this instance [can be modified by] the specified user. Declaration bool CanBeModifiedBy(ClaimsPrincipal? user) Parameters Type Name Description ClaimsPrincipal user The user. Returns Type Description bool true if this instance [can be modified by] the specified user; otherwise, false. See Also IEquatable<T> | Improve this Doc View Source CanBeViewedBy(ClaimsPrincipal?) Determines whether this instance [can be viewed by] the specified user. Declaration bool CanBeViewedBy(ClaimsPrincipal? user) Parameters Type Name Description ClaimsPrincipal user The user. Returns Type Description bool true if this instance [can be viewed by] the specified user; otherwise, false. See Also IEquatable<T> | Improve this Doc View Source DeleteAsync(IDataService?, ClaimsPrincipal?, bool) Deletes this instance. Declaration Task DeleteAsync(IDataService? dataService, ClaimsPrincipal? currentUser, bool softDelete = true) Parameters Type Name Description IDataService dataService The data service. ClaimsPrincipal currentUser The current user. bool softDelete if set to true [soft delete]. Returns Type Description Task See Also IEquatable<T> | Improve this Doc View Source SaveAsync(IDataService?, ClaimsPrincipal?) Saves this instance asynchronously. Declaration Task SaveAsync(IDataService? dataService, ClaimsPrincipal? currentUser) Parameters Type Name Description IDataService dataService The data service. ClaimsPrincipal currentUser The current user. Returns Type Description Task The async task. See Also IEquatable<T> | Improve this Doc View Source SetupObject(IDataService?, IUser?) Sets up the object. Declaration void SetupObject(IDataService? dataService, IUser? currentUser) Parameters Type Name Description IDataService dataService The data service. IUser currentUser The current user. See Also IEquatable<T> | Improve this Doc View Source SetupObject(IDataService?, ClaimsPrincipal?) Sets up the object. Declaration void SetupObject(IDataService? dataService, ClaimsPrincipal? currentUser) Parameters Type Name Description IDataService dataService The data service. ClaimsPrincipal currentUser The current user. See Also IEquatable<T> Extension Methods ExpandoObjectExtensions.ConvertToExpando<TEntity>(TEntity?) GenericExtensions.When<TObject>(TObject, bool, Func<TObject, TObject>) See Also IEquatable<T>"
  },
  "api/Mithril.Data.Abstractions.Interfaces.ITypedModel.html": {
    "href": "api/Mithril.Data.Abstractions.Interfaces.ITypedModel.html",
    "title": "Interface ITypedModel | Mithril API Reference",
    "keywords": "Interface ITypedModel Typed model Inherited Members IModel.Active IModel.Creator IModel.DateCreated IModel.DateModified IModel.ID IModel.Modifier IModel.TenantID IModel.CanBeModifiedBy(ClaimsPrincipal) IModel.CanBeViewedBy(ClaimsPrincipal) IModel.DeleteAsync(IDataService, ClaimsPrincipal, bool) IModel.SaveAsync(IDataService, ClaimsPrincipal) IModel.SetupObject(IDataService, ClaimsPrincipal) IModel.SetupObject(IDataService, IUser) IEquatable<IModel>.Equals(IModel) IEquatable<ITypedModel>.Equals(ITypedModel) Namespace: Mithril.Data.Abstractions.Interfaces Assembly: Mithril.Data.Abstractions.dll Syntax public interface ITypedModel : IModel, IEquatable<IModel>, IEquatable<ITypedModel> Properties | Improve this Doc View Source Type Gets or sets the type. Declaration [Required] [MaxLength(64)] [MinLength(1)] string? Type { get; set; } Property Value Type Description string The type. Methods | Improve this Doc View Source OfType(params string?[]?) Determines if the object is of a specific type Declaration bool OfType(params string?[]? typeNames) Parameters Type Name Description string[] typeNames Type name Returns Type Description bool True if it is, false otherwise Extension Methods ExpandoObjectExtensions.ConvertToExpando<TEntity>(TEntity?) GenericExtensions.When<TObject>(TObject, bool, Func<TObject, TObject>)"
  },
  "api/Mithril.Data.Abstractions.Interfaces.IUser.html": {
    "href": "api/Mithril.Data.Abstractions.Interfaces.IUser.html",
    "title": "Interface IUser | Mithril API Reference",
    "keywords": "Interface IUser User interface Inherited Members IModel.Active IModel.Creator IModel.DateCreated IModel.DateModified IModel.ID IModel.Modifier IModel.TenantID IModel.CanBeModifiedBy(ClaimsPrincipal) IModel.CanBeViewedBy(ClaimsPrincipal) IModel.DeleteAsync(IDataService, ClaimsPrincipal, bool) IModel.SaveAsync(IDataService, ClaimsPrincipal) IModel.SetupObject(IDataService, ClaimsPrincipal) IModel.SetupObject(IDataService, IUser) IEquatable<IModel>.Equals(IModel) IEquatable<IUser>.Equals(IUser) Namespace: Mithril.Data.Abstractions.Interfaces Assembly: Mithril.Data.Abstractions.dll Syntax public interface IUser : IModel, IEquatable<IModel>, IEquatable<IUser> Properties | Improve this Doc View Source FullName Gets or sets the full name. Declaration string FullName { get; } Property Value Type Description string The full name. See Also IModel | Improve this Doc View Source Initials Gets the initials. Declaration string Initials { get; } Property Value Type Description string The initials. See Also IModel | Improve this Doc View Source ShortName Gets the short name. Declaration string ShortName { get; } Property Value Type Description string The short name. See Also IModel | Improve this Doc View Source UserName Gets or sets the name of the user. Declaration [MaxLength(100)] string? UserName { get; } Property Value Type Description string The name of the user. See Also IModel Methods | Improve this Doc View Source CanAccess(string, string?) Determines whether this instance can access the specified type. Declaration bool CanAccess(string type, string? name) Parameters Type Name Description string type The type. string name The name. Returns Type Description bool true if this instance can access the specified type; otherwise, false. See Also IModel | Improve this Doc View Source Equals(ClaimsPrincipal?) Determines if this user object is equal to the user specified. Declaration bool Equals(ClaimsPrincipal? user) Parameters Type Name Description ClaimsPrincipal user The user. Returns Type Description bool True if they are the same, false otherwise. See Also IModel | Improve this Doc View Source GetClaims(UserClaimTypes) Gets the claims requested. Declaration IEnumerable<IUserClaim> GetClaims(UserClaimTypes type) Parameters Type Name Description UserClaimTypes type The type. Returns Type Description IEnumerable<IUserClaim> The claims specified. See Also IModel Extension Methods ExpandoObjectExtensions.ConvertToExpando<TEntity>(TEntity?) GenericExtensions.When<TObject>(TObject, bool, Func<TObject, TObject>) See Also IModel"
  },
  "api/Mithril.Data.Abstractions.Interfaces.IUserClaim.html": {
    "href": "api/Mithril.Data.Abstractions.Interfaces.IUserClaim.html",
    "title": "Interface IUserClaim | Mithril API Reference",
    "keywords": "Interface IUserClaim User claim interface Inherited Members IModel.Active IModel.Creator IModel.DateCreated IModel.DateModified IModel.ID IModel.Modifier IModel.TenantID IModel.CanBeModifiedBy(ClaimsPrincipal) IModel.CanBeViewedBy(ClaimsPrincipal) IModel.DeleteAsync(IDataService, ClaimsPrincipal, bool) IModel.SaveAsync(IDataService, ClaimsPrincipal) IModel.SetupObject(IDataService, ClaimsPrincipal) IModel.SetupObject(IDataService, IUser) IEquatable<IModel>.Equals(IModel) IEquatable<IUserClaim>.Equals(IUserClaim) Namespace: Mithril.Data.Abstractions.Interfaces Assembly: Mithril.Data.Abstractions.dll Syntax public interface IUserClaim : IModel, IEquatable<IModel>, IEquatable<IUserClaim> Properties | Improve this Doc View Source Type Gets or sets the type. Declaration [Required] [MinLength(1)] [MaxLength(128)] string? Type { get; set; } Property Value Type Description string The type. See Also IModel | Improve this Doc View Source Users Gets or sets the users. Declaration IList<IUser> Users { get; set; } Property Value Type Description IList<IUser> The users. See Also IModel | Improve this Doc View Source Value Gets or sets the value. Declaration [Required] [MinLength(1)] string? Value { get; set; } Property Value Type Description string The value. See Also IModel Methods | Improve this Doc View Source CanAccess(IUser) Determines whether this instance can access the specified user. Declaration bool CanAccess(IUser user) Parameters Type Name Description IUser user The user. Returns Type Description bool true if this instance can access the specified user; otherwise, false. See Also IModel | Improve this Doc View Source CanAccess(ClaimsPrincipal) Determines whether this instance can access the specified user. Declaration bool CanAccess(ClaimsPrincipal user) Parameters Type Name Description ClaimsPrincipal user The user. Returns Type Description bool true if this instance can access the specified user; otherwise, false. See Also IModel | Improve this Doc View Source CanAccess(string, string?) Determines whether this instance can access the specified type. Declaration bool CanAccess(string type, string? value) Parameters Type Name Description string type The type. string value The value. Returns Type Description bool true if this instance can access the specified type; otherwise, false. See Also IModel Extension Methods ExpandoObjectExtensions.ConvertToExpando<TEntity>(TEntity?) GenericExtensions.When<TObject>(TObject, bool, Func<TObject, TObject>) See Also IModel"
  },
  "api/Mithril.Data.Abstractions.Interfaces.html": {
    "href": "api/Mithril.Data.Abstractions.Interfaces.html",
    "title": "Namespace Mithril.Data.Abstractions.Interfaces | Mithril API Reference",
    "keywords": "Namespace Mithril.Data.Abstractions.Interfaces Interfaces IIndexedModel Indexable model interface ILookUp LookUp interface ILookUpType LookUpType interface IModel Model interface IModel<TClass> IModel interface ITypedModel Typed model IUser User interface IUserClaim User claim interface"
  },
  "api/Mithril.Data.Abstractions.Models.General.Mappings.ILookUpTypeMapping.html": {
    "href": "api/Mithril.Data.Abstractions.Models.General.Mappings.ILookUpTypeMapping.html",
    "title": "Class ILookUpTypeMapping | Mithril API Reference",
    "keywords": "Class ILookUpTypeMapping ILookUpType mapping Inheritance object MappingBaseClass<ILookUpType, DefaultDatabase> ILookUpTypeMapping Implements IMapping<ILookUpType> IMapping Inherited Members MappingBaseClass<ILookUpType, DefaultDatabase>.AddAutoKey() MappingBaseClass<ILookUpType, DefaultDatabase>.ContainsProperty(string) MappingBaseClass<ILookUpType, DefaultDatabase>.Copy(IMapping) MappingBaseClass<ILookUpType, DefaultDatabase>.CopyProperty(IIDProperty) MappingBaseClass<ILookUpType, DefaultDatabase>.CopyProperty(IProperty) MappingBaseClass<ILookUpType, DefaultDatabase>.CopyProperty(IMapProperty) MappingBaseClass<ILookUpType, DefaultDatabase>.CopyProperty(IManyToOneProperty) MappingBaseClass<ILookUpType, DefaultDatabase>.CopyProperty(IManyToManyProperty) MappingBaseClass<ILookUpType, DefaultDatabase>.Equals(object) MappingBaseClass<ILookUpType, DefaultDatabase>.GetColumnName(string) MappingBaseClass<ILookUpType, DefaultDatabase>.GetHashCode() MappingBaseClass<ILookUpType, DefaultDatabase>.ID<TDataType>(Expression<Func<ILookUpType, TDataType>>) MappingBaseClass<ILookUpType, DefaultDatabase>.ManyToMany<TDataType>(Expression<Func<ILookUpType, IList<TDataType>>>) MappingBaseClass<ILookUpType, DefaultDatabase>.ManyToOne<TDataType>(Expression<Func<ILookUpType, IList<TDataType>>>) MappingBaseClass<ILookUpType, DefaultDatabase>.ManyToOne<TDataType>(Expression<Func<ILookUpType, TDataType>>) MappingBaseClass<ILookUpType, DefaultDatabase>.Map<TDataType>(Expression<Func<ILookUpType, TDataType>>) MappingBaseClass<ILookUpType, DefaultDatabase>.Reduce(ILogger) MappingBaseClass<ILookUpType, DefaultDatabase>.Reduce(IMapping, ILogger) MappingBaseClass<ILookUpType, DefaultDatabase>.Reference<TDataType>(Expression<Func<ILookUpType, TDataType>>) MappingBaseClass<ILookUpType, DefaultDatabase>.SetQuery(QueryType, string, CommandType, params IParameter[]) MappingBaseClass<ILookUpType, DefaultDatabase>.Setup() MappingBaseClass<ILookUpType, DefaultDatabase>.ToString() MappingBaseClass<ILookUpType, DefaultDatabase>.AutoIDProperties MappingBaseClass<ILookUpType, DefaultDatabase>.DatabaseConfigType MappingBaseClass<ILookUpType, DefaultDatabase>.IDProperties MappingBaseClass<ILookUpType, DefaultDatabase>.ManyToManyProperties MappingBaseClass<ILookUpType, DefaultDatabase>.ManyToOneProperties MappingBaseClass<ILookUpType, DefaultDatabase>.MapProperties MappingBaseClass<ILookUpType, DefaultDatabase>.Merge MappingBaseClass<ILookUpType, DefaultDatabase>.ObjectType MappingBaseClass<ILookUpType, DefaultDatabase>.Order MappingBaseClass<ILookUpType, DefaultDatabase>.Prefix MappingBaseClass<ILookUpType, DefaultDatabase>.Queries MappingBaseClass<ILookUpType, DefaultDatabase>.ReferenceProperties MappingBaseClass<ILookUpType, DefaultDatabase>.SchemaName MappingBaseClass<ILookUpType, DefaultDatabase>.Suffix MappingBaseClass<ILookUpType, DefaultDatabase>.TableName object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Mithril.Data.Abstractions.Models.General.Mappings Assembly: Mithril.Data.dll Syntax public class ILookUpTypeMapping : MappingBaseClass<ILookUpType, DefaultDatabase>, IMapping<ILookUpType>, IMapping Constructors | Improve this Doc View Source ILookUpTypeMapping() Initializes a new instance of the ILookUpTypeMapping class. Declaration public ILookUpTypeMapping() See Also MappingBaseClass<TClassType, TDatabaseType> Implements IMapping<TClassType> IMapping Extension Methods ExpandoObjectExtensions.ConvertToExpando<TEntity>(TEntity?) GenericExtensions.When<TObject>(TObject, bool, Func<TObject, TObject>) See Also MappingBaseClass<TClassType, TDatabaseType>"
  },
  "api/Mithril.Data.Abstractions.Models.General.Mappings.LookUpTypeMapping.html": {
    "href": "api/Mithril.Data.Abstractions.Models.General.Mappings.LookUpTypeMapping.html",
    "title": "Class LookUpTypeMapping | Mithril API Reference",
    "keywords": "Class LookUpTypeMapping LookUpType mapping Inheritance object MappingBaseClass<LookUpType, DefaultDatabase> LookUpTypeMapping Implements IMapping<LookUpType> IMapping Inherited Members MappingBaseClass<LookUpType, DefaultDatabase>.AddAutoKey() MappingBaseClass<LookUpType, DefaultDatabase>.ContainsProperty(string) MappingBaseClass<LookUpType, DefaultDatabase>.Copy(IMapping) MappingBaseClass<LookUpType, DefaultDatabase>.CopyProperty(IIDProperty) MappingBaseClass<LookUpType, DefaultDatabase>.CopyProperty(IProperty) MappingBaseClass<LookUpType, DefaultDatabase>.CopyProperty(IMapProperty) MappingBaseClass<LookUpType, DefaultDatabase>.CopyProperty(IManyToOneProperty) MappingBaseClass<LookUpType, DefaultDatabase>.CopyProperty(IManyToManyProperty) MappingBaseClass<LookUpType, DefaultDatabase>.Equals(object) MappingBaseClass<LookUpType, DefaultDatabase>.GetColumnName(string) MappingBaseClass<LookUpType, DefaultDatabase>.GetHashCode() MappingBaseClass<LookUpType, DefaultDatabase>.ID<TDataType>(Expression<Func<LookUpType, TDataType>>) MappingBaseClass<LookUpType, DefaultDatabase>.ManyToMany<TDataType>(Expression<Func<LookUpType, IList<TDataType>>>) MappingBaseClass<LookUpType, DefaultDatabase>.ManyToOne<TDataType>(Expression<Func<LookUpType, IList<TDataType>>>) MappingBaseClass<LookUpType, DefaultDatabase>.ManyToOne<TDataType>(Expression<Func<LookUpType, TDataType>>) MappingBaseClass<LookUpType, DefaultDatabase>.Map<TDataType>(Expression<Func<LookUpType, TDataType>>) MappingBaseClass<LookUpType, DefaultDatabase>.Reduce(ILogger) MappingBaseClass<LookUpType, DefaultDatabase>.Reduce(IMapping, ILogger) MappingBaseClass<LookUpType, DefaultDatabase>.Reference<TDataType>(Expression<Func<LookUpType, TDataType>>) MappingBaseClass<LookUpType, DefaultDatabase>.SetQuery(QueryType, string, CommandType, params IParameter[]) MappingBaseClass<LookUpType, DefaultDatabase>.Setup() MappingBaseClass<LookUpType, DefaultDatabase>.ToString() MappingBaseClass<LookUpType, DefaultDatabase>.AutoIDProperties MappingBaseClass<LookUpType, DefaultDatabase>.DatabaseConfigType MappingBaseClass<LookUpType, DefaultDatabase>.IDProperties MappingBaseClass<LookUpType, DefaultDatabase>.ManyToManyProperties MappingBaseClass<LookUpType, DefaultDatabase>.ManyToOneProperties MappingBaseClass<LookUpType, DefaultDatabase>.MapProperties MappingBaseClass<LookUpType, DefaultDatabase>.Merge MappingBaseClass<LookUpType, DefaultDatabase>.ObjectType MappingBaseClass<LookUpType, DefaultDatabase>.Order MappingBaseClass<LookUpType, DefaultDatabase>.Prefix MappingBaseClass<LookUpType, DefaultDatabase>.Queries MappingBaseClass<LookUpType, DefaultDatabase>.ReferenceProperties MappingBaseClass<LookUpType, DefaultDatabase>.SchemaName MappingBaseClass<LookUpType, DefaultDatabase>.Suffix MappingBaseClass<LookUpType, DefaultDatabase>.TableName object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Mithril.Data.Abstractions.Models.General.Mappings Assembly: Mithril.Data.dll Syntax public class LookUpTypeMapping : MappingBaseClass<LookUpType, DefaultDatabase>, IMapping<LookUpType>, IMapping Constructors | Improve this Doc View Source LookUpTypeMapping() Initializes a new instance of the LookUpTypeMapping class. Declaration public LookUpTypeMapping() See Also MappingBaseClass<TClassType, TDatabaseType> Implements IMapping<TClassType> IMapping Extension Methods ExpandoObjectExtensions.ConvertToExpando<TEntity>(TEntity?) GenericExtensions.When<TObject>(TObject, bool, Func<TObject, TObject>) See Also MappingBaseClass<TClassType, TDatabaseType>"
  },
  "api/Mithril.Data.Abstractions.Models.General.Mappings.html": {
    "href": "api/Mithril.Data.Abstractions.Models.General.Mappings.html",
    "title": "Namespace Mithril.Data.Abstractions.Models.General.Mappings | Mithril API Reference",
    "keywords": "Namespace Mithril.Data.Abstractions.Models.General.Mappings Classes ILookUpTypeMapping ILookUpType mapping LookUpTypeMapping LookUpType mapping"
  },
  "api/Mithril.Data.Abstractions.Services.IDataService.html": {
    "href": "api/Mithril.Data.Abstractions.Services.IDataService.html",
    "title": "Interface IDataService | Mithril API Reference",
    "keywords": "Interface IDataService Data service interface Namespace: Mithril.Data.Abstractions.Services Assembly: Mithril.Data.Abstractions.dll Syntax public interface IDataService Methods | Improve this Doc View Source DeleteAsync<TData>(ClaimsPrincipal?, params TData[]) Deletes the objects asynchronously. Declaration Task<int> DeleteAsync<TData>(ClaimsPrincipal? user, params TData[] data) where TData : class, IModel Parameters Type Name Description ClaimsPrincipal user The user. TData[] data The data. Returns Type Description Task<int> The number of objects updated. Type Parameters Name Description TData The type of the data. | Improve this Doc View Source QueryAsync<TData>(string, CommandType, string, params object[]) Runs a query and returns data of the specific type. Declaration Task<IEnumerable<TData>> QueryAsync<TData>(string query, CommandType commandType, string connection, params object[] parameters) where TData : class Parameters Type Name Description string query The query. CommandType commandType Type of the command. string connection The connection. object[] parameters The parameters. Returns Type Description Task<IEnumerable<TData>> The resulting data. Type Parameters Name Description TData The type of the data. | Improve this Doc View Source QueryDynamicAsync(string, CommandType, string, params object[]) Runs a dynamic query and returns the results. Declaration Task<IEnumerable<dynamic>> QueryDynamicAsync(string query, CommandType commandType, string connection, params object[] parameters) Parameters Type Name Description string query The query. CommandType commandType Type of the command. string connection The connection. object[] parameters The parameters. Returns Type Description Task<IEnumerable<dynamic>> The data resulting from the query. | Improve this Doc View Source QueryScalarAsync<TData>(string, CommandType, string, params object[]) Runs a scalar query and returns data of the specific type. Declaration Task<TData> QueryScalarAsync<TData>(string query, CommandType commandType, string connection, params object[] parameters) where TData : class Parameters Type Name Description string query The query. CommandType commandType Type of the command. string connection The connection. object[] parameters The parameters. Returns Type Description Task<TData> The resulting data. Type Parameters Name Description TData The type of the data. | Improve this Doc View Source Query<TData>() Creates a query used to get information. Declaration IQueryable<TData>? Query<TData>() where TData : class Returns Type Description IQueryable<TData> The IQueryable object. Type Parameters Name Description TData The type of the data. | Improve this Doc View Source SaveAsync<TData>(ClaimsPrincipal?, params TData?[]) Saves the object asynchronously. Declaration Task<int> SaveAsync<TData>(ClaimsPrincipal? user, params TData?[] data) where TData : class, IModel Parameters Type Name Description ClaimsPrincipal user The user. TData[] data The data. Returns Type Description Task<int> The number of objects updated. Type Parameters Name Description TData The type of the data. Extension Methods ExpandoObjectExtensions.ConvertToExpando<TEntity>(TEntity?) GenericExtensions.When<TObject>(TObject, bool, Func<TObject, TObject>)"
  },
  "api/Mithril.Data.Abstractions.Services.html": {
    "href": "api/Mithril.Data.Abstractions.Services.html",
    "title": "Namespace Mithril.Data.Abstractions.Services | Mithril API Reference",
    "keywords": "Namespace Mithril.Data.Abstractions.Services Interfaces IDataService Data service interface"
  },
  "api/Mithril.Data.Apm.QueryListener.html": {
    "href": "api/Mithril.Data.Apm.QueryListener.html",
    "title": "Class QueryListener | Mithril API Reference",
    "keywords": "Class QueryListener Query listener Inheritance object EventListener QueryListener Implements IDisposable IEventListener Inherited Members EventListener.DisableEvents(EventSource) EventListener.EnableEvents(EventSource, EventLevel) EventListener.EnableEvents(EventSource, EventLevel, EventKeywords) EventListener.EnableEvents(EventSource, EventLevel, EventKeywords, IDictionary<string, string>) EventListener.EventSourceIndex(EventSource) EventListener.EventSourceCreated EventListener.EventWritten object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Mithril.Data.Apm Assembly: Mithril.Data.dll Syntax public class QueryListener : EventListener, IDisposable, IEventListener Constructors | Improve this Doc View Source QueryListener(ILogger<QueryListener>?) Initializes a new instance of the QueryListener class. Declaration public QueryListener(ILogger<QueryListener>? logger) Parameters Type Name Description ILogger<QueryListener> logger The logger. See Also IEventListener EventListener Properties | Improve this Doc View Source Name Gets the name. Declaration public string Name { get; } Property Value Type Description string The name. See Also IEventListener EventListener Methods | Improve this Doc View Source Dispose() Releases unmanaged and - optionally - managed resources. Declaration public override void Dispose() Overrides EventListener.Dispose() See Also IEventListener EventListener | Improve this Doc View Source Dispose(bool) Releases unmanaged and - optionally - managed resources. Declaration protected virtual void Dispose(bool disposing) Parameters Type Name Description bool disposing true to release both managed and unmanaged resources; false to release only unmanaged resources. See Also IEventListener EventListener | Improve this Doc View Source ~QueryListener() Finalizes an instance of the QueryListener class. Declaration protected ~QueryListener() See Also IEventListener EventListener | Improve this Doc View Source OnEventSourceCreated(EventSource) Called for all existing event sources when the event listener is created and when a new event source is attached to the listener. Declaration protected override void OnEventSourceCreated(EventSource eventSource) Parameters Type Name Description EventSource eventSource The event source. Overrides EventListener.OnEventSourceCreated(EventSource) See Also IEventListener EventListener | Improve this Doc View Source OnEventWritten(EventWrittenEventArgs) Called whenever an event has been written by an event source for which the event listener has enabled events. Declaration protected override void OnEventWritten(EventWrittenEventArgs eventData) Parameters Type Name Description EventWrittenEventArgs eventData The event arguments that describe the event. Overrides EventListener.OnEventWritten(EventWrittenEventArgs) See Also IEventListener EventListener | Improve this Doc View Source Subscribe(IMetricsCollectorService) Notifies the provider that an observer is to receive notifications. Declaration public IEventListener Subscribe(IMetricsCollectorService observer) Parameters Type Name Description IMetricsCollectorService observer The object that is to receive notifications. Returns Type Description IEventListener A reference to an interface that allows observers to stop receiving notifications before the provider has finished sending them. See Also IEventListener EventListener Implements IDisposable IEventListener Extension Methods ExpandoObjectExtensions.ConvertToExpando<TEntity>(TEntity?) GenericExtensions.When<TObject>(TObject, bool, Func<TObject, TObject>) See Also IEventListener EventListener"
  },
  "api/Mithril.Data.Apm.QueryMetrics.html": {
    "href": "api/Mithril.Data.Apm.QueryMetrics.html",
    "title": "Class QueryMetrics | Mithril API Reference",
    "keywords": "Class QueryMetrics Query metrics data holder Inheritance object QueryMetrics Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Mithril.Data.Apm Assembly: Mithril.Data.dll Syntax public class QueryMetrics Properties | Improve this Doc View Source CommandText Gets or sets the command text. Declaration public string? CommandText { get; set; } Property Value Type Description string The command text. | Improve this Doc View Source DataSource Gets or sets the data source. Declaration public string? DataSource { get; set; } Property Value Type Description string The data source. | Improve this Doc View Source Database Gets or sets the database. Declaration public string? Database { get; set; } Property Value Type Description string The database. | Improve this Doc View Source ExceptionNumber Gets or sets the exception number. Declaration public int ExceptionNumber { get; set; } Property Value Type Description int The exception number. | Improve this Doc View Source ID Gets or sets the identifier. Declaration public int ID { get; set; } Property Value Type Description int The identifier. | Improve this Doc View Source StartTime Gets or sets the time taken in ms. Declaration public long StartTime { get; set; } Property Value Type Description long The time taken in ms. Extension Methods ExpandoObjectExtensions.ConvertToExpando<TEntity>(TEntity?) GenericExtensions.When<TObject>(TObject, bool, Func<TObject, TObject>)"
  },
  "api/Mithril.Data.Apm.html": {
    "href": "api/Mithril.Data.Apm.html",
    "title": "Namespace Mithril.Data.Apm | Mithril API Reference",
    "keywords": "Namespace Mithril.Data.Apm Classes QueryListener Query listener QueryMetrics Query metrics data holder"
  },
  "api/Mithril.Data.DataModule.html": {
    "href": "api/Mithril.Data.DataModule.html",
    "title": "Class DataModule | Mithril API Reference",
    "keywords": "Class DataModule Data module Inheritance object ModuleBaseClass<DataModule> DataModule Implements IEquatable<DataModule> IModule Inherited Members ModuleBaseClass<DataModule>.Category ModuleBaseClass<DataModule>.ContentPath ModuleBaseClass<DataModule>.Features ModuleBaseClass<DataModule>.ID ModuleBaseClass<DataModule>.LastModified ModuleBaseClass<DataModule>.Name ModuleBaseClass<DataModule>.Tags ModuleBaseClass<DataModule>.Version ModuleBaseClass<DataModule>.ConfigureApplication(IApplicationBuilder, IConfiguration, IHostEnvironment) ModuleBaseClass<DataModule>.ConfigureHostSettings(IHostBuilder, IConfiguration, IHostEnvironment) ModuleBaseClass<DataModule>.ConfigureLoggingSettings(ILoggingBuilder, IConfiguration, IHostEnvironment) ModuleBaseClass<DataModule>.ConfigureMVC(IMvcBuilder, IConfiguration, IHostEnvironment) ModuleBaseClass<DataModule>.ConfigureRoutes(IEndpointRouteBuilder, IConfiguration, IHostEnvironment) ModuleBaseClass<DataModule>.ConfigureWebHostSettings(IWebHostBuilder, IConfiguration, IHostEnvironment) ModuleBaseClass<DataModule>.Equals(object) ModuleBaseClass<DataModule>.Equals(DataModule) ModuleBaseClass<DataModule>.GetHashCode() ModuleBaseClass<DataModule>.OnStarted() ModuleBaseClass<DataModule>.OnStopped() ModuleBaseClass<DataModule>.OnStopping() object.Equals(object, object) object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Mithril.Data Assembly: Mithril.Data.dll Syntax public class DataModule : ModuleBaseClass<DataModule>, IEquatable<DataModule>, IModule Constructors | Improve this Doc View Source DataModule() Initializes a new instance of the DataModule class. Declaration public DataModule() See Also ModuleBaseClass<TModule> Properties | Improve this Doc View Source Order Gets the order that they are initialized in. Declaration public override int Order { get; protected set; } Property Value Type Description int The order that they are initialized in. Overrides ModuleBaseClass<DataModule>.Order See Also ModuleBaseClass<TModule> Methods | Improve this Doc View Source ConfigureServices(IServiceCollection?, IConfiguration?, IHostEnvironment?) Configures the services for the module. Declaration public override IServiceCollection? ConfigureServices(IServiceCollection? services, IConfiguration? configuration, IHostEnvironment? environment) Parameters Type Name Description IServiceCollection services The services collection. IConfiguration configuration The configuration. IHostEnvironment environment The environment. Returns Type Description IServiceCollection Overrides ModuleBaseClass<DataModule>.ConfigureServices(IServiceCollection, IConfiguration, IHostEnvironment) See Also ModuleBaseClass<TModule> | Improve this Doc View Source InitializeDataAsync(IDataService?, IServiceProvider?) Initializes the data. Declaration public override Task InitializeDataAsync(IDataService? dataService, IServiceProvider? services) Parameters Type Name Description IDataService dataService The data service. IServiceProvider services The services for the application. Returns Type Description Task The async task. Overrides ModuleBaseClass<DataModule>.InitializeDataAsync(IDataService, IServiceProvider) See Also ModuleBaseClass<TModule> Implements IEquatable<T> IModule Extension Methods ExpandoObjectExtensions.ConvertToExpando<TEntity>(TEntity?) GenericExtensions.When<TObject>(TObject, bool, Func<TObject, TObject>) See Also ModuleBaseClass<TModule>"
  },
  "api/Mithril.Data.HealthCheck.SqlConnectionHealthCheck.html": {
    "href": "api/Mithril.Data.HealthCheck.SqlConnectionHealthCheck.html",
    "title": "Class SqlConnectionHealthCheck | Mithril API Reference",
    "keywords": "Class SqlConnectionHealthCheck SQL Connection health check Inheritance object SqlConnectionHealthCheck Implements IHealthCheck Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Mithril.Data.HealthCheck Assembly: Mithril.Data.dll Syntax public class SqlConnectionHealthCheck : IHealthCheck Constructors | Improve this Doc View Source SqlConnectionHealthCheck(IConfiguration?) Initializes a new instance of the SqlConnectionHealthCheck class. Declaration public SqlConnectionHealthCheck(IConfiguration? configuration) Parameters Type Name Description IConfiguration configuration The configuration. See Also IHealthCheck Methods | Improve this Doc View Source CheckHealthAsync(HealthCheckContext, CancellationToken) Runs the health check, returning the status of the component being checked. Declaration public Task<HealthCheckResult> CheckHealthAsync(HealthCheckContext context, CancellationToken cancellationToken = default) Parameters Type Name Description HealthCheckContext context A context object associated with the current execution. CancellationToken cancellationToken A CancellationToken that can be used to cancel the health check. Returns Type Description Task<HealthCheckResult> A Task<TResult> that completes when the health check has finished, yielding the status of the component being checked. See Also IHealthCheck Implements IHealthCheck Extension Methods ExpandoObjectExtensions.ConvertToExpando<TEntity>(TEntity?) GenericExtensions.When<TObject>(TObject, bool, Func<TObject, TObject>) See Also IHealthCheck"
  },
  "api/Mithril.Data.HealthCheck.html": {
    "href": "api/Mithril.Data.HealthCheck.html",
    "title": "Namespace Mithril.Data.HealthCheck | Mithril API Reference",
    "keywords": "Namespace Mithril.Data.HealthCheck Classes SqlConnectionHealthCheck SQL Connection health check"
  },
  "api/Mithril.Data.Inflatable.Models.Contact.Mappings.ContactInfoMapping.html": {
    "href": "api/Mithril.Data.Inflatable.Models.Contact.Mappings.ContactInfoMapping.html",
    "title": "Class ContactInfoMapping | Mithril API Reference",
    "keywords": "Class ContactInfoMapping ContactInfo mapping Inheritance object MappingBaseClass<ContactInfo, DefaultDatabase> ContactInfoMapping Implements IMapping<ContactInfo> IMapping Inherited Members MappingBaseClass<ContactInfo, DefaultDatabase>.AddAutoKey() MappingBaseClass<ContactInfo, DefaultDatabase>.ContainsProperty(string) MappingBaseClass<ContactInfo, DefaultDatabase>.Copy(IMapping) MappingBaseClass<ContactInfo, DefaultDatabase>.CopyProperty(IIDProperty) MappingBaseClass<ContactInfo, DefaultDatabase>.CopyProperty(IProperty) MappingBaseClass<ContactInfo, DefaultDatabase>.CopyProperty(IMapProperty) MappingBaseClass<ContactInfo, DefaultDatabase>.CopyProperty(IManyToOneProperty) MappingBaseClass<ContactInfo, DefaultDatabase>.CopyProperty(IManyToManyProperty) MappingBaseClass<ContactInfo, DefaultDatabase>.Equals(object) MappingBaseClass<ContactInfo, DefaultDatabase>.GetColumnName(string) MappingBaseClass<ContactInfo, DefaultDatabase>.GetHashCode() MappingBaseClass<ContactInfo, DefaultDatabase>.ID<TDataType>(Expression<Func<ContactInfo, TDataType>>) MappingBaseClass<ContactInfo, DefaultDatabase>.ManyToMany<TDataType>(Expression<Func<ContactInfo, IList<TDataType>>>) MappingBaseClass<ContactInfo, DefaultDatabase>.ManyToOne<TDataType>(Expression<Func<ContactInfo, IList<TDataType>>>) MappingBaseClass<ContactInfo, DefaultDatabase>.ManyToOne<TDataType>(Expression<Func<ContactInfo, TDataType>>) MappingBaseClass<ContactInfo, DefaultDatabase>.Map<TDataType>(Expression<Func<ContactInfo, TDataType>>) MappingBaseClass<ContactInfo, DefaultDatabase>.Reduce(ILogger) MappingBaseClass<ContactInfo, DefaultDatabase>.Reduce(IMapping, ILogger) MappingBaseClass<ContactInfo, DefaultDatabase>.Reference<TDataType>(Expression<Func<ContactInfo, TDataType>>) MappingBaseClass<ContactInfo, DefaultDatabase>.SetQuery(QueryType, string, CommandType, params IParameter[]) MappingBaseClass<ContactInfo, DefaultDatabase>.Setup() MappingBaseClass<ContactInfo, DefaultDatabase>.ToString() MappingBaseClass<ContactInfo, DefaultDatabase>.AutoIDProperties MappingBaseClass<ContactInfo, DefaultDatabase>.DatabaseConfigType MappingBaseClass<ContactInfo, DefaultDatabase>.IDProperties MappingBaseClass<ContactInfo, DefaultDatabase>.ManyToManyProperties MappingBaseClass<ContactInfo, DefaultDatabase>.ManyToOneProperties MappingBaseClass<ContactInfo, DefaultDatabase>.MapProperties MappingBaseClass<ContactInfo, DefaultDatabase>.Merge MappingBaseClass<ContactInfo, DefaultDatabase>.ObjectType MappingBaseClass<ContactInfo, DefaultDatabase>.Order MappingBaseClass<ContactInfo, DefaultDatabase>.Prefix MappingBaseClass<ContactInfo, DefaultDatabase>.Queries MappingBaseClass<ContactInfo, DefaultDatabase>.ReferenceProperties MappingBaseClass<ContactInfo, DefaultDatabase>.SchemaName MappingBaseClass<ContactInfo, DefaultDatabase>.Suffix MappingBaseClass<ContactInfo, DefaultDatabase>.TableName object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Mithril.Data.Inflatable.Models.Contact.Mappings Assembly: Mithril.Data.dll Syntax public class ContactInfoMapping : MappingBaseClass<ContactInfo, DefaultDatabase>, IMapping<ContactInfo>, IMapping Constructors | Improve this Doc View Source ContactInfoMapping() Initializes a new instance of the ContactInfoMapping class. Declaration public ContactInfoMapping() See Also MappingBaseClass<TClassType, TDatabaseType> Implements IMapping<TClassType> IMapping Extension Methods ExpandoObjectExtensions.ConvertToExpando<TEntity>(TEntity?) GenericExtensions.When<TObject>(TObject, bool, Func<TObject, TObject>) See Also MappingBaseClass<TClassType, TDatabaseType>"
  },
  "api/Mithril.Data.Inflatable.Models.Contact.Mappings.html": {
    "href": "api/Mithril.Data.Inflatable.Models.Contact.Mappings.html",
    "title": "Namespace Mithril.Data.Inflatable.Models.Contact.Mappings | Mithril API Reference",
    "keywords": "Namespace Mithril.Data.Inflatable.Models.Contact.Mappings Classes ContactInfoMapping ContactInfo mapping"
  },
  "api/Mithril.Data.Inflatable.Models.General.Mappings.ILookUpMapping.html": {
    "href": "api/Mithril.Data.Inflatable.Models.General.Mappings.ILookUpMapping.html",
    "title": "Class ILookUpMapping | Mithril API Reference",
    "keywords": "Class ILookUpMapping ILookUp mapping Inheritance object MappingBaseClass<ILookUp, DefaultDatabase> ILookUpMapping Implements IMapping<ILookUp> IMapping Inherited Members MappingBaseClass<ILookUp, DefaultDatabase>.AddAutoKey() MappingBaseClass<ILookUp, DefaultDatabase>.ContainsProperty(string) MappingBaseClass<ILookUp, DefaultDatabase>.Copy(IMapping) MappingBaseClass<ILookUp, DefaultDatabase>.CopyProperty(IIDProperty) MappingBaseClass<ILookUp, DefaultDatabase>.CopyProperty(IProperty) MappingBaseClass<ILookUp, DefaultDatabase>.CopyProperty(IMapProperty) MappingBaseClass<ILookUp, DefaultDatabase>.CopyProperty(IManyToOneProperty) MappingBaseClass<ILookUp, DefaultDatabase>.CopyProperty(IManyToManyProperty) MappingBaseClass<ILookUp, DefaultDatabase>.Equals(object) MappingBaseClass<ILookUp, DefaultDatabase>.GetColumnName(string) MappingBaseClass<ILookUp, DefaultDatabase>.GetHashCode() MappingBaseClass<ILookUp, DefaultDatabase>.ID<TDataType>(Expression<Func<ILookUp, TDataType>>) MappingBaseClass<ILookUp, DefaultDatabase>.ManyToMany<TDataType>(Expression<Func<ILookUp, IList<TDataType>>>) MappingBaseClass<ILookUp, DefaultDatabase>.ManyToOne<TDataType>(Expression<Func<ILookUp, IList<TDataType>>>) MappingBaseClass<ILookUp, DefaultDatabase>.ManyToOne<TDataType>(Expression<Func<ILookUp, TDataType>>) MappingBaseClass<ILookUp, DefaultDatabase>.Map<TDataType>(Expression<Func<ILookUp, TDataType>>) MappingBaseClass<ILookUp, DefaultDatabase>.Reduce(ILogger) MappingBaseClass<ILookUp, DefaultDatabase>.Reduce(IMapping, ILogger) MappingBaseClass<ILookUp, DefaultDatabase>.Reference<TDataType>(Expression<Func<ILookUp, TDataType>>) MappingBaseClass<ILookUp, DefaultDatabase>.SetQuery(QueryType, string, CommandType, params IParameter[]) MappingBaseClass<ILookUp, DefaultDatabase>.Setup() MappingBaseClass<ILookUp, DefaultDatabase>.ToString() MappingBaseClass<ILookUp, DefaultDatabase>.AutoIDProperties MappingBaseClass<ILookUp, DefaultDatabase>.DatabaseConfigType MappingBaseClass<ILookUp, DefaultDatabase>.IDProperties MappingBaseClass<ILookUp, DefaultDatabase>.ManyToManyProperties MappingBaseClass<ILookUp, DefaultDatabase>.ManyToOneProperties MappingBaseClass<ILookUp, DefaultDatabase>.MapProperties MappingBaseClass<ILookUp, DefaultDatabase>.Merge MappingBaseClass<ILookUp, DefaultDatabase>.ObjectType MappingBaseClass<ILookUp, DefaultDatabase>.Order MappingBaseClass<ILookUp, DefaultDatabase>.Prefix MappingBaseClass<ILookUp, DefaultDatabase>.Queries MappingBaseClass<ILookUp, DefaultDatabase>.ReferenceProperties MappingBaseClass<ILookUp, DefaultDatabase>.SchemaName MappingBaseClass<ILookUp, DefaultDatabase>.Suffix MappingBaseClass<ILookUp, DefaultDatabase>.TableName object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Mithril.Data.Inflatable.Models.General.Mappings Assembly: Mithril.Data.dll Syntax public class ILookUpMapping : MappingBaseClass<ILookUp, DefaultDatabase>, IMapping<ILookUp>, IMapping Constructors | Improve this Doc View Source ILookUpMapping() Initializes a new instance of the ILookUpMapping class. Declaration public ILookUpMapping() See Also MappingBaseClass<TClassType, TDatabaseType> Implements IMapping<TClassType> IMapping Extension Methods ExpandoObjectExtensions.ConvertToExpando<TEntity>(TEntity?) GenericExtensions.When<TObject>(TObject, bool, Func<TObject, TObject>) See Also MappingBaseClass<TClassType, TDatabaseType>"
  },
  "api/Mithril.Data.Inflatable.Models.General.Mappings.LookUpMapping.html": {
    "href": "api/Mithril.Data.Inflatable.Models.General.Mappings.LookUpMapping.html",
    "title": "Class LookUpMapping | Mithril API Reference",
    "keywords": "Class LookUpMapping LookUp mapping Inheritance object MappingBaseClass<LookUp, DefaultDatabase> LookUpMapping Implements IMapping<LookUp> IMapping Inherited Members MappingBaseClass<LookUp, DefaultDatabase>.AddAutoKey() MappingBaseClass<LookUp, DefaultDatabase>.ContainsProperty(string) MappingBaseClass<LookUp, DefaultDatabase>.Copy(IMapping) MappingBaseClass<LookUp, DefaultDatabase>.CopyProperty(IIDProperty) MappingBaseClass<LookUp, DefaultDatabase>.CopyProperty(IProperty) MappingBaseClass<LookUp, DefaultDatabase>.CopyProperty(IMapProperty) MappingBaseClass<LookUp, DefaultDatabase>.CopyProperty(IManyToOneProperty) MappingBaseClass<LookUp, DefaultDatabase>.CopyProperty(IManyToManyProperty) MappingBaseClass<LookUp, DefaultDatabase>.Equals(object) MappingBaseClass<LookUp, DefaultDatabase>.GetColumnName(string) MappingBaseClass<LookUp, DefaultDatabase>.GetHashCode() MappingBaseClass<LookUp, DefaultDatabase>.ID<TDataType>(Expression<Func<LookUp, TDataType>>) MappingBaseClass<LookUp, DefaultDatabase>.ManyToMany<TDataType>(Expression<Func<LookUp, IList<TDataType>>>) MappingBaseClass<LookUp, DefaultDatabase>.ManyToOne<TDataType>(Expression<Func<LookUp, IList<TDataType>>>) MappingBaseClass<LookUp, DefaultDatabase>.ManyToOne<TDataType>(Expression<Func<LookUp, TDataType>>) MappingBaseClass<LookUp, DefaultDatabase>.Map<TDataType>(Expression<Func<LookUp, TDataType>>) MappingBaseClass<LookUp, DefaultDatabase>.Reduce(ILogger) MappingBaseClass<LookUp, DefaultDatabase>.Reduce(IMapping, ILogger) MappingBaseClass<LookUp, DefaultDatabase>.Reference<TDataType>(Expression<Func<LookUp, TDataType>>) MappingBaseClass<LookUp, DefaultDatabase>.SetQuery(QueryType, string, CommandType, params IParameter[]) MappingBaseClass<LookUp, DefaultDatabase>.Setup() MappingBaseClass<LookUp, DefaultDatabase>.ToString() MappingBaseClass<LookUp, DefaultDatabase>.AutoIDProperties MappingBaseClass<LookUp, DefaultDatabase>.DatabaseConfigType MappingBaseClass<LookUp, DefaultDatabase>.IDProperties MappingBaseClass<LookUp, DefaultDatabase>.ManyToManyProperties MappingBaseClass<LookUp, DefaultDatabase>.ManyToOneProperties MappingBaseClass<LookUp, DefaultDatabase>.MapProperties MappingBaseClass<LookUp, DefaultDatabase>.Merge MappingBaseClass<LookUp, DefaultDatabase>.ObjectType MappingBaseClass<LookUp, DefaultDatabase>.Order MappingBaseClass<LookUp, DefaultDatabase>.Prefix MappingBaseClass<LookUp, DefaultDatabase>.Queries MappingBaseClass<LookUp, DefaultDatabase>.ReferenceProperties MappingBaseClass<LookUp, DefaultDatabase>.SchemaName MappingBaseClass<LookUp, DefaultDatabase>.Suffix MappingBaseClass<LookUp, DefaultDatabase>.TableName object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Mithril.Data.Inflatable.Models.General.Mappings Assembly: Mithril.Data.dll Syntax public class LookUpMapping : MappingBaseClass<LookUp, DefaultDatabase>, IMapping<LookUp>, IMapping Constructors | Improve this Doc View Source LookUpMapping() Initializes a new instance of the LookUpMapping class. Declaration public LookUpMapping() See Also MappingBaseClass<TClassType, TDatabaseType> Implements IMapping<TClassType> IMapping Extension Methods ExpandoObjectExtensions.ConvertToExpando<TEntity>(TEntity?) GenericExtensions.When<TObject>(TObject, bool, Func<TObject, TObject>) See Also MappingBaseClass<TClassType, TDatabaseType>"
  },
  "api/Mithril.Data.Inflatable.Models.General.Mappings.html": {
    "href": "api/Mithril.Data.Inflatable.Models.General.Mappings.html",
    "title": "Namespace Mithril.Data.Inflatable.Models.General.Mappings | Mithril API Reference",
    "keywords": "Namespace Mithril.Data.Inflatable.Models.General.Mappings Classes ILookUpMapping ILookUp mapping LookUpMapping LookUp mapping"
  },
  "api/Mithril.Data.Models.Contact.ContactInfo.html": {
    "href": "api/Mithril.Data.Models.Contact.ContactInfo.html",
    "title": "Class ContactInfo | Mithril API Reference",
    "keywords": "Class ContactInfo Contact info Inheritance object ModelBase<ContactInfo> TypedModelBase<ContactInfo> ContactInfo Implements IModel<ContactInfo> IEquatable<IModel<ContactInfo>> IComparable IComparable<ContactInfo> IEquatable<ModelBase<ContactInfo>> ITypedModel IModel IEquatable<IModel> IEquatable<ITypedModel> IEquatable<TypedModelBase<ContactInfo>> IEquatable<ContactInfo> Inherited Members TypedModelBase<ContactInfo>.Type TypedModelBase<ContactInfo>.Equals(ITypedModel) TypedModelBase<ContactInfo>.Equals(TypedModelBase<ContactInfo>) TypedModelBase<ContactInfo>.OfType(params string[]) TypedModelBase<ContactInfo>.OfType(params ILookUp[]) ModelBase<ContactInfo>.Active ModelBase<ContactInfo>.Creator ModelBase<ContactInfo>.DateCreated ModelBase<ContactInfo>.DateModified ModelBase<ContactInfo>.ID ModelBase<ContactInfo>.Modifier ModelBase<ContactInfo>.TenantID ModelBase<ContactInfo>.All(IDataService) ModelBase<ContactInfo>.AllActive(IDataService) ModelBase<ContactInfo>.AllInactive(IDataService) ModelBase<ContactInfo>.Load(long, IDataService) ModelBase<ContactInfo>.Query(IDataService) ModelBase<ContactInfo>.CanBeModifiedBy(ClaimsPrincipal) ModelBase<ContactInfo>.CanBeViewedBy(ClaimsPrincipal) ModelBase<ContactInfo>.CompareTo(object) ModelBase<ContactInfo>.DeleteAsync(IDataService, ClaimsPrincipal, bool) ModelBase<ContactInfo>.Equals(IModel) ModelBase<ContactInfo>.Equals(IModel<ContactInfo>) ModelBase<ContactInfo>.Equals(ModelBase<ContactInfo>) ModelBase<ContactInfo>.SaveAsync(IDataService, ClaimsPrincipal) ModelBase<ContactInfo>.SetupObject(IDataService, ClaimsPrincipal) ModelBase<ContactInfo>.SetupObject(IDataService, IUser) ModelBase<ContactInfo>.SetupObjectAndReturn(IDataService, ClaimsPrincipal) object.Equals(object, object) object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Namespace: Mithril.Data.Models.Contact Assembly: Mithril.Data.dll Syntax public class ContactInfo : TypedModelBase<ContactInfo>, IModel<ContactInfo>, IEquatable<IModel<ContactInfo>>, IComparable, IComparable<ContactInfo>, IEquatable<ModelBase<ContactInfo>>, ITypedModel, IModel, IEquatable<IModel>, IEquatable<ITypedModel>, IEquatable<TypedModelBase<ContactInfo>>, IEquatable<ContactInfo> Constructors | Improve this Doc View Source ContactInfo() Initializes a new instance of the ContactInfo class. Declaration public ContactInfo() See Also TypedModelBase<TClass> IEquatable<T> | Improve this Doc View Source ContactInfo(string, ILookUp) Initializes a new instance of the ContactInfo class. Declaration public ContactInfo(string info, ILookUp type) Parameters Type Name Description string info The information. ILookUp type The type. Exceptions Type Condition ArgumentNullException type ArgumentException type See Also TypedModelBase<TClass> IEquatable<T> Properties | Improve this Doc View Source Info Gets or sets the information. Declaration [MaxLength(100)] public string? Info { get; set; } Property Value Type Description string The information. See Also TypedModelBase<TClass> IEquatable<T> Methods | Improve this Doc View Source CompareTo(ContactInfo?) Compares the object to another object Declaration public override int CompareTo(ContactInfo? other) Parameters Type Name Description ContactInfo other Object to compare to Returns Type Description int 0 if they are equal, -1 if this is smaller, 1 if it is larger Overrides TypedModelBase<ContactInfo>.CompareTo(ContactInfo) See Also TypedModelBase<TClass> IEquatable<T> | Improve this Doc View Source Equals(ContactInfo?) Indicates whether the current object is equal to another object of the same type. Declaration public bool Equals(ContactInfo? other) Parameters Type Name Description ContactInfo other An object to compare with this object. Returns Type Description bool true if the current object is equal to the other parameter; otherwise, false. See Also TypedModelBase<TClass> IEquatable<T> | Improve this Doc View Source Equals(object?) Determines whether the specified object, is equal to this instance. Declaration public override bool Equals(object? obj) Parameters Type Name Description object obj The object to compare with this instance. Returns Type Description bool true if the specified object is equal to this instance; otherwise, false. Overrides TypedModelBase<ContactInfo>.Equals(object) See Also TypedModelBase<TClass> IEquatable<T> | Improve this Doc View Source GetHashCode() Returns a hash code for this instance. Declaration public override int GetHashCode() Returns Type Description int A hash code for this instance, suitable for use in hashing algorithms and data structures like a hash table. Overrides Mithril.Data.Abstractions.BaseClasses.TypedModelBase<Mithril.Data.Models.Contact.ContactInfo>.GetHashCode() See Also TypedModelBase<TClass> IEquatable<T> | Improve this Doc View Source ToString() Returns a string that represents this instance. Declaration public override string ToString() Returns Type Description string A string that represents this instance. Overrides object.ToString() See Also TypedModelBase<TClass> IEquatable<T> Operators | Improve this Doc View Source operator ==(ContactInfo, ContactInfo) Implements the operator ==. Declaration public static bool operator ==(ContactInfo first, ContactInfo second) Parameters Type Name Description ContactInfo first The first. ContactInfo second The second. Returns Type Description bool The result of the operator. See Also TypedModelBase<TClass> IEquatable<T> | Improve this Doc View Source operator >(ContactInfo, ContactInfo) Implements the operator >. Declaration public static bool operator >(ContactInfo left, ContactInfo right) Parameters Type Name Description ContactInfo left The left. ContactInfo right The right. Returns Type Description bool The result of the operator. See Also TypedModelBase<TClass> IEquatable<T> | Improve this Doc View Source operator >=(ContactInfo, ContactInfo) Implements the operator >=. Declaration public static bool operator >=(ContactInfo left, ContactInfo right) Parameters Type Name Description ContactInfo left The left. ContactInfo right The right. Returns Type Description bool The result of the operator. See Also TypedModelBase<TClass> IEquatable<T> | Improve this Doc View Source operator !=(ContactInfo, ContactInfo) Implements the operator !=. Declaration public static bool operator !=(ContactInfo left, ContactInfo right) Parameters Type Name Description ContactInfo left The left. ContactInfo right The right. Returns Type Description bool The result of the operator. See Also TypedModelBase<TClass> IEquatable<T> | Improve this Doc View Source operator <(ContactInfo, ContactInfo) Implements the operator <. Declaration public static bool operator <(ContactInfo left, ContactInfo right) Parameters Type Name Description ContactInfo left The left. ContactInfo right The right. Returns Type Description bool The result of the operator. See Also TypedModelBase<TClass> IEquatable<T> | Improve this Doc View Source operator <=(ContactInfo, ContactInfo) Implements the operator <=. Declaration public static bool operator <=(ContactInfo left, ContactInfo right) Parameters Type Name Description ContactInfo left The left. ContactInfo right The right. Returns Type Description bool The result of the operator. See Also TypedModelBase<TClass> IEquatable<T> Implements IModel<TClass> IEquatable<T> IComparable IComparable<T> IEquatable<T> ITypedModel IModel IEquatable<T> IEquatable<T> IEquatable<T> IEquatable<T> Extension Methods ExpandoObjectExtensions.ConvertToExpando<TEntity>(TEntity?) GenericExtensions.When<TObject>(TObject, bool, Func<TObject, TObject>) See Also TypedModelBase<TClass> IEquatable<T>"
  },
  "api/Mithril.Data.Models.Contact.html": {
    "href": "api/Mithril.Data.Models.Contact.html",
    "title": "Namespace Mithril.Data.Models.Contact | Mithril API Reference",
    "keywords": "Namespace Mithril.Data.Models.Contact Classes ContactInfo Contact info"
  },
  "api/Mithril.Data.Models.General.LookUp.html": {
    "href": "api/Mithril.Data.Models.General.LookUp.html",
    "title": "Class LookUp | Mithril API Reference",
    "keywords": "Class LookUp LookUp Class Inheritance object ModelBase<LookUp> LookUp Implements IModel<LookUp> IEquatable<IModel<LookUp>> IComparable IComparable<LookUp> IEquatable<ModelBase<LookUp>> IEquatable<LookUp> ILookUp IModel IEquatable<IModel> IEquatable<ILookUp> Inherited Members ModelBase<LookUp>.Active ModelBase<LookUp>.Creator ModelBase<LookUp>.DateCreated ModelBase<LookUp>.DateModified ModelBase<LookUp>.ID ModelBase<LookUp>.Modifier ModelBase<LookUp>.TenantID ModelBase<LookUp>.All(IDataService) ModelBase<LookUp>.AllActive(IDataService) ModelBase<LookUp>.AllInactive(IDataService) ModelBase<LookUp>.Load(long, IDataService) ModelBase<LookUp>.Query(IDataService) ModelBase<LookUp>.CanBeModifiedBy(ClaimsPrincipal) ModelBase<LookUp>.CanBeViewedBy(ClaimsPrincipal) ModelBase<LookUp>.CompareTo(object) ModelBase<LookUp>.DeleteAsync(IDataService, ClaimsPrincipal, bool) ModelBase<LookUp>.Equals(IModel) ModelBase<LookUp>.Equals(IModel<LookUp>) ModelBase<LookUp>.Equals(ModelBase<LookUp>) ModelBase<LookUp>.SaveAsync(IDataService, ClaimsPrincipal) ModelBase<LookUp>.SetupObject(IDataService, ClaimsPrincipal) ModelBase<LookUp>.SetupObject(IDataService, IUser) ModelBase<LookUp>.SetupObjectAndReturn(IDataService, ClaimsPrincipal) object.Equals(object, object) object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Namespace: Mithril.Data.Models.General Assembly: Mithril.Data.dll Syntax public class LookUp : ModelBase<LookUp>, IModel<LookUp>, IEquatable<IModel<LookUp>>, IComparable, IComparable<LookUp>, IEquatable<ModelBase<LookUp>>, IEquatable<LookUp>, ILookUp, IModel, IEquatable<IModel>, IEquatable<ILookUp> Constructors | Improve this Doc View Source LookUp() Initializes a new instance of the LookUp class. Declaration public LookUp() See Also ModelBase<TClass> | Improve this Doc View Source LookUp(string, string, ILookUpType) Initializes a new instance of the LookUp class. Declaration public LookUp(string displayName, string icon, ILookUpType type) Parameters Type Name Description string displayName The display name. string icon The icon. ILookUpType type The type. Exceptions Type Condition ArgumentNullException displayName or icon or type ArgumentException displayName or icon See Also ModelBase<TClass> Properties | Improve this Doc View Source DisplayName Display name Declaration [MaxLength(64)] [Required] public string? DisplayName { get; set; } Property Value Type Description string See Also ModelBase<TClass> | Improve this Doc View Source Icon Gets or sets the icon. Declaration [MaxLength(64)] public string? Icon { get; set; } Property Value Type Description string The icon. See Also ModelBase<TClass> | Improve this Doc View Source Type Gets or sets the type. Declaration public virtual ILookUpType? Type { get; set; } Property Value Type Description ILookUpType The type. See Also ModelBase<TClass> Methods | Improve this Doc View Source CompareTo(LookUp?) Compares the object to another object Declaration public override int CompareTo(LookUp? other) Parameters Type Name Description LookUp other Object to compare to Returns Type Description int 0 if they are equal, -1 if this is smaller, 1 if it is larger Overrides ModelBase<LookUp>.CompareTo(LookUp) See Also ModelBase<TClass> | Improve this Doc View Source Equals(ILookUp?) Indicates whether the current object is equal to another object of the same type. Declaration public bool Equals(ILookUp? other) Parameters Type Name Description ILookUp other An object to compare with this object. Returns Type Description bool true if the current object is equal to the other parameter; otherwise, false. See Also ModelBase<TClass> | Improve this Doc View Source Equals(LookUp?) Indicates whether the current object is equal to another object of the same type. Declaration public bool Equals(LookUp? other) Parameters Type Name Description LookUp other An object to compare with this object. Returns Type Description bool true if the current object is equal to the other parameter; otherwise, false. See Also ModelBase<TClass> | Improve this Doc View Source Equals(object?) Determines whether the specified object, is equal to this instance. Declaration public override bool Equals(object? obj) Parameters Type Name Description object obj The object to compare with this instance. Returns Type Description bool true if the specified object is equal to this instance; otherwise, false. Overrides ModelBase<LookUp>.Equals(object) See Also ModelBase<TClass> | Improve this Doc View Source GetHashCode() Returns a hash code for this instance. Declaration public override int GetHashCode() Returns Type Description int A hash code for this instance, suitable for use in hashing algorithms and data structures like a hash table. Overrides Mithril.Data.Abstractions.BaseClasses.ModelBase<Mithril.Data.Models.General.LookUp>.GetHashCode() See Also ModelBase<TClass> | Improve this Doc View Source Load(string, LookUpTypeEnum, IDataService?) Loads the specified LookUp based on the display name. Declaration public static ILookUp? Load(string displayName, LookUpTypeEnum type, IDataService? context) Parameters Type Name Description string displayName The display name. LookUpTypeEnum type The type. IDataService context The context. Returns Type Description ILookUp The lookup specified. See Also ModelBase<TClass> | Improve this Doc View Source LoadOrCreateAsync(string, LookUpTypeEnum, string, IDataService?, ClaimsPrincipal?) Loads the LookUp based on the display name and look up type specified or creates it if it doesn't exist. Declaration public static Task<ILookUp> LoadOrCreateAsync(string displayName, LookUpTypeEnum type, string icon, IDataService? dataService, ClaimsPrincipal? user) Parameters Type Name Description string displayName Display name specified LookUpTypeEnum type Lookup type specified string icon The icon. IDataService dataService The data service. ClaimsPrincipal user The user. Returns Type Description Task<ILookUp> LookUp associated with the display name See Also ModelBase<TClass> | Improve this Doc View Source ToString() Returns a string that represents this instance. Declaration public override string ToString() Returns Type Description string A string that represents this instance. Overrides object.ToString() See Also ModelBase<TClass> Operators | Improve this Doc View Source operator ==(LookUp?, LookUp?) Implements the operator ==. Declaration public static bool operator ==(LookUp? first, LookUp? second) Parameters Type Name Description LookUp first The first. LookUp second The second. Returns Type Description bool The result of the operator. See Also ModelBase<TClass> | Improve this Doc View Source operator >(LookUp?, LookUp?) Implements the operator >. Declaration public static bool operator >(LookUp? left, LookUp? right) Parameters Type Name Description LookUp left The left. LookUp right The right. Returns Type Description bool The result of the operator. See Also ModelBase<TClass> | Improve this Doc View Source operator >=(LookUp?, LookUp?) Implements the operator >=. Declaration public static bool operator >=(LookUp? left, LookUp? right) Parameters Type Name Description LookUp left The left. LookUp right The right. Returns Type Description bool The result of the operator. See Also ModelBase<TClass> | Improve this Doc View Source operator !=(LookUp?, LookUp?) Implements the operator !=. Declaration public static bool operator !=(LookUp? left, LookUp? right) Parameters Type Name Description LookUp left The left. LookUp right The right. Returns Type Description bool The result of the operator. See Also ModelBase<TClass> | Improve this Doc View Source operator <(LookUp?, LookUp?) Implements the operator <. Declaration public static bool operator <(LookUp? left, LookUp? right) Parameters Type Name Description LookUp left The left. LookUp right The right. Returns Type Description bool The result of the operator. See Also ModelBase<TClass> | Improve this Doc View Source operator <=(LookUp?, LookUp?) Implements the operator <=. Declaration public static bool operator <=(LookUp? left, LookUp? right) Parameters Type Name Description LookUp left The left. LookUp right The right. Returns Type Description bool The result of the operator. See Also ModelBase<TClass> Implements IModel<TClass> IEquatable<T> IComparable IComparable<T> IEquatable<T> IEquatable<T> ILookUp IModel IEquatable<T> IEquatable<T> Extension Methods ExpandoObjectExtensions.ConvertToExpando<TEntity>(TEntity?) GenericExtensions.When<TObject>(TObject, bool, Func<TObject, TObject>) See Also ModelBase<TClass>"
  },
  "api/Mithril.Data.Models.General.LookUpType.html": {
    "href": "api/Mithril.Data.Models.General.LookUpType.html",
    "title": "Class LookUpType | Mithril API Reference",
    "keywords": "Class LookUpType LookUpType object Inheritance object ModelBase<LookUpType> LookUpType Implements IModel<LookUpType> IEquatable<IModel<LookUpType>> IComparable IComparable<LookUpType> IEquatable<ModelBase<LookUpType>> IEquatable<LookUpType> ILookUpType IModel IEquatable<IModel> IEquatable<ILookUpType> Inherited Members ModelBase<LookUpType>.Active ModelBase<LookUpType>.Creator ModelBase<LookUpType>.DateCreated ModelBase<LookUpType>.DateModified ModelBase<LookUpType>.ID ModelBase<LookUpType>.Modifier ModelBase<LookUpType>.TenantID ModelBase<LookUpType>.All(IDataService) ModelBase<LookUpType>.AllActive(IDataService) ModelBase<LookUpType>.AllInactive(IDataService) ModelBase<LookUpType>.Load(long, IDataService) ModelBase<LookUpType>.Query(IDataService) ModelBase<LookUpType>.CanBeModifiedBy(ClaimsPrincipal) ModelBase<LookUpType>.CanBeViewedBy(ClaimsPrincipal) ModelBase<LookUpType>.CompareTo(object) ModelBase<LookUpType>.DeleteAsync(IDataService, ClaimsPrincipal, bool) ModelBase<LookUpType>.Equals(IModel) ModelBase<LookUpType>.Equals(IModel<LookUpType>) ModelBase<LookUpType>.Equals(ModelBase<LookUpType>) ModelBase<LookUpType>.SaveAsync(IDataService, ClaimsPrincipal) ModelBase<LookUpType>.SetupObject(IDataService, ClaimsPrincipal) ModelBase<LookUpType>.SetupObject(IDataService, IUser) ModelBase<LookUpType>.SetupObjectAndReturn(IDataService, ClaimsPrincipal) object.Equals(object, object) object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Namespace: Mithril.Data.Models.General Assembly: Mithril.Data.dll Syntax public class LookUpType : ModelBase<LookUpType>, IModel<LookUpType>, IEquatable<IModel<LookUpType>>, IComparable, IComparable<LookUpType>, IEquatable<ModelBase<LookUpType>>, IEquatable<LookUpType>, ILookUpType, IModel, IEquatable<IModel>, IEquatable<ILookUpType> Constructors | Improve this Doc View Source LookUpType() Initializes a new instance of the LookUpType class. Declaration public LookUpType() See Also ModelBase<TClass> | Improve this Doc View Source LookUpType(string, string) Initializes a new instance of the LookUpType class. Declaration public LookUpType(string displayName, string description) Parameters Type Name Description string displayName The display name. string description The description. Exceptions Type Condition ArgumentNullException displayName ArgumentException displayName or description See Also ModelBase<TClass> Properties | Improve this Doc View Source Description Gets or sets the description. Declaration [MaxLength(500)] public string? Description { get; set; } Property Value Type Description string The description. See Also ModelBase<TClass> | Improve this Doc View Source DisplayName Gets or sets the display name. Declaration [MaxLength(64)] public string? DisplayName { get; set; } Property Value Type Description string The display name. See Also ModelBase<TClass> | Improve this Doc View Source LookUps Gets or sets the look ups. Declaration public virtual IList<ILookUp> LookUps { get; set; } Property Value Type Description IList<ILookUp> The look ups. See Also ModelBase<TClass> Methods | Improve this Doc View Source CompareTo(LookUpType?) Compares the object to another object Declaration public override int CompareTo(LookUpType? other) Parameters Type Name Description LookUpType other Object to compare to Returns Type Description int 0 if they are equal, -1 if this is smaller, 1 if it is larger Overrides ModelBase<LookUpType>.CompareTo(LookUpType) See Also ModelBase<TClass> | Improve this Doc View Source Equals(ILookUpType?) Indicates whether the current object is equal to another object of the same type. Declaration public bool Equals(ILookUpType? other) Parameters Type Name Description ILookUpType other An object to compare with this object. Returns Type Description bool true if the current object is equal to the other parameter; otherwise, false. See Also ModelBase<TClass> | Improve this Doc View Source Equals(LookUpType?) Indicates whether the current object is equal to another object of the same type. Declaration public bool Equals(LookUpType? other) Parameters Type Name Description LookUpType other An object to compare with this object. Returns Type Description bool true if the current object is equal to the other parameter; otherwise, false. See Also ModelBase<TClass> | Improve this Doc View Source Equals(object?) Determines whether the specified object, is equal to this instance. Declaration public override bool Equals(object? obj) Parameters Type Name Description object obj The object to compare with this instance. Returns Type Description bool true if the specified object is equal to this instance; otherwise, false. Overrides ModelBase<LookUpType>.Equals(object) See Also ModelBase<TClass> | Improve this Doc View Source GetHashCode() Returns a hash code for this instance. Declaration public override int GetHashCode() Returns Type Description int A hash code for this instance, suitable for use in hashing algorithms and data structures like a hash table. Overrides Mithril.Data.Abstractions.BaseClasses.ModelBase<Mithril.Data.Models.General.LookUpType>.GetHashCode() See Also ModelBase<TClass> | Improve this Doc View Source Load(LookUpTypeEnum, IDataService?) Loads the specified LookUpType based on the display name. Declaration public static LookUpType? Load(LookUpTypeEnum displayName, IDataService? dataService) Parameters Type Name Description LookUpTypeEnum displayName The display name. IDataService dataService The data service. Returns Type Description LookUpType The LookUpType specified. See Also ModelBase<TClass> | Improve this Doc View Source LoadOrCreateAsync(LookUpTypeEnum, string, IDataService?, ClaimsPrincipal?) Loads the or create. Declaration public static Task<LookUpType> LoadOrCreateAsync(LookUpTypeEnum displayName, string description, IDataService? dataService, ClaimsPrincipal? user) Parameters Type Name Description LookUpTypeEnum displayName The display name. string description The description. IDataService dataService The data service. ClaimsPrincipal user The user. Returns Type Description Task<LookUpType> The LookUpType See Also ModelBase<TClass> | Improve this Doc View Source ToString() Returns a string that represents this instance. Declaration public override string ToString() Returns Type Description string A string that represents this instance. Overrides object.ToString() See Also ModelBase<TClass> Operators | Improve this Doc View Source operator ==(LookUpType?, LookUpType?) Implements the operator ==. Declaration public static bool operator ==(LookUpType? first, LookUpType? second) Parameters Type Name Description LookUpType first The first. LookUpType second The second. Returns Type Description bool The result of the operator. See Also ModelBase<TClass> | Improve this Doc View Source operator >(LookUpType?, LookUpType?) Implements the operator >. Declaration public static bool operator >(LookUpType? left, LookUpType? right) Parameters Type Name Description LookUpType left The left. LookUpType right The right. Returns Type Description bool The result of the operator. See Also ModelBase<TClass> | Improve this Doc View Source operator >=(LookUpType?, LookUpType?) Implements the operator >=. Declaration public static bool operator >=(LookUpType? left, LookUpType? right) Parameters Type Name Description LookUpType left The left. LookUpType right The right. Returns Type Description bool The result of the operator. See Also ModelBase<TClass> | Improve this Doc View Source operator !=(LookUpType?, LookUpType?) Implements the operator !=. Declaration public static bool operator !=(LookUpType? left, LookUpType? right) Parameters Type Name Description LookUpType left The left. LookUpType right The right. Returns Type Description bool The result of the operator. See Also ModelBase<TClass> | Improve this Doc View Source operator <(LookUpType?, LookUpType?) Implements the operator <. Declaration public static bool operator <(LookUpType? left, LookUpType? right) Parameters Type Name Description LookUpType left The left. LookUpType right The right. Returns Type Description bool The result of the operator. See Also ModelBase<TClass> | Improve this Doc View Source operator <=(LookUpType?, LookUpType?) Implements the operator <=. Declaration public static bool operator <=(LookUpType? left, LookUpType? right) Parameters Type Name Description LookUpType left The left. LookUpType right The right. Returns Type Description bool The result of the operator. See Also ModelBase<TClass> Implements IModel<TClass> IEquatable<T> IComparable IComparable<T> IEquatable<T> IEquatable<T> ILookUpType IModel IEquatable<T> IEquatable<T> Extension Methods ExpandoObjectExtensions.ConvertToExpando<TEntity>(TEntity?) GenericExtensions.When<TObject>(TObject, bool, Func<TObject, TObject>) See Also ModelBase<TClass>"
  },
  "api/Mithril.Data.Models.General.html": {
    "href": "api/Mithril.Data.Models.General.html",
    "title": "Namespace Mithril.Data.Models.General | Mithril API Reference",
    "keywords": "Namespace Mithril.Data.Models.General Classes LookUp LookUp Class LookUpType LookUpType object"
  },
  "api/Mithril.Data.Models.Mappings.IIndexedModelMapping.html": {
    "href": "api/Mithril.Data.Models.Mappings.IIndexedModelMapping.html",
    "title": "Class IIndexedModelMapping | Mithril API Reference",
    "keywords": "Class IIndexedModelMapping IIndexedModel mapping Inheritance object MappingBaseClass<IIndexedModel, DefaultDatabase> IIndexedModelMapping Implements IMapping<IIndexedModel> IMapping Inherited Members MappingBaseClass<IIndexedModel, DefaultDatabase>.AddAutoKey() MappingBaseClass<IIndexedModel, DefaultDatabase>.ContainsProperty(string) MappingBaseClass<IIndexedModel, DefaultDatabase>.Copy(IMapping) MappingBaseClass<IIndexedModel, DefaultDatabase>.CopyProperty(IIDProperty) MappingBaseClass<IIndexedModel, DefaultDatabase>.CopyProperty(IProperty) MappingBaseClass<IIndexedModel, DefaultDatabase>.CopyProperty(IMapProperty) MappingBaseClass<IIndexedModel, DefaultDatabase>.CopyProperty(IManyToOneProperty) MappingBaseClass<IIndexedModel, DefaultDatabase>.CopyProperty(IManyToManyProperty) MappingBaseClass<IIndexedModel, DefaultDatabase>.Equals(object) MappingBaseClass<IIndexedModel, DefaultDatabase>.GetColumnName(string) MappingBaseClass<IIndexedModel, DefaultDatabase>.GetHashCode() MappingBaseClass<IIndexedModel, DefaultDatabase>.ID<TDataType>(Expression<Func<IIndexedModel, TDataType>>) MappingBaseClass<IIndexedModel, DefaultDatabase>.ManyToMany<TDataType>(Expression<Func<IIndexedModel, IList<TDataType>>>) MappingBaseClass<IIndexedModel, DefaultDatabase>.ManyToOne<TDataType>(Expression<Func<IIndexedModel, IList<TDataType>>>) MappingBaseClass<IIndexedModel, DefaultDatabase>.ManyToOne<TDataType>(Expression<Func<IIndexedModel, TDataType>>) MappingBaseClass<IIndexedModel, DefaultDatabase>.Map<TDataType>(Expression<Func<IIndexedModel, TDataType>>) MappingBaseClass<IIndexedModel, DefaultDatabase>.Reduce(ILogger) MappingBaseClass<IIndexedModel, DefaultDatabase>.Reduce(IMapping, ILogger) MappingBaseClass<IIndexedModel, DefaultDatabase>.Reference<TDataType>(Expression<Func<IIndexedModel, TDataType>>) MappingBaseClass<IIndexedModel, DefaultDatabase>.SetQuery(QueryType, string, CommandType, params IParameter[]) MappingBaseClass<IIndexedModel, DefaultDatabase>.Setup() MappingBaseClass<IIndexedModel, DefaultDatabase>.ToString() MappingBaseClass<IIndexedModel, DefaultDatabase>.AutoIDProperties MappingBaseClass<IIndexedModel, DefaultDatabase>.DatabaseConfigType MappingBaseClass<IIndexedModel, DefaultDatabase>.IDProperties MappingBaseClass<IIndexedModel, DefaultDatabase>.ManyToManyProperties MappingBaseClass<IIndexedModel, DefaultDatabase>.ManyToOneProperties MappingBaseClass<IIndexedModel, DefaultDatabase>.MapProperties MappingBaseClass<IIndexedModel, DefaultDatabase>.Merge MappingBaseClass<IIndexedModel, DefaultDatabase>.ObjectType MappingBaseClass<IIndexedModel, DefaultDatabase>.Order MappingBaseClass<IIndexedModel, DefaultDatabase>.Prefix MappingBaseClass<IIndexedModel, DefaultDatabase>.Queries MappingBaseClass<IIndexedModel, DefaultDatabase>.ReferenceProperties MappingBaseClass<IIndexedModel, DefaultDatabase>.SchemaName MappingBaseClass<IIndexedModel, DefaultDatabase>.Suffix MappingBaseClass<IIndexedModel, DefaultDatabase>.TableName object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Mithril.Data.Models.Mappings Assembly: Mithril.Data.dll Syntax public class IIndexedModelMapping : MappingBaseClass<IIndexedModel, DefaultDatabase>, IMapping<IIndexedModel>, IMapping Constructors | Improve this Doc View Source IIndexedModelMapping() Initializes a new instance of the IIndexedModelMapping class. Declaration public IIndexedModelMapping() See Also MappingBaseClass<TClassType, TDatabaseType> Implements IMapping<TClassType> IMapping Extension Methods ExpandoObjectExtensions.ConvertToExpando<TEntity>(TEntity?) GenericExtensions.When<TObject>(TObject, bool, Func<TObject, TObject>) See Also MappingBaseClass<TClassType, TDatabaseType>"
  },
  "api/Mithril.Data.Models.Mappings.IModelMapping.html": {
    "href": "api/Mithril.Data.Models.Mappings.IModelMapping.html",
    "title": "Class IModelMapping | Mithril API Reference",
    "keywords": "Class IModelMapping IModel mapping Inheritance object MappingBaseClass<IModel, DefaultDatabase> IModelMapping Implements IMapping<IModel> IMapping Inherited Members MappingBaseClass<IModel, DefaultDatabase>.AddAutoKey() MappingBaseClass<IModel, DefaultDatabase>.ContainsProperty(string) MappingBaseClass<IModel, DefaultDatabase>.Copy(IMapping) MappingBaseClass<IModel, DefaultDatabase>.CopyProperty(IIDProperty) MappingBaseClass<IModel, DefaultDatabase>.CopyProperty(IProperty) MappingBaseClass<IModel, DefaultDatabase>.CopyProperty(IMapProperty) MappingBaseClass<IModel, DefaultDatabase>.CopyProperty(IManyToOneProperty) MappingBaseClass<IModel, DefaultDatabase>.CopyProperty(IManyToManyProperty) MappingBaseClass<IModel, DefaultDatabase>.Equals(object) MappingBaseClass<IModel, DefaultDatabase>.GetColumnName(string) MappingBaseClass<IModel, DefaultDatabase>.GetHashCode() MappingBaseClass<IModel, DefaultDatabase>.ID<TDataType>(Expression<Func<IModel, TDataType>>) MappingBaseClass<IModel, DefaultDatabase>.ManyToMany<TDataType>(Expression<Func<IModel, IList<TDataType>>>) MappingBaseClass<IModel, DefaultDatabase>.ManyToOne<TDataType>(Expression<Func<IModel, IList<TDataType>>>) MappingBaseClass<IModel, DefaultDatabase>.ManyToOne<TDataType>(Expression<Func<IModel, TDataType>>) MappingBaseClass<IModel, DefaultDatabase>.Map<TDataType>(Expression<Func<IModel, TDataType>>) MappingBaseClass<IModel, DefaultDatabase>.Reduce(ILogger) MappingBaseClass<IModel, DefaultDatabase>.Reduce(IMapping, ILogger) MappingBaseClass<IModel, DefaultDatabase>.Reference<TDataType>(Expression<Func<IModel, TDataType>>) MappingBaseClass<IModel, DefaultDatabase>.SetQuery(QueryType, string, CommandType, params IParameter[]) MappingBaseClass<IModel, DefaultDatabase>.Setup() MappingBaseClass<IModel, DefaultDatabase>.ToString() MappingBaseClass<IModel, DefaultDatabase>.AutoIDProperties MappingBaseClass<IModel, DefaultDatabase>.DatabaseConfigType MappingBaseClass<IModel, DefaultDatabase>.IDProperties MappingBaseClass<IModel, DefaultDatabase>.ManyToManyProperties MappingBaseClass<IModel, DefaultDatabase>.ManyToOneProperties MappingBaseClass<IModel, DefaultDatabase>.MapProperties MappingBaseClass<IModel, DefaultDatabase>.Merge MappingBaseClass<IModel, DefaultDatabase>.ObjectType MappingBaseClass<IModel, DefaultDatabase>.Order MappingBaseClass<IModel, DefaultDatabase>.Prefix MappingBaseClass<IModel, DefaultDatabase>.Queries MappingBaseClass<IModel, DefaultDatabase>.ReferenceProperties MappingBaseClass<IModel, DefaultDatabase>.SchemaName MappingBaseClass<IModel, DefaultDatabase>.Suffix MappingBaseClass<IModel, DefaultDatabase>.TableName object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Mithril.Data.Models.Mappings Assembly: Mithril.Data.dll Syntax public class IModelMapping : MappingBaseClass<IModel, DefaultDatabase>, IMapping<IModel>, IMapping Constructors | Improve this Doc View Source IModelMapping() Initializes a new instance of the IModelMapping class. Declaration public IModelMapping() See Also MappingBaseClass<TClassType, TDatabaseType> Implements IMapping<TClassType> IMapping Extension Methods ExpandoObjectExtensions.ConvertToExpando<TEntity>(TEntity?) GenericExtensions.When<TObject>(TObject, bool, Func<TObject, TObject>) See Also MappingBaseClass<TClassType, TDatabaseType>"
  },
  "api/Mithril.Data.Models.Mappings.ITypedModelMapping.html": {
    "href": "api/Mithril.Data.Models.Mappings.ITypedModelMapping.html",
    "title": "Class ITypedModelMapping | Mithril API Reference",
    "keywords": "Class ITypedModelMapping Typed model mapping Inheritance object MappingBaseClass<ITypedModel, DefaultDatabase> ITypedModelMapping Implements IMapping<ITypedModel> IMapping Inherited Members MappingBaseClass<ITypedModel, DefaultDatabase>.AddAutoKey() MappingBaseClass<ITypedModel, DefaultDatabase>.ContainsProperty(string) MappingBaseClass<ITypedModel, DefaultDatabase>.Copy(IMapping) MappingBaseClass<ITypedModel, DefaultDatabase>.CopyProperty(IIDProperty) MappingBaseClass<ITypedModel, DefaultDatabase>.CopyProperty(IProperty) MappingBaseClass<ITypedModel, DefaultDatabase>.CopyProperty(IMapProperty) MappingBaseClass<ITypedModel, DefaultDatabase>.CopyProperty(IManyToOneProperty) MappingBaseClass<ITypedModel, DefaultDatabase>.CopyProperty(IManyToManyProperty) MappingBaseClass<ITypedModel, DefaultDatabase>.Equals(object) MappingBaseClass<ITypedModel, DefaultDatabase>.GetColumnName(string) MappingBaseClass<ITypedModel, DefaultDatabase>.GetHashCode() MappingBaseClass<ITypedModel, DefaultDatabase>.ID<TDataType>(Expression<Func<ITypedModel, TDataType>>) MappingBaseClass<ITypedModel, DefaultDatabase>.ManyToMany<TDataType>(Expression<Func<ITypedModel, IList<TDataType>>>) MappingBaseClass<ITypedModel, DefaultDatabase>.ManyToOne<TDataType>(Expression<Func<ITypedModel, IList<TDataType>>>) MappingBaseClass<ITypedModel, DefaultDatabase>.ManyToOne<TDataType>(Expression<Func<ITypedModel, TDataType>>) MappingBaseClass<ITypedModel, DefaultDatabase>.Map<TDataType>(Expression<Func<ITypedModel, TDataType>>) MappingBaseClass<ITypedModel, DefaultDatabase>.Reduce(ILogger) MappingBaseClass<ITypedModel, DefaultDatabase>.Reduce(IMapping, ILogger) MappingBaseClass<ITypedModel, DefaultDatabase>.Reference<TDataType>(Expression<Func<ITypedModel, TDataType>>) MappingBaseClass<ITypedModel, DefaultDatabase>.SetQuery(QueryType, string, CommandType, params IParameter[]) MappingBaseClass<ITypedModel, DefaultDatabase>.Setup() MappingBaseClass<ITypedModel, DefaultDatabase>.ToString() MappingBaseClass<ITypedModel, DefaultDatabase>.AutoIDProperties MappingBaseClass<ITypedModel, DefaultDatabase>.DatabaseConfigType MappingBaseClass<ITypedModel, DefaultDatabase>.IDProperties MappingBaseClass<ITypedModel, DefaultDatabase>.ManyToManyProperties MappingBaseClass<ITypedModel, DefaultDatabase>.ManyToOneProperties MappingBaseClass<ITypedModel, DefaultDatabase>.MapProperties MappingBaseClass<ITypedModel, DefaultDatabase>.Merge MappingBaseClass<ITypedModel, DefaultDatabase>.ObjectType MappingBaseClass<ITypedModel, DefaultDatabase>.Order MappingBaseClass<ITypedModel, DefaultDatabase>.Prefix MappingBaseClass<ITypedModel, DefaultDatabase>.Queries MappingBaseClass<ITypedModel, DefaultDatabase>.ReferenceProperties MappingBaseClass<ITypedModel, DefaultDatabase>.SchemaName MappingBaseClass<ITypedModel, DefaultDatabase>.Suffix MappingBaseClass<ITypedModel, DefaultDatabase>.TableName object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Mithril.Data.Models.Mappings Assembly: Mithril.Data.dll Syntax public class ITypedModelMapping : MappingBaseClass<ITypedModel, DefaultDatabase>, IMapping<ITypedModel>, IMapping Constructors | Improve this Doc View Source ITypedModelMapping() Initializes a new instance of the ITypedModelMapping class. Declaration public ITypedModelMapping() See Also MappingBaseClass<TClassType, TDatabaseType> Implements IMapping<TClassType> IMapping Extension Methods ExpandoObjectExtensions.ConvertToExpando<TEntity>(TEntity?) GenericExtensions.When<TObject>(TObject, bool, Func<TObject, TObject>) See Also MappingBaseClass<TClassType, TDatabaseType>"
  },
  "api/Mithril.Data.Models.Mappings.html": {
    "href": "api/Mithril.Data.Models.Mappings.html",
    "title": "Namespace Mithril.Data.Models.Mappings | Mithril API Reference",
    "keywords": "Namespace Mithril.Data.Models.Mappings Classes IIndexedModelMapping IIndexedModel mapping IModelMapping IModel mapping ITypedModelMapping Typed model mapping"
  },
  "api/Mithril.Data.Services.DataService.html": {
    "href": "api/Mithril.Data.Services.DataService.html",
    "title": "Class DataService | Mithril API Reference",
    "keywords": "Class DataService Data service Inheritance object DataService Implements IDataService Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Mithril.Data.Services Assembly: Mithril.Data.dll Syntax public class DataService : IDataService Constructors | Improve this Doc View Source DataService(DbContext?, SystemAccounts) Initializes a new instance of the DataService class. Declaration public DataService(DbContext? dbContext, SystemAccounts systemAccounts) Parameters Type Name Description DbContext dbContext The database context. SystemAccounts systemAccounts The system accounts. See Also IDataService Methods | Improve this Doc View Source DeleteAsync<TData>(ClaimsPrincipal?, params TData[]) Deletes the objects asynchronously. Declaration public Task<int> DeleteAsync<TData>(ClaimsPrincipal? user, params TData[] data) where TData : class, IModel Parameters Type Name Description ClaimsPrincipal user The user. TData[] data The data. Returns Type Description Task<int> The number of objects updated. Type Parameters Name Description TData The type of the data. See Also IDataService | Improve this Doc View Source QueryAsync<TData>(string, CommandType, string, params object[]) Runs a query and returns data of the specific type. Declaration public Task<IEnumerable<TData>> QueryAsync<TData>(string query, CommandType commandType, string connection, params object[] parameters) where TData : class Parameters Type Name Description string query The query. CommandType commandType Type of the command. string connection The connection. object[] parameters The parameters. Returns Type Description Task<IEnumerable<TData>> The resulting data. Type Parameters Name Description TData The type of the data. See Also IDataService | Improve this Doc View Source QueryDynamicAsync(string, CommandType, string, params object[]) Runs a dynamic query and returns the results. Declaration public Task<IEnumerable<dynamic>> QueryDynamicAsync(string query, CommandType commandType, string connection, params object[] parameters) Parameters Type Name Description string query The query. CommandType commandType Type of the command. string connection The connection. object[] parameters The parameters. Returns Type Description Task<IEnumerable<dynamic>> The data resulting from the query. See Also IDataService | Improve this Doc View Source QueryScalarAsync<TData>(string, CommandType, string, params object[]) Runs a scalar query and returns data of the specific type. Declaration public Task<TData> QueryScalarAsync<TData>(string query, CommandType commandType, string connection, params object[] parameters) where TData : class Parameters Type Name Description string query The query. CommandType commandType Type of the command. string connection The connection. object[] parameters The parameters. Returns Type Description Task<TData> The resulting data. Type Parameters Name Description TData The type of the data. See Also IDataService | Improve this Doc View Source Query<TData>() Creates a query used to get information. Declaration public IQueryable<TData>? Query<TData>() where TData : class Returns Type Description IQueryable<TData> The IQueryable object. Type Parameters Name Description TData The type of the data. See Also IDataService | Improve this Doc View Source SaveAsync<TData>(ClaimsPrincipal?, params TData?[]) Saves the objects asynchronously. Declaration public Task<int> SaveAsync<TData>(ClaimsPrincipal? user, params TData?[] data) where TData : class, IModel Parameters Type Name Description ClaimsPrincipal user The user. TData[] data The data. Returns Type Description Task<int> The number of objects updated. Type Parameters Name Description TData The type of the data. See Also IDataService Implements IDataService Extension Methods ExpandoObjectExtensions.ConvertToExpando<TEntity>(TEntity?) GenericExtensions.When<TObject>(TObject, bool, Func<TObject, TObject>) See Also IDataService"
  },
  "api/Mithril.Data.Services.html": {
    "href": "api/Mithril.Data.Services.html",
    "title": "Namespace Mithril.Data.Services | Mithril API Reference",
    "keywords": "Namespace Mithril.Data.Services Classes DataService Data service"
  },
  "api/Mithril.Data.html": {
    "href": "api/Mithril.Data.html",
    "title": "Namespace Mithril.Data | Mithril API Reference",
    "keywords": "Namespace Mithril.Data Classes DataModule Data module"
  },
  "api/Mithril.Features.Commands.ToggleFeatureCommandHandler.html": {
    "href": "api/Mithril.Features.Commands.ToggleFeatureCommandHandler.html",
    "title": "Class ToggleFeatureCommandHandler | Mithril API Reference",
    "keywords": "Class ToggleFeatureCommandHandler Toggle feature command handler Inheritance object CommandHandlerBaseClass<ToggleFeatureCommand, ToggleFeatureCommandVM> ToggleFeatureCommandHandler Implements ICommandHandler<ToggleFeatureCommandVM> ICommandHandler Inherited Members CommandHandlerBaseClass<ToggleFeatureCommand, ToggleFeatureCommandVM>.CommandName CommandHandlerBaseClass<ToggleFeatureCommand, ToggleFeatureCommandVM>.ContentTypeAccepts CommandHandlerBaseClass<ToggleFeatureCommand, ToggleFeatureCommandVM>.Features CommandHandlerBaseClass<ToggleFeatureCommand, ToggleFeatureCommandVM>.Tags CommandHandlerBaseClass<ToggleFeatureCommand, ToggleFeatureCommandVM>.Version CommandHandlerBaseClass<ToggleFeatureCommand, ToggleFeatureCommandVM>.ViewModelType CommandHandlerBaseClass<ToggleFeatureCommand, ToggleFeatureCommandVM>.FeatureManager CommandHandlerBaseClass<ToggleFeatureCommand, ToggleFeatureCommandVM>.Logger CommandHandlerBaseClass<ToggleFeatureCommand, ToggleFeatureCommandVM>.CanHandle(ICommand) CommandHandlerBaseClass<ToggleFeatureCommand, ToggleFeatureCommandVM>.CreateAsync(ToggleFeatureCommandVM, ClaimsPrincipal) CommandHandlerBaseClass<ToggleFeatureCommand, ToggleFeatureCommandVM>.HandleCommandAsync(params ICommand[]) CommandHandlerBaseClass<ToggleFeatureCommand, ToggleFeatureCommandVM>.HandleCommandAsync(ToggleFeatureCommand[]) CommandHandlerBaseClass<ToggleFeatureCommand, ToggleFeatureCommandVM>.IsFeatureEnabled() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Mithril.Features.Commands Assembly: Mithril.Features.dll Syntax [ApiAuthorize(\"Admin Only\")] public class ToggleFeatureCommandHandler : CommandHandlerBaseClass<ToggleFeatureCommand, ToggleFeatureCommandVM>, ICommandHandler<ToggleFeatureCommandVM>, ICommandHandler Constructors | Improve this Doc View Source ToggleFeatureCommandHandler(ILogger<ToggleFeatureCommandHandler>?, IFeatureManager?, ISessionManager?) Initializes a new instance of the ToggleFeatureCommandHandler class. Declaration public ToggleFeatureCommandHandler(ILogger<ToggleFeatureCommandHandler>? logger, IFeatureManager? featureManager, ISessionManager? sessionManager) Parameters Type Name Description ILogger<ToggleFeatureCommandHandler> logger The logger. IFeatureManager featureManager The feature manager. ISessionManager sessionManager The session manager. See Also CommandHandlerBaseClass<TCommand, TViewModel> Properties | Improve this Doc View Source CommandName Gets the command type accepted. Declaration public override string CommandName { get; } Property Value Type Description string The command type accepted. Overrides CommandHandlerBaseClass<ToggleFeatureCommand, ToggleFeatureCommandVM>.CommandName See Also CommandHandlerBaseClass<TCommand, TViewModel> | Improve this Doc View Source Tags Gets the tags (Used by OpenAPI, etc). Declaration public override string[] Tags { get; } Property Value Type Description string[] The tags (Used by OpenAPI, etc). Overrides CommandHandlerBaseClass<ToggleFeatureCommand, ToggleFeatureCommandVM>.Tags See Also CommandHandlerBaseClass<TCommand, TViewModel> Methods | Improve this Doc View Source CreateAsync(ToggleFeatureCommandVM?, ClaimsPrincipal) Creates the specified value. Declaration public override ValueTask<CommandCreationResult?> CreateAsync(ToggleFeatureCommandVM? value, ClaimsPrincipal user) Parameters Type Name Description ToggleFeatureCommandVM value The value. ClaimsPrincipal user The user. Returns Type Description ValueTask<CommandCreationResult> A command value converted from the ExpandoObject. Overrides CommandHandlerBaseClass<ToggleFeatureCommand, ToggleFeatureCommandVM>.CreateAsync(ToggleFeatureCommandVM, ClaimsPrincipal) See Also CommandHandlerBaseClass<TCommand, TViewModel> | Improve this Doc View Source HandleCommandAsync(ToggleFeatureCommand?[]?) Handles the command. Declaration protected override Task<IEvent[]> HandleCommandAsync(ToggleFeatureCommand?[]? args) Parameters Type Name Description ToggleFeatureCommand[] args The arguments. Returns Type Description Task<IEvent[]> The events generated by the command. Overrides CommandHandlerBaseClass<ToggleFeatureCommand, ToggleFeatureCommandVM>.HandleCommandAsync(ToggleFeatureCommand[]) See Also CommandHandlerBaseClass<TCommand, TViewModel> Implements ICommandHandler<TViewModel> ICommandHandler Extension Methods ExpandoObjectExtensions.ConvertToExpando<TEntity>(TEntity?) GenericExtensions.When<TObject>(TObject, bool, Func<TObject, TObject>) See Also CommandHandlerBaseClass<TCommand, TViewModel>"
  },
  "api/Mithril.Features.Commands.ViewModels.ToggleFeatureCommandVM.html": {
    "href": "api/Mithril.Features.Commands.ViewModels.ToggleFeatureCommandVM.html",
    "title": "Class ToggleFeatureCommandVM | Mithril API Reference",
    "keywords": "Class ToggleFeatureCommandVM Toggle feature command, used to turn on/off sections of the application as needed. Requires admin access. Inheritance object ToggleFeatureCommandVM Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Mithril.Features.Commands.ViewModels Assembly: Mithril.Features.dll Syntax public class ToggleFeatureCommandVM Properties | Improve this Doc View Source Active Gets or sets a value indicating whether the feature should be made active or not. Declaration public bool Active { get; set; } Property Value Type Description bool true if active; otherwise, false. | Improve this Doc View Source FeatureName The name of the feature to toggle. Declaration public string? FeatureName { get; set; } Property Value Type Description string The name. Extension Methods ExpandoObjectExtensions.ConvertToExpando<TEntity>(TEntity?) GenericExtensions.When<TObject>(TObject, bool, Func<TObject, TObject>)"
  },
  "api/Mithril.Features.Commands.ViewModels.html": {
    "href": "api/Mithril.Features.Commands.ViewModels.html",
    "title": "Namespace Mithril.Features.Commands.ViewModels | Mithril API Reference",
    "keywords": "Namespace Mithril.Features.Commands.ViewModels Classes ToggleFeatureCommandVM Toggle feature command, used to turn on/off sections of the application as needed. Requires admin access."
  },
  "api/Mithril.Features.Commands.html": {
    "href": "api/Mithril.Features.Commands.html",
    "title": "Namespace Mithril.Features.Commands | Mithril API Reference",
    "keywords": "Namespace Mithril.Features.Commands Classes ToggleFeatureCommandHandler Toggle feature command handler"
  },
  "api/Mithril.Features.FeatureModule.html": {
    "href": "api/Mithril.Features.FeatureModule.html",
    "title": "Class FeatureModule | Mithril API Reference",
    "keywords": "Class FeatureModule Feature module Inheritance object ModuleBaseClass<FeatureModule> FeatureModule Implements IEquatable<FeatureModule> IModule Inherited Members ModuleBaseClass<FeatureModule>.Category ModuleBaseClass<FeatureModule>.ContentPath ModuleBaseClass<FeatureModule>.Features ModuleBaseClass<FeatureModule>.ID ModuleBaseClass<FeatureModule>.LastModified ModuleBaseClass<FeatureModule>.Name ModuleBaseClass<FeatureModule>.Tags ModuleBaseClass<FeatureModule>.Version ModuleBaseClass<FeatureModule>.ConfigureApplication(IApplicationBuilder, IConfiguration, IHostEnvironment) ModuleBaseClass<FeatureModule>.ConfigureHostSettings(IHostBuilder, IConfiguration, IHostEnvironment) ModuleBaseClass<FeatureModule>.ConfigureLoggingSettings(ILoggingBuilder, IConfiguration, IHostEnvironment) ModuleBaseClass<FeatureModule>.ConfigureMVC(IMvcBuilder, IConfiguration, IHostEnvironment) ModuleBaseClass<FeatureModule>.ConfigureRoutes(IEndpointRouteBuilder, IConfiguration, IHostEnvironment) ModuleBaseClass<FeatureModule>.ConfigureWebHostSettings(IWebHostBuilder, IConfiguration, IHostEnvironment) ModuleBaseClass<FeatureModule>.Equals(object) ModuleBaseClass<FeatureModule>.Equals(FeatureModule) ModuleBaseClass<FeatureModule>.GetHashCode() ModuleBaseClass<FeatureModule>.OnStarted() ModuleBaseClass<FeatureModule>.OnStopped() ModuleBaseClass<FeatureModule>.OnStopping() object.Equals(object, object) object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Mithril.Features Assembly: Mithril.Features.dll Syntax public class FeatureModule : ModuleBaseClass<FeatureModule>, IEquatable<FeatureModule>, IModule Constructors | Improve this Doc View Source FeatureModule() Initializes a new instance of the FeatureModule class. Declaration public FeatureModule() See Also ModuleBaseClass<TModule> Properties | Improve this Doc View Source Order Gets the order that they are initialized in. Declaration public override int Order { get; } Property Value Type Description int The order that they are initialized in. Overrides ModuleBaseClass<FeatureModule>.Order See Also ModuleBaseClass<TModule> Methods | Improve this Doc View Source ConfigureServices(IServiceCollection?, IConfiguration?, IHostEnvironment?) Configures the services for the module. Declaration public override IServiceCollection? ConfigureServices(IServiceCollection? services, IConfiguration? configuration, IHostEnvironment? environment) Parameters Type Name Description IServiceCollection services The services collection. IConfiguration configuration The configuration. IHostEnvironment environment The environment. Returns Type Description IServiceCollection Services Overrides ModuleBaseClass<FeatureModule>.ConfigureServices(IServiceCollection, IConfiguration, IHostEnvironment) See Also ModuleBaseClass<TModule> | Improve this Doc View Source InitializeDataAsync(IDataService?, IServiceProvider?) Initializes the data. Declaration public override Task InitializeDataAsync(IDataService? dataService, IServiceProvider? services) Parameters Type Name Description IDataService dataService The data service IServiceProvider services The services for the application. Returns Type Description Task Overrides ModuleBaseClass<FeatureModule>.InitializeDataAsync(IDataService, IServiceProvider) See Also ModuleBaseClass<TModule> Implements IEquatable<T> IModule Extension Methods ExpandoObjectExtensions.ConvertToExpando<TEntity>(TEntity?) GenericExtensions.When<TObject>(TObject, bool, Func<TObject, TObject>) See Also ModuleBaseClass<TModule>"
  },
  "api/Mithril.Features.Models.Feature.html": {
    "href": "api/Mithril.Features.Models.Feature.html",
    "title": "Class Feature | Mithril API Reference",
    "keywords": "Class Feature Feature model Inheritance object ModelBase<Feature> Feature Implements IModel<Feature> IModel IEquatable<IModel> IEquatable<IModel<Feature>> IComparable IComparable<Feature> IEquatable<ModelBase<Feature>> Inherited Members ModelBase<Feature>.Active ModelBase<Feature>.Creator ModelBase<Feature>.DateCreated ModelBase<Feature>.DateModified ModelBase<Feature>.ID ModelBase<Feature>.Modifier ModelBase<Feature>.TenantID ModelBase<Feature>.All(IDataService) ModelBase<Feature>.AllActive(IDataService) ModelBase<Feature>.AllInactive(IDataService) ModelBase<Feature>.Load(long, IDataService) ModelBase<Feature>.Query(IDataService) ModelBase<Feature>.CanBeModifiedBy(ClaimsPrincipal) ModelBase<Feature>.CanBeViewedBy(ClaimsPrincipal) ModelBase<Feature>.CompareTo(object) ModelBase<Feature>.DeleteAsync(IDataService, ClaimsPrincipal, bool) ModelBase<Feature>.Equals(IModel) ModelBase<Feature>.Equals(IModel<Feature>) ModelBase<Feature>.Equals(ModelBase<Feature>) ModelBase<Feature>.SaveAsync(IDataService, ClaimsPrincipal) ModelBase<Feature>.SetupObject(IDataService, ClaimsPrincipal) ModelBase<Feature>.SetupObject(IDataService, IUser) ModelBase<Feature>.SetupObjectAndReturn(IDataService, ClaimsPrincipal) object.Equals(object, object) object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Mithril.Features.Models Assembly: Mithril.Features.dll Syntax public class Feature : ModelBase<Feature>, IModel<Feature>, IModel, IEquatable<IModel>, IEquatable<IModel<Feature>>, IComparable, IComparable<Feature>, IEquatable<ModelBase<Feature>> Constructors | Improve this Doc View Source Feature() Initializes a new instance of the Feature class. Declaration public Feature() See Also ModelBase<TClass> | Improve this Doc View Source Feature(string, string) Initializes a new instance of the Feature class. Declaration public Feature(string name, string category) Parameters Type Name Description string name The name. string category The category. Exceptions Type Condition ArgumentNullException name or category ArgumentException See Also ModelBase<TClass> Properties | Improve this Doc View Source Category Gets or sets the category. Declaration [Required] [MinLength(1)] [MaxLength(255)] public string? Category { get; set; } Property Value Type Description string The category. See Also ModelBase<TClass> | Improve this Doc View Source Description Gets or sets the description. Declaration [MaxLength] public string? Description { get; set; } Property Value Type Description string The description. See Also ModelBase<TClass> | Improve this Doc View Source Name Gets or sets the name. Declaration [Required] [MinLength(1)] [MaxLength(255)] public string? Name { get; set; } Property Value Type Description string The name. See Also ModelBase<TClass> Methods | Improve this Doc View Source CompareTo(Feature?) Compares the object to another object Declaration public override int CompareTo(Feature? other) Parameters Type Name Description Feature other Object to compare to Returns Type Description int 0 if they are equal, -1 if this is smaller, 1 if it is larger Overrides ModelBase<Feature>.CompareTo(Feature) See Also ModelBase<TClass> | Improve this Doc View Source Equals(Feature) Indicates whether the current object is equal to another object of the same type. Declaration public bool Equals(Feature other) Parameters Type Name Description Feature other An object to compare with this object. Returns Type Description bool true if the current object is equal to the other parameter; otherwise, false. See Also ModelBase<TClass> | Improve this Doc View Source Equals(object?) Determines whether the specified object, is equal to this instance. Declaration public override bool Equals(object? obj) Parameters Type Name Description object obj The object to compare with this instance. Returns Type Description bool true if the specified object is equal to this instance; otherwise, false. Overrides ModelBase<Feature>.Equals(object) See Also ModelBase<TClass> | Improve this Doc View Source GetHashCode() Returns a hash code for this instance. Declaration public override int GetHashCode() Returns Type Description int A hash code for this instance, suitable for use in hashing algorithms and data structures like a hash table. Overrides Mithril.Data.Abstractions.BaseClasses.ModelBase<Mithril.Features.Models.Feature>.GetHashCode() See Also ModelBase<TClass> | Improve this Doc View Source Load(string, IDataService?) Loads the feature based on the name specified. Declaration public static Feature? Load(string name, IDataService? dataService) Parameters Type Name Description string name The name. IDataService dataService The data service. Returns Type Description Feature The feature specified. See Also ModelBase<TClass> | Improve this Doc View Source LoadOrCreateAsync(string, string, IDataService?, ClaimsPrincipal?) Loads a specific feature or creates it. Declaration public static Task<Feature> LoadOrCreateAsync(string name, string category, IDataService? dataService, ClaimsPrincipal? user) Parameters Type Name Description string name The name. string category The category. IDataService dataService The data service. ClaimsPrincipal user The user. Returns Type Description Task<Feature> The feature specified. See Also ModelBase<TClass> Operators | Improve this Doc View Source operator ==(Feature, Feature) Implements the operator ==. Declaration public static bool operator ==(Feature first, Feature second) Parameters Type Name Description Feature first The first. Feature second The second. Returns Type Description bool The result of the operator. See Also ModelBase<TClass> | Improve this Doc View Source operator >(Feature, Feature) Implements the operator >. Declaration public static bool operator >(Feature left, Feature right) Parameters Type Name Description Feature left The left. Feature right The right. Returns Type Description bool The result of the operator. See Also ModelBase<TClass> | Improve this Doc View Source operator >=(Feature, Feature) Implements the operator >=. Declaration public static bool operator >=(Feature left, Feature right) Parameters Type Name Description Feature left The left. Feature right The right. Returns Type Description bool The result of the operator. See Also ModelBase<TClass> | Improve this Doc View Source operator !=(Feature, Feature) Implements the operator !=. Declaration public static bool operator !=(Feature left, Feature right) Parameters Type Name Description Feature left The left. Feature right The right. Returns Type Description bool The result of the operator. See Also ModelBase<TClass> | Improve this Doc View Source operator <(Feature, Feature) Implements the operator <. Declaration public static bool operator <(Feature left, Feature right) Parameters Type Name Description Feature left The left. Feature right The right. Returns Type Description bool The result of the operator. See Also ModelBase<TClass> | Improve this Doc View Source operator <=(Feature, Feature) Implements the operator <=. Declaration public static bool operator <=(Feature left, Feature right) Parameters Type Name Description Feature left The left. Feature right The right. Returns Type Description bool The result of the operator. See Also ModelBase<TClass> Implements IModel<TClass> IModel IEquatable<T> IEquatable<T> IComparable IComparable<T> IEquatable<T> Extension Methods ExpandoObjectExtensions.ConvertToExpando<TEntity>(TEntity?) GenericExtensions.When<TObject>(TObject, bool, Func<TObject, TObject>) See Also ModelBase<TClass>"
  },
  "api/Mithril.Features.Models.FeatureToggledEvent.html": {
    "href": "api/Mithril.Features.Models.FeatureToggledEvent.html",
    "title": "Class FeatureToggledEvent | Mithril API Reference",
    "keywords": "Class FeatureToggledEvent Feature toggled event Inheritance object ModelBase<FeatureToggledEvent> EventBaseClass<FeatureToggledEvent> FeatureToggledEvent Implements IModel<FeatureToggledEvent> IEquatable<IModel<FeatureToggledEvent>> IComparable IComparable<FeatureToggledEvent> IEquatable<ModelBase<FeatureToggledEvent>> IEvent IEquatable<IEvent> IModel IEquatable<IModel> IEquatable<EventBaseClass<FeatureToggledEvent>> Inherited Members EventBaseClass<FeatureToggledEvent>.Name EventBaseClass<FeatureToggledEvent>.RetryCount EventBaseClass<FeatureToggledEvent>.State EventBaseClass<FeatureToggledEvent>.CanRun() EventBaseClass<FeatureToggledEvent>.CompareTo(EventBaseClass<FeatureToggledEvent>) EventBaseClass<FeatureToggledEvent>.Equals(EventBaseClass<FeatureToggledEvent>) EventBaseClass<FeatureToggledEvent>.Equals(IEvent) EventBaseClass<FeatureToggledEvent>.ToString() ModelBase<FeatureToggledEvent>.Active ModelBase<FeatureToggledEvent>.Creator ModelBase<FeatureToggledEvent>.DateCreated ModelBase<FeatureToggledEvent>.DateModified ModelBase<FeatureToggledEvent>.ID ModelBase<FeatureToggledEvent>.Modifier ModelBase<FeatureToggledEvent>.TenantID ModelBase<FeatureToggledEvent>.All(IDataService) ModelBase<FeatureToggledEvent>.AllActive(IDataService) ModelBase<FeatureToggledEvent>.AllInactive(IDataService) ModelBase<FeatureToggledEvent>.Load(long, IDataService) ModelBase<FeatureToggledEvent>.Query(IDataService) ModelBase<FeatureToggledEvent>.CanBeModifiedBy(ClaimsPrincipal) ModelBase<FeatureToggledEvent>.CanBeViewedBy(ClaimsPrincipal) ModelBase<FeatureToggledEvent>.CompareTo(object) ModelBase<FeatureToggledEvent>.DeleteAsync(IDataService, ClaimsPrincipal, bool) ModelBase<FeatureToggledEvent>.Equals(IModel) ModelBase<FeatureToggledEvent>.Equals(IModel<FeatureToggledEvent>) ModelBase<FeatureToggledEvent>.Equals(ModelBase<FeatureToggledEvent>) ModelBase<FeatureToggledEvent>.SaveAsync(IDataService, ClaimsPrincipal) ModelBase<FeatureToggledEvent>.SetupObject(IDataService, ClaimsPrincipal) ModelBase<FeatureToggledEvent>.SetupObject(IDataService, IUser) ModelBase<FeatureToggledEvent>.SetupObjectAndReturn(IDataService, ClaimsPrincipal) object.Equals(object, object) object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Namespace: Mithril.Features.Models Assembly: Mithril.Features.dll Syntax public class FeatureToggledEvent : EventBaseClass<FeatureToggledEvent>, IModel<FeatureToggledEvent>, IEquatable<IModel<FeatureToggledEvent>>, IComparable, IComparable<FeatureToggledEvent>, IEquatable<ModelBase<FeatureToggledEvent>>, IEvent, IEquatable<IEvent>, IModel, IEquatable<IModel>, IEquatable<EventBaseClass<FeatureToggledEvent>> Constructors | Improve this Doc View Source FeatureToggledEvent() Initializes a new instance of the FeatureToggledEvent class. Declaration public FeatureToggledEvent() See Also EventBaseClass<TEvent> | Improve this Doc View Source FeatureToggledEvent(string, bool) Initializes a new instance of the FeatureToggledEvent class. Declaration public FeatureToggledEvent(string name, bool active) Parameters Type Name Description string name The name. bool active if set to true [active]. See Also EventBaseClass<TEvent> Properties | Improve this Doc View Source FeatureName Gets or sets the message. Declaration [MaxLength(100)] public string? FeatureName { get; set; } Property Value Type Description string The message. See Also EventBaseClass<TEvent> | Improve this Doc View Source FeatureStatus Gets or sets a value indicating whether [feature status]. Declaration public bool FeatureStatus { get; set; } Property Value Type Description bool true if [feature status]; otherwise, false. See Also EventBaseClass<TEvent> Methods | Improve this Doc View Source CompareTo(FeatureToggledEvent?) Compares the object to another object Declaration public override int CompareTo(FeatureToggledEvent? other) Parameters Type Name Description FeatureToggledEvent other Object to compare to Returns Type Description int 0 if they are equal, -1 if this is smaller, 1 if it is larger Overrides ModelBase<FeatureToggledEvent>.CompareTo(FeatureToggledEvent) See Also EventBaseClass<TEvent> | Improve this Doc View Source Equals(FeatureToggledEvent) Indicates whether the current object is equal to another object of the same type. Declaration public bool Equals(FeatureToggledEvent other) Parameters Type Name Description FeatureToggledEvent other An object to compare with this object. Returns Type Description bool true if the current object is equal to the other parameter; otherwise, false. See Also EventBaseClass<TEvent> | Improve this Doc View Source Equals(object?) Determines whether the specified object, is equal to this instance. Declaration public override bool Equals(object? obj) Parameters Type Name Description object obj The object to compare with this instance. Returns Type Description bool true if the specified object is equal to this instance; otherwise, false. Overrides EventBaseClass<FeatureToggledEvent>.Equals(object) See Also EventBaseClass<TEvent> | Improve this Doc View Source GetData() Gets the data within the event. Declaration public override ExpandoObject GetData() Returns Type Description ExpandoObject The data from the event. Overrides EventBaseClass<FeatureToggledEvent>.GetData() See Also EventBaseClass<TEvent> | Improve this Doc View Source GetHashCode() Returns a hash code for this instance. Declaration public override int GetHashCode() Returns Type Description int A hash code for this instance, suitable for use in hashing algorithms and data structures like a hash table. Overrides EventBaseClass<FeatureToggledEvent>.GetHashCode() See Also EventBaseClass<TEvent> | Improve this Doc View Source GetSchema() Gets the schema. Declaration public override string GetSchema() Returns Type Description string The data schema. Overrides EventBaseClass<FeatureToggledEvent>.GetSchema() See Also EventBaseClass<TEvent> Operators | Improve this Doc View Source operator ==(FeatureToggledEvent, FeatureToggledEvent) Implements the operator ==. Declaration public static bool operator ==(FeatureToggledEvent first, FeatureToggledEvent second) Parameters Type Name Description FeatureToggledEvent first The first. FeatureToggledEvent second The second. Returns Type Description bool The result of the operator. See Also EventBaseClass<TEvent> | Improve this Doc View Source operator >(FeatureToggledEvent, FeatureToggledEvent) Implements the operator >. Declaration public static bool operator >(FeatureToggledEvent left, FeatureToggledEvent right) Parameters Type Name Description FeatureToggledEvent left The left. FeatureToggledEvent right The right. Returns Type Description bool The result of the operator. See Also EventBaseClass<TEvent> | Improve this Doc View Source operator >=(FeatureToggledEvent, FeatureToggledEvent) Implements the operator >=. Declaration public static bool operator >=(FeatureToggledEvent left, FeatureToggledEvent right) Parameters Type Name Description FeatureToggledEvent left The left. FeatureToggledEvent right The right. Returns Type Description bool The result of the operator. See Also EventBaseClass<TEvent> | Improve this Doc View Source operator !=(FeatureToggledEvent, FeatureToggledEvent) Implements the operator !=. Declaration public static bool operator !=(FeatureToggledEvent left, FeatureToggledEvent right) Parameters Type Name Description FeatureToggledEvent left The left. FeatureToggledEvent right The right. Returns Type Description bool The result of the operator. See Also EventBaseClass<TEvent> | Improve this Doc View Source operator <(FeatureToggledEvent, FeatureToggledEvent) Implements the operator <. Declaration public static bool operator <(FeatureToggledEvent left, FeatureToggledEvent right) Parameters Type Name Description FeatureToggledEvent left The left. FeatureToggledEvent right The right. Returns Type Description bool The result of the operator. See Also EventBaseClass<TEvent> | Improve this Doc View Source operator <=(FeatureToggledEvent, FeatureToggledEvent) Implements the operator <=. Declaration public static bool operator <=(FeatureToggledEvent left, FeatureToggledEvent right) Parameters Type Name Description FeatureToggledEvent left The left. FeatureToggledEvent right The right. Returns Type Description bool The result of the operator. See Also EventBaseClass<TEvent> Implements IModel<TClass> IEquatable<T> IComparable IComparable<T> IEquatable<T> IEvent IEquatable<T> IModel IEquatable<T> IEquatable<T> Extension Methods ExpandoObjectExtensions.ConvertToExpando<TEntity>(TEntity?) GenericExtensions.When<TObject>(TObject, bool, Func<TObject, TObject>) See Also EventBaseClass<TEvent>"
  },
  "api/Mithril.Features.Models.Mappings.FeatureMapping.html": {
    "href": "api/Mithril.Features.Models.Mappings.FeatureMapping.html",
    "title": "Class FeatureMapping | Mithril API Reference",
    "keywords": "Class FeatureMapping Feature mapping Inheritance object MappingBaseClass<Feature, DefaultDatabase> FeatureMapping Implements IMapping<Feature> IMapping Inherited Members MappingBaseClass<Feature, DefaultDatabase>.AddAutoKey() MappingBaseClass<Feature, DefaultDatabase>.ContainsProperty(string) MappingBaseClass<Feature, DefaultDatabase>.Copy(IMapping) MappingBaseClass<Feature, DefaultDatabase>.CopyProperty(IIDProperty) MappingBaseClass<Feature, DefaultDatabase>.CopyProperty(IProperty) MappingBaseClass<Feature, DefaultDatabase>.CopyProperty(IMapProperty) MappingBaseClass<Feature, DefaultDatabase>.CopyProperty(IManyToOneProperty) MappingBaseClass<Feature, DefaultDatabase>.CopyProperty(IManyToManyProperty) MappingBaseClass<Feature, DefaultDatabase>.Equals(object) MappingBaseClass<Feature, DefaultDatabase>.GetColumnName(string) MappingBaseClass<Feature, DefaultDatabase>.GetHashCode() MappingBaseClass<Feature, DefaultDatabase>.ID<TDataType>(Expression<Func<Feature, TDataType>>) MappingBaseClass<Feature, DefaultDatabase>.ManyToMany<TDataType>(Expression<Func<Feature, IList<TDataType>>>) MappingBaseClass<Feature, DefaultDatabase>.ManyToOne<TDataType>(Expression<Func<Feature, IList<TDataType>>>) MappingBaseClass<Feature, DefaultDatabase>.ManyToOne<TDataType>(Expression<Func<Feature, TDataType>>) MappingBaseClass<Feature, DefaultDatabase>.Map<TDataType>(Expression<Func<Feature, TDataType>>) MappingBaseClass<Feature, DefaultDatabase>.Reduce(ILogger) MappingBaseClass<Feature, DefaultDatabase>.Reduce(IMapping, ILogger) MappingBaseClass<Feature, DefaultDatabase>.Reference<TDataType>(Expression<Func<Feature, TDataType>>) MappingBaseClass<Feature, DefaultDatabase>.SetQuery(QueryType, string, CommandType, params IParameter[]) MappingBaseClass<Feature, DefaultDatabase>.Setup() MappingBaseClass<Feature, DefaultDatabase>.ToString() MappingBaseClass<Feature, DefaultDatabase>.AutoIDProperties MappingBaseClass<Feature, DefaultDatabase>.DatabaseConfigType MappingBaseClass<Feature, DefaultDatabase>.IDProperties MappingBaseClass<Feature, DefaultDatabase>.ManyToManyProperties MappingBaseClass<Feature, DefaultDatabase>.ManyToOneProperties MappingBaseClass<Feature, DefaultDatabase>.MapProperties MappingBaseClass<Feature, DefaultDatabase>.Merge MappingBaseClass<Feature, DefaultDatabase>.ObjectType MappingBaseClass<Feature, DefaultDatabase>.Order MappingBaseClass<Feature, DefaultDatabase>.Prefix MappingBaseClass<Feature, DefaultDatabase>.Queries MappingBaseClass<Feature, DefaultDatabase>.ReferenceProperties MappingBaseClass<Feature, DefaultDatabase>.SchemaName MappingBaseClass<Feature, DefaultDatabase>.Suffix MappingBaseClass<Feature, DefaultDatabase>.TableName object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Mithril.Features.Models.Mappings Assembly: Mithril.Features.dll Syntax public class FeatureMapping : MappingBaseClass<Feature, DefaultDatabase>, IMapping<Feature>, IMapping Constructors | Improve this Doc View Source FeatureMapping() Initializes a new instance of the FeatureMapping class. Declaration public FeatureMapping() See Also MappingBaseClass<TClassType, TDatabaseType> Implements IMapping<TClassType> IMapping Extension Methods ExpandoObjectExtensions.ConvertToExpando<TEntity>(TEntity?) GenericExtensions.When<TObject>(TObject, bool, Func<TObject, TObject>) See Also MappingBaseClass<TClassType, TDatabaseType>"
  },
  "api/Mithril.Features.Models.Mappings.FeatureToggledEventMapping.html": {
    "href": "api/Mithril.Features.Models.Mappings.FeatureToggledEventMapping.html",
    "title": "Class FeatureToggledEventMapping | Mithril API Reference",
    "keywords": "Class FeatureToggledEventMapping Feature toggled event mapping Inheritance object MappingBaseClass<FeatureToggledEvent, DefaultDatabase> FeatureToggledEventMapping Implements IMapping<FeatureToggledEvent> IMapping Inherited Members MappingBaseClass<FeatureToggledEvent, DefaultDatabase>.AddAutoKey() MappingBaseClass<FeatureToggledEvent, DefaultDatabase>.ContainsProperty(string) MappingBaseClass<FeatureToggledEvent, DefaultDatabase>.Copy(IMapping) MappingBaseClass<FeatureToggledEvent, DefaultDatabase>.CopyProperty(IIDProperty) MappingBaseClass<FeatureToggledEvent, DefaultDatabase>.CopyProperty(IProperty) MappingBaseClass<FeatureToggledEvent, DefaultDatabase>.CopyProperty(IMapProperty) MappingBaseClass<FeatureToggledEvent, DefaultDatabase>.CopyProperty(IManyToOneProperty) MappingBaseClass<FeatureToggledEvent, DefaultDatabase>.CopyProperty(IManyToManyProperty) MappingBaseClass<FeatureToggledEvent, DefaultDatabase>.Equals(object) MappingBaseClass<FeatureToggledEvent, DefaultDatabase>.GetColumnName(string) MappingBaseClass<FeatureToggledEvent, DefaultDatabase>.GetHashCode() MappingBaseClass<FeatureToggledEvent, DefaultDatabase>.ID<TDataType>(Expression<Func<FeatureToggledEvent, TDataType>>) MappingBaseClass<FeatureToggledEvent, DefaultDatabase>.ManyToMany<TDataType>(Expression<Func<FeatureToggledEvent, IList<TDataType>>>) MappingBaseClass<FeatureToggledEvent, DefaultDatabase>.ManyToOne<TDataType>(Expression<Func<FeatureToggledEvent, IList<TDataType>>>) MappingBaseClass<FeatureToggledEvent, DefaultDatabase>.ManyToOne<TDataType>(Expression<Func<FeatureToggledEvent, TDataType>>) MappingBaseClass<FeatureToggledEvent, DefaultDatabase>.Map<TDataType>(Expression<Func<FeatureToggledEvent, TDataType>>) MappingBaseClass<FeatureToggledEvent, DefaultDatabase>.Reduce(ILogger) MappingBaseClass<FeatureToggledEvent, DefaultDatabase>.Reduce(IMapping, ILogger) MappingBaseClass<FeatureToggledEvent, DefaultDatabase>.Reference<TDataType>(Expression<Func<FeatureToggledEvent, TDataType>>) MappingBaseClass<FeatureToggledEvent, DefaultDatabase>.SetQuery(QueryType, string, CommandType, params IParameter[]) MappingBaseClass<FeatureToggledEvent, DefaultDatabase>.Setup() MappingBaseClass<FeatureToggledEvent, DefaultDatabase>.ToString() MappingBaseClass<FeatureToggledEvent, DefaultDatabase>.AutoIDProperties MappingBaseClass<FeatureToggledEvent, DefaultDatabase>.DatabaseConfigType MappingBaseClass<FeatureToggledEvent, DefaultDatabase>.IDProperties MappingBaseClass<FeatureToggledEvent, DefaultDatabase>.ManyToManyProperties MappingBaseClass<FeatureToggledEvent, DefaultDatabase>.ManyToOneProperties MappingBaseClass<FeatureToggledEvent, DefaultDatabase>.MapProperties MappingBaseClass<FeatureToggledEvent, DefaultDatabase>.Merge MappingBaseClass<FeatureToggledEvent, DefaultDatabase>.ObjectType MappingBaseClass<FeatureToggledEvent, DefaultDatabase>.Order MappingBaseClass<FeatureToggledEvent, DefaultDatabase>.Prefix MappingBaseClass<FeatureToggledEvent, DefaultDatabase>.Queries MappingBaseClass<FeatureToggledEvent, DefaultDatabase>.ReferenceProperties MappingBaseClass<FeatureToggledEvent, DefaultDatabase>.SchemaName MappingBaseClass<FeatureToggledEvent, DefaultDatabase>.Suffix MappingBaseClass<FeatureToggledEvent, DefaultDatabase>.TableName object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Mithril.Features.Models.Mappings Assembly: Mithril.Features.dll Syntax public class FeatureToggledEventMapping : MappingBaseClass<FeatureToggledEvent, DefaultDatabase>, IMapping<FeatureToggledEvent>, IMapping Constructors | Improve this Doc View Source FeatureToggledEventMapping() Initializes a new instance of the FeatureMapping class. Declaration public FeatureToggledEventMapping() See Also MappingBaseClass<TClassType, TDatabaseType> Implements IMapping<TClassType> IMapping Extension Methods ExpandoObjectExtensions.ConvertToExpando<TEntity>(TEntity?) GenericExtensions.When<TObject>(TObject, bool, Func<TObject, TObject>) See Also MappingBaseClass<TClassType, TDatabaseType>"
  },
  "api/Mithril.Features.Models.Mappings.ToggleFeatureCommandMapping.html": {
    "href": "api/Mithril.Features.Models.Mappings.ToggleFeatureCommandMapping.html",
    "title": "Class ToggleFeatureCommandMapping | Mithril API Reference",
    "keywords": "Class ToggleFeatureCommandMapping Toggle feature command mapping Inheritance object MappingBaseClass<ToggleFeatureCommand, DefaultDatabase> ToggleFeatureCommandMapping Implements IMapping<ToggleFeatureCommand> IMapping Inherited Members MappingBaseClass<ToggleFeatureCommand, DefaultDatabase>.AddAutoKey() MappingBaseClass<ToggleFeatureCommand, DefaultDatabase>.ContainsProperty(string) MappingBaseClass<ToggleFeatureCommand, DefaultDatabase>.Copy(IMapping) MappingBaseClass<ToggleFeatureCommand, DefaultDatabase>.CopyProperty(IIDProperty) MappingBaseClass<ToggleFeatureCommand, DefaultDatabase>.CopyProperty(IProperty) MappingBaseClass<ToggleFeatureCommand, DefaultDatabase>.CopyProperty(IMapProperty) MappingBaseClass<ToggleFeatureCommand, DefaultDatabase>.CopyProperty(IManyToOneProperty) MappingBaseClass<ToggleFeatureCommand, DefaultDatabase>.CopyProperty(IManyToManyProperty) MappingBaseClass<ToggleFeatureCommand, DefaultDatabase>.Equals(object) MappingBaseClass<ToggleFeatureCommand, DefaultDatabase>.GetColumnName(string) MappingBaseClass<ToggleFeatureCommand, DefaultDatabase>.GetHashCode() MappingBaseClass<ToggleFeatureCommand, DefaultDatabase>.ID<TDataType>(Expression<Func<ToggleFeatureCommand, TDataType>>) MappingBaseClass<ToggleFeatureCommand, DefaultDatabase>.ManyToMany<TDataType>(Expression<Func<ToggleFeatureCommand, IList<TDataType>>>) MappingBaseClass<ToggleFeatureCommand, DefaultDatabase>.ManyToOne<TDataType>(Expression<Func<ToggleFeatureCommand, IList<TDataType>>>) MappingBaseClass<ToggleFeatureCommand, DefaultDatabase>.ManyToOne<TDataType>(Expression<Func<ToggleFeatureCommand, TDataType>>) MappingBaseClass<ToggleFeatureCommand, DefaultDatabase>.Map<TDataType>(Expression<Func<ToggleFeatureCommand, TDataType>>) MappingBaseClass<ToggleFeatureCommand, DefaultDatabase>.Reduce(ILogger) MappingBaseClass<ToggleFeatureCommand, DefaultDatabase>.Reduce(IMapping, ILogger) MappingBaseClass<ToggleFeatureCommand, DefaultDatabase>.Reference<TDataType>(Expression<Func<ToggleFeatureCommand, TDataType>>) MappingBaseClass<ToggleFeatureCommand, DefaultDatabase>.SetQuery(QueryType, string, CommandType, params IParameter[]) MappingBaseClass<ToggleFeatureCommand, DefaultDatabase>.Setup() MappingBaseClass<ToggleFeatureCommand, DefaultDatabase>.ToString() MappingBaseClass<ToggleFeatureCommand, DefaultDatabase>.AutoIDProperties MappingBaseClass<ToggleFeatureCommand, DefaultDatabase>.DatabaseConfigType MappingBaseClass<ToggleFeatureCommand, DefaultDatabase>.IDProperties MappingBaseClass<ToggleFeatureCommand, DefaultDatabase>.ManyToManyProperties MappingBaseClass<ToggleFeatureCommand, DefaultDatabase>.ManyToOneProperties MappingBaseClass<ToggleFeatureCommand, DefaultDatabase>.MapProperties MappingBaseClass<ToggleFeatureCommand, DefaultDatabase>.Merge MappingBaseClass<ToggleFeatureCommand, DefaultDatabase>.ObjectType MappingBaseClass<ToggleFeatureCommand, DefaultDatabase>.Order MappingBaseClass<ToggleFeatureCommand, DefaultDatabase>.Prefix MappingBaseClass<ToggleFeatureCommand, DefaultDatabase>.Queries MappingBaseClass<ToggleFeatureCommand, DefaultDatabase>.ReferenceProperties MappingBaseClass<ToggleFeatureCommand, DefaultDatabase>.SchemaName MappingBaseClass<ToggleFeatureCommand, DefaultDatabase>.Suffix MappingBaseClass<ToggleFeatureCommand, DefaultDatabase>.TableName object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Mithril.Features.Models.Mappings Assembly: Mithril.Features.dll Syntax public class ToggleFeatureCommandMapping : MappingBaseClass<ToggleFeatureCommand, DefaultDatabase>, IMapping<ToggleFeatureCommand>, IMapping Constructors | Improve this Doc View Source ToggleFeatureCommandMapping() Initializes a new instance of the ToggleFeatureCommandMapping class. Declaration public ToggleFeatureCommandMapping() See Also MappingBaseClass<TClassType, TDatabaseType> Implements IMapping<TClassType> IMapping Extension Methods ExpandoObjectExtensions.ConvertToExpando<TEntity>(TEntity?) GenericExtensions.When<TObject>(TObject, bool, Func<TObject, TObject>) See Also MappingBaseClass<TClassType, TDatabaseType>"
  },
  "api/Mithril.Features.Models.Mappings.html": {
    "href": "api/Mithril.Features.Models.Mappings.html",
    "title": "Namespace Mithril.Features.Models.Mappings | Mithril API Reference",
    "keywords": "Namespace Mithril.Features.Models.Mappings Classes FeatureMapping Feature mapping FeatureToggledEventMapping Feature toggled event mapping ToggleFeatureCommandMapping Toggle feature command mapping"
  },
  "api/Mithril.Features.Models.ToggleFeatureCommand.html": {
    "href": "api/Mithril.Features.Models.ToggleFeatureCommand.html",
    "title": "Class ToggleFeatureCommand | Mithril API Reference",
    "keywords": "Class ToggleFeatureCommand Toggle feature command Inheritance object ModelBase<ToggleFeatureCommand> CommandBaseClass<ToggleFeatureCommand> ToggleFeatureCommand Implements IModel<ToggleFeatureCommand> IEquatable<IModel<ToggleFeatureCommand>> IComparable IComparable<ToggleFeatureCommand> IEquatable<ModelBase<ToggleFeatureCommand>> ICommand IEquatable<ICommand> IModel IEquatable<IModel> IEquatable<CommandBaseClass<ToggleFeatureCommand>> Inherited Members CommandBaseClass<ToggleFeatureCommand>.Name CommandBaseClass<ToggleFeatureCommand>.CompareTo(CommandBaseClass<ToggleFeatureCommand>) CommandBaseClass<ToggleFeatureCommand>.Equals(CommandBaseClass<ToggleFeatureCommand>) CommandBaseClass<ToggleFeatureCommand>.Equals(ICommand) CommandBaseClass<ToggleFeatureCommand>.ToString() ModelBase<ToggleFeatureCommand>.Active ModelBase<ToggleFeatureCommand>.Creator ModelBase<ToggleFeatureCommand>.DateCreated ModelBase<ToggleFeatureCommand>.DateModified ModelBase<ToggleFeatureCommand>.ID ModelBase<ToggleFeatureCommand>.Modifier ModelBase<ToggleFeatureCommand>.TenantID ModelBase<ToggleFeatureCommand>.All(IDataService) ModelBase<ToggleFeatureCommand>.AllActive(IDataService) ModelBase<ToggleFeatureCommand>.AllInactive(IDataService) ModelBase<ToggleFeatureCommand>.Load(long, IDataService) ModelBase<ToggleFeatureCommand>.Query(IDataService) ModelBase<ToggleFeatureCommand>.CanBeModifiedBy(ClaimsPrincipal) ModelBase<ToggleFeatureCommand>.CanBeViewedBy(ClaimsPrincipal) ModelBase<ToggleFeatureCommand>.CompareTo(object) ModelBase<ToggleFeatureCommand>.DeleteAsync(IDataService, ClaimsPrincipal, bool) ModelBase<ToggleFeatureCommand>.Equals(IModel) ModelBase<ToggleFeatureCommand>.Equals(IModel<ToggleFeatureCommand>) ModelBase<ToggleFeatureCommand>.Equals(ModelBase<ToggleFeatureCommand>) ModelBase<ToggleFeatureCommand>.SaveAsync(IDataService, ClaimsPrincipal) ModelBase<ToggleFeatureCommand>.SetupObject(IDataService, ClaimsPrincipal) ModelBase<ToggleFeatureCommand>.SetupObject(IDataService, IUser) ModelBase<ToggleFeatureCommand>.SetupObjectAndReturn(IDataService, ClaimsPrincipal) object.Equals(object, object) object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Namespace: Mithril.Features.Models Assembly: Mithril.Features.dll Syntax public class ToggleFeatureCommand : CommandBaseClass<ToggleFeatureCommand>, IModel<ToggleFeatureCommand>, IEquatable<IModel<ToggleFeatureCommand>>, IComparable, IComparable<ToggleFeatureCommand>, IEquatable<ModelBase<ToggleFeatureCommand>>, ICommand, IEquatable<ICommand>, IModel, IEquatable<IModel>, IEquatable<CommandBaseClass<ToggleFeatureCommand>> Constructors | Improve this Doc View Source ToggleFeatureCommand() Initializes a new instance of the ToggleFeatureCommand class. Declaration public ToggleFeatureCommand() See Also CommandBaseClass<TCommand> | Improve this Doc View Source ToggleFeatureCommand(string, bool) Initializes a new instance of the ToggleFeatureCommand class. Declaration public ToggleFeatureCommand(string name, bool active) Parameters Type Name Description string name The name. bool active if set to true [active]. See Also CommandBaseClass<TCommand> Properties | Improve this Doc View Source FeatureName Gets or sets the message. Declaration [MaxLength(100)] public string? FeatureName { get; set; } Property Value Type Description string The message. See Also CommandBaseClass<TCommand> | Improve this Doc View Source FeatureStatus Gets or sets a value indicating whether [feature status]. Declaration public bool FeatureStatus { get; set; } Property Value Type Description bool true if [feature status]; otherwise, false. See Also CommandBaseClass<TCommand> Methods | Improve this Doc View Source CompareTo(ToggleFeatureCommand?) Compares the object to another object Declaration public override int CompareTo(ToggleFeatureCommand? other) Parameters Type Name Description ToggleFeatureCommand other Object to compare to Returns Type Description int 0 if they are equal, -1 if this is smaller, 1 if it is larger Overrides ModelBase<ToggleFeatureCommand>.CompareTo(ToggleFeatureCommand) See Also CommandBaseClass<TCommand> | Improve this Doc View Source Equals(ToggleFeatureCommand) Indicates whether the current object is equal to another object of the same type. Declaration public bool Equals(ToggleFeatureCommand other) Parameters Type Name Description ToggleFeatureCommand other An object to compare with this object. Returns Type Description bool true if the current object is equal to the other parameter; otherwise, false. See Also CommandBaseClass<TCommand> | Improve this Doc View Source Equals(object?) Determines whether the specified object, is equal to this instance. Declaration public override bool Equals(object? obj) Parameters Type Name Description object obj The object to compare with this instance. Returns Type Description bool true if the specified object is equal to this instance; otherwise, false. Overrides CommandBaseClass<ToggleFeatureCommand>.Equals(object) See Also CommandBaseClass<TCommand> | Improve this Doc View Source GetHashCode() Returns a hash code for this instance. Declaration public override int GetHashCode() Returns Type Description int A hash code for this instance, suitable for use in hashing algorithms and data structures like a hash table. Overrides CommandBaseClass<ToggleFeatureCommand>.GetHashCode() See Also CommandBaseClass<TCommand> Operators | Improve this Doc View Source operator ==(ToggleFeatureCommand, ToggleFeatureCommand) Implements the operator ==. Declaration public static bool operator ==(ToggleFeatureCommand first, ToggleFeatureCommand second) Parameters Type Name Description ToggleFeatureCommand first The first. ToggleFeatureCommand second The second. Returns Type Description bool The result of the operator. See Also CommandBaseClass<TCommand> | Improve this Doc View Source operator >(ToggleFeatureCommand, ToggleFeatureCommand) Implements the operator >. Declaration public static bool operator >(ToggleFeatureCommand left, ToggleFeatureCommand right) Parameters Type Name Description ToggleFeatureCommand left The left. ToggleFeatureCommand right The right. Returns Type Description bool The result of the operator. See Also CommandBaseClass<TCommand> | Improve this Doc View Source operator >=(ToggleFeatureCommand, ToggleFeatureCommand) Implements the operator >=. Declaration public static bool operator >=(ToggleFeatureCommand left, ToggleFeatureCommand right) Parameters Type Name Description ToggleFeatureCommand left The left. ToggleFeatureCommand right The right. Returns Type Description bool The result of the operator. See Also CommandBaseClass<TCommand> | Improve this Doc View Source operator !=(ToggleFeatureCommand, ToggleFeatureCommand) Implements the operator !=. Declaration public static bool operator !=(ToggleFeatureCommand left, ToggleFeatureCommand right) Parameters Type Name Description ToggleFeatureCommand left The left. ToggleFeatureCommand right The right. Returns Type Description bool The result of the operator. See Also CommandBaseClass<TCommand> | Improve this Doc View Source operator <(ToggleFeatureCommand, ToggleFeatureCommand) Implements the operator <. Declaration public static bool operator <(ToggleFeatureCommand left, ToggleFeatureCommand right) Parameters Type Name Description ToggleFeatureCommand left The left. ToggleFeatureCommand right The right. Returns Type Description bool The result of the operator. See Also CommandBaseClass<TCommand> | Improve this Doc View Source operator <=(ToggleFeatureCommand, ToggleFeatureCommand) Implements the operator <=. Declaration public static bool operator <=(ToggleFeatureCommand left, ToggleFeatureCommand right) Parameters Type Name Description ToggleFeatureCommand left The left. ToggleFeatureCommand right The right. Returns Type Description bool The result of the operator. See Also CommandBaseClass<TCommand> Implements IModel<TClass> IEquatable<T> IComparable IComparable<T> IEquatable<T> ICommand IEquatable<T> IModel IEquatable<T> IEquatable<T> Extension Methods ExpandoObjectExtensions.ConvertToExpando<TEntity>(TEntity?) GenericExtensions.When<TObject>(TObject, bool, Func<TObject, TObject>) See Also CommandBaseClass<TCommand>"
  },
  "api/Mithril.Features.Models.html": {
    "href": "api/Mithril.Features.Models.html",
    "title": "Namespace Mithril.Features.Models | Mithril API Reference",
    "keywords": "Namespace Mithril.Features.Models Classes Feature Feature model FeatureToggledEvent Feature toggled event ToggleFeatureCommand Toggle feature command"
  },
  "api/Mithril.Features.Queries.FeatureListVM.html": {
    "href": "api/Mithril.Features.Queries.FeatureListVM.html",
    "title": "Class FeatureListVM | Mithril API Reference",
    "keywords": "Class FeatureListVM Feature List VM Inheritance object FeatureListVM Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Mithril.Features.Queries Assembly: Mithril.Features.dll Syntax public class FeatureListVM Constructors | Improve this Doc View Source FeatureListVM(IEnumerable<Feature>) Initializes a new instance of the FeatureListVM class. Declaration public FeatureListVM(IEnumerable<Feature> features) Parameters Type Name Description IEnumerable<Feature> features The features. Properties | Improve this Doc View Source Features Gets the features. Declaration public List<FeatureVM> Features { get; } Property Value Type Description List<FeatureVM> The features. Extension Methods ExpandoObjectExtensions.ConvertToExpando<TEntity>(TEntity?) GenericExtensions.When<TObject>(TObject, bool, Func<TObject, TObject>)"
  },
  "api/Mithril.Features.Queries.FeatureVM.html": {
    "href": "api/Mithril.Features.Queries.FeatureVM.html",
    "title": "Class FeatureVM | Mithril API Reference",
    "keywords": "Class FeatureVM Feature view model Inheritance object FeatureVM Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Mithril.Features.Queries Assembly: Mithril.Features.dll Syntax public class FeatureVM Constructors | Improve this Doc View Source FeatureVM(Feature) Initializes a new instance of the FeatureVM class. Declaration public FeatureVM(Feature model) Parameters Type Name Description Feature model The model. Properties | Improve this Doc View Source Active Gets a value indicating whether this FeatureVM is active. Declaration public bool Active { get; } Property Value Type Description bool true if active; otherwise, false. | Improve this Doc View Source Name Gets the name. Declaration public string? Name { get; } Property Value Type Description string The name. Extension Methods ExpandoObjectExtensions.ConvertToExpando<TEntity>(TEntity?) GenericExtensions.When<TObject>(TObject, bool, Func<TObject, TObject>)"
  },
  "api/Mithril.Features.Queries.FeaturesQuery.html": {
    "href": "api/Mithril.Features.Queries.FeaturesQuery.html",
    "title": "Class FeaturesQuery | Mithril API Reference",
    "keywords": "Class FeaturesQuery Features query Inheritance object QueryBaseClass<IEnumerable<FeatureVM>> FeaturesQuery Implements IQuery<IEnumerable<FeatureVM>> IQuery Inherited Members QueryBaseClass<IEnumerable<FeatureVM>>.Arguments QueryBaseClass<IEnumerable<FeatureVM>>.DeprecationReason QueryBaseClass<IEnumerable<FeatureVM>>.Description QueryBaseClass<IEnumerable<FeatureVM>>.Features QueryBaseClass<IEnumerable<FeatureVM>>.ReturnType QueryBaseClass<IEnumerable<FeatureVM>>.Version QueryBaseClass<IEnumerable<FeatureVM>>.FeatureManager QueryBaseClass<IEnumerable<FeatureVM>>.Logger QueryBaseClass<IEnumerable<FeatureVM>>.IsFeatureEnabled() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Mithril.Features.Queries Assembly: Mithril.Features.dll Syntax [ApiAuthorize(\"Admin Only\")] public class FeaturesQuery : QueryBaseClass<IEnumerable<FeatureVM>>, IQuery<IEnumerable<FeatureVM>>, IQuery Constructors | Improve this Doc View Source FeaturesQuery(ILogger<FeaturesQuery>?, IFeatureManager?, IDataService?) Initializes a new instance of the FeaturesQuery class. Declaration public FeaturesQuery(ILogger<FeaturesQuery>? logger, IFeatureManager? featureManager, IDataService? dataService) Parameters Type Name Description ILogger<FeaturesQuery> logger The logger. IFeatureManager featureManager The feature manager. IDataService dataService The data service. Properties | Improve this Doc View Source DataService Gets the data service. Declaration public IDataService? DataService { get; } Property Value Type Description IDataService The data service. | Improve this Doc View Source Name Gets the name. Declaration public override string Name { get; } Property Value Type Description string The name. Overrides QueryBaseClass<IEnumerable<FeatureVM>>.Name Methods | Improve this Doc View Source ResolveAsync(ClaimsPrincipal?, Arguments) Resolves the asynchronous. Declaration public override Task<IEnumerable<FeatureVM>?> ResolveAsync(ClaimsPrincipal? arg, Arguments arguments) Parameters Type Name Description ClaimsPrincipal arg The argument. Arguments arguments The arguments. Returns Type Description Task<IEnumerable<FeatureVM>> Overrides QueryBaseClass<IEnumerable<FeatureVM>>.ResolveAsync(ClaimsPrincipal, Arguments) Implements IQuery<TClass> IQuery Extension Methods ExpandoObjectExtensions.ConvertToExpando<TEntity>(TEntity?) GenericExtensions.When<TObject>(TObject, bool, Func<TObject, TObject>)"
  },
  "api/Mithril.Features.Queries.html": {
    "href": "api/Mithril.Features.Queries.html",
    "title": "Namespace Mithril.Features.Queries | Mithril API Reference",
    "keywords": "Namespace Mithril.Features.Queries Classes FeatureListVM Feature List VM FeatureVM Feature view model FeaturesQuery Features query"
  },
  "api/Mithril.Features.Services.DatabaseSessionManager.html": {
    "href": "api/Mithril.Features.Services.DatabaseSessionManager.html",
    "title": "Class DatabaseSessionManager | Mithril API Reference",
    "keywords": "Class DatabaseSessionManager Database session manager Inheritance object DatabaseSessionManager Implements ISessionManager Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Mithril.Features.Services Assembly: Mithril.Features.dll Syntax public class DatabaseSessionManager : ISessionManager Constructors | Improve this Doc View Source DatabaseSessionManager(IDataService?) Initializes a new instance of the DatabaseSessionManager class. Declaration public DatabaseSessionManager(IDataService? dataService) Parameters Type Name Description IDataService dataService The data service. See Also ISessionManager Properties | Improve this Doc View Source DataService Gets the data service. Declaration public IDataService? DataService { get; } Property Value Type Description IDataService The data service. See Also ISessionManager Methods | Improve this Doc View Source GetAsync(string) Queries the session manager for the session's feature state, if any, for the given feature. Declaration public Task<bool?> GetAsync(string featureName) Parameters Type Name Description string featureName The name of the feature. Returns Type Description Task<bool?> The state of the feature if it is present in the session, otherwise null. See Also ISessionManager | Improve this Doc View Source SetAsync(string, bool) Set the state of a feature to be used for a session. Declaration public Task SetAsync(string featureName, bool enabled) Parameters Type Name Description string featureName The name of the feature. bool enabled The state of the feature. Returns Type Description Task The async task. See Also ISessionManager Implements ISessionManager Extension Methods ExpandoObjectExtensions.ConvertToExpando<TEntity>(TEntity?) GenericExtensions.When<TObject>(TObject, bool, Func<TObject, TObject>) See Also ISessionManager"
  },
  "api/Mithril.Features.Services.html": {
    "href": "api/Mithril.Features.Services.html",
    "title": "Namespace Mithril.Features.Services | Mithril API Reference",
    "keywords": "Namespace Mithril.Features.Services Classes DatabaseSessionManager Database session manager"
  },
  "api/Mithril.Features.html": {
    "href": "api/Mithril.Features.html",
    "title": "Namespace Mithril.Features | Mithril API Reference",
    "keywords": "Namespace Mithril.Features Classes FeatureModule Feature module"
  },
  "api/Mithril.FileSystem.Abstractions.BaseClasses.MediaDirectoryBaseClass-2.html": {
    "href": "api/Mithril.FileSystem.Abstractions.BaseClasses.MediaDirectoryBaseClass-2.html",
    "title": "Class MediaDirectoryBaseClass<TInternalDirectoryType, TDirectoryType> | Mithril API Reference",
    "keywords": "Class MediaDirectoryBaseClass<TInternalDirectoryType, TDirectoryType> Media directory base class Inheritance object DirectoryBase<TInternalDirectoryType, TDirectoryType> MediaDirectoryBaseClass<TInternalDirectoryType, TDirectoryType> Implements IDirectory IComparable<IDirectory> IEnumerable<IFile> IEnumerable IComparable IEquatable<IDirectory> Inherited Members DirectoryBase<TInternalDirectoryType, TDirectoryType>.CompareTo(IDirectory) DirectoryBase<TInternalDirectoryType, TDirectoryType>.CompareTo(object) DirectoryBase<TInternalDirectoryType, TDirectoryType>.CopyTo(IDirectory, CopyOptions) DirectoryBase<TInternalDirectoryType, TDirectoryType>.CopyToAsync(IDirectory, CopyOptions) DirectoryBase<TInternalDirectoryType, TDirectoryType>.Create() DirectoryBase<TInternalDirectoryType, TDirectoryType>.CreateAsync() DirectoryBase<TInternalDirectoryType, TDirectoryType>.Delete() DirectoryBase<TInternalDirectoryType, TDirectoryType>.DeleteAsync() DirectoryBase<TInternalDirectoryType, TDirectoryType>.EnumerateDirectories(string, SearchOption) DirectoryBase<TInternalDirectoryType, TDirectoryType>.EnumerateDirectories(Predicate<IDirectory>, SearchOption) DirectoryBase<TInternalDirectoryType, TDirectoryType>.EnumerateFiles(string, SearchOption) DirectoryBase<TInternalDirectoryType, TDirectoryType>.EnumerateFiles(Predicate<IFile>, SearchOption) DirectoryBase<TInternalDirectoryType, TDirectoryType>.Equals(object) DirectoryBase<TInternalDirectoryType, TDirectoryType>.Equals(IDirectory) DirectoryBase<TInternalDirectoryType, TDirectoryType>.GetEnumerator() DirectoryBase<TInternalDirectoryType, TDirectoryType>.GetHashCode() DirectoryBase<TInternalDirectoryType, TDirectoryType>.MoveTo(IDirectory) DirectoryBase<TInternalDirectoryType, TDirectoryType>.MoveToAsync(IDirectory) DirectoryBase<TInternalDirectoryType, TDirectoryType>.Rename(string) DirectoryBase<TInternalDirectoryType, TDirectoryType>.RenameAsync(string) DirectoryBase<TInternalDirectoryType, TDirectoryType>.ToString() DirectoryBase<TInternalDirectoryType, TDirectoryType>.Accessed DirectoryBase<TInternalDirectoryType, TDirectoryType>.Created DirectoryBase<TInternalDirectoryType, TDirectoryType>.Credentials DirectoryBase<TInternalDirectoryType, TDirectoryType>.Exists DirectoryBase<TInternalDirectoryType, TDirectoryType>.FullName DirectoryBase<TInternalDirectoryType, TDirectoryType>.Modified DirectoryBase<TInternalDirectoryType, TDirectoryType>.Name DirectoryBase<TInternalDirectoryType, TDirectoryType>.Parent DirectoryBase<TInternalDirectoryType, TDirectoryType>.Root DirectoryBase<TInternalDirectoryType, TDirectoryType>.Size DirectoryBase<TInternalDirectoryType, TDirectoryType>.InternalDirectory object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Mithril.FileSystem.Abstractions.BaseClasses Assembly: Mithril.FileSystem.Abstractions.dll Syntax public abstract class MediaDirectoryBaseClass<TInternalDirectoryType, TDirectoryType> : DirectoryBase<TInternalDirectoryType, TDirectoryType>, IDirectory, IComparable<IDirectory>, IEnumerable<IFile>, IEnumerable, IComparable, IEquatable<IDirectory> where TDirectoryType : MediaDirectoryBaseClass<TInternalDirectoryType, TDirectoryType>, new() Type Parameters Name Description TInternalDirectoryType The type of the internal directory type. TDirectoryType The type of the directory type. Constructors | Improve this Doc View Source MediaDirectoryBaseClass() Initializes a new instance of the MediaDirectoryBaseClass<TInternalDirectoryType, TDirectoryType> class. Declaration protected MediaDirectoryBaseClass() See Also DirectoryBase<TInternalDirectoryType, TDirectoryType> | Improve this Doc View Source MediaDirectoryBaseClass(TInternalDirectoryType, Credentials?) Initializes a new instance of the MediaDirectoryBaseClass<TInternalDirectoryType, TDirectoryType> class. Declaration protected MediaDirectoryBaseClass(TInternalDirectoryType internalDirectory, Credentials? credentials = null) Parameters Type Name Description TInternalDirectoryType internalDirectory Internal directory object Credentials credentials The credentials. See Also DirectoryBase<TInternalDirectoryType, TDirectoryType> Implements IDirectory IComparable<T> IEnumerable<T> IEnumerable IComparable IEquatable<T> Extension Methods ExpandoObjectExtensions.ConvertToExpando<TEntity>(TEntity?) GenericExtensions.When<TObject>(TObject, bool, Func<TObject, TObject>) See Also DirectoryBase<TInternalDirectoryType, TDirectoryType>"
  },
  "api/Mithril.FileSystem.Abstractions.BaseClasses.MediaFileBaseClass-2.html": {
    "href": "api/Mithril.FileSystem.Abstractions.BaseClasses.MediaFileBaseClass-2.html",
    "title": "Class MediaFileBaseClass<TInternalFileType, TFileType> | Mithril API Reference",
    "keywords": "Class MediaFileBaseClass<TInternalFileType, TFileType> Media file base class Inheritance object FileBase<TInternalFileType, TFileType> MediaFileBaseClass<TInternalFileType, TFileType> Implements IFile IComparable<IFile> IComparable IEquatable<IFile> Inherited Members FileBase<TInternalFileType, TFileType>.CompareTo(IFile) FileBase<TInternalFileType, TFileType>.CompareTo(object) FileBase<TInternalFileType, TFileType>.CopyTo(IDirectory, bool) FileBase<TInternalFileType, TFileType>.CopyToAsync(IDirectory, bool) FileBase<TInternalFileType, TFileType>.Delete() FileBase<TInternalFileType, TFileType>.DeleteAsync() FileBase<TInternalFileType, TFileType>.Equals(object) FileBase<TInternalFileType, TFileType>.Equals(IFile) FileBase<TInternalFileType, TFileType>.GetHashCode() FileBase<TInternalFileType, TFileType>.MoveTo(IDirectory) FileBase<TInternalFileType, TFileType>.MoveToAsync(IDirectory) FileBase<TInternalFileType, TFileType>.Parse<TFile>() FileBase<TInternalFileType, TFileType>.Parse() FileBase<TInternalFileType, TFileType>.ParseAsync<TFile>() FileBase<TInternalFileType, TFileType>.ParseAsync() FileBase<TInternalFileType, TFileType>.Read() FileBase<TInternalFileType, TFileType>.ReadAsync() FileBase<TInternalFileType, TFileType>.ReadBinary() FileBase<TInternalFileType, TFileType>.ReadBinaryAsync() FileBase<TInternalFileType, TFileType>.Rename(string) FileBase<TInternalFileType, TFileType>.RenameAsync(string) FileBase<TInternalFileType, TFileType>.ToString() FileBase<TInternalFileType, TFileType>.Write(string, FileMode, Encoding) FileBase<TInternalFileType, TFileType>.Write(byte[], FileMode) FileBase<TInternalFileType, TFileType>.Write(IGenericFile, FileMode) FileBase<TInternalFileType, TFileType>.WriteAsync(string, FileMode, Encoding) FileBase<TInternalFileType, TFileType>.WriteAsync(byte[], FileMode) FileBase<TInternalFileType, TFileType>.WriteAsync(IGenericFile, FileMode) FileBase<TInternalFileType, TFileType>.Accessed FileBase<TInternalFileType, TFileType>.Created FileBase<TInternalFileType, TFileType>.Credentials FileBase<TInternalFileType, TFileType>.Directory FileBase<TInternalFileType, TFileType>.Exists FileBase<TInternalFileType, TFileType>.Extension FileBase<TInternalFileType, TFileType>.FullName FileBase<TInternalFileType, TFileType>.Length FileBase<TInternalFileType, TFileType>.Modified FileBase<TInternalFileType, TFileType>.Name FileBase<TInternalFileType, TFileType>.FormatManager FileBase<TInternalFileType, TFileType>.InternalFile object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Mithril.FileSystem.Abstractions.BaseClasses Assembly: Mithril.FileSystem.Abstractions.dll Syntax public abstract class MediaFileBaseClass<TInternalFileType, TFileType> : FileBase<TInternalFileType, TFileType>, IFile, IComparable<IFile>, IComparable, IEquatable<IFile> where TFileType : MediaFileBaseClass<TInternalFileType, TFileType>, new() Type Parameters Name Description TInternalFileType The type of the internal file type. TFileType The type of the file type. Constructors | Improve this Doc View Source MediaFileBaseClass() Initializes a new instance of the MediaFileBaseClass<TInternalFileType, TFileType> class. Declaration protected MediaFileBaseClass() See Also FileBase<InternalFileType, FileType> | Improve this Doc View Source MediaFileBaseClass(TInternalFileType) Initializes a new instance of the MediaFileBaseClass<TInternalFileType, TFileType> class. Declaration protected MediaFileBaseClass(TInternalFileType internalFile) Parameters Type Name Description TInternalFileType internalFile Internal file See Also FileBase<InternalFileType, FileType> | Improve this Doc View Source MediaFileBaseClass(TInternalFileType, Credentials?) Initializes a new instance of the MediaFileBaseClass<TInternalFileType, TFileType> class. Declaration protected MediaFileBaseClass(TInternalFileType internalFileType, Credentials? credentials = null) Parameters Type Name Description TInternalFileType internalFileType Type of the internal file. Credentials credentials The credentials. See Also FileBase<InternalFileType, FileType> Implements IFile IComparable<T> IComparable IEquatable<T> Extension Methods ExpandoObjectExtensions.ConvertToExpando<TEntity>(TEntity?) GenericExtensions.When<TObject>(TObject, bool, Func<TObject, TObject>) See Also FileBase<InternalFileType, FileType>"
  },
  "api/Mithril.FileSystem.Abstractions.BaseClasses.MediaFileSystemBaseClass.html": {
    "href": "api/Mithril.FileSystem.Abstractions.BaseClasses.MediaFileSystemBaseClass.html",
    "title": "Class MediaFileSystemBaseClass | Mithril API Reference",
    "keywords": "Class MediaFileSystemBaseClass File system base class Inheritance object FileSystemBase MediaFileSystemBaseClass LocalSystem Implements IDisposable IFileSystem Inherited Members FileSystemBase.CanHandle(string) FileSystemBase.Directory(string, Credentials) FileSystemBase.Dispose() FileSystemBase.File(string, Credentials) FileSystemBase.AbsolutePath(string) FileSystemBase.Dispose(bool) FileSystemBase.Name FileSystemBase.Order FileSystemBase.HandleRegex FileSystemBase.HandleRegexString object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Mithril.FileSystem.Abstractions.BaseClasses Assembly: Mithril.FileSystem.Abstractions.dll Syntax public abstract class MediaFileSystemBaseClass : FileSystemBase, IDisposable, IFileSystem Constructors | Improve this Doc View Source MediaFileSystemBaseClass() Initializes a new instance of the MediaFileSystemBaseClass class. Declaration protected MediaFileSystemBaseClass() See Also FileSystemBase Implements IDisposable IFileSystem Extension Methods ExpandoObjectExtensions.ConvertToExpando<TEntity>(TEntity?) GenericExtensions.When<TObject>(TObject, bool, Func<TObject, TObject>) See Also FileSystemBase"
  },
  "api/Mithril.FileSystem.Abstractions.BaseClasses.html": {
    "href": "api/Mithril.FileSystem.Abstractions.BaseClasses.html",
    "title": "Namespace Mithril.FileSystem.Abstractions.BaseClasses | Mithril API Reference",
    "keywords": "Namespace Mithril.FileSystem.Abstractions.BaseClasses Classes MediaDirectoryBaseClass<TInternalDirectoryType, TDirectoryType> Media directory base class MediaFileBaseClass<TInternalFileType, TFileType> Media file base class MediaFileSystemBaseClass File system base class"
  },
  "api/Mithril.FileSystem.Abstractions.Interfaces.IPathConverter.html": {
    "href": "api/Mithril.FileSystem.Abstractions.Interfaces.IPathConverter.html",
    "title": "Interface IPathConverter | Mithril API Reference",
    "keywords": "Interface IPathConverter Path converter Namespace: Mithril.FileSystem.Abstractions.Interfaces Assembly: Mithril.FileSystem.Abstractions.dll Syntax public interface IPathConverter Properties | Improve this Doc View Source Order Gets the order. Declaration int Order { get; } Property Value Type Description int The order. Methods | Improve this Doc View Source CanConvert(IFile) Determines whether this instance can convert the specified path. Declaration bool CanConvert(IFile file) Parameters Type Name Description IFile file The file. Returns Type Description bool true if this instance can convert the specified path; otherwise, false. | Improve this Doc View Source CanConvert(string) Determines whether this instance can convert the specified path. Declaration bool CanConvert(string path) Parameters Type Name Description string path The path. Returns Type Description bool true if this instance can convert the specified path; otherwise, false. | Improve this Doc View Source GetUrl(IFile) Gets the URL. Declaration Uri? GetUrl(IFile file) Parameters Type Name Description IFile file The file. Returns Type Description Uri | Improve this Doc View Source GetUrl(string) Converts the file in the path to a Uri. Declaration Uri? GetUrl(string path) Parameters Type Name Description string path The path. Returns Type Description Uri The Uri corresponding to the path. Extension Methods ExpandoObjectExtensions.ConvertToExpando<TEntity>(TEntity?) GenericExtensions.When<TObject>(TObject, bool, Func<TObject, TObject>)"
  },
  "api/Mithril.FileSystem.Abstractions.Interfaces.html": {
    "href": "api/Mithril.FileSystem.Abstractions.Interfaces.html",
    "title": "Namespace Mithril.FileSystem.Abstractions.Interfaces | Mithril API Reference",
    "keywords": "Namespace Mithril.FileSystem.Abstractions.Interfaces Interfaces IPathConverter Path converter"
  },
  "api/Mithril.FileSystem.Abstractions.Services.IFileSystemService.html": {
    "href": "api/Mithril.FileSystem.Abstractions.Services.IFileSystemService.html",
    "title": "Interface IFileSystemService | Mithril API Reference",
    "keywords": "Interface IFileSystemService File system service Inherited Members IDisposable.Dispose() Namespace: Mithril.FileSystem.Abstractions.Services Assembly: Mithril.FileSystem.Abstractions.dll Syntax public interface IFileSystemService : IDisposable Methods | Improve this Doc View Source Directory(string, Credentials?) Gets the directory pointer to the specified path. Declaration IDirectory? Directory(string path, Credentials? credentials = null) Parameters Type Name Description string path The path. Credentials credentials The credentials. Returns Type Description IDirectory The directory See Also IDisposable | Improve this Doc View Source File(string, Credentials?) Gets the file pointer to the specified path. Declaration IFile? File(string path, Credentials? credentials = null) Parameters Type Name Description string path The path. Credentials credentials The credentials. Returns Type Description IFile The file See Also IDisposable | Improve this Doc View Source GetUrl(IFile) Translates the path from the file system to the URL Declaration Uri? GetUrl(IFile file) Parameters Type Name Description IFile file The file. Returns Type Description Uri The url. See Also IDisposable | Improve this Doc View Source GetUrl(string) Translates the path from the file system to the URL Declaration Uri? GetUrl(string path) Parameters Type Name Description string path The path. Returns Type Description Uri The Url. See Also IDisposable Extension Methods ExpandoObjectExtensions.ConvertToExpando<TEntity>(TEntity?) GenericExtensions.When<TObject>(TObject, bool, Func<TObject, TObject>) See Also IDisposable"
  },
  "api/Mithril.FileSystem.Abstractions.Services.html": {
    "href": "api/Mithril.FileSystem.Abstractions.Services.html",
    "title": "Namespace Mithril.FileSystem.Abstractions.Services | Mithril API Reference",
    "keywords": "Namespace Mithril.FileSystem.Abstractions.Services Interfaces IFileSystemService File system service"
  },
  "api/Mithril.FileSystem.Controllers.FileBrowserController.html": {
    "href": "api/Mithril.FileSystem.Controllers.FileBrowserController.html",
    "title": "Class FileBrowserController | Mithril API Reference",
    "keywords": "Class FileBrowserController File browser controller Inheritance object ControllerBase Controller FileBrowserController Implements IActionFilter IAsyncActionFilter IFilterMetadata IDisposable Inherited Members Controller.View() Controller.View(string) Controller.View(object) Controller.View(string, object) Controller.PartialView() Controller.PartialView(string) Controller.PartialView(object) Controller.PartialView(string, object) Controller.ViewComponent(string) Controller.ViewComponent(Type) Controller.ViewComponent(string, object) Controller.ViewComponent(Type, object) Controller.Json(object) Controller.Json(object, object) Controller.OnActionExecuting(ActionExecutingContext) Controller.OnActionExecuted(ActionExecutedContext) Controller.OnActionExecutionAsync(ActionExecutingContext, ActionExecutionDelegate) Controller.Dispose() Controller.Dispose(bool) Controller.ViewData Controller.TempData Controller.ViewBag ControllerBase.StatusCode(int) ControllerBase.StatusCode(int, object) ControllerBase.Content(string) ControllerBase.Content(string, string) ControllerBase.Content(string, string, Encoding) ControllerBase.Content(string, MediaTypeHeaderValue) ControllerBase.NoContent() ControllerBase.Ok() ControllerBase.Ok(object) ControllerBase.Redirect(string) ControllerBase.RedirectPermanent(string) ControllerBase.RedirectPreserveMethod(string) ControllerBase.RedirectPermanentPreserveMethod(string) ControllerBase.LocalRedirect(string) ControllerBase.LocalRedirectPermanent(string) ControllerBase.LocalRedirectPreserveMethod(string) ControllerBase.LocalRedirectPermanentPreserveMethod(string) ControllerBase.RedirectToAction() ControllerBase.RedirectToAction(string) ControllerBase.RedirectToAction(string, object) ControllerBase.RedirectToAction(string, string) ControllerBase.RedirectToAction(string, string, object) ControllerBase.RedirectToAction(string, string, string) ControllerBase.RedirectToAction(string, string, object, string) ControllerBase.RedirectToActionPreserveMethod(string, string, object, string) ControllerBase.RedirectToActionPermanent(string) ControllerBase.RedirectToActionPermanent(string, object) ControllerBase.RedirectToActionPermanent(string, string) ControllerBase.RedirectToActionPermanent(string, string, string) ControllerBase.RedirectToActionPermanent(string, string, object) ControllerBase.RedirectToActionPermanent(string, string, object, string) ControllerBase.RedirectToActionPermanentPreserveMethod(string, string, object, string) ControllerBase.RedirectToRoute(string) ControllerBase.RedirectToRoute(object) ControllerBase.RedirectToRoute(string, object) ControllerBase.RedirectToRoute(string, string) ControllerBase.RedirectToRoute(string, object, string) ControllerBase.RedirectToRoutePreserveMethod(string, object, string) ControllerBase.RedirectToRoutePermanent(string) ControllerBase.RedirectToRoutePermanent(object) ControllerBase.RedirectToRoutePermanent(string, object) ControllerBase.RedirectToRoutePermanent(string, string) ControllerBase.RedirectToRoutePermanent(string, object, string) ControllerBase.RedirectToRoutePermanentPreserveMethod(string, object, string) ControllerBase.RedirectToPage(string) ControllerBase.RedirectToPage(string, object) ControllerBase.RedirectToPage(string, string) ControllerBase.RedirectToPage(string, string, object) ControllerBase.RedirectToPage(string, string, string) ControllerBase.RedirectToPage(string, string, object, string) ControllerBase.RedirectToPagePermanent(string) ControllerBase.RedirectToPagePermanent(string, object) ControllerBase.RedirectToPagePermanent(string, string) ControllerBase.RedirectToPagePermanent(string, string, string) ControllerBase.RedirectToPagePermanent(string, string, object, string) ControllerBase.RedirectToPagePreserveMethod(string, string, object, string) ControllerBase.RedirectToPagePermanentPreserveMethod(string, string, object, string) ControllerBase.File(byte[], string) ControllerBase.File(byte[], string, bool) ControllerBase.File(byte[], string, string) ControllerBase.File(byte[], string, string, bool) ControllerBase.File(byte[], string, DateTimeOffset?, EntityTagHeaderValue) ControllerBase.File(byte[], string, DateTimeOffset?, EntityTagHeaderValue, bool) ControllerBase.File(byte[], string, string, DateTimeOffset?, EntityTagHeaderValue) ControllerBase.File(byte[], string, string, DateTimeOffset?, EntityTagHeaderValue, bool) ControllerBase.File(Stream, string) ControllerBase.File(Stream, string, bool) ControllerBase.File(Stream, string, string) ControllerBase.File(Stream, string, string, bool) ControllerBase.File(Stream, string, DateTimeOffset?, EntityTagHeaderValue) ControllerBase.File(Stream, string, DateTimeOffset?, EntityTagHeaderValue, bool) ControllerBase.File(Stream, string, string, DateTimeOffset?, EntityTagHeaderValue) ControllerBase.File(Stream, string, string, DateTimeOffset?, EntityTagHeaderValue, bool) ControllerBase.File(string, string) ControllerBase.File(string, string, bool) ControllerBase.File(string, string, string) ControllerBase.File(string, string, string, bool) ControllerBase.File(string, string, DateTimeOffset?, EntityTagHeaderValue) ControllerBase.File(string, string, DateTimeOffset?, EntityTagHeaderValue, bool) ControllerBase.File(string, string, string, DateTimeOffset?, EntityTagHeaderValue) ControllerBase.File(string, string, string, DateTimeOffset?, EntityTagHeaderValue, bool) ControllerBase.PhysicalFile(string, string) ControllerBase.PhysicalFile(string, string, bool) ControllerBase.PhysicalFile(string, string, string) ControllerBase.PhysicalFile(string, string, string, bool) ControllerBase.PhysicalFile(string, string, DateTimeOffset?, EntityTagHeaderValue) ControllerBase.PhysicalFile(string, string, DateTimeOffset?, EntityTagHeaderValue, bool) ControllerBase.PhysicalFile(string, string, string, DateTimeOffset?, EntityTagHeaderValue) ControllerBase.PhysicalFile(string, string, string, DateTimeOffset?, EntityTagHeaderValue, bool) ControllerBase.Unauthorized() ControllerBase.Unauthorized(object) ControllerBase.NotFound() ControllerBase.NotFound(object) ControllerBase.BadRequest() ControllerBase.BadRequest(object) ControllerBase.BadRequest(ModelStateDictionary) ControllerBase.UnprocessableEntity() ControllerBase.UnprocessableEntity(object) ControllerBase.UnprocessableEntity(ModelStateDictionary) ControllerBase.Conflict() ControllerBase.Conflict(object) ControllerBase.Conflict(ModelStateDictionary) ControllerBase.Problem(string, string, int?, string, string) ControllerBase.ValidationProblem(ValidationProblemDetails) ControllerBase.ValidationProblem(ModelStateDictionary) ControllerBase.ValidationProblem() ControllerBase.ValidationProblem(string, string, int?, string, string, ModelStateDictionary) ControllerBase.Created(string, object) ControllerBase.Created(Uri, object) ControllerBase.CreatedAtAction(string, object) ControllerBase.CreatedAtAction(string, object, object) ControllerBase.CreatedAtAction(string, string, object, object) ControllerBase.CreatedAtRoute(string, object) ControllerBase.CreatedAtRoute(object, object) ControllerBase.CreatedAtRoute(string, object, object) ControllerBase.Accepted() ControllerBase.Accepted(object) ControllerBase.Accepted(Uri) ControllerBase.Accepted(string) ControllerBase.Accepted(string, object) ControllerBase.Accepted(Uri, object) ControllerBase.AcceptedAtAction(string) ControllerBase.AcceptedAtAction(string, string) ControllerBase.AcceptedAtAction(string, object) ControllerBase.AcceptedAtAction(string, string, object) ControllerBase.AcceptedAtAction(string, object, object) ControllerBase.AcceptedAtAction(string, string, object, object) ControllerBase.AcceptedAtRoute(object) ControllerBase.AcceptedAtRoute(string) ControllerBase.AcceptedAtRoute(string, object) ControllerBase.AcceptedAtRoute(object, object) ControllerBase.AcceptedAtRoute(string, object, object) ControllerBase.Challenge() ControllerBase.Challenge(params string[]) ControllerBase.Challenge(AuthenticationProperties) ControllerBase.Challenge(AuthenticationProperties, params string[]) ControllerBase.Forbid() ControllerBase.Forbid(params string[]) ControllerBase.Forbid(AuthenticationProperties) ControllerBase.Forbid(AuthenticationProperties, params string[]) ControllerBase.SignIn(ClaimsPrincipal) ControllerBase.SignIn(ClaimsPrincipal, string) ControllerBase.SignIn(ClaimsPrincipal, AuthenticationProperties) ControllerBase.SignIn(ClaimsPrincipal, AuthenticationProperties, string) ControllerBase.SignOut() ControllerBase.SignOut(AuthenticationProperties) ControllerBase.SignOut(params string[]) ControllerBase.SignOut(AuthenticationProperties, params string[]) ControllerBase.TryUpdateModelAsync<TModel>(TModel) ControllerBase.TryUpdateModelAsync<TModel>(TModel, string) ControllerBase.TryUpdateModelAsync<TModel>(TModel, string, IValueProvider) ControllerBase.TryUpdateModelAsync<TModel>(TModel, string, params Expression<Func<TModel, object>>[]) ControllerBase.TryUpdateModelAsync<TModel>(TModel, string, Func<ModelMetadata, bool>) ControllerBase.TryUpdateModelAsync<TModel>(TModel, string, IValueProvider, params Expression<Func<TModel, object>>[]) ControllerBase.TryUpdateModelAsync<TModel>(TModel, string, IValueProvider, Func<ModelMetadata, bool>) ControllerBase.TryUpdateModelAsync(object, Type, string) ControllerBase.TryUpdateModelAsync(object, Type, string, IValueProvider, Func<ModelMetadata, bool>) ControllerBase.TryValidateModel(object) ControllerBase.TryValidateModel(object, string) ControllerBase.HttpContext ControllerBase.Request ControllerBase.Response ControllerBase.RouteData ControllerBase.ModelState ControllerBase.ControllerContext ControllerBase.MetadataProvider ControllerBase.ModelBinderFactory ControllerBase.Url ControllerBase.ObjectValidator ControllerBase.ProblemDetailsFactory ControllerBase.User ControllerBase.Empty object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Mithril.FileSystem.Controllers Assembly: Mithril.FileSystem.dll Syntax [Area(\"Services\")] [Authorize] [Route(\"/Services/[controller]\")] [ApiExplorerSettings(IgnoreApi = true)] [AddHeader(\"X-Frame-Options\", \"SAMEORIGIN\")] public class FileBrowserController : Controller, IActionFilter, IAsyncActionFilter, IFilterMetadata, IDisposable Constructors | Improve this Doc View Source FileBrowserController(IFileSystemService?) Initializes a new instance of the FileBrowserController class. Declaration public FileBrowserController(IFileSystemService? fileManager) Parameters Type Name Description IFileSystemService fileManager The file manager. See Also Controller Properties | Improve this Doc View Source FileManager Gets the file manager. Declaration public IFileSystemService? FileManager { get; } Property Value Type Description IFileSystemService The file manager. See Also Controller Methods | Improve this Doc View Source Browser(string) Returns the file browser based on the file type. Declaration [HttpGet(\"{type}\")] public IActionResult Browser(string type) Parameters Type Name Description string type The type. Returns Type Description IActionResult The view. See Also Controller | Improve this Doc View Source Browser(string, IFormFile) Uploads files to the browser. Declaration [HttpPost(\"{type}\")] public IActionResult Browser(string type, IFormFile file) Parameters Type Name Description string type The type. IFormFile file The file. Returns Type Description IActionResult The result. See Also Controller Implements IActionFilter IAsyncActionFilter IFilterMetadata IDisposable Extension Methods ExpandoObjectExtensions.ConvertToExpando<TEntity>(TEntity?) GenericExtensions.When<TObject>(TObject, bool, Func<TObject, TObject>) See Also Controller"
  },
  "api/Mithril.FileSystem.Controllers.html": {
    "href": "api/Mithril.FileSystem.Controllers.html",
    "title": "Namespace Mithril.FileSystem.Controllers | Mithril API Reference",
    "keywords": "Namespace Mithril.FileSystem.Controllers Classes FileBrowserController File browser controller"
  },
  "api/Mithril.FileSystem.Exceptions.ImageSaveException.html": {
    "href": "api/Mithril.FileSystem.Exceptions.ImageSaveException.html",
    "title": "Class ImageSaveException | Mithril API Reference",
    "keywords": "Class ImageSaveException Image save exception Inheritance object Exception ImageSaveException Implements ISerializable Inherited Members Exception.GetBaseException() Exception.GetObjectData(SerializationInfo, StreamingContext) Exception.GetType() Exception.ToString() Exception.Data Exception.HelpLink Exception.HResult Exception.InnerException Exception.Message Exception.Source Exception.StackTrace Exception.TargetSite Exception.SerializeObjectState object.Equals(object) object.Equals(object, object) object.GetHashCode() object.MemberwiseClone() object.ReferenceEquals(object, object) Namespace: Mithril.FileSystem.Exceptions Assembly: Mithril.FileSystem.dll Syntax public class ImageSaveException : Exception, ISerializable Constructors | Improve this Doc View Source ImageSaveException() Initializes a new instance of the ImageSaveException class. Declaration public ImageSaveException() | Improve this Doc View Source ImageSaveException(string) Initializes a new instance of the ImageSaveException class. Declaration public ImageSaveException(string message) Parameters Type Name Description string message The message that describes the error. | Improve this Doc View Source ImageSaveException(string, Exception) Initializes a new instance of the ImageSaveException class. Declaration public ImageSaveException(string message, Exception innerException) Parameters Type Name Description string message The error message that explains the reason for the exception. Exception innerException The exception that is the cause of the current exception, or a null reference ( Nothing in Visual Basic) if no inner exception is specified. Implements ISerializable Extension Methods ExpandoObjectExtensions.ConvertToExpando<TEntity>(TEntity?) GenericExtensions.When<TObject>(TObject, bool, Func<TObject, TObject>)"
  },
  "api/Mithril.FileSystem.Exceptions.html": {
    "href": "api/Mithril.FileSystem.Exceptions.html",
    "title": "Namespace Mithril.FileSystem.Exceptions | Mithril API Reference",
    "keywords": "Namespace Mithril.FileSystem.Exceptions Classes ImageSaveException Image save exception"
  },
  "api/Mithril.FileSystem.FileSystemModule.html": {
    "href": "api/Mithril.FileSystem.FileSystemModule.html",
    "title": "Class FileSystemModule | Mithril API Reference",
    "keywords": "Class FileSystemModule File system module Inheritance object ModuleBaseClass<FileSystemModule> FileSystemModule Implements IEquatable<FileSystemModule> IModule Inherited Members ModuleBaseClass<FileSystemModule>.Category ModuleBaseClass<FileSystemModule>.ContentPath ModuleBaseClass<FileSystemModule>.Features ModuleBaseClass<FileSystemModule>.ID ModuleBaseClass<FileSystemModule>.LastModified ModuleBaseClass<FileSystemModule>.Name ModuleBaseClass<FileSystemModule>.Order ModuleBaseClass<FileSystemModule>.Tags ModuleBaseClass<FileSystemModule>.Version ModuleBaseClass<FileSystemModule>.ConfigureApplication(IApplicationBuilder, IConfiguration, IHostEnvironment) ModuleBaseClass<FileSystemModule>.ConfigureHostSettings(IHostBuilder, IConfiguration, IHostEnvironment) ModuleBaseClass<FileSystemModule>.ConfigureLoggingSettings(ILoggingBuilder, IConfiguration, IHostEnvironment) ModuleBaseClass<FileSystemModule>.ConfigureMVC(IMvcBuilder, IConfiguration, IHostEnvironment) ModuleBaseClass<FileSystemModule>.ConfigureRoutes(IEndpointRouteBuilder, IConfiguration, IHostEnvironment) ModuleBaseClass<FileSystemModule>.ConfigureWebHostSettings(IWebHostBuilder, IConfiguration, IHostEnvironment) ModuleBaseClass<FileSystemModule>.Equals(object) ModuleBaseClass<FileSystemModule>.Equals(FileSystemModule) ModuleBaseClass<FileSystemModule>.GetHashCode() ModuleBaseClass<FileSystemModule>.InitializeDataAsync(IDataService, IServiceProvider) ModuleBaseClass<FileSystemModule>.OnStarted() ModuleBaseClass<FileSystemModule>.OnStopped() ModuleBaseClass<FileSystemModule>.OnStopping() object.Equals(object, object) object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Mithril.FileSystem Assembly: Mithril.FileSystem.dll Syntax public class FileSystemModule : ModuleBaseClass<FileSystemModule>, IEquatable<FileSystemModule>, IModule Methods | Improve this Doc View Source ConfigureServices(IServiceCollection?, IConfiguration?, IHostEnvironment?) Configures the services for the module. Declaration public override IServiceCollection? ConfigureServices(IServiceCollection? services, IConfiguration? configuration, IHostEnvironment? environment) Parameters Type Name Description IServiceCollection services The services collection. IConfiguration configuration The configuration. IHostEnvironment environment The environment. Returns Type Description IServiceCollection Services Overrides ModuleBaseClass<FileSystemModule>.ConfigureServices(IServiceCollection, IConfiguration, IHostEnvironment) See Also ModuleBaseClass<TModule> Implements IEquatable<T> IModule Extension Methods ExpandoObjectExtensions.ConvertToExpando<TEntity>(TEntity?) GenericExtensions.When<TObject>(TObject, bool, Func<TObject, TObject>) See Also ModuleBaseClass<TModule>"
  },
  "api/Mithril.FileSystem.HealthChecks.DiskSpaceHealthCheck.html": {
    "href": "api/Mithril.FileSystem.HealthChecks.DiskSpaceHealthCheck.html",
    "title": "Class DiskSpaceHealthCheck | Mithril API Reference",
    "keywords": "Class DiskSpaceHealthCheck Disk space health check Inheritance object DiskSpaceHealthCheck Implements IHealthCheck Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Mithril.FileSystem.HealthChecks Assembly: Mithril.FileSystem.dll Syntax public class DiskSpaceHealthCheck : IHealthCheck Methods | Improve this Doc View Source CheckHealthAsync(HealthCheckContext, CancellationToken) Runs the health check, returning the status of the component being checked. Declaration public Task<HealthCheckResult> CheckHealthAsync(HealthCheckContext context, CancellationToken cancellationToken = default) Parameters Type Name Description HealthCheckContext context A context object associated with the current execution. CancellationToken cancellationToken A CancellationToken that can be used to cancel the health check. Returns Type Description Task<HealthCheckResult> A Task<TResult> that completes when the health check has finished, yielding the status of the component being checked. See Also IHealthCheck Implements IHealthCheck Extension Methods ExpandoObjectExtensions.ConvertToExpando<TEntity>(TEntity?) GenericExtensions.When<TObject>(TObject, bool, Func<TObject, TObject>) See Also IHealthCheck"
  },
  "api/Mithril.FileSystem.HealthChecks.html": {
    "href": "api/Mithril.FileSystem.HealthChecks.html",
    "title": "Namespace Mithril.FileSystem.HealthChecks | Mithril API Reference",
    "keywords": "Namespace Mithril.FileSystem.HealthChecks Classes DiskSpaceHealthCheck Disk space health check"
  },
  "api/Mithril.FileSystem.LocalFileSystem.LocalPathConverter.html": {
    "href": "api/Mithril.FileSystem.LocalFileSystem.LocalPathConverter.html",
    "title": "Class LocalPathConverter | Mithril API Reference",
    "keywords": "Class LocalPathConverter Local path converter Inheritance object LocalPathConverter Implements IPathConverter Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Mithril.FileSystem.LocalFileSystem Assembly: Mithril.FileSystem.dll Syntax public class LocalPathConverter : IPathConverter Constructors | Improve this Doc View Source LocalPathConverter(IWebHostEnvironment?) Initializes a new instance of the LocalPathConverter class. Declaration public LocalPathConverter(IWebHostEnvironment? webHostEnvironment = null) Parameters Type Name Description IWebHostEnvironment webHostEnvironment The web host environment. See Also IPathConverter Properties | Improve this Doc View Source ContentRootPath Gets the content root path. Declaration public string ContentRootPath { get; } Property Value Type Description string The content root path. See Also IPathConverter | Improve this Doc View Source Order Gets the order. Declaration public int Order { get; } Property Value Type Description int The order. See Also IPathConverter Methods | Improve this Doc View Source CanConvert(IFile) Determines whether this instance can convert the specified path. Declaration public bool CanConvert(IFile file) Parameters Type Name Description IFile file The file. Returns Type Description bool true if this instance can convert the specified path; otherwise, false. See Also IPathConverter | Improve this Doc View Source CanConvert(string) Determines whether this instance can convert the specified path. Declaration public bool CanConvert(string path) Parameters Type Name Description string path The path. Returns Type Description bool true if this instance can convert the specified path; otherwise, false. See Also IPathConverter | Improve this Doc View Source GetUrl(IFile) Gets the URL. Declaration public Uri? GetUrl(IFile file) Parameters Type Name Description IFile file The file. Returns Type Description Uri See Also IPathConverter | Improve this Doc View Source GetUrl(string) Converts the file in the path to a Uri. Declaration public Uri? GetUrl(string path) Parameters Type Name Description string path The path. Returns Type Description Uri The Uri corresponding to the path. See Also IPathConverter Implements IPathConverter Extension Methods ExpandoObjectExtensions.ConvertToExpando<TEntity>(TEntity?) GenericExtensions.When<TObject>(TObject, bool, Func<TObject, TObject>) See Also IPathConverter"
  },
  "api/Mithril.FileSystem.LocalFileSystem.LocalSystem.html": {
    "href": "api/Mithril.FileSystem.LocalFileSystem.LocalSystem.html",
    "title": "Class LocalSystem | Mithril API Reference",
    "keywords": "Class LocalSystem Local file system Inheritance object FileSystemBase MediaFileSystemBaseClass LocalSystem Implements IDisposable IFileSystem Inherited Members FileSystemBase.CanHandle(string) FileSystemBase.Dispose() FileSystemBase.HandleRegex object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Mithril.FileSystem.LocalFileSystem Assembly: Mithril.FileSystem.dll Syntax public class LocalSystem : MediaFileSystemBaseClass, IDisposable, IFileSystem Constructors | Improve this Doc View Source LocalSystem(IWebHostEnvironment?) Initializes a new instance of the LocalSystem class. Declaration public LocalSystem(IWebHostEnvironment? hostingEnvironment = null) Parameters Type Name Description IWebHostEnvironment hostingEnvironment The hosting environment. See Also MediaFileSystemBaseClass Properties | Improve this Doc View Source HandleRegexString Regex string used to determine if the file system can handle the path Declaration protected override string HandleRegexString { get; } Property Value Type Description string Overrides FileSystemBase.HandleRegexString See Also MediaFileSystemBaseClass | Improve this Doc View Source Name Name of the file system Declaration public override string Name { get; } Property Value Type Description string Overrides FileSystemBase.Name See Also MediaFileSystemBaseClass | Improve this Doc View Source Order Gets the order (lower numbers occur first). Declaration public override int Order { get; } Property Value Type Description int The order. Overrides FileSystemBase.Order See Also MediaFileSystemBaseClass Methods | Improve this Doc View Source AbsolutePath(string?) Gets the absolute path of the variable passed in Declaration protected override string AbsolutePath(string? path) Parameters Type Name Description string path Path to convert to absolute Returns Type Description string The absolute path of the path passed in Overrides FileSystemBase.AbsolutePath(string) See Also MediaFileSystemBaseClass | Improve this Doc View Source Directory(string?, Credentials?) Gets the directory representation for the directory Declaration public override IDirectory Directory(string? path, Credentials? credentials = null) Parameters Type Name Description string path Path to the directory Credentials credentials The credentials. Returns Type Description IDirectory The directory object Overrides FileSystemBase.Directory(string, Credentials) See Also MediaFileSystemBaseClass | Improve this Doc View Source Dispose(bool) Releases unmanaged and - optionally - managed resources. Declaration protected override void Dispose(bool managed) Parameters Type Name Description bool managed true to release both managed and unmanaged resources; false to release only unmanaged resources. Overrides FileSystemBase.Dispose(bool) See Also MediaFileSystemBaseClass | Improve this Doc View Source File(string?, Credentials?) Gets the class representation for the file Declaration public override IFile File(string? path, Credentials? credentials = null) Parameters Type Name Description string path Path to the file Credentials credentials The credentials. Returns Type Description IFile The file object Overrides FileSystemBase.File(string, Credentials) See Also MediaFileSystemBaseClass Implements IDisposable IFileSystem Extension Methods ExpandoObjectExtensions.ConvertToExpando<TEntity>(TEntity?) GenericExtensions.When<TObject>(TObject, bool, Func<TObject, TObject>) See Also MediaFileSystemBaseClass"
  },
  "api/Mithril.FileSystem.LocalFileSystem.html": {
    "href": "api/Mithril.FileSystem.LocalFileSystem.html",
    "title": "Namespace Mithril.FileSystem.LocalFileSystem | Mithril API Reference",
    "keywords": "Namespace Mithril.FileSystem.LocalFileSystem Classes LocalPathConverter Local path converter LocalSystem Local file system"
  },
  "api/Mithril.FileSystem.Services.FileSystemService.html": {
    "href": "api/Mithril.FileSystem.Services.FileSystemService.html",
    "title": "Class FileSystemService | Mithril API Reference",
    "keywords": "Class FileSystemService File system service Inheritance object FileSystemService Implements IFileSystemService IDisposable Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Mithril.FileSystem.Services Assembly: Mithril.FileSystem.dll Syntax public class FileSystemService : IFileSystemService, IDisposable Constructors | Improve this Doc View Source FileSystemService(FileSystem?, IEnumerable<IPathConverter>) Initializes a new instance of the FileSystemService class. Declaration public FileSystemService(FileSystem? fileSystem, IEnumerable<IPathConverter> pathConverters) Parameters Type Name Description FileSystem fileSystem The file system. IEnumerable<IPathConverter> pathConverters The path converters. See Also IFileSystemService Methods | Improve this Doc View Source Directory(string, Credentials?) Directories the specified path. Declaration public IDirectory? Directory(string path, Credentials? credentials = null) Parameters Type Name Description string path The path. Credentials credentials The credentials. Returns Type Description IDirectory The directory See Also IFileSystemService | Improve this Doc View Source Dispose() Releases unmanaged and - optionally - managed resources. Declaration public void Dispose() See Also IFileSystemService | Improve this Doc View Source Dispose(bool) Releases unmanaged and - optionally - managed resources. Declaration protected virtual void Dispose(bool managed) Parameters Type Name Description bool managed true to release both managed and unmanaged resources; false to release only unmanaged resources. See Also IFileSystemService | Improve this Doc View Source File(string, Credentials?) Files the specified path. Declaration public IFile? File(string path, Credentials? credentials = null) Parameters Type Name Description string path The path. Credentials credentials The credentials. Returns Type Description IFile The file See Also IFileSystemService | Improve this Doc View Source GetUrl(IFile) Translates the path from the file system to the URL Declaration public Uri? GetUrl(IFile file) Parameters Type Name Description IFile file The file. Returns Type Description Uri The url. See Also IFileSystemService | Improve this Doc View Source GetUrl(string) Translates the path from the file system to the URL Declaration public Uri? GetUrl(string path) Parameters Type Name Description string path The path. Returns Type Description Uri The Url. See Also IFileSystemService Implements IFileSystemService IDisposable Extension Methods ExpandoObjectExtensions.ConvertToExpando<TEntity>(TEntity?) GenericExtensions.When<TObject>(TObject, bool, Func<TObject, TObject>) See Also IFileSystemService"
  },
  "api/Mithril.FileSystem.Services.Image.html": {
    "href": "api/Mithril.FileSystem.Services.Image.html",
    "title": "Class Image | Mithril API Reference",
    "keywords": "Class Image Image class Inheritance object Image Implements IDisposable Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Mithril.FileSystem.Services Assembly: Mithril.FileSystem.dll Syntax public class Image : IDisposable Constructors | Improve this Doc View Source Image(IFile?) Initializes a new instance of the Image class. Declaration public Image(IFile? fileInfo) Parameters Type Name Description IFile fileInfo The file information. Properties | Improve this Doc View Source Height Gets the height. Declaration public int Height { get; } Property Value Type Description int The height. | Improve this Doc View Source Width Gets the width. Declaration public int Width { get; } Property Value Type Description int The width. Methods | Improve this Doc View Source Dispose() Performs application-defined tasks associated with freeing, releasing, or resetting unmanaged resources. Declaration public void Dispose() | Improve this Doc View Source Dispose(bool) Releases unmanaged and - optionally - managed resources. Declaration protected virtual void Dispose(bool disposing) Parameters Type Name Description bool disposing true to release both managed and unmanaged resources; false to release only unmanaged resources. | Improve this Doc View Source Resize(int) Resizes the image to the specified maximum width. Declaration public Image Resize(int maxWidth) Parameters Type Name Description int maxWidth The maximum width. Returns Type Description Image This. | Improve this Doc View Source Save(IFile?, int) Saves the image to the specified location. Declaration public Image Save(IFile? location, int quality) Parameters Type Name Description IFile location The location. int quality The quality. Returns Type Description Image This. Exceptions Type Condition ImageSaveException Data could not be encoded Implements IDisposable Extension Methods ExpandoObjectExtensions.ConvertToExpando<TEntity>(TEntity?) GenericExtensions.When<TObject>(TObject, bool, Func<TObject, TObject>)"
  },
  "api/Mithril.FileSystem.Services.html": {
    "href": "api/Mithril.FileSystem.Services.html",
    "title": "Namespace Mithril.FileSystem.Services | Mithril API Reference",
    "keywords": "Namespace Mithril.FileSystem.Services Classes FileSystemService File system service Image Image class"
  },
  "api/Mithril.FileSystem.ViewModels.FileBrowserDirectoryVM.html": {
    "href": "api/Mithril.FileSystem.ViewModels.FileBrowserDirectoryVM.html",
    "title": "Class FileBrowserDirectoryVM | Mithril API Reference",
    "keywords": "Class FileBrowserDirectoryVM File browser directory VM Inheritance object FileBrowserDirectoryVM Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Mithril.FileSystem.ViewModels Assembly: Mithril.FileSystem.dll Syntax public class FileBrowserDirectoryVM Constructors | Improve this Doc View Source FileBrowserDirectoryVM(IDirectory?, string?, IFile?, IFileSystemService?) Initializes a new instance of the FileBrowserDirectoryVM class. Declaration public FileBrowserDirectoryVM(IDirectory? directory, string? type, IFile? selectedFile, IFileSystemService? fileSystemService) Parameters Type Name Description IDirectory directory The directory. string type The type. IFile selectedFile The selected file. IFileSystemService fileSystemService The file system service. Properties | Improve this Doc View Source Files Gets or sets the files. Declaration public MediaFileVM[] Files { get; set; } Property Value Type Description MediaFileVM[] The files. | Improve this Doc View Source Name Gets or sets the name. Declaration public string? Name { get; set; } Property Value Type Description string The name. | Improve this Doc View Source SelectedFile Gets the selected file. Declaration public MediaFileVM? SelectedFile { get; } Property Value Type Description MediaFileVM The selected file. | Improve this Doc View Source SubDirectories Gets or sets the sub directories. Declaration public FileBrowserDirectoryVM[] SubDirectories { get; set; } Property Value Type Description FileBrowserDirectoryVM[] The sub directories. | Improve this Doc View Source Type Gets or sets the type. Declaration public string? Type { get; set; } Property Value Type Description string The type. Extension Methods ExpandoObjectExtensions.ConvertToExpando<TEntity>(TEntity?) GenericExtensions.When<TObject>(TObject, bool, Func<TObject, TObject>)"
  },
  "api/Mithril.FileSystem.ViewModels.MediaFileVM.html": {
    "href": "api/Mithril.FileSystem.ViewModels.MediaFileVM.html",
    "title": "Class MediaFileVM | Mithril API Reference",
    "keywords": "Class MediaFileVM Media file VM Inheritance object MediaFileVM Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Mithril.FileSystem.ViewModels Assembly: Mithril.FileSystem.dll Syntax public class MediaFileVM Constructors | Improve this Doc View Source MediaFileVM() Initializes a new instance of the MediaFileVM class. Declaration public MediaFileVM() | Improve this Doc View Source MediaFileVM(IFile?, string?, IFileSystemService?) Initializes a new instance of the MediaFileVM class. Declaration public MediaFileVM(IFile? file, string? type, IFileSystemService? fileSystemService) Parameters Type Name Description IFile file The file. string type The type. IFileSystemService fileSystemService The file system service. Properties | Improve this Doc View Source DateModified Gets or sets the date modified. Declaration public DateTime DateModified { get; set; } Property Value Type Description DateTime The date modified. | Improve this Doc View Source DeleteURL Gets or sets the delete URL. Declaration public string? DeleteURL { get; set; } Property Value Type Description string The delete URL. | Improve this Doc View Source Icon Gets or sets the icon. Declaration public string? Icon { get; set; } Property Value Type Description string The icon. | Improve this Doc View Source ImageURL Gets or sets the image URL. Declaration public string? ImageURL { get; set; } Property Value Type Description string The image URL. | Improve this Doc View Source Name Gets or sets the name. Declaration public string? Name { get; set; } Property Value Type Description string The name. | Improve this Doc View Source URL Gets or sets the URL. Declaration public string? URL { get; set; } Property Value Type Description string The URL. Extension Methods ExpandoObjectExtensions.ConvertToExpando<TEntity>(TEntity?) GenericExtensions.When<TObject>(TObject, bool, Func<TObject, TObject>)"
  },
  "api/Mithril.FileSystem.ViewModels.html": {
    "href": "api/Mithril.FileSystem.ViewModels.html",
    "title": "Namespace Mithril.FileSystem.ViewModels | Mithril API Reference",
    "keywords": "Namespace Mithril.FileSystem.ViewModels Classes FileBrowserDirectoryVM File browser directory VM MediaFileVM Media file VM"
  },
  "api/Mithril.FileSystem.html": {
    "href": "api/Mithril.FileSystem.html",
    "title": "Namespace Mithril.FileSystem | Mithril API Reference",
    "keywords": "Namespace Mithril.FileSystem Classes FileSystemModule File system module"
  },
  "api/Mithril.HealthChecks.Abstractions.BaseClasses.ResponseFormatterBaseClass.html": {
    "href": "api/Mithril.HealthChecks.Abstractions.BaseClasses.ResponseFormatterBaseClass.html",
    "title": "Class ResponseFormatterBaseClass | Mithril API Reference",
    "keywords": "Class ResponseFormatterBaseClass Response formatter base class Inheritance object ResponseFormatterBaseClass DefaultJsonFormatter DefaultTextFormatter Implements IResponseFormatter Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Mithril.HealthChecks.Abstractions.BaseClasses Assembly: Mithril.HealthChecks.Abstractions.dll Syntax public abstract class ResponseFormatterBaseClass : IResponseFormatter Constructors | Improve this Doc View Source ResponseFormatterBaseClass() Initializes a new instance of the ResponseFormatterBaseClass class. Declaration protected ResponseFormatterBaseClass() See Also IResponseFormatter Properties | Improve this Doc View Source Order Gets the order. Declaration public virtual int Order { get; } Property Value Type Description int The order. See Also IResponseFormatter Methods | Improve this Doc View Source Accepts(string) Acceptses the specified format. Declaration public virtual bool Accepts(string format) Parameters Type Name Description string format The format. Returns Type Description bool True if it accepts that format, false otherwise. See Also IResponseFormatter | Improve this Doc View Source SendResponseAsync(HttpContext, HealthReport) Sends the response asynchronously. Declaration public abstract Task SendResponseAsync(HttpContext httpContext, HealthReport healthReport) Parameters Type Name Description HttpContext httpContext The HTTP context. HealthReport healthReport The health report. Returns Type Description Task The async task. See Also IResponseFormatter Implements IResponseFormatter Extension Methods ExpandoObjectExtensions.ConvertToExpando<TEntity>(TEntity?) GenericExtensions.When<TObject>(TObject, bool, Func<TObject, TObject>) See Also IResponseFormatter"
  },
  "api/Mithril.HealthChecks.Abstractions.BaseClasses.html": {
    "href": "api/Mithril.HealthChecks.Abstractions.BaseClasses.html",
    "title": "Namespace Mithril.HealthChecks.Abstractions.BaseClasses | Mithril API Reference",
    "keywords": "Namespace Mithril.HealthChecks.Abstractions.BaseClasses Classes ResponseFormatterBaseClass Response formatter base class"
  },
  "api/Mithril.HealthChecks.Abstractions.Configuration.MithrilHealthCheckOptions.html": {
    "href": "api/Mithril.HealthChecks.Abstractions.Configuration.MithrilHealthCheckOptions.html",
    "title": "Class MithrilHealthCheckOptions | Mithril API Reference",
    "keywords": "Class MithrilHealthCheckOptions Health checks config options Inheritance object MithrilHealthCheckOptions Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Mithril.HealthChecks.Abstractions.Configuration Assembly: Mithril.HealthChecks.Abstractions.dll Syntax public class MithrilHealthCheckOptions Properties | Improve this Doc View Source CheckEndPoint Gets the check end point (defaults to '/api/healthchecks'). Declaration public string? CheckEndPoint { get; set; } Property Value Type Description string The check end point (defaults to '/api/healthchecks'). | Improve this Doc View Source DefaultTimeout Gets or sets the default timeout (in seconds). Declaration public int? DefaultTimeout { get; set; } Property Value Type Description int? The default timeout (in seconds). Extension Methods ExpandoObjectExtensions.ConvertToExpando<TEntity>(TEntity?) GenericExtensions.When<TObject>(TObject, bool, Func<TObject, TObject>)"
  },
  "api/Mithril.HealthChecks.Abstractions.Configuration.html": {
    "href": "api/Mithril.HealthChecks.Abstractions.Configuration.html",
    "title": "Namespace Mithril.HealthChecks.Abstractions.Configuration | Mithril API Reference",
    "keywords": "Namespace Mithril.HealthChecks.Abstractions.Configuration Classes MithrilHealthCheckOptions Health checks config options"
  },
  "api/Mithril.HealthChecks.Abstractions.Interfaces.IResponseFormatter.html": {
    "href": "api/Mithril.HealthChecks.Abstractions.Interfaces.IResponseFormatter.html",
    "title": "Interface IResponseFormatter | Mithril API Reference",
    "keywords": "Interface IResponseFormatter Response formatter Namespace: Mithril.HealthChecks.Abstractions.Interfaces Assembly: Mithril.HealthChecks.Abstractions.dll Syntax public interface IResponseFormatter Properties | Improve this Doc View Source Order Gets the order. Declaration int Order { get; } Property Value Type Description int The order. Methods | Improve this Doc View Source Accepts(string) Acceptses the specified format. Declaration bool Accepts(string format) Parameters Type Name Description string format The format. Returns Type Description bool True if it accepts that format, false otherwise. | Improve this Doc View Source SendResponseAsync(HttpContext, HealthReport) Sends the response asynchronously. Declaration Task SendResponseAsync(HttpContext httpContext, HealthReport healthReport) Parameters Type Name Description HttpContext httpContext The HTTP context. HealthReport healthReport The health report. Returns Type Description Task The async task. Extension Methods ExpandoObjectExtensions.ConvertToExpando<TEntity>(TEntity?) GenericExtensions.When<TObject>(TObject, bool, Func<TObject, TObject>)"
  },
  "api/Mithril.HealthChecks.Abstractions.Interfaces.html": {
    "href": "api/Mithril.HealthChecks.Abstractions.Interfaces.html",
    "title": "Namespace Mithril.HealthChecks.Abstractions.Interfaces | Mithril API Reference",
    "keywords": "Namespace Mithril.HealthChecks.Abstractions.Interfaces Interfaces IResponseFormatter Response formatter"
  },
  "api/Mithril.HealthChecks.Abstractions.Services.IResponseFormatterService.html": {
    "href": "api/Mithril.HealthChecks.Abstractions.Services.IResponseFormatterService.html",
    "title": "Interface IResponseFormatterService | Mithril API Reference",
    "keywords": "Interface IResponseFormatterService Response formatter service interface Namespace: Mithril.HealthChecks.Abstractions.Services Assembly: Mithril.HealthChecks.Abstractions.dll Syntax public interface IResponseFormatterService Methods | Improve this Doc View Source FormatResponse(HttpContext, HealthReport) Formats the response. Declaration Task FormatResponse(HttpContext httpContext, HealthReport healthReport) Parameters Type Name Description HttpContext httpContext The HTTP context. HealthReport healthReport The health report. Returns Type Description Task The async task Extension Methods ExpandoObjectExtensions.ConvertToExpando<TEntity>(TEntity?) GenericExtensions.When<TObject>(TObject, bool, Func<TObject, TObject>)"
  },
  "api/Mithril.HealthChecks.Abstractions.Services.html": {
    "href": "api/Mithril.HealthChecks.Abstractions.Services.html",
    "title": "Namespace Mithril.HealthChecks.Abstractions.Services | Mithril API Reference",
    "keywords": "Namespace Mithril.HealthChecks.Abstractions.Services Interfaces IResponseFormatterService Response formatter service interface"
  },
  "api/Mithril.HealthChecks.Formatters.DefaultJsonFormatter.html": {
    "href": "api/Mithril.HealthChecks.Formatters.DefaultJsonFormatter.html",
    "title": "Class DefaultJsonFormatter | Mithril API Reference",
    "keywords": "Class DefaultJsonFormatter Default json formatter Inheritance object ResponseFormatterBaseClass DefaultJsonFormatter Implements IResponseFormatter Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Mithril.HealthChecks.Formatters Assembly: Mithril.HealthChecks.dll Syntax public class DefaultJsonFormatter : ResponseFormatterBaseClass, IResponseFormatter Properties | Improve this Doc View Source Order Gets the order. Declaration public override int Order { get; } Property Value Type Description int The order. Overrides ResponseFormatterBaseClass.Order See Also ResponseFormatterBaseClass Methods | Improve this Doc View Source Accepts(string) Acceptses the specified format. Declaration public override bool Accepts(string format) Parameters Type Name Description string format The format. Returns Type Description bool True if it accepts that format, false otherwise. Overrides ResponseFormatterBaseClass.Accepts(string) See Also ResponseFormatterBaseClass | Improve this Doc View Source SendResponseAsync(HttpContext, HealthReport) Sends the response asynchronously. Declaration public override Task SendResponseAsync(HttpContext httpContext, HealthReport healthReport) Parameters Type Name Description HttpContext httpContext The HTTP context. HealthReport healthReport The health report. Returns Type Description Task The async task. Overrides ResponseFormatterBaseClass.SendResponseAsync(HttpContext, HealthReport) See Also ResponseFormatterBaseClass Implements IResponseFormatter Extension Methods ExpandoObjectExtensions.ConvertToExpando<TEntity>(TEntity?) GenericExtensions.When<TObject>(TObject, bool, Func<TObject, TObject>) See Also ResponseFormatterBaseClass"
  },
  "api/Mithril.HealthChecks.Formatters.DefaultTextFormatter.html": {
    "href": "api/Mithril.HealthChecks.Formatters.DefaultTextFormatter.html",
    "title": "Class DefaultTextFormatter | Mithril API Reference",
    "keywords": "Class DefaultTextFormatter Default text formatter Inheritance object ResponseFormatterBaseClass DefaultTextFormatter Implements IResponseFormatter Inherited Members ResponseFormatterBaseClass.Accepts(string) object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Mithril.HealthChecks.Formatters Assembly: Mithril.HealthChecks.dll Syntax public class DefaultTextFormatter : ResponseFormatterBaseClass, IResponseFormatter Properties | Improve this Doc View Source Order Gets the order. Declaration public override int Order { get; } Property Value Type Description int The order. Overrides ResponseFormatterBaseClass.Order See Also ResponseFormatterBaseClass Methods | Improve this Doc View Source SendResponseAsync(HttpContext, HealthReport) Sends the response asynchronously. Declaration public override Task SendResponseAsync(HttpContext httpContext, HealthReport healthReport) Parameters Type Name Description HttpContext httpContext The HTTP context. HealthReport healthReport The health report. Returns Type Description Task The async task. Overrides ResponseFormatterBaseClass.SendResponseAsync(HttpContext, HealthReport) See Also ResponseFormatterBaseClass Implements IResponseFormatter Extension Methods ExpandoObjectExtensions.ConvertToExpando<TEntity>(TEntity?) GenericExtensions.When<TObject>(TObject, bool, Func<TObject, TObject>) See Also ResponseFormatterBaseClass"
  },
  "api/Mithril.HealthChecks.Formatters.html": {
    "href": "api/Mithril.HealthChecks.Formatters.html",
    "title": "Namespace Mithril.HealthChecks.Formatters | Mithril API Reference",
    "keywords": "Namespace Mithril.HealthChecks.Formatters Classes DefaultJsonFormatter Default json formatter DefaultTextFormatter Default text formatter"
  },
  "api/Mithril.HealthChecks.HealthCheckModule.html": {
    "href": "api/Mithril.HealthChecks.HealthCheckModule.html",
    "title": "Class HealthCheckModule | Mithril API Reference",
    "keywords": "Class HealthCheckModule Health check module Inheritance object ModuleBaseClass<HealthCheckModule> HealthCheckModule Implements IEquatable<HealthCheckModule> IModule Inherited Members ModuleBaseClass<HealthCheckModule>.Category ModuleBaseClass<HealthCheckModule>.ContentPath ModuleBaseClass<HealthCheckModule>.Features ModuleBaseClass<HealthCheckModule>.ID ModuleBaseClass<HealthCheckModule>.LastModified ModuleBaseClass<HealthCheckModule>.Name ModuleBaseClass<HealthCheckModule>.Tags ModuleBaseClass<HealthCheckModule>.Version ModuleBaseClass<HealthCheckModule>.ConfigureApplication(IApplicationBuilder, IConfiguration, IHostEnvironment) ModuleBaseClass<HealthCheckModule>.ConfigureHostSettings(IHostBuilder, IConfiguration, IHostEnvironment) ModuleBaseClass<HealthCheckModule>.ConfigureLoggingSettings(ILoggingBuilder, IConfiguration, IHostEnvironment) ModuleBaseClass<HealthCheckModule>.ConfigureMVC(IMvcBuilder, IConfiguration, IHostEnvironment) ModuleBaseClass<HealthCheckModule>.ConfigureWebHostSettings(IWebHostBuilder, IConfiguration, IHostEnvironment) ModuleBaseClass<HealthCheckModule>.Equals(object) ModuleBaseClass<HealthCheckModule>.Equals(HealthCheckModule) ModuleBaseClass<HealthCheckModule>.GetHashCode() ModuleBaseClass<HealthCheckModule>.InitializeDataAsync(IDataService, IServiceProvider) ModuleBaseClass<HealthCheckModule>.OnStarted() ModuleBaseClass<HealthCheckModule>.OnStopped() ModuleBaseClass<HealthCheckModule>.OnStopping() object.Equals(object, object) object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Mithril.HealthChecks Assembly: Mithril.HealthChecks.dll Syntax public class HealthCheckModule : ModuleBaseClass<HealthCheckModule>, IEquatable<HealthCheckModule>, IModule Properties | Improve this Doc View Source Order Gets the order that they are initialized in. Declaration public override int Order { get; } Property Value Type Description int The order that they are initialized in. Overrides ModuleBaseClass<HealthCheckModule>.Order See Also ModuleBaseClass<TModule> Methods | Improve this Doc View Source ConfigureRoutes(IEndpointRouteBuilder?, IConfiguration?, IHostEnvironment?) Configures the routes. Declaration public override IEndpointRouteBuilder? ConfigureRoutes(IEndpointRouteBuilder? endpoints, IConfiguration? configuration, IHostEnvironment? environment) Parameters Type Name Description IEndpointRouteBuilder endpoints The endpoints. IConfiguration configuration The configuration. IHostEnvironment environment The environment. Returns Type Description IEndpointRouteBuilder Endpoint route builder Overrides ModuleBaseClass<HealthCheckModule>.ConfigureRoutes(IEndpointRouteBuilder, IConfiguration, IHostEnvironment) See Also ModuleBaseClass<TModule> | Improve this Doc View Source ConfigureServices(IServiceCollection?, IConfiguration?, IHostEnvironment?) Configures the services for the module. Declaration public override IServiceCollection? ConfigureServices(IServiceCollection? services, IConfiguration? configuration, IHostEnvironment? environment) Parameters Type Name Description IServiceCollection services The services collection. IConfiguration configuration The configuration. IHostEnvironment environment The environment. Returns Type Description IServiceCollection Services Overrides ModuleBaseClass<HealthCheckModule>.ConfigureServices(IServiceCollection, IConfiguration, IHostEnvironment) See Also ModuleBaseClass<TModule> Implements IEquatable<T> IModule Extension Methods ExpandoObjectExtensions.ConvertToExpando<TEntity>(TEntity?) GenericExtensions.When<TObject>(TObject, bool, Func<TObject, TObject>) See Also ModuleBaseClass<TModule>"
  },
  "api/Mithril.HealthChecks.HealthChecks.SystemStatusHealthCheck.html": {
    "href": "api/Mithril.HealthChecks.HealthChecks.SystemStatusHealthCheck.html",
    "title": "Class SystemStatusHealthCheck | Mithril API Reference",
    "keywords": "Class SystemStatusHealthCheck System status health check Inheritance object SystemStatusHealthCheck Implements IHealthCheck IDisposable Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Mithril.HealthChecks.HealthChecks Assembly: Mithril.HealthChecks.dll Syntax public class SystemStatusHealthCheck : IHealthCheck, IDisposable Constructors | Improve this Doc View Source SystemStatusHealthCheck(IHostApplicationLifetime?) Initializes a new instance of the SystemStatusHealthCheck class. Declaration public SystemStatusHealthCheck(IHostApplicationLifetime? hostApplicationLifetime) Parameters Type Name Description IHostApplicationLifetime hostApplicationLifetime The host application lifetime. See Also IHealthCheck IDisposable Methods | Improve this Doc View Source CheckHealthAsync(HealthCheckContext, CancellationToken) Runs the health check, returning the status of the component being checked. Declaration public Task<HealthCheckResult> CheckHealthAsync(HealthCheckContext context, CancellationToken cancellationToken = default) Parameters Type Name Description HealthCheckContext context A context object associated with the current execution. CancellationToken cancellationToken A CancellationToken that can be used to cancel the health check. Returns Type Description Task<HealthCheckResult> A Task<TResult> that completes when the health check has finished, yielding the status of the component being checked. See Also IHealthCheck IDisposable | Improve this Doc View Source Dispose() Performs application-defined tasks associated with freeing, releasing, or resetting unmanaged resources. Declaration public void Dispose() See Also IHealthCheck IDisposable Implements IHealthCheck IDisposable Extension Methods ExpandoObjectExtensions.ConvertToExpando<TEntity>(TEntity?) GenericExtensions.When<TObject>(TObject, bool, Func<TObject, TObject>) See Also IHealthCheck IDisposable"
  },
  "api/Mithril.HealthChecks.HealthChecks.html": {
    "href": "api/Mithril.HealthChecks.HealthChecks.html",
    "title": "Namespace Mithril.HealthChecks.HealthChecks | Mithril API Reference",
    "keywords": "Namespace Mithril.HealthChecks.HealthChecks Classes SystemStatusHealthCheck System status health check"
  },
  "api/Mithril.HealthChecks.Services.ResponseFormatterService.html": {
    "href": "api/Mithril.HealthChecks.Services.ResponseFormatterService.html",
    "title": "Class ResponseFormatterService | Mithril API Reference",
    "keywords": "Class ResponseFormatterService Response formatter service Inheritance object ResponseFormatterService Implements IResponseFormatterService Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Mithril.HealthChecks.Services Assembly: Mithril.HealthChecks.dll Syntax public class ResponseFormatterService : IResponseFormatterService Constructors | Improve this Doc View Source ResponseFormatterService(IEnumerable<IResponseFormatter>) Initializes a new instance of the ResponseFormatterService class. Declaration public ResponseFormatterService(IEnumerable<IResponseFormatter> formatters) Parameters Type Name Description IEnumerable<IResponseFormatter> formatters The formatters. Properties | Improve this Doc View Source Formatters Gets the formatters. Declaration public IEnumerable<IResponseFormatter> Formatters { get; } Property Value Type Description IEnumerable<IResponseFormatter> The formatters. Methods | Improve this Doc View Source FormatResponse(HttpContext, HealthReport) Formats the response. Declaration public Task FormatResponse(HttpContext httpContext, HealthReport healthReport) Parameters Type Name Description HttpContext httpContext The HTTP context. HealthReport healthReport The health report. Returns Type Description Task Implements IResponseFormatterService Extension Methods ExpandoObjectExtensions.ConvertToExpando<TEntity>(TEntity?) GenericExtensions.When<TObject>(TObject, bool, Func<TObject, TObject>)"
  },
  "api/Mithril.HealthChecks.Services.html": {
    "href": "api/Mithril.HealthChecks.Services.html",
    "title": "Namespace Mithril.HealthChecks.Services | Mithril API Reference",
    "keywords": "Namespace Mithril.HealthChecks.Services Classes ResponseFormatterService Response formatter service"
  },
  "api/Mithril.HealthChecks.html": {
    "href": "api/Mithril.HealthChecks.html",
    "title": "Namespace Mithril.HealthChecks | Mithril API Reference",
    "keywords": "Namespace Mithril.HealthChecks Classes HealthCheckModule Health check module"
  },
  "api/Mithril.Logging.Commands.CSPLogCommandHandler.html": {
    "href": "api/Mithril.Logging.Commands.CSPLogCommandHandler.html",
    "title": "Class CSPLogCommandHandler | Mithril API Reference",
    "keywords": "Class CSPLogCommandHandler CSP log command handler Inheritance object CommandHandlerBaseClass<LogCommand, CSPLogCommandVM> CSPLogCommandHandler Implements ICommandHandler<CSPLogCommandVM> ICommandHandler Inherited Members CommandHandlerBaseClass<LogCommand, CSPLogCommandVM>.CommandName CommandHandlerBaseClass<LogCommand, CSPLogCommandVM>.ContentTypeAccepts CommandHandlerBaseClass<LogCommand, CSPLogCommandVM>.Features CommandHandlerBaseClass<LogCommand, CSPLogCommandVM>.Tags CommandHandlerBaseClass<LogCommand, CSPLogCommandVM>.Version CommandHandlerBaseClass<LogCommand, CSPLogCommandVM>.ViewModelType CommandHandlerBaseClass<LogCommand, CSPLogCommandVM>.FeatureManager CommandHandlerBaseClass<LogCommand, CSPLogCommandVM>.Logger CommandHandlerBaseClass<LogCommand, CSPLogCommandVM>.CanHandle(ICommand) CommandHandlerBaseClass<LogCommand, CSPLogCommandVM>.CreateAsync(CSPLogCommandVM, ClaimsPrincipal) CommandHandlerBaseClass<LogCommand, CSPLogCommandVM>.HandleCommandAsync(params ICommand[]) CommandHandlerBaseClass<LogCommand, CSPLogCommandVM>.HandleCommandAsync(LogCommand[]) CommandHandlerBaseClass<LogCommand, CSPLogCommandVM>.IsFeatureEnabled() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Mithril.Logging.Commands Assembly: Mithril.Logging.dll Syntax public class CSPLogCommandHandler : CommandHandlerBaseClass<LogCommand, CSPLogCommandVM>, ICommandHandler<CSPLogCommandVM>, ICommandHandler Constructors | Improve this Doc View Source CSPLogCommandHandler(ILogger<CSPLogCommandHandler>?, IFeatureManager?) Initializes a new instance of the CSPLogCommandHandler class. Declaration public CSPLogCommandHandler(ILogger<CSPLogCommandHandler>? logger, IFeatureManager? featureManager) Parameters Type Name Description ILogger<CSPLogCommandHandler> logger The logger. IFeatureManager featureManager The feature manager. See Also CommandHandlerBaseClass<TCommand, TViewModel> Properties | Improve this Doc View Source CommandName Gets the command type accepted. Declaration public override string CommandName { get; } Property Value Type Description string The command type accepted. Overrides CommandHandlerBaseClass<LogCommand, CSPLogCommandVM>.CommandName See Also CommandHandlerBaseClass<TCommand, TViewModel> | Improve this Doc View Source ContentTypeAccepts Gets the content type accepted by command handler. Declaration public override string[] ContentTypeAccepts { get; } Property Value Type Description string[] The content type accepted by command handler. Overrides CommandHandlerBaseClass<LogCommand, CSPLogCommandVM>.ContentTypeAccepts See Also CommandHandlerBaseClass<TCommand, TViewModel> | Improve this Doc View Source Features Gets the features associated with this command. Declaration public override IFeature[] Features { get; } Property Value Type Description IFeature[] The features associated with this command. Overrides CommandHandlerBaseClass<LogCommand, CSPLogCommandVM>.Features See Also CommandHandlerBaseClass<TCommand, TViewModel> | Improve this Doc View Source Tags Gets the tags (Used by OpenAPI, etc). Declaration public override string[] Tags { get; } Property Value Type Description string[] The tags (Used by OpenAPI, etc). Overrides CommandHandlerBaseClass<LogCommand, CSPLogCommandVM>.Tags See Also CommandHandlerBaseClass<TCommand, TViewModel> Methods | Improve this Doc View Source CanHandle(ICommand) Determines whether this instance can handle the specified command. Declaration public override bool CanHandle(ICommand command) Parameters Type Name Description ICommand command The command. Returns Type Description bool true if this instance can handle the specified command; otherwise, false. Overrides CommandHandlerBaseClass<LogCommand, CSPLogCommandVM>.CanHandle(ICommand) See Also CommandHandlerBaseClass<TCommand, TViewModel> | Improve this Doc View Source CreateAsync(CSPLogCommandVM?, ClaimsPrincipal) Creates the specified value. Declaration public override ValueTask<CommandCreationResult?> CreateAsync(CSPLogCommandVM? value, ClaimsPrincipal user) Parameters Type Name Description CSPLogCommandVM value The value. ClaimsPrincipal user The user. Returns Type Description ValueTask<CommandCreationResult> A command value converted from the ExpandoObject. Overrides CommandHandlerBaseClass<LogCommand, CSPLogCommandVM>.CreateAsync(CSPLogCommandVM, ClaimsPrincipal) See Also CommandHandlerBaseClass<TCommand, TViewModel> | Improve this Doc View Source HandleCommandAsync(LogCommand?[]?) Handles the command. Declaration protected override Task<IEvent[]> HandleCommandAsync(LogCommand?[]? args) Parameters Type Name Description LogCommand[] args The arguments. Returns Type Description Task<IEvent[]> The events generated by the command. Overrides CommandHandlerBaseClass<LogCommand, CSPLogCommandVM>.HandleCommandAsync(LogCommand[]) See Also CommandHandlerBaseClass<TCommand, TViewModel> Implements ICommandHandler<TViewModel> ICommandHandler Extension Methods ExpandoObjectExtensions.ConvertToExpando<TEntity>(TEntity?) GenericExtensions.When<TObject>(TObject, bool, Func<TObject, TObject>) See Also CommandHandlerBaseClass<TCommand, TViewModel>"
  },
  "api/Mithril.Logging.Commands.LogCommandHandler.html": {
    "href": "api/Mithril.Logging.Commands.LogCommandHandler.html",
    "title": "Class LogCommandHandler | Mithril API Reference",
    "keywords": "Class LogCommandHandler Log command handler Inheritance object CommandHandlerBaseClass<LogCommand, LogCommandVM> LogCommandHandler Implements ICommandHandler<LogCommandVM> ICommandHandler Inherited Members CommandHandlerBaseClass<LogCommand, LogCommandVM>.CommandName CommandHandlerBaseClass<LogCommand, LogCommandVM>.ContentTypeAccepts CommandHandlerBaseClass<LogCommand, LogCommandVM>.Features CommandHandlerBaseClass<LogCommand, LogCommandVM>.Tags CommandHandlerBaseClass<LogCommand, LogCommandVM>.Version CommandHandlerBaseClass<LogCommand, LogCommandVM>.ViewModelType CommandHandlerBaseClass<LogCommand, LogCommandVM>.FeatureManager CommandHandlerBaseClass<LogCommand, LogCommandVM>.Logger CommandHandlerBaseClass<LogCommand, LogCommandVM>.CanHandle(ICommand) CommandHandlerBaseClass<LogCommand, LogCommandVM>.CreateAsync(LogCommandVM, ClaimsPrincipal) CommandHandlerBaseClass<LogCommand, LogCommandVM>.HandleCommandAsync(params ICommand[]) CommandHandlerBaseClass<LogCommand, LogCommandVM>.HandleCommandAsync(LogCommand[]) CommandHandlerBaseClass<LogCommand, LogCommandVM>.IsFeatureEnabled() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Mithril.Logging.Commands Assembly: Mithril.Logging.dll Syntax public class LogCommandHandler : CommandHandlerBaseClass<LogCommand, LogCommandVM>, ICommandHandler<LogCommandVM>, ICommandHandler Constructors | Improve this Doc View Source LogCommandHandler(ILogger<LogCommandHandler>?, IFeatureManager?) Initializes a new instance of the LogCommandHandler class. Declaration public LogCommandHandler(ILogger<LogCommandHandler>? logger, IFeatureManager? featureManager) Parameters Type Name Description ILogger<LogCommandHandler> logger The logger. IFeatureManager featureManager The feature manager. See Also CommandHandlerBaseClass<TCommand, TViewModel> Properties | Improve this Doc View Source CommandName Gets the command type accepted. Declaration public override string CommandName { get; } Property Value Type Description string The command type accepted. Overrides CommandHandlerBaseClass<LogCommand, LogCommandVM>.CommandName See Also CommandHandlerBaseClass<TCommand, TViewModel> | Improve this Doc View Source Features Gets the features associated with this command. Declaration public override IFeature[] Features { get; } Property Value Type Description IFeature[] The features associated with this command. Overrides CommandHandlerBaseClass<LogCommand, LogCommandVM>.Features See Also CommandHandlerBaseClass<TCommand, TViewModel> | Improve this Doc View Source Tags Gets the tags (Used by OpenAPI, etc). Declaration public override string[] Tags { get; } Property Value Type Description string[] The tags (Used by OpenAPI, etc). Overrides CommandHandlerBaseClass<LogCommand, LogCommandVM>.Tags See Also CommandHandlerBaseClass<TCommand, TViewModel> Methods | Improve this Doc View Source CreateAsync(LogCommandVM?, ClaimsPrincipal) Creates the specified value. Declaration public override ValueTask<CommandCreationResult?> CreateAsync(LogCommandVM? value, ClaimsPrincipal user) Parameters Type Name Description LogCommandVM value The value. ClaimsPrincipal user The user. Returns Type Description ValueTask<CommandCreationResult> A command value converted from the ExpandoObject. Overrides CommandHandlerBaseClass<LogCommand, LogCommandVM>.CreateAsync(LogCommandVM, ClaimsPrincipal) See Also CommandHandlerBaseClass<TCommand, TViewModel> | Improve this Doc View Source HandleCommandAsync(LogCommand?[]?) Handles the command. Declaration protected override Task<IEvent[]> HandleCommandAsync(LogCommand?[]? args) Parameters Type Name Description LogCommand[] args The arguments. Returns Type Description Task<IEvent[]> The events generated by the command. Overrides CommandHandlerBaseClass<LogCommand, LogCommandVM>.HandleCommandAsync(LogCommand[]) See Also CommandHandlerBaseClass<TCommand, TViewModel> Implements ICommandHandler<TViewModel> ICommandHandler Extension Methods ExpandoObjectExtensions.ConvertToExpando<TEntity>(TEntity?) GenericExtensions.When<TObject>(TObject, bool, Func<TObject, TObject>) See Also CommandHandlerBaseClass<TCommand, TViewModel>"
  },
  "api/Mithril.Logging.Commands.ViewModels.CSPLogCommandVM.html": {
    "href": "api/Mithril.Logging.Commands.ViewModels.CSPLogCommandVM.html",
    "title": "Class CSPLogCommandVM | Mithril API Reference",
    "keywords": "Class CSPLogCommandVM CSP Log Command, used for reporting CSP violations. Inheritance object CSPLogCommandVM Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Mithril.Logging.Commands.ViewModels Assembly: Mithril.Logging.dll Syntax public class CSPLogCommandVM Properties | Improve this Doc View Source CspReport The CSP report. Declaration [JsonPropertyName(\"csp-report\")] public CspReport? CspReport { get; set; } Property Value Type Description CspReport The CSP report. Methods | Improve this Doc View Source BindAsync(HttpContext, ParameterInfo) Binds the VM asynchronously. Declaration public static ValueTask<CSPLogCommandVM?> BindAsync(HttpContext context, ParameterInfo parameter) Parameters Type Name Description HttpContext context The context. ParameterInfo parameter The parameter. Returns Type Description ValueTask<CSPLogCommandVM> The view model. Exceptions Type Condition BadHttpRequestException Request content type was not 'application/csp-report' Extension Methods ExpandoObjectExtensions.ConvertToExpando<TEntity>(TEntity?) GenericExtensions.When<TObject>(TObject, bool, Func<TObject, TObject>)"
  },
  "api/Mithril.Logging.Commands.ViewModels.CspReport.html": {
    "href": "api/Mithril.Logging.Commands.ViewModels.CspReport.html",
    "title": "Class CspReport | Mithril API Reference",
    "keywords": "Class CspReport CSP Report Inheritance object CspReport Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Mithril.Logging.Commands.ViewModels Assembly: Mithril.Logging.dll Syntax public class CspReport Properties | Improve this Doc View Source BlockedUri The blocked URI. Declaration [JsonPropertyName(\"blocked-uri\")] public string? BlockedUri { get; set; } Property Value Type Description string The blocked URI. | Improve this Doc View Source DocumentUri The document URI. Declaration [JsonPropertyName(\"document-uri\")] public string? DocumentUri { get; set; } Property Value Type Description string The document URI. | Improve this Doc View Source EffectiveDirective The effective directive. Declaration [JsonPropertyName(\"effective-directive\")] public string? EffectiveDirective { get; set; } Property Value Type Description string The effective directive. | Improve this Doc View Source OriginalPolicy The original policy. Declaration [JsonPropertyName(\"original-policy\")] public string? OriginalPolicy { get; set; } Property Value Type Description string The original policy. | Improve this Doc View Source Referrer The referrer. Declaration [JsonPropertyName(\"referrer\")] public string? Referrer { get; set; } Property Value Type Description string The referrer. | Improve this Doc View Source StatusCode The status code. Declaration [JsonPropertyName(\"status-code\")] public int StatusCode { get; set; } Property Value Type Description int The status code. | Improve this Doc View Source ViolatedDirective The violated directive. Declaration [JsonPropertyName(\"violated-directive\")] public string? ViolatedDirective { get; set; } Property Value Type Description string The violated directive. Extension Methods ExpandoObjectExtensions.ConvertToExpando<TEntity>(TEntity?) GenericExtensions.When<TObject>(TObject, bool, Func<TObject, TObject>)"
  },
  "api/Mithril.Logging.Commands.ViewModels.LogCommandVM.html": {
    "href": "api/Mithril.Logging.Commands.ViewModels.LogCommandVM.html",
    "title": "Class LogCommandVM | Mithril API Reference",
    "keywords": "Class LogCommandVM Log Command, used for reporting javascript related logging messages. Inheritance object LogCommandVM Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Mithril.Logging.Commands.ViewModels Assembly: Mithril.Logging.dll Syntax public class LogCommandVM Properties | Improve this Doc View Source LogLevel The log level to use for the message. Declaration public LogLevel LogLevel { get; set; } Property Value Type Description LogLevel The log level. | Improve this Doc View Source Message The message. Declaration public string? Message { get; set; } Property Value Type Description string The message. Extension Methods ExpandoObjectExtensions.ConvertToExpando<TEntity>(TEntity?) GenericExtensions.When<TObject>(TObject, bool, Func<TObject, TObject>)"
  },
  "api/Mithril.Logging.Commands.ViewModels.html": {
    "href": "api/Mithril.Logging.Commands.ViewModels.html",
    "title": "Namespace Mithril.Logging.Commands.ViewModels | Mithril API Reference",
    "keywords": "Namespace Mithril.Logging.Commands.ViewModels Classes CSPLogCommandVM CSP Log Command, used for reporting CSP violations. CspReport CSP Report LogCommandVM Log Command, used for reporting javascript related logging messages."
  },
  "api/Mithril.Logging.Commands.html": {
    "href": "api/Mithril.Logging.Commands.html",
    "title": "Namespace Mithril.Logging.Commands | Mithril API Reference",
    "keywords": "Namespace Mithril.Logging.Commands Classes CSPLogCommandHandler CSP log command handler LogCommandHandler Log command handler"
  },
  "api/Mithril.Logging.Exceptions.JavascriptException.html": {
    "href": "api/Mithril.Logging.Exceptions.JavascriptException.html",
    "title": "Class JavascriptException | Mithril API Reference",
    "keywords": "Class JavascriptException Javascript exception Inheritance object Exception JavascriptException Implements ISerializable Inherited Members Exception.GetBaseException() Exception.GetObjectData(SerializationInfo, StreamingContext) Exception.GetType() Exception.ToString() Exception.Data Exception.HelpLink Exception.HResult Exception.InnerException Exception.Message Exception.Source Exception.StackTrace Exception.TargetSite Exception.SerializeObjectState object.Equals(object) object.Equals(object, object) object.GetHashCode() object.MemberwiseClone() object.ReferenceEquals(object, object) Namespace: Mithril.Logging.Exceptions Assembly: Mithril.Logging.dll Syntax public class JavascriptException : Exception, ISerializable Constructors | Improve this Doc View Source JavascriptException() Initializes a new instance of the JavascriptException class. Declaration public JavascriptException() See Also Exception | Improve this Doc View Source JavascriptException(SerializationInfo, StreamingContext) Initializes a new instance of the JavascriptException class. Declaration protected JavascriptException(SerializationInfo info, StreamingContext context) Parameters Type Name Description SerializationInfo info The SerializationInfo that holds the serialized object data about the exception being thrown. StreamingContext context The StreamingContext that contains contextual information about the source or destination. See Also Exception | Improve this Doc View Source JavascriptException(string) Initializes a new instance of the JavascriptException class. Declaration public JavascriptException(string message) Parameters Type Name Description string message The message that describes the error. See Also Exception | Improve this Doc View Source JavascriptException(string, Exception) Initializes a new instance of the JavascriptException class. Declaration public JavascriptException(string message, Exception innerException) Parameters Type Name Description string message The error message that explains the reason for the exception. Exception innerException The exception that is the cause of the current exception, or a null reference ( Nothing in Visual Basic) if no inner exception is specified. See Also Exception Implements ISerializable Extension Methods ExpandoObjectExtensions.ConvertToExpando<TEntity>(TEntity?) GenericExtensions.When<TObject>(TObject, bool, Func<TObject, TObject>) See Also Exception"
  },
  "api/Mithril.Logging.Exceptions.html": {
    "href": "api/Mithril.Logging.Exceptions.html",
    "title": "Namespace Mithril.Logging.Exceptions | Mithril API Reference",
    "keywords": "Namespace Mithril.Logging.Exceptions Classes JavascriptException Javascript exception"
  },
  "api/Mithril.Logging.Features.LoggingFeature.html": {
    "href": "api/Mithril.Logging.Features.LoggingFeature.html",
    "title": "Class LoggingFeature | Mithril API Reference",
    "keywords": "Class LoggingFeature Logging feature Inheritance object FeatureBaseClass<LoggingFeature> LoggingFeature Implements IFeature IEquatable<LoggingFeature> Inherited Members FeatureBaseClass<LoggingFeature>.Instance FeatureBaseClass<LoggingFeature>.Equals(object) FeatureBaseClass<LoggingFeature>.Equals(LoggingFeature) FeatureBaseClass<LoggingFeature>.GetHashCode() object.Equals(object, object) object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Mithril.Logging.Features Assembly: Mithril.Logging.dll Syntax public class LoggingFeature : FeatureBaseClass<LoggingFeature>, IFeature, IEquatable<LoggingFeature> Properties | Improve this Doc View Source Category The group (by category) that the feature belongs. If not provided, defaults to 'Uncategorized'. Declaration public override string Category { get; } Property Value Type Description string The category. Overrides FeatureBaseClass<LoggingFeature>.Category See Also FeatureBaseClass<TFeature> | Improve this Doc View Source Description Gets or sets the description. Declaration public override string Description { get; } Property Value Type Description string The description. Overrides FeatureBaseClass<LoggingFeature>.Description See Also FeatureBaseClass<TFeature> | Improve this Doc View Source Name Human-readable name of the feature. If not provided, the identifier will be used. Declaration public override string Name { get; } Property Value Type Description string The name. Overrides FeatureBaseClass<LoggingFeature>.Name See Also FeatureBaseClass<TFeature> Implements IFeature IEquatable<T> Extension Methods ExpandoObjectExtensions.ConvertToExpando<TEntity>(TEntity?) GenericExtensions.When<TObject>(TObject, bool, Func<TObject, TObject>) See Also FeatureBaseClass<TFeature>"
  },
  "api/Mithril.Logging.Features.html": {
    "href": "api/Mithril.Logging.Features.html",
    "title": "Namespace Mithril.Logging.Features | Mithril API Reference",
    "keywords": "Namespace Mithril.Logging.Features Classes LoggingFeature Logging feature"
  },
  "api/Mithril.Logging.LoggingModule.html": {
    "href": "api/Mithril.Logging.LoggingModule.html",
    "title": "Class LoggingModule | Mithril API Reference",
    "keywords": "Class LoggingModule Module that adds a command handler that accepts specific logging added to Mithril Inheritance object ModuleBaseClass<LoggingModule> LoggingModule Implements IEquatable<LoggingModule> IModule Inherited Members ModuleBaseClass<LoggingModule>.Category ModuleBaseClass<LoggingModule>.ContentPath ModuleBaseClass<LoggingModule>.ID ModuleBaseClass<LoggingModule>.LastModified ModuleBaseClass<LoggingModule>.Name ModuleBaseClass<LoggingModule>.Tags ModuleBaseClass<LoggingModule>.Version ModuleBaseClass<LoggingModule>.ConfigureApplication(IApplicationBuilder, IConfiguration, IHostEnvironment) ModuleBaseClass<LoggingModule>.ConfigureHostSettings(IHostBuilder, IConfiguration, IHostEnvironment) ModuleBaseClass<LoggingModule>.ConfigureLoggingSettings(ILoggingBuilder, IConfiguration, IHostEnvironment) ModuleBaseClass<LoggingModule>.ConfigureMVC(IMvcBuilder, IConfiguration, IHostEnvironment) ModuleBaseClass<LoggingModule>.ConfigureRoutes(IEndpointRouteBuilder, IConfiguration, IHostEnvironment) ModuleBaseClass<LoggingModule>.ConfigureWebHostSettings(IWebHostBuilder, IConfiguration, IHostEnvironment) ModuleBaseClass<LoggingModule>.Equals(object) ModuleBaseClass<LoggingModule>.Equals(LoggingModule) ModuleBaseClass<LoggingModule>.GetHashCode() ModuleBaseClass<LoggingModule>.InitializeDataAsync(IDataService, IServiceProvider) ModuleBaseClass<LoggingModule>.OnStarted() ModuleBaseClass<LoggingModule>.OnStopped() ModuleBaseClass<LoggingModule>.OnStopping() object.Equals(object, object) object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Mithril.Logging Assembly: Mithril.Logging.dll Syntax public class LoggingModule : ModuleBaseClass<LoggingModule>, IEquatable<LoggingModule>, IModule Properties | Improve this Doc View Source Features Gets the features. Declaration public override IFeature[] Features { get; } Property Value Type Description IFeature[] The features. Overrides ModuleBaseClass<LoggingModule>.Features See Also ModuleBaseClass<TModule> | Improve this Doc View Source Order Gets the order that they are initialized in. Declaration public override int Order { get; } Property Value Type Description int The order that they are initialized in. Overrides ModuleBaseClass<LoggingModule>.Order See Also ModuleBaseClass<TModule> Methods | Improve this Doc View Source ConfigureServices(IServiceCollection?, IConfiguration?, IHostEnvironment?) Configures the services for the module. Declaration public override IServiceCollection? ConfigureServices(IServiceCollection? services, IConfiguration? configuration, IHostEnvironment? environment) Parameters Type Name Description IServiceCollection services The services collection. IConfiguration configuration The configuration. IHostEnvironment environment The environment. Returns Type Description IServiceCollection Services Overrides ModuleBaseClass<LoggingModule>.ConfigureServices(IServiceCollection, IConfiguration, IHostEnvironment) See Also ModuleBaseClass<TModule> Implements IEquatable<T> IModule Extension Methods ExpandoObjectExtensions.ConvertToExpando<TEntity>(TEntity?) GenericExtensions.When<TObject>(TObject, bool, Func<TObject, TObject>) See Also ModuleBaseClass<TModule>"
  },
  "api/Mithril.Logging.Models.LogCommand.html": {
    "href": "api/Mithril.Logging.Models.LogCommand.html",
    "title": "Class LogCommand | Mithril API Reference",
    "keywords": "Class LogCommand Log command Inheritance object ModelBase<LogCommand> CommandBaseClass<LogCommand> LogCommand Implements IModel<LogCommand> IEquatable<IModel<LogCommand>> IComparable IComparable<LogCommand> IEquatable<ModelBase<LogCommand>> ICommand IEquatable<ICommand> IModel IEquatable<IModel> IEquatable<CommandBaseClass<LogCommand>> Inherited Members CommandBaseClass<LogCommand>.Name CommandBaseClass<LogCommand>.CompareTo(CommandBaseClass<LogCommand>) CommandBaseClass<LogCommand>.Equals(CommandBaseClass<LogCommand>) CommandBaseClass<LogCommand>.Equals(ICommand) CommandBaseClass<LogCommand>.ToString() ModelBase<LogCommand>.Active ModelBase<LogCommand>.Creator ModelBase<LogCommand>.DateCreated ModelBase<LogCommand>.DateModified ModelBase<LogCommand>.ID ModelBase<LogCommand>.Modifier ModelBase<LogCommand>.TenantID ModelBase<LogCommand>.All(IDataService) ModelBase<LogCommand>.AllActive(IDataService) ModelBase<LogCommand>.AllInactive(IDataService) ModelBase<LogCommand>.Load(long, IDataService) ModelBase<LogCommand>.Query(IDataService) ModelBase<LogCommand>.CanBeModifiedBy(ClaimsPrincipal) ModelBase<LogCommand>.CanBeViewedBy(ClaimsPrincipal) ModelBase<LogCommand>.CompareTo(object) ModelBase<LogCommand>.DeleteAsync(IDataService, ClaimsPrincipal, bool) ModelBase<LogCommand>.Equals(IModel) ModelBase<LogCommand>.Equals(IModel<LogCommand>) ModelBase<LogCommand>.Equals(ModelBase<LogCommand>) ModelBase<LogCommand>.SaveAsync(IDataService, ClaimsPrincipal) ModelBase<LogCommand>.SetupObject(IDataService, ClaimsPrincipal) ModelBase<LogCommand>.SetupObject(IDataService, IUser) ModelBase<LogCommand>.SetupObjectAndReturn(IDataService, ClaimsPrincipal) object.Equals(object, object) object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Namespace: Mithril.Logging.Models Assembly: Mithril.Logging.dll Syntax public class LogCommand : CommandBaseClass<LogCommand>, IModel<LogCommand>, IEquatable<IModel<LogCommand>>, IComparable, IComparable<LogCommand>, IEquatable<ModelBase<LogCommand>>, ICommand, IEquatable<ICommand>, IModel, IEquatable<IModel>, IEquatable<CommandBaseClass<LogCommand>> Constructors | Improve this Doc View Source LogCommand() Initializes a new instance of the LogCommand class. Declaration public LogCommand() See Also CommandBaseClass<TCommand> | Improve this Doc View Source LogCommand(LogLevel, string) Initializes a new instance of the LogCommand class. Declaration public LogCommand(LogLevel logLevel, string message) Parameters Type Name Description LogLevel logLevel The log level. string message The message. See Also CommandBaseClass<TCommand> Properties | Improve this Doc View Source LogLevel Gets or sets the log level. Declaration public LogLevel LogLevel { get; set; } Property Value Type Description LogLevel The log level. See Also CommandBaseClass<TCommand> | Improve this Doc View Source Message Gets or sets the message. Declaration [MaxLength] public string? Message { get; set; } Property Value Type Description string The message. See Also CommandBaseClass<TCommand> Methods | Improve this Doc View Source CompareTo(LogCommand?) Compares the object to another object Declaration public override int CompareTo(LogCommand? other) Parameters Type Name Description LogCommand other Object to compare to Returns Type Description int 0 if they are equal, -1 if this is smaller, 1 if it is larger Overrides ModelBase<LogCommand>.CompareTo(LogCommand) See Also CommandBaseClass<TCommand> | Improve this Doc View Source Equals(LogCommand) Indicates whether the current object is equal to another object of the same type. Declaration public bool Equals(LogCommand other) Parameters Type Name Description LogCommand other An object to compare with this object. Returns Type Description bool true if the current object is equal to the other parameter; otherwise, false. See Also CommandBaseClass<TCommand> | Improve this Doc View Source Equals(object?) Determines whether the specified object, is equal to this instance. Declaration public override bool Equals(object? obj) Parameters Type Name Description object obj The object to compare with this instance. Returns Type Description bool true if the specified object is equal to this instance; otherwise, false. Overrides CommandBaseClass<LogCommand>.Equals(object) See Also CommandBaseClass<TCommand> | Improve this Doc View Source GetHashCode() Returns a hash code for this instance. Declaration public override int GetHashCode() Returns Type Description int A hash code for this instance, suitable for use in hashing algorithms and data structures like a hash table. Overrides CommandBaseClass<LogCommand>.GetHashCode() See Also CommandBaseClass<TCommand> Operators | Improve this Doc View Source operator ==(LogCommand, LogCommand) Implements the operator ==. Declaration public static bool operator ==(LogCommand first, LogCommand second) Parameters Type Name Description LogCommand first The first. LogCommand second The second. Returns Type Description bool The result of the operator. See Also CommandBaseClass<TCommand> | Improve this Doc View Source operator >(LogCommand, LogCommand) Implements the operator >. Declaration public static bool operator >(LogCommand left, LogCommand right) Parameters Type Name Description LogCommand left The left. LogCommand right The right. Returns Type Description bool The result of the operator. See Also CommandBaseClass<TCommand> | Improve this Doc View Source operator >=(LogCommand, LogCommand) Implements the operator >=. Declaration public static bool operator >=(LogCommand left, LogCommand right) Parameters Type Name Description LogCommand left The left. LogCommand right The right. Returns Type Description bool The result of the operator. See Also CommandBaseClass<TCommand> | Improve this Doc View Source operator !=(LogCommand, LogCommand) Implements the operator !=. Declaration public static bool operator !=(LogCommand left, LogCommand right) Parameters Type Name Description LogCommand left The left. LogCommand right The right. Returns Type Description bool The result of the operator. See Also CommandBaseClass<TCommand> | Improve this Doc View Source operator <(LogCommand, LogCommand) Implements the operator <. Declaration public static bool operator <(LogCommand left, LogCommand right) Parameters Type Name Description LogCommand left The left. LogCommand right The right. Returns Type Description bool The result of the operator. See Also CommandBaseClass<TCommand> | Improve this Doc View Source operator <=(LogCommand, LogCommand) Implements the operator <=. Declaration public static bool operator <=(LogCommand left, LogCommand right) Parameters Type Name Description LogCommand left The left. LogCommand right The right. Returns Type Description bool The result of the operator. See Also CommandBaseClass<TCommand> Implements IModel<TClass> IEquatable<T> IComparable IComparable<T> IEquatable<T> ICommand IEquatable<T> IModel IEquatable<T> IEquatable<T> Extension Methods ExpandoObjectExtensions.ConvertToExpando<TEntity>(TEntity?) GenericExtensions.When<TObject>(TObject, bool, Func<TObject, TObject>) See Also CommandBaseClass<TCommand>"
  },
  "api/Mithril.Logging.Models.Mappings.LogCommandMapping.html": {
    "href": "api/Mithril.Logging.Models.Mappings.LogCommandMapping.html",
    "title": "Class LogCommandMapping | Mithril API Reference",
    "keywords": "Class LogCommandMapping Log command mapping Inheritance object MappingBaseClass<LogCommand, DefaultDatabase> LogCommandMapping Implements IMapping<LogCommand> IMapping Inherited Members MappingBaseClass<LogCommand, DefaultDatabase>.AddAutoKey() MappingBaseClass<LogCommand, DefaultDatabase>.ContainsProperty(string) MappingBaseClass<LogCommand, DefaultDatabase>.Copy(IMapping) MappingBaseClass<LogCommand, DefaultDatabase>.CopyProperty(IIDProperty) MappingBaseClass<LogCommand, DefaultDatabase>.CopyProperty(IProperty) MappingBaseClass<LogCommand, DefaultDatabase>.CopyProperty(IMapProperty) MappingBaseClass<LogCommand, DefaultDatabase>.CopyProperty(IManyToOneProperty) MappingBaseClass<LogCommand, DefaultDatabase>.CopyProperty(IManyToManyProperty) MappingBaseClass<LogCommand, DefaultDatabase>.Equals(object) MappingBaseClass<LogCommand, DefaultDatabase>.GetColumnName(string) MappingBaseClass<LogCommand, DefaultDatabase>.GetHashCode() MappingBaseClass<LogCommand, DefaultDatabase>.ID<TDataType>(Expression<Func<LogCommand, TDataType>>) MappingBaseClass<LogCommand, DefaultDatabase>.ManyToMany<TDataType>(Expression<Func<LogCommand, IList<TDataType>>>) MappingBaseClass<LogCommand, DefaultDatabase>.ManyToOne<TDataType>(Expression<Func<LogCommand, IList<TDataType>>>) MappingBaseClass<LogCommand, DefaultDatabase>.ManyToOne<TDataType>(Expression<Func<LogCommand, TDataType>>) MappingBaseClass<LogCommand, DefaultDatabase>.Map<TDataType>(Expression<Func<LogCommand, TDataType>>) MappingBaseClass<LogCommand, DefaultDatabase>.Reduce(ILogger) MappingBaseClass<LogCommand, DefaultDatabase>.Reduce(IMapping, ILogger) MappingBaseClass<LogCommand, DefaultDatabase>.Reference<TDataType>(Expression<Func<LogCommand, TDataType>>) MappingBaseClass<LogCommand, DefaultDatabase>.SetQuery(QueryType, string, CommandType, params IParameter[]) MappingBaseClass<LogCommand, DefaultDatabase>.Setup() MappingBaseClass<LogCommand, DefaultDatabase>.ToString() MappingBaseClass<LogCommand, DefaultDatabase>.AutoIDProperties MappingBaseClass<LogCommand, DefaultDatabase>.DatabaseConfigType MappingBaseClass<LogCommand, DefaultDatabase>.IDProperties MappingBaseClass<LogCommand, DefaultDatabase>.ManyToManyProperties MappingBaseClass<LogCommand, DefaultDatabase>.ManyToOneProperties MappingBaseClass<LogCommand, DefaultDatabase>.MapProperties MappingBaseClass<LogCommand, DefaultDatabase>.Merge MappingBaseClass<LogCommand, DefaultDatabase>.ObjectType MappingBaseClass<LogCommand, DefaultDatabase>.Order MappingBaseClass<LogCommand, DefaultDatabase>.Prefix MappingBaseClass<LogCommand, DefaultDatabase>.Queries MappingBaseClass<LogCommand, DefaultDatabase>.ReferenceProperties MappingBaseClass<LogCommand, DefaultDatabase>.SchemaName MappingBaseClass<LogCommand, DefaultDatabase>.Suffix MappingBaseClass<LogCommand, DefaultDatabase>.TableName object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Mithril.Logging.Models.Mappings Assembly: Mithril.Logging.dll Syntax public class LogCommandMapping : MappingBaseClass<LogCommand, DefaultDatabase>, IMapping<LogCommand>, IMapping Constructors | Improve this Doc View Source LogCommandMapping() Initializes a new instance of the LogCommandMapping class. Declaration public LogCommandMapping() See Also MappingBaseClass<TClassType, TDatabaseType> Implements IMapping<TClassType> IMapping Extension Methods ExpandoObjectExtensions.ConvertToExpando<TEntity>(TEntity?) GenericExtensions.When<TObject>(TObject, bool, Func<TObject, TObject>) See Also MappingBaseClass<TClassType, TDatabaseType>"
  },
  "api/Mithril.Logging.Models.Mappings.html": {
    "href": "api/Mithril.Logging.Models.Mappings.html",
    "title": "Namespace Mithril.Logging.Models.Mappings | Mithril API Reference",
    "keywords": "Namespace Mithril.Logging.Models.Mappings Classes LogCommandMapping Log command mapping"
  },
  "api/Mithril.Logging.Models.html": {
    "href": "api/Mithril.Logging.Models.html",
    "title": "Namespace Mithril.Logging.Models | Mithril API Reference",
    "keywords": "Namespace Mithril.Logging.Models Classes LogCommand Log command"
  },
  "api/Mithril.Logging.Serilog.Middleware.LoggingMiddleware.html": {
    "href": "api/Mithril.Logging.Serilog.Middleware.LoggingMiddleware.html",
    "title": "Class LoggingMiddleware | Mithril API Reference",
    "keywords": "Class LoggingMiddleware Logging middleware used to store info for Serilog. Inheritance object LoggingMiddleware Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Mithril.Logging.Serilog.Middleware Assembly: Mithril.Logging.Serilog.dll Syntax public class LoggingMiddleware Constructors | Improve this Doc View Source LoggingMiddleware(RequestDelegate?) Initializes a new instance of the LoggingMiddleware class. Declaration public LoggingMiddleware(RequestDelegate? next) Parameters Type Name Description RequestDelegate next The next. Methods | Improve this Doc View Source InvokeAsync(HttpContext) Invokes the specified context. Declaration public Task InvokeAsync(HttpContext context) Parameters Type Name Description HttpContext context The context. Returns Type Description Task Extension Methods ExpandoObjectExtensions.ConvertToExpando<TEntity>(TEntity?) GenericExtensions.When<TObject>(TObject, bool, Func<TObject, TObject>)"
  },
  "api/Mithril.Logging.Serilog.Middleware.html": {
    "href": "api/Mithril.Logging.Serilog.Middleware.html",
    "title": "Namespace Mithril.Logging.Serilog.Middleware | Mithril API Reference",
    "keywords": "Namespace Mithril.Logging.Serilog.Middleware Classes LoggingMiddleware Logging middleware used to store info for Serilog."
  },
  "api/Mithril.Logging.Serilog.SerilogModule.html": {
    "href": "api/Mithril.Logging.Serilog.SerilogModule.html",
    "title": "Class SerilogModule | Mithril API Reference",
    "keywords": "Class SerilogModule Serilog specific logging added to Mithril Inheritance object ModuleBaseClass<SerilogModule> SerilogModule Implements IEquatable<SerilogModule> IModule Inherited Members ModuleBaseClass<SerilogModule>.Category ModuleBaseClass<SerilogModule>.ContentPath ModuleBaseClass<SerilogModule>.ID ModuleBaseClass<SerilogModule>.LastModified ModuleBaseClass<SerilogModule>.Name ModuleBaseClass<SerilogModule>.Order ModuleBaseClass<SerilogModule>.Tags ModuleBaseClass<SerilogModule>.Version ModuleBaseClass<SerilogModule>.ConfigureMVC(IMvcBuilder, IConfiguration, IHostEnvironment) ModuleBaseClass<SerilogModule>.ConfigureRoutes(IEndpointRouteBuilder, IConfiguration, IHostEnvironment) ModuleBaseClass<SerilogModule>.ConfigureWebHostSettings(IWebHostBuilder, IConfiguration, IHostEnvironment) ModuleBaseClass<SerilogModule>.Equals(object) ModuleBaseClass<SerilogModule>.Equals(SerilogModule) ModuleBaseClass<SerilogModule>.GetHashCode() ModuleBaseClass<SerilogModule>.InitializeDataAsync(IDataService, IServiceProvider) ModuleBaseClass<SerilogModule>.OnStarted() ModuleBaseClass<SerilogModule>.OnStopped() ModuleBaseClass<SerilogModule>.OnStopping() object.Equals(object, object) object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Mithril.Logging.Serilog Assembly: Mithril.Logging.Serilog.dll Syntax public class SerilogModule : ModuleBaseClass<SerilogModule>, IEquatable<SerilogModule>, IModule Properties | Improve this Doc View Source Features Gets the features. Declaration public override IFeature[] Features { get; } Property Value Type Description IFeature[] The features. Overrides ModuleBaseClass<SerilogModule>.Features See Also ModuleBaseClass<TModule> Methods | Improve this Doc View Source ConfigureApplication(IApplicationBuilder?, IConfiguration?, IHostEnvironment?) Configures the application. Declaration public override IApplicationBuilder? ConfigureApplication(IApplicationBuilder? app, IConfiguration? configuration, IHostEnvironment? environment) Parameters Type Name Description IApplicationBuilder app The application. IConfiguration configuration The configuration. IHostEnvironment environment The environment. Returns Type Description IApplicationBuilder Application builder Overrides ModuleBaseClass<SerilogModule>.ConfigureApplication(IApplicationBuilder, IConfiguration, IHostEnvironment) See Also ModuleBaseClass<TModule> | Improve this Doc View Source ConfigureHostSettings(IHostBuilder?, IConfiguration?, IHostEnvironment?) Configures the host settings. Declaration public override IHostBuilder? ConfigureHostSettings(IHostBuilder? host, IConfiguration? configuration, IHostEnvironment? environment) Parameters Type Name Description IHostBuilder host The host. IConfiguration configuration The configuration. IHostEnvironment environment The environment. Returns Type Description IHostBuilder Host builder Overrides ModuleBaseClass<SerilogModule>.ConfigureHostSettings(IHostBuilder, IConfiguration, IHostEnvironment) See Also ModuleBaseClass<TModule> | Improve this Doc View Source ConfigureLoggingSettings(ILoggingBuilder?, IConfiguration?, IHostEnvironment?) Configures the logging settings. Declaration public override ILoggingBuilder? ConfigureLoggingSettings(ILoggingBuilder? logging, IConfiguration? configuration, IHostEnvironment? environment) Parameters Type Name Description ILoggingBuilder logging The logging. IConfiguration configuration The configuration. IHostEnvironment environment The environment. Returns Type Description ILoggingBuilder Logging builder Overrides ModuleBaseClass<SerilogModule>.ConfigureLoggingSettings(ILoggingBuilder, IConfiguration, IHostEnvironment) See Also ModuleBaseClass<TModule> | Improve this Doc View Source ConfigureServices(IServiceCollection?, IConfiguration?, IHostEnvironment?) Configures the services for the module. Declaration public override IServiceCollection? ConfigureServices(IServiceCollection? services, IConfiguration? configuration, IHostEnvironment? environment) Parameters Type Name Description IServiceCollection services The services collection. IConfiguration configuration The configuration. IHostEnvironment environment The environment. Returns Type Description IServiceCollection Services Overrides ModuleBaseClass<SerilogModule>.ConfigureServices(IServiceCollection, IConfiguration, IHostEnvironment) See Also ModuleBaseClass<TModule> Implements IEquatable<T> IModule Extension Methods ExpandoObjectExtensions.ConvertToExpando<TEntity>(TEntity?) GenericExtensions.When<TObject>(TObject, bool, Func<TObject, TObject>) See Also ModuleBaseClass<TModule>"
  },
  "api/Mithril.Logging.Serilog.html": {
    "href": "api/Mithril.Logging.Serilog.html",
    "title": "Namespace Mithril.Logging.Serilog | Mithril API Reference",
    "keywords": "Namespace Mithril.Logging.Serilog Classes SerilogModule Serilog specific logging added to Mithril"
  },
  "api/Mithril.Logging.html": {
    "href": "api/Mithril.Logging.html",
    "title": "Namespace Mithril.Logging | Mithril API Reference",
    "keywords": "Namespace Mithril.Logging Classes LoggingModule Module that adds a command handler that accepts specific logging added to Mithril"
  },
  "api/Mithril.Models.ErrorViewModel.html": {
    "href": "api/Mithril.Models.ErrorViewModel.html",
    "title": "Class ErrorViewModel | Mithril API Reference",
    "keywords": "Class ErrorViewModel ERROR view model Inheritance object ErrorViewModel Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Mithril.Models Assembly: Mithril.dll Syntax public class ErrorViewModel Properties | Improve this Doc View Source RequestId Gets or sets the request identifier. Declaration public string? RequestId { get; set; } Property Value Type Description string The request identifier. | Improve this Doc View Source ShowRequestId Gets a value indicating whether [show request identifier]. Declaration public bool ShowRequestId { get; } Property Value Type Description bool true if [show request identifier]; otherwise, false. Extension Methods ExpandoObjectExtensions.ConvertToExpando<TEntity>(TEntity?) GenericExtensions.When<TObject>(TObject, bool, Func<TObject, TObject>)"
  },
  "api/Mithril.Models.TestModule.html": {
    "href": "api/Mithril.Models.TestModule.html",
    "title": "Class TestModule | Mithril API Reference",
    "keywords": "Class TestModule Test module Inheritance object ModuleBaseClass<TestModule> TestModule Implements IEquatable<TestModule> IModule Inherited Members ModuleBaseClass<TestModule>.Category ModuleBaseClass<TestModule>.ContentPath ModuleBaseClass<TestModule>.Features ModuleBaseClass<TestModule>.ID ModuleBaseClass<TestModule>.LastModified ModuleBaseClass<TestModule>.Name ModuleBaseClass<TestModule>.Order ModuleBaseClass<TestModule>.Tags ModuleBaseClass<TestModule>.Version ModuleBaseClass<TestModule>.ConfigureApplication(IApplicationBuilder, IConfiguration, IHostEnvironment) ModuleBaseClass<TestModule>.ConfigureHostSettings(IHostBuilder, IConfiguration, IHostEnvironment) ModuleBaseClass<TestModule>.ConfigureLoggingSettings(ILoggingBuilder, IConfiguration, IHostEnvironment) ModuleBaseClass<TestModule>.ConfigureMVC(IMvcBuilder, IConfiguration, IHostEnvironment) ModuleBaseClass<TestModule>.ConfigureRoutes(IEndpointRouteBuilder, IConfiguration, IHostEnvironment) ModuleBaseClass<TestModule>.ConfigureWebHostSettings(IWebHostBuilder, IConfiguration, IHostEnvironment) ModuleBaseClass<TestModule>.Equals(object) ModuleBaseClass<TestModule>.Equals(TestModule) ModuleBaseClass<TestModule>.GetHashCode() ModuleBaseClass<TestModule>.InitializeDataAsync(IDataService, IServiceProvider) ModuleBaseClass<TestModule>.OnStarted() ModuleBaseClass<TestModule>.OnStopped() ModuleBaseClass<TestModule>.OnStopping() object.Equals(object, object) object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Mithril.Models Assembly: Mithril.dll Syntax public class TestModule : ModuleBaseClass<TestModule>, IEquatable<TestModule>, IModule Methods | Improve this Doc View Source ConfigureServices(IServiceCollection?, IConfiguration?, IHostEnvironment?) Configures the services for the module. Declaration public override IServiceCollection? ConfigureServices(IServiceCollection? services, IConfiguration? configuration, IHostEnvironment? environment) Parameters Type Name Description IServiceCollection services The services collection. IConfiguration configuration The configuration. IHostEnvironment environment The environment. Returns Type Description IServiceCollection Services Overrides ModuleBaseClass<TestModule>.ConfigureServices(IServiceCollection, IConfiguration, IHostEnvironment) See Also ModuleBaseClass<TModule> Implements IEquatable<T> IModule Extension Methods ExpandoObjectExtensions.ConvertToExpando<TEntity>(TEntity?) GenericExtensions.When<TObject>(TObject, bool, Func<TObject, TObject>) See Also ModuleBaseClass<TModule>"
  },
  "api/Mithril.Models.TestQuery.html": {
    "href": "api/Mithril.Models.TestQuery.html",
    "title": "Class TestQuery | Mithril API Reference",
    "keywords": "Class TestQuery Test query Inheritance object QueryBaseClass<TestVM> TestQuery Implements IQuery<TestVM> IQuery Inherited Members QueryBaseClass<TestVM>.DeprecationReason QueryBaseClass<TestVM>.Description QueryBaseClass<TestVM>.Name QueryBaseClass<TestVM>.ReturnType QueryBaseClass<TestVM>.Version QueryBaseClass<TestVM>.FeatureManager QueryBaseClass<TestVM>.Logger QueryBaseClass<TestVM>.IsFeatureEnabled() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Mithril.Models Assembly: Mithril.dll Syntax public class TestQuery : QueryBaseClass<TestVM>, IQuery<TestVM>, IQuery Constructors | Improve this Doc View Source TestQuery(ILogger<TestQuery>?, IFeatureManager?) Initializes a new instance of the TestQuery class. Declaration public TestQuery(ILogger<TestQuery>? logger, IFeatureManager? featureManager) Parameters Type Name Description ILogger<TestQuery> logger IFeatureManager featureManager See Also QueryBaseClass<TClass> Properties | Improve this Doc View Source Arguments Gets the arguments. Declaration public override IArgument[] Arguments { get; } Property Value Type Description IArgument[] The arguments. Overrides QueryBaseClass<TestVM>.Arguments See Also QueryBaseClass<TClass> | Improve this Doc View Source Features Gets the features associated with this command. Declaration public override IFeature[] Features { get; } Property Value Type Description IFeature[] The features associated with this command. Overrides QueryBaseClass<TestVM>.Features See Also QueryBaseClass<TClass> Methods | Improve this Doc View Source ResolveAsync(ClaimsPrincipal?, Arguments) Resolves the asynchronous. Declaration public override Task<TestVM?> ResolveAsync(ClaimsPrincipal? arg, Arguments arguments) Parameters Type Name Description ClaimsPrincipal arg The argument. Arguments arguments The arguments. Returns Type Description Task<TestVM> Overrides QueryBaseClass<TestVM>.ResolveAsync(ClaimsPrincipal, Arguments) See Also QueryBaseClass<TClass> Implements IQuery<TClass> IQuery Extension Methods ExpandoObjectExtensions.ConvertToExpando<TEntity>(TEntity?) GenericExtensions.When<TObject>(TObject, bool, Func<TObject, TObject>) See Also QueryBaseClass<TClass>"
  },
  "api/Mithril.Models.TestVM.html": {
    "href": "api/Mithril.Models.TestVM.html",
    "title": "Class TestVM | Mithril API Reference",
    "keywords": "Class TestVM Test VM Inheritance object TestVM Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Mithril.Models Assembly: Mithril.dll Syntax public class TestVM Properties | Improve this Doc View Source A Gets or sets a. Declaration [ApiAuthorize(\"Test\")] [ApiDescription(\"This will show up in the API\")] public List<TestVM2> A { get; set; } Property Value Type Description List<TestVM2> a. Methods | Improve this Doc View Source ExampleMethod(string, int) Examples the method. Declaration public TestVM2 ExampleMethod(string a = \"A\", int b = 2) Parameters Type Name Description string a a. int b The b. Returns Type Description TestVM2 | Improve this Doc View Source ExampleMethod2(string, int) Examples the method2. Declaration [ApiDepricationReason(\"Because it is old or something\")] public string ExampleMethod2(string a, int b) Parameters Type Name Description string a a. int b The b. Returns Type Description string Extension Methods ExpandoObjectExtensions.ConvertToExpando<TEntity>(TEntity?) GenericExtensions.When<TObject>(TObject, bool, Func<TObject, TObject>)"
  },
  "api/Mithril.Models.TestVM2.html": {
    "href": "api/Mithril.Models.TestVM2.html",
    "title": "Class TestVM2 | Mithril API Reference",
    "keywords": "Class TestVM2 TestVM 2 Inheritance object TestVM2 Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Mithril.Models Assembly: Mithril.dll Syntax public class TestVM2 Properties | Improve this Doc View Source A Gets or sets a. Declaration public string? A { get; set; } Property Value Type Description string a. | Improve this Doc View Source B Gets or sets the b. Declaration public int B { get; set; } Property Value Type Description int The b. Extension Methods ExpandoObjectExtensions.ConvertToExpando<TEntity>(TEntity?) GenericExtensions.When<TObject>(TObject, bool, Func<TObject, TObject>)"
  },
  "api/Mithril.Models.html": {
    "href": "api/Mithril.Models.html",
    "title": "Namespace Mithril.Models | Mithril API Reference",
    "keywords": "Namespace Mithril.Models Classes ErrorViewModel ERROR view model TestModule Test module TestQuery Test query TestVM Test VM TestVM2 TestVM 2"
  },
  "api/Mithril.Mvc.Abstractions.Enums.Orientation.html": {
    "href": "api/Mithril.Mvc.Abstractions.Enums.Orientation.html",
    "title": "Enum Orientation | Mithril API Reference",
    "keywords": "Enum Orientation Orientation Namespace: Mithril.Mvc.Abstractions.Enums Assembly: Mithril.Mvc.Abstractions.dll Syntax public enum Orientation Fields Name Description Landscape The landscape Portrait The portrait Extension Methods ExpandoObjectExtensions.ConvertToExpando<Orientation>(Orientation) GenericExtensions.When<Orientation>(Orientation, bool, Func<Orientation, Orientation>)"
  },
  "api/Mithril.Mvc.Abstractions.Enums.RenderFormat.html": {
    "href": "api/Mithril.Mvc.Abstractions.Enums.RenderFormat.html",
    "title": "Enum RenderFormat | Mithril API Reference",
    "keywords": "Enum RenderFormat Render format enum Namespace: Mithril.Mvc.Abstractions.Enums Assembly: Mithril.Mvc.Abstractions.dll Syntax public enum RenderFormat Fields Name Description HTML The HTML renderer PDF The PDF renderer Extension Methods ExpandoObjectExtensions.ConvertToExpando<RenderFormat>(RenderFormat) GenericExtensions.When<RenderFormat>(RenderFormat, bool, Func<RenderFormat, RenderFormat>)"
  },
  "api/Mithril.Mvc.Abstractions.Enums.html": {
    "href": "api/Mithril.Mvc.Abstractions.Enums.html",
    "title": "Namespace Mithril.Mvc.Abstractions.Enums | Mithril API Reference",
    "keywords": "Namespace Mithril.Mvc.Abstractions.Enums Enums Orientation Orientation RenderFormat Render format enum"
  },
  "api/Mithril.Mvc.Abstractions.RenderOptions.html": {
    "href": "api/Mithril.Mvc.Abstractions.RenderOptions.html",
    "title": "Class RenderOptions | Mithril API Reference",
    "keywords": "Class RenderOptions Render Options Inheritance object RenderOptions Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Mithril.Mvc.Abstractions Assembly: Mithril.Mvc.Abstractions.dll Syntax public class RenderOptions Properties | Improve this Doc View Source Orientation The orientation Declaration public Orientation Orientation { get; set; } Property Value Type Description Orientation The orientation. Extension Methods ExpandoObjectExtensions.ConvertToExpando<TEntity>(TEntity?) GenericExtensions.When<TObject>(TObject, bool, Func<TObject, TObject>)"
  },
  "api/Mithril.Mvc.Abstractions.Services.IViewRendererService.html": {
    "href": "api/Mithril.Mvc.Abstractions.Services.IViewRendererService.html",
    "title": "Interface IViewRendererService | Mithril API Reference",
    "keywords": "Interface IViewRendererService View renderer service interface Namespace: Mithril.Mvc.Abstractions.Services Assembly: Mithril.Mvc.Abstractions.dll Syntax public interface IViewRendererService Methods | Improve this Doc View Source RenderAsync<TModel>(string, TModel, RenderOptions?, RenderFormat) Renders the specified view. Declaration Task<byte[]> RenderAsync<TModel>(string name, TModel model, RenderOptions? options = null, RenderFormat format = RenderFormat.HTML) Parameters Type Name Description string name The name. TModel model The model. RenderOptions options The options. RenderFormat format The format. Returns Type Description Task<byte[]> The rendered view. Type Parameters Name Description TModel The type of the model. Extension Methods ExpandoObjectExtensions.ConvertToExpando<TEntity>(TEntity?) GenericExtensions.When<TObject>(TObject, bool, Func<TObject, TObject>)"
  },
  "api/Mithril.Mvc.Abstractions.Services.html": {
    "href": "api/Mithril.Mvc.Abstractions.Services.html",
    "title": "Namespace Mithril.Mvc.Abstractions.Services | Mithril API Reference",
    "keywords": "Namespace Mithril.Mvc.Abstractions.Services Interfaces IViewRendererService View renderer service interface"
  },
  "api/Mithril.Mvc.Abstractions.html": {
    "href": "api/Mithril.Mvc.Abstractions.html",
    "title": "Namespace Mithril.Mvc.Abstractions | Mithril API Reference",
    "keywords": "Namespace Mithril.Mvc.Abstractions Classes RenderOptions Render Options"
  },
  "api/Mithril.Mvc.MvcModule.html": {
    "href": "api/Mithril.Mvc.MvcModule.html",
    "title": "Class MvcModule | Mithril API Reference",
    "keywords": "Class MvcModule MVC Module Inheritance object ModuleBaseClass<MvcModule> MvcModule Implements IEquatable<MvcModule> IModule Inherited Members ModuleBaseClass<MvcModule>.Category ModuleBaseClass<MvcModule>.ContentPath ModuleBaseClass<MvcModule>.Features ModuleBaseClass<MvcModule>.ID ModuleBaseClass<MvcModule>.LastModified ModuleBaseClass<MvcModule>.Name ModuleBaseClass<MvcModule>.Order ModuleBaseClass<MvcModule>.Tags ModuleBaseClass<MvcModule>.Version ModuleBaseClass<MvcModule>.ConfigureApplication(IApplicationBuilder, IConfiguration, IHostEnvironment) ModuleBaseClass<MvcModule>.ConfigureHostSettings(IHostBuilder, IConfiguration, IHostEnvironment) ModuleBaseClass<MvcModule>.ConfigureLoggingSettings(ILoggingBuilder, IConfiguration, IHostEnvironment) ModuleBaseClass<MvcModule>.ConfigureMVC(IMvcBuilder, IConfiguration, IHostEnvironment) ModuleBaseClass<MvcModule>.ConfigureRoutes(IEndpointRouteBuilder, IConfiguration, IHostEnvironment) ModuleBaseClass<MvcModule>.ConfigureWebHostSettings(IWebHostBuilder, IConfiguration, IHostEnvironment) ModuleBaseClass<MvcModule>.Equals(object) ModuleBaseClass<MvcModule>.Equals(MvcModule) ModuleBaseClass<MvcModule>.GetHashCode() ModuleBaseClass<MvcModule>.InitializeDataAsync(IDataService, IServiceProvider) ModuleBaseClass<MvcModule>.OnStarted() ModuleBaseClass<MvcModule>.OnStopped() ModuleBaseClass<MvcModule>.OnStopping() object.Equals(object, object) object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Mithril.Mvc Assembly: Mithril.Mvc.dll Syntax public class MvcModule : ModuleBaseClass<MvcModule>, IEquatable<MvcModule>, IModule Constructors | Improve this Doc View Source MvcModule() Initializes a new instance of the MvcModule class. Declaration public MvcModule() See Also ModuleBaseClass<TModule> Methods | Improve this Doc View Source ConfigureServices(IServiceCollection?, IConfiguration?, IHostEnvironment?) Configures the services for the module. Declaration public override IServiceCollection? ConfigureServices(IServiceCollection? services, IConfiguration? configuration, IHostEnvironment? environment) Parameters Type Name Description IServiceCollection services The services collection. IConfiguration configuration The configuration. IHostEnvironment environment The environment. Returns Type Description IServiceCollection Services Overrides ModuleBaseClass<MvcModule>.ConfigureServices(IServiceCollection, IConfiguration, IHostEnvironment) See Also ModuleBaseClass<TModule> Implements IEquatable<T> IModule Extension Methods ExpandoObjectExtensions.ConvertToExpando<TEntity>(TEntity?) GenericExtensions.When<TObject>(TObject, bool, Func<TObject, TObject>) See Also ModuleBaseClass<TModule>"
  },
  "api/Mithril.Mvc.Services.ViewRendererService.html": {
    "href": "api/Mithril.Mvc.Services.ViewRendererService.html",
    "title": "Class ViewRendererService | Mithril API Reference",
    "keywords": "Class ViewRendererService View renderer service Inheritance object ViewRendererService Implements IViewRendererService Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Mithril.Mvc.Services Assembly: Mithril.Mvc.dll Syntax public class ViewRendererService : IViewRendererService Constructors | Improve this Doc View Source ViewRendererService(IRazorViewEngine?, ITempDataProvider?, IServiceProvider?, IConverter?, IWebHostEnvironment?, ILogger<ViewRendererService>?) Initializes a new instance of the ViewRendererService class. Declaration public ViewRendererService(IRazorViewEngine? viewEngine, ITempDataProvider? tempDataProvider, IServiceProvider? serviceProvider, IConverter? pdfConverter, IWebHostEnvironment? webHostEnvironment, ILogger<ViewRendererService>? logger) Parameters Type Name Description IRazorViewEngine viewEngine The view engine. ITempDataProvider tempDataProvider The temporary data provider. IServiceProvider serviceProvider The service provider. IConverter pdfConverter The PDF converter. IWebHostEnvironment webHostEnvironment The web host environment. ILogger<ViewRendererService> logger The logger. See Also IViewRendererService Properties | Improve this Doc View Source Logger Gets the logger. Declaration public ILogger<ViewRendererService>? Logger { get; } Property Value Type Description ILogger<ViewRendererService> The logger. See Also IViewRendererService | Improve this Doc View Source PdfConverter Gets the PDF converter. Declaration public IConverter? PdfConverter { get; } Property Value Type Description IConverter The PDF converter. See Also IViewRendererService | Improve this Doc View Source WebHostEnvironment Gets the web host environment. Declaration public IWebHostEnvironment? WebHostEnvironment { get; } Property Value Type Description IWebHostEnvironment The web host environment. See Also IViewRendererService Methods | Improve this Doc View Source RenderAsync<TModel>(string?, TModel, RenderOptions?, RenderFormat) Renders the specified name. Declaration public Task<byte[]> RenderAsync<TModel>(string? name, TModel model, RenderOptions? renderOptions = null, RenderFormat format = RenderFormat.HTML) Parameters Type Name Description string name The name. TModel model The model. RenderOptions renderOptions The render options. RenderFormat format The format. Returns Type Description Task<byte[]> The rendered view. Type Parameters Name Description TModel The type of the model. Exceptions Type Condition InvalidOperationException Couldn't find view '{name}' See Also IViewRendererService Implements IViewRendererService Extension Methods ExpandoObjectExtensions.ConvertToExpando<TEntity>(TEntity?) GenericExtensions.When<TObject>(TObject, bool, Func<TObject, TObject>) See Also IViewRendererService"
  },
  "api/Mithril.Mvc.Services.html": {
    "href": "api/Mithril.Mvc.Services.html",
    "title": "Namespace Mithril.Mvc.Services | Mithril API Reference",
    "keywords": "Namespace Mithril.Mvc.Services Classes ViewRendererService View renderer service"
  },
  "api/Mithril.Mvc.html": {
    "href": "api/Mithril.Mvc.html",
    "title": "Namespace Mithril.Mvc | Mithril API Reference",
    "keywords": "Namespace Mithril.Mvc Classes MvcModule MVC Module"
  },
  "api/Mithril.Navigation.Abstractions.Interfaces.IMenuBuilder.html": {
    "href": "api/Mithril.Navigation.Abstractions.Interfaces.IMenuBuilder.html",
    "title": "Interface IMenuBuilder | Mithril API Reference",
    "keywords": "Interface IMenuBuilder Menu builder interface Namespace: Mithril.Navigation.Abstractions.Interfaces Assembly: Mithril.Navigation.Abstractions.dll Syntax public interface IMenuBuilder Properties | Improve this Doc View Source Display Gets the display name of the menu. Declaration string Display { get; } Property Value Type Description string The display name of the menu. | Improve this Doc View Source Permissions Gets the permissions. Declaration IPermission? Permissions { get; } Property Value Type Description IPermission The permissions. Methods | Improve this Doc View Source AddOrUpdateMenuItem(string, string, string, string, int, IPermission?) Adds a menu item. Declaration IMenuBuilder AddOrUpdateMenuItem(string display, string description, string icon, string url, int order = 0, IPermission? permission = null) Parameters Type Name Description string display The display. string description The description. string icon The icon. string url The URL. int order The order. IPermission permission The permission. Returns Type Description IMenuBuilder This | Improve this Doc View Source BuildAsync() Builds this instance. Declaration Task BuildAsync() Returns Type Description Task The async task. | Improve this Doc View Source HasMenuItem(string) Determines whether [the menu] [has the menu item specified]. Declaration bool HasMenuItem(string display) Parameters Type Name Description string display The display name. Returns Type Description bool true if it [has the menu item specified]; otherwise, false. | Improve this Doc View Source SetSecurity(IPermission?) Sets the security. Declaration IMenuBuilder SetSecurity(IPermission? permission) Parameters Type Name Description IPermission permission The permission. Returns Type Description IMenuBuilder This. Extension Methods ExpandoObjectExtensions.ConvertToExpando<TEntity>(TEntity?) GenericExtensions.When<TObject>(TObject, bool, Func<TObject, TObject>)"
  },
  "api/Mithril.Navigation.Abstractions.Interfaces.html": {
    "href": "api/Mithril.Navigation.Abstractions.Interfaces.html",
    "title": "Namespace Mithril.Navigation.Abstractions.Interfaces | Mithril API Reference",
    "keywords": "Namespace Mithril.Navigation.Abstractions.Interfaces Interfaces IMenuBuilder Menu builder interface"
  },
  "api/Mithril.Navigation.Abstractions.Services.IMenuService.html": {
    "href": "api/Mithril.Navigation.Abstractions.Services.IMenuService.html",
    "title": "Interface IMenuService | Mithril API Reference",
    "keywords": "Interface IMenuService Menu service interface Namespace: Mithril.Navigation.Abstractions.Services Assembly: Mithril.Navigation.Abstractions.dll Syntax public interface IMenuService Methods | Improve this Doc View Source CreateMenuBuilder(string, ClaimsPrincipal?) Creates a menu builder. Declaration IMenuBuilder? CreateMenuBuilder(string display, ClaimsPrincipal? user) Parameters Type Name Description string display The display name of the menu. ClaimsPrincipal user The user. Returns Type Description IMenuBuilder The menu builder. Extension Methods ExpandoObjectExtensions.ConvertToExpando<TEntity>(TEntity?) GenericExtensions.When<TObject>(TObject, bool, Func<TObject, TObject>)"
  },
  "api/Mithril.Navigation.Abstractions.Services.html": {
    "href": "api/Mithril.Navigation.Abstractions.Services.html",
    "title": "Namespace Mithril.Navigation.Abstractions.Services | Mithril API Reference",
    "keywords": "Namespace Mithril.Navigation.Abstractions.Services Interfaces IMenuService Menu service interface"
  },
  "api/Mithril.Navigation.Features.NavigationFeature.html": {
    "href": "api/Mithril.Navigation.Features.NavigationFeature.html",
    "title": "Class NavigationFeature | Mithril API Reference",
    "keywords": "Class NavigationFeature Navigation feature Inheritance object FeatureBaseClass<NavigationFeature> NavigationFeature Implements IFeature IEquatable<NavigationFeature> Inherited Members FeatureBaseClass<NavigationFeature>.Instance FeatureBaseClass<NavigationFeature>.Equals(object) FeatureBaseClass<NavigationFeature>.Equals(NavigationFeature) FeatureBaseClass<NavigationFeature>.GetHashCode() object.Equals(object, object) object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Mithril.Navigation.Features Assembly: Mithril.Navigation.dll Syntax public class NavigationFeature : FeatureBaseClass<NavigationFeature>, IFeature, IEquatable<NavigationFeature> Properties | Improve this Doc View Source Category The group (by category) that the feature belongs. If not provided, defaults to 'Uncategorized'. Declaration public override string Category { get; } Property Value Type Description string The category. Overrides FeatureBaseClass<NavigationFeature>.Category See Also FeatureBaseClass<TFeature> | Improve this Doc View Source Description Gets or sets the description. Declaration public override string Description { get; } Property Value Type Description string The description. Overrides FeatureBaseClass<NavigationFeature>.Description See Also FeatureBaseClass<TFeature> | Improve this Doc View Source Name Human-readable name of the feature. If not provided, the identifier will be used. Declaration public override string Name { get; } Property Value Type Description string The name. Overrides FeatureBaseClass<NavigationFeature>.Name See Also FeatureBaseClass<TFeature> Implements IFeature IEquatable<T> Extension Methods ExpandoObjectExtensions.ConvertToExpando<TEntity>(TEntity?) GenericExtensions.When<TObject>(TObject, bool, Func<TObject, TObject>) See Also FeatureBaseClass<TFeature>"
  },
  "api/Mithril.Navigation.Features.html": {
    "href": "api/Mithril.Navigation.Features.html",
    "title": "Namespace Mithril.Navigation.Features | Mithril API Reference",
    "keywords": "Namespace Mithril.Navigation.Features Classes NavigationFeature Navigation feature"
  },
  "api/Mithril.Navigation.Models.Mappings.MenuItemMapping.html": {
    "href": "api/Mithril.Navigation.Models.Mappings.MenuItemMapping.html",
    "title": "Class MenuItemMapping | Mithril API Reference",
    "keywords": "Class MenuItemMapping Menu item mapping Inheritance object MappingBaseClass<MenuItem, DefaultDatabase> MenuItemMapping Implements IMapping<MenuItem> IMapping Inherited Members MappingBaseClass<MenuItem, DefaultDatabase>.AddAutoKey() MappingBaseClass<MenuItem, DefaultDatabase>.ContainsProperty(string) MappingBaseClass<MenuItem, DefaultDatabase>.Copy(IMapping) MappingBaseClass<MenuItem, DefaultDatabase>.CopyProperty(IIDProperty) MappingBaseClass<MenuItem, DefaultDatabase>.CopyProperty(IProperty) MappingBaseClass<MenuItem, DefaultDatabase>.CopyProperty(IMapProperty) MappingBaseClass<MenuItem, DefaultDatabase>.CopyProperty(IManyToOneProperty) MappingBaseClass<MenuItem, DefaultDatabase>.CopyProperty(IManyToManyProperty) MappingBaseClass<MenuItem, DefaultDatabase>.Equals(object) MappingBaseClass<MenuItem, DefaultDatabase>.GetColumnName(string) MappingBaseClass<MenuItem, DefaultDatabase>.GetHashCode() MappingBaseClass<MenuItem, DefaultDatabase>.ID<TDataType>(Expression<Func<MenuItem, TDataType>>) MappingBaseClass<MenuItem, DefaultDatabase>.ManyToMany<TDataType>(Expression<Func<MenuItem, IList<TDataType>>>) MappingBaseClass<MenuItem, DefaultDatabase>.ManyToOne<TDataType>(Expression<Func<MenuItem, IList<TDataType>>>) MappingBaseClass<MenuItem, DefaultDatabase>.ManyToOne<TDataType>(Expression<Func<MenuItem, TDataType>>) MappingBaseClass<MenuItem, DefaultDatabase>.Map<TDataType>(Expression<Func<MenuItem, TDataType>>) MappingBaseClass<MenuItem, DefaultDatabase>.Reduce(ILogger) MappingBaseClass<MenuItem, DefaultDatabase>.Reduce(IMapping, ILogger) MappingBaseClass<MenuItem, DefaultDatabase>.Reference<TDataType>(Expression<Func<MenuItem, TDataType>>) MappingBaseClass<MenuItem, DefaultDatabase>.SetQuery(QueryType, string, CommandType, params IParameter[]) MappingBaseClass<MenuItem, DefaultDatabase>.Setup() MappingBaseClass<MenuItem, DefaultDatabase>.ToString() MappingBaseClass<MenuItem, DefaultDatabase>.AutoIDProperties MappingBaseClass<MenuItem, DefaultDatabase>.DatabaseConfigType MappingBaseClass<MenuItem, DefaultDatabase>.IDProperties MappingBaseClass<MenuItem, DefaultDatabase>.ManyToManyProperties MappingBaseClass<MenuItem, DefaultDatabase>.ManyToOneProperties MappingBaseClass<MenuItem, DefaultDatabase>.MapProperties MappingBaseClass<MenuItem, DefaultDatabase>.Merge MappingBaseClass<MenuItem, DefaultDatabase>.ObjectType MappingBaseClass<MenuItem, DefaultDatabase>.Order MappingBaseClass<MenuItem, DefaultDatabase>.Prefix MappingBaseClass<MenuItem, DefaultDatabase>.Queries MappingBaseClass<MenuItem, DefaultDatabase>.ReferenceProperties MappingBaseClass<MenuItem, DefaultDatabase>.SchemaName MappingBaseClass<MenuItem, DefaultDatabase>.Suffix MappingBaseClass<MenuItem, DefaultDatabase>.TableName object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Mithril.Navigation.Models.Mappings Assembly: Mithril.Navigation.dll Syntax public class MenuItemMapping : MappingBaseClass<MenuItem, DefaultDatabase>, IMapping<MenuItem>, IMapping Constructors | Improve this Doc View Source MenuItemMapping() Initializes a new instance of the MenuItemMapping class. Declaration public MenuItemMapping() See Also MappingBaseClass<TClassType, TDatabaseType> Implements IMapping<TClassType> IMapping Extension Methods ExpandoObjectExtensions.ConvertToExpando<TEntity>(TEntity?) GenericExtensions.When<TObject>(TObject, bool, Func<TObject, TObject>) See Also MappingBaseClass<TClassType, TDatabaseType>"
  },
  "api/Mithril.Navigation.Models.Mappings.MenuMapping.html": {
    "href": "api/Mithril.Navigation.Models.Mappings.MenuMapping.html",
    "title": "Class MenuMapping | Mithril API Reference",
    "keywords": "Class MenuMapping Menu mapping Inheritance object MappingBaseClass<Menu, DefaultDatabase> MenuMapping Implements IMapping<Menu> IMapping Inherited Members MappingBaseClass<Menu, DefaultDatabase>.AddAutoKey() MappingBaseClass<Menu, DefaultDatabase>.ContainsProperty(string) MappingBaseClass<Menu, DefaultDatabase>.Copy(IMapping) MappingBaseClass<Menu, DefaultDatabase>.CopyProperty(IIDProperty) MappingBaseClass<Menu, DefaultDatabase>.CopyProperty(IProperty) MappingBaseClass<Menu, DefaultDatabase>.CopyProperty(IMapProperty) MappingBaseClass<Menu, DefaultDatabase>.CopyProperty(IManyToOneProperty) MappingBaseClass<Menu, DefaultDatabase>.CopyProperty(IManyToManyProperty) MappingBaseClass<Menu, DefaultDatabase>.Equals(object) MappingBaseClass<Menu, DefaultDatabase>.GetColumnName(string) MappingBaseClass<Menu, DefaultDatabase>.GetHashCode() MappingBaseClass<Menu, DefaultDatabase>.ID<TDataType>(Expression<Func<Menu, TDataType>>) MappingBaseClass<Menu, DefaultDatabase>.ManyToMany<TDataType>(Expression<Func<Menu, IList<TDataType>>>) MappingBaseClass<Menu, DefaultDatabase>.ManyToOne<TDataType>(Expression<Func<Menu, IList<TDataType>>>) MappingBaseClass<Menu, DefaultDatabase>.ManyToOne<TDataType>(Expression<Func<Menu, TDataType>>) MappingBaseClass<Menu, DefaultDatabase>.Map<TDataType>(Expression<Func<Menu, TDataType>>) MappingBaseClass<Menu, DefaultDatabase>.Reduce(ILogger) MappingBaseClass<Menu, DefaultDatabase>.Reduce(IMapping, ILogger) MappingBaseClass<Menu, DefaultDatabase>.Reference<TDataType>(Expression<Func<Menu, TDataType>>) MappingBaseClass<Menu, DefaultDatabase>.SetQuery(QueryType, string, CommandType, params IParameter[]) MappingBaseClass<Menu, DefaultDatabase>.Setup() MappingBaseClass<Menu, DefaultDatabase>.ToString() MappingBaseClass<Menu, DefaultDatabase>.AutoIDProperties MappingBaseClass<Menu, DefaultDatabase>.DatabaseConfigType MappingBaseClass<Menu, DefaultDatabase>.IDProperties MappingBaseClass<Menu, DefaultDatabase>.ManyToManyProperties MappingBaseClass<Menu, DefaultDatabase>.ManyToOneProperties MappingBaseClass<Menu, DefaultDatabase>.MapProperties MappingBaseClass<Menu, DefaultDatabase>.Merge MappingBaseClass<Menu, DefaultDatabase>.ObjectType MappingBaseClass<Menu, DefaultDatabase>.Order MappingBaseClass<Menu, DefaultDatabase>.Prefix MappingBaseClass<Menu, DefaultDatabase>.Queries MappingBaseClass<Menu, DefaultDatabase>.ReferenceProperties MappingBaseClass<Menu, DefaultDatabase>.SchemaName MappingBaseClass<Menu, DefaultDatabase>.Suffix MappingBaseClass<Menu, DefaultDatabase>.TableName object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Mithril.Navigation.Models.Mappings Assembly: Mithril.Navigation.dll Syntax public class MenuMapping : MappingBaseClass<Menu, DefaultDatabase>, IMapping<Menu>, IMapping Constructors | Improve this Doc View Source MenuMapping() Initializes a new instance of the MenuMapping class. Declaration public MenuMapping() See Also MappingBaseClass<TClassType, TDatabaseType> Implements IMapping<TClassType> IMapping Extension Methods ExpandoObjectExtensions.ConvertToExpando<TEntity>(TEntity?) GenericExtensions.When<TObject>(TObject, bool, Func<TObject, TObject>) See Also MappingBaseClass<TClassType, TDatabaseType>"
  },
  "api/Mithril.Navigation.Models.Mappings.html": {
    "href": "api/Mithril.Navigation.Models.Mappings.html",
    "title": "Namespace Mithril.Navigation.Models.Mappings | Mithril API Reference",
    "keywords": "Namespace Mithril.Navigation.Models.Mappings Classes MenuItemMapping Menu item mapping MenuMapping Menu mapping"
  },
  "api/Mithril.Navigation.Models.Menu.html": {
    "href": "api/Mithril.Navigation.Models.Menu.html",
    "title": "Class Menu | Mithril API Reference",
    "keywords": "Class Menu Menu entry Inheritance object ModelBase<Menu> Menu Implements IModel<Menu> IModel IEquatable<IModel> IEquatable<IModel<Menu>> IComparable IComparable<Menu> IEquatable<ModelBase<Menu>> Inherited Members ModelBase<Menu>.Active ModelBase<Menu>.Creator ModelBase<Menu>.DateCreated ModelBase<Menu>.DateModified ModelBase<Menu>.ID ModelBase<Menu>.Modifier ModelBase<Menu>.TenantID ModelBase<Menu>.All(IDataService) ModelBase<Menu>.AllActive(IDataService) ModelBase<Menu>.AllInactive(IDataService) ModelBase<Menu>.Load(long, IDataService) ModelBase<Menu>.Query(IDataService) ModelBase<Menu>.CanBeModifiedBy(ClaimsPrincipal) ModelBase<Menu>.CompareTo(object) ModelBase<Menu>.DeleteAsync(IDataService, ClaimsPrincipal, bool) ModelBase<Menu>.Equals(IModel) ModelBase<Menu>.Equals(IModel<Menu>) ModelBase<Menu>.Equals(ModelBase<Menu>) ModelBase<Menu>.SaveAsync(IDataService, ClaimsPrincipal) ModelBase<Menu>.SetupObject(IDataService, ClaimsPrincipal) ModelBase<Menu>.SetupObject(IDataService, IUser) ModelBase<Menu>.SetupObjectAndReturn(IDataService, ClaimsPrincipal) object.Equals(object, object) object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Namespace: Mithril.Navigation.Models Assembly: Mithril.Navigation.dll Syntax public class Menu : ModelBase<Menu>, IModel<Menu>, IModel, IEquatable<IModel>, IEquatable<IModel<Menu>>, IComparable, IComparable<Menu>, IEquatable<ModelBase<Menu>> Constructors | Improve this Doc View Source Menu() Initializes a new instance of the Menu class. Declaration public Menu() See Also ModelBase<TClass> | Improve this Doc View Source Menu(string) Initializes a new instance of the Menu class. Declaration public Menu(string display) Parameters Type Name Description string display The display. Exceptions Type Condition ArgumentNullException display ArgumentException display See Also ModelBase<TClass> Properties | Improve this Doc View Source Display Gets or sets the display name. Declaration [Required] [MinLength(1)] [MaxLength(64)] public string? Display { get; set; } Property Value Type Description string The display name. See Also ModelBase<TClass> | Improve this Doc View Source Items Gets or sets the items. Declaration public virtual IList<MenuItem> Items { get; set; } Property Value Type Description IList<MenuItem> The items. See Also ModelBase<TClass> | Improve this Doc View Source Permissions Gets or sets the permission. Declaration public virtual IPermission? Permissions { get; set; } Property Value Type Description IPermission The permission. See Also ModelBase<TClass> Methods | Improve this Doc View Source AddOrUpdateMenuItem(string, string, string, string, int, IPermission?) Adds the menu item. Declaration public void AddOrUpdateMenuItem(string display, string description, string icon, string url, int order = 0, IPermission? permission = null) Parameters Type Name Description string display The display. string description The description. string icon The icon. string url The URL. int order The order. IPermission permission The permission. See Also ModelBase<TClass> | Improve this Doc View Source AddOrUpdateMenuItem(string, string, string, Uri, int, IPermission?) Adds the menu item. Declaration public void AddOrUpdateMenuItem(string display, string description, string icon, Uri url, int order = 0, IPermission? permission = null) Parameters Type Name Description string display The display. string description The description. string icon The icon. Uri url The URL. int order The order. IPermission permission The permission. See Also ModelBase<TClass> | Improve this Doc View Source CanBeViewedBy(ClaimsPrincipal?) Determines whether this instance [can be viewed by] the specified user. Declaration public override bool CanBeViewedBy(ClaimsPrincipal? user) Parameters Type Name Description ClaimsPrincipal user The user. Returns Type Description bool true if this instance [can be viewed by] the specified user; otherwise, false. Overrides ModelBase<Menu>.CanBeViewedBy(ClaimsPrincipal) See Also ModelBase<TClass> | Improve this Doc View Source CompareTo(Menu?) Compares the object to another object Declaration public override int CompareTo(Menu? other) Parameters Type Name Description Menu other Object to compare to Returns Type Description int 0 if they are equal, -1 if this is smaller, 1 if it is larger Overrides ModelBase<Menu>.CompareTo(Menu) See Also ModelBase<TClass> | Improve this Doc View Source Equals(Menu) Indicates whether the current object is equal to another object of the same type. Declaration public bool Equals(Menu other) Parameters Type Name Description Menu other An object to compare with this object. Returns Type Description bool true if the current object is equal to the other parameter; otherwise, false. See Also ModelBase<TClass> | Improve this Doc View Source Equals(object?) Determines whether the specified object, is equal to this instance. Declaration public override bool Equals(object? obj) Parameters Type Name Description object obj The object to compare with this instance. Returns Type Description bool true if the specified object is equal to this instance; otherwise, false. Overrides ModelBase<Menu>.Equals(object) See Also ModelBase<TClass> | Improve this Doc View Source GetHashCode() Returns a hash code for this instance. Declaration public override int GetHashCode() Returns Type Description int A hash code for this instance, suitable for use in hashing algorithms and data structures like a hash table. Overrides Mithril.Data.Abstractions.BaseClasses.ModelBase<Mithril.Navigation.Models.Menu>.GetHashCode() See Also ModelBase<TClass> | Improve this Doc View Source Load(string?, IDataService?) Loads the menu by input path. Declaration public static Menu? Load(string? display, IDataService? dataService) Parameters Type Name Description string display The display. IDataService dataService The data service. Returns Type Description Menu The route specified. See Also ModelBase<TClass> | Improve this Doc View Source LoadOrCreateAsync(string, IDataService?, ClaimsPrincipal?) Loads or creates the route. Declaration public static Task<Menu?> LoadOrCreateAsync(string display, IDataService? dataService, ClaimsPrincipal? user) Parameters Type Name Description string display The display. IDataService dataService The data service. ClaimsPrincipal user The user. Returns Type Description Task<Menu> The route entry. See Also ModelBase<TClass> | Improve this Doc View Source ToString() Converts to string. Declaration public override string ToString() Returns Type Description string A string that represents this instance. Overrides object.ToString() See Also ModelBase<TClass> Operators | Improve this Doc View Source operator ==(Menu, Menu) Implements the operator ==. Declaration public static bool operator ==(Menu first, Menu second) Parameters Type Name Description Menu first The first. Menu second The second. Returns Type Description bool The result of the operator. See Also ModelBase<TClass> | Improve this Doc View Source operator >(Menu, Menu) Implements the operator >. Declaration public static bool operator >(Menu left, Menu right) Parameters Type Name Description Menu left The left. Menu right The right. Returns Type Description bool The result of the operator. See Also ModelBase<TClass> | Improve this Doc View Source operator >=(Menu, Menu) Implements the operator >=. Declaration public static bool operator >=(Menu left, Menu right) Parameters Type Name Description Menu left The left. Menu right The right. Returns Type Description bool The result of the operator. See Also ModelBase<TClass> | Improve this Doc View Source operator !=(Menu, Menu) Implements the operator !=. Declaration public static bool operator !=(Menu left, Menu right) Parameters Type Name Description Menu left The left. Menu right The right. Returns Type Description bool The result of the operator. See Also ModelBase<TClass> | Improve this Doc View Source operator <(Menu, Menu) Implements the operator <. Declaration public static bool operator <(Menu left, Menu right) Parameters Type Name Description Menu left The left. Menu right The right. Returns Type Description bool The result of the operator. See Also ModelBase<TClass> | Improve this Doc View Source operator <=(Menu, Menu) Implements the operator <=. Declaration public static bool operator <=(Menu left, Menu right) Parameters Type Name Description Menu left The left. Menu right The right. Returns Type Description bool The result of the operator. See Also ModelBase<TClass> Implements IModel<TClass> IModel IEquatable<T> IEquatable<T> IComparable IComparable<T> IEquatable<T> Extension Methods ExpandoObjectExtensions.ConvertToExpando<TEntity>(TEntity?) GenericExtensions.When<TObject>(TObject, bool, Func<TObject, TObject>) See Also ModelBase<TClass>"
  },
  "api/Mithril.Navigation.Models.MenuItem.html": {
    "href": "api/Mithril.Navigation.Models.MenuItem.html",
    "title": "Class MenuItem | Mithril API Reference",
    "keywords": "Class MenuItem Menu item Inheritance object ModelBase<MenuItem> MenuItem Implements IModel<MenuItem> IModel IEquatable<IModel> IEquatable<IModel<MenuItem>> IComparable IComparable<MenuItem> IEquatable<ModelBase<MenuItem>> IEquatable<MenuItem> Inherited Members ModelBase<MenuItem>.Active ModelBase<MenuItem>.Creator ModelBase<MenuItem>.DateCreated ModelBase<MenuItem>.DateModified ModelBase<MenuItem>.ID ModelBase<MenuItem>.Modifier ModelBase<MenuItem>.TenantID ModelBase<MenuItem>.All(IDataService) ModelBase<MenuItem>.AllActive(IDataService) ModelBase<MenuItem>.AllInactive(IDataService) ModelBase<MenuItem>.Load(long, IDataService) ModelBase<MenuItem>.Query(IDataService) ModelBase<MenuItem>.CanBeModifiedBy(ClaimsPrincipal) ModelBase<MenuItem>.CompareTo(object) ModelBase<MenuItem>.DeleteAsync(IDataService, ClaimsPrincipal, bool) ModelBase<MenuItem>.Equals(IModel) ModelBase<MenuItem>.Equals(IModel<MenuItem>) ModelBase<MenuItem>.Equals(ModelBase<MenuItem>) ModelBase<MenuItem>.SaveAsync(IDataService, ClaimsPrincipal) ModelBase<MenuItem>.SetupObject(IDataService, ClaimsPrincipal) ModelBase<MenuItem>.SetupObject(IDataService, IUser) ModelBase<MenuItem>.SetupObjectAndReturn(IDataService, ClaimsPrincipal) object.Equals(object, object) object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Namespace: Mithril.Navigation.Models Assembly: Mithril.Navigation.dll Syntax public class MenuItem : ModelBase<MenuItem>, IModel<MenuItem>, IModel, IEquatable<IModel>, IEquatable<IModel<MenuItem>>, IComparable, IComparable<MenuItem>, IEquatable<ModelBase<MenuItem>>, IEquatable<MenuItem> Properties | Improve this Doc View Source Description Gets or sets the description. Declaration [MaxLength(1024)] public string? Description { get; set; } Property Value Type Description string The description. See Also IEquatable<T> ModelBase<TClass> | Improve this Doc View Source Display Gets or sets the display name. Declaration [Required] [MaxLength(128)] [MinLength(1)] public string? Display { get; set; } Property Value Type Description string The display name. See Also IEquatable<T> ModelBase<TClass> | Improve this Doc View Source Icon Gets or sets the icon. Declaration [MaxLength(64)] public string? Icon { get; set; } Property Value Type Description string The icon. See Also IEquatable<T> ModelBase<TClass> | Improve this Doc View Source Order Gets or sets the order. Declaration [Compare(0, ComparisonType.GreaterThanOrEqual, \"\")] public int Order { get; set; } Property Value Type Description int The order. See Also IEquatable<T> ModelBase<TClass> | Improve this Doc View Source Parent Gets or sets the parent. Declaration [Required] public virtual Menu? Parent { get; set; } Property Value Type Description Menu The parent. See Also IEquatable<T> ModelBase<TClass> | Improve this Doc View Source Permissions Gets or sets the permissions. Declaration public virtual IPermission? Permissions { get; set; } Property Value Type Description IPermission The permissions. See Also IEquatable<T> ModelBase<TClass> | Improve this Doc View Source Url Gets or sets the URL. Declaration [MaxLength(1024)] public string? Url { get; set; } Property Value Type Description string The URL. See Also IEquatable<T> ModelBase<TClass> Methods | Improve this Doc View Source CanBeViewedBy(ClaimsPrincipal?) Determines whether this instance [can be viewed by] the specified user. Declaration public override bool CanBeViewedBy(ClaimsPrincipal? user) Parameters Type Name Description ClaimsPrincipal user The user. Returns Type Description bool true if this instance [can be viewed by] the specified user; otherwise, false. Overrides ModelBase<MenuItem>.CanBeViewedBy(ClaimsPrincipal) See Also IEquatable<T> ModelBase<TClass> | Improve this Doc View Source CompareTo(MenuItem?) Compares the object to another object Declaration public override int CompareTo(MenuItem? other) Parameters Type Name Description MenuItem other Object to compare to Returns Type Description int 0 if they are equal, -1 if this is smaller, 1 if it is larger Overrides ModelBase<MenuItem>.CompareTo(MenuItem) See Also IEquatable<T> ModelBase<TClass> | Improve this Doc View Source Equals(MenuItem?) Indicates whether the current object is equal to another object of the same type. Declaration public bool Equals(MenuItem? other) Parameters Type Name Description MenuItem other An object to compare with this object. Returns Type Description bool true if the current object is equal to the other parameter; otherwise, false. See Also IEquatable<T> ModelBase<TClass> | Improve this Doc View Source Equals(object?) Determines whether the specified object, is equal to this instance. Declaration public override bool Equals(object? obj) Parameters Type Name Description object obj The object to compare with this instance. Returns Type Description bool true if the specified object is equal to this instance; otherwise, false. Overrides ModelBase<MenuItem>.Equals(object) See Also IEquatable<T> ModelBase<TClass> | Improve this Doc View Source GetHashCode() Returns a hash code for this instance. Declaration public override int GetHashCode() Returns Type Description int A hash code for this instance, suitable for use in hashing algorithms and data structures like a hash table. Overrides Mithril.Data.Abstractions.BaseClasses.ModelBase<Mithril.Navigation.Models.MenuItem>.GetHashCode() See Also IEquatable<T> ModelBase<TClass> | Improve this Doc View Source ToString() Returns a string that represents this instance. Declaration public override string ToString() Returns Type Description string A string that represents this instance. Overrides object.ToString() See Also IEquatable<T> ModelBase<TClass> Operators | Improve this Doc View Source operator ==(MenuItem, MenuItem) Implements the operator ==. Declaration public static bool operator ==(MenuItem first, MenuItem second) Parameters Type Name Description MenuItem first The first. MenuItem second The second. Returns Type Description bool The result of the operator. See Also IEquatable<T> ModelBase<TClass> | Improve this Doc View Source operator >(MenuItem, MenuItem) Implements the operator >. Declaration public static bool operator >(MenuItem left, MenuItem right) Parameters Type Name Description MenuItem left The left. MenuItem right The right. Returns Type Description bool The result of the operator. See Also IEquatable<T> ModelBase<TClass> | Improve this Doc View Source operator >=(MenuItem, MenuItem) Implements the operator >=. Declaration public static bool operator >=(MenuItem left, MenuItem right) Parameters Type Name Description MenuItem left The left. MenuItem right The right. Returns Type Description bool The result of the operator. See Also IEquatable<T> ModelBase<TClass> | Improve this Doc View Source operator !=(MenuItem, MenuItem) Implements the operator !=. Declaration public static bool operator !=(MenuItem left, MenuItem right) Parameters Type Name Description MenuItem left The left. MenuItem right The right. Returns Type Description bool The result of the operator. See Also IEquatable<T> ModelBase<TClass> | Improve this Doc View Source operator <(MenuItem, MenuItem) Implements the operator <. Declaration public static bool operator <(MenuItem left, MenuItem right) Parameters Type Name Description MenuItem left The left. MenuItem right The right. Returns Type Description bool The result of the operator. See Also IEquatable<T> ModelBase<TClass> | Improve this Doc View Source operator <=(MenuItem, MenuItem) Implements the operator <=. Declaration public static bool operator <=(MenuItem left, MenuItem right) Parameters Type Name Description MenuItem left The left. MenuItem right The right. Returns Type Description bool The result of the operator. See Also IEquatable<T> ModelBase<TClass> Implements IModel<TClass> IModel IEquatable<T> IEquatable<T> IComparable IComparable<T> IEquatable<T> IEquatable<T> Extension Methods ExpandoObjectExtensions.ConvertToExpando<TEntity>(TEntity?) GenericExtensions.When<TObject>(TObject, bool, Func<TObject, TObject>) See Also IEquatable<T> ModelBase<TClass>"
  },
  "api/Mithril.Navigation.Models.html": {
    "href": "api/Mithril.Navigation.Models.html",
    "title": "Namespace Mithril.Navigation.Models | Mithril API Reference",
    "keywords": "Namespace Mithril.Navigation.Models Classes Menu Menu entry MenuItem Menu item"
  },
  "api/Mithril.Navigation.NavigationModule.html": {
    "href": "api/Mithril.Navigation.NavigationModule.html",
    "title": "Class NavigationModule | Mithril API Reference",
    "keywords": "Class NavigationModule Navigation module Inheritance object ModuleBaseClass<NavigationModule> NavigationModule Implements IEquatable<NavigationModule> IModule Inherited Members ModuleBaseClass<NavigationModule>.Category ModuleBaseClass<NavigationModule>.ContentPath ModuleBaseClass<NavigationModule>.ID ModuleBaseClass<NavigationModule>.LastModified ModuleBaseClass<NavigationModule>.Name ModuleBaseClass<NavigationModule>.Order ModuleBaseClass<NavigationModule>.Tags ModuleBaseClass<NavigationModule>.Version ModuleBaseClass<NavigationModule>.ConfigureApplication(IApplicationBuilder, IConfiguration, IHostEnvironment) ModuleBaseClass<NavigationModule>.ConfigureHostSettings(IHostBuilder, IConfiguration, IHostEnvironment) ModuleBaseClass<NavigationModule>.ConfigureLoggingSettings(ILoggingBuilder, IConfiguration, IHostEnvironment) ModuleBaseClass<NavigationModule>.ConfigureMVC(IMvcBuilder, IConfiguration, IHostEnvironment) ModuleBaseClass<NavigationModule>.ConfigureRoutes(IEndpointRouteBuilder, IConfiguration, IHostEnvironment) ModuleBaseClass<NavigationModule>.ConfigureWebHostSettings(IWebHostBuilder, IConfiguration, IHostEnvironment) ModuleBaseClass<NavigationModule>.Equals(object) ModuleBaseClass<NavigationModule>.Equals(NavigationModule) ModuleBaseClass<NavigationModule>.GetHashCode() ModuleBaseClass<NavigationModule>.InitializeDataAsync(IDataService, IServiceProvider) ModuleBaseClass<NavigationModule>.OnStarted() ModuleBaseClass<NavigationModule>.OnStopped() ModuleBaseClass<NavigationModule>.OnStopping() object.Equals(object, object) object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Mithril.Navigation Assembly: Mithril.Navigation.dll Syntax public class NavigationModule : ModuleBaseClass<NavigationModule>, IEquatable<NavigationModule>, IModule Properties | Improve this Doc View Source Features Gets the features. Declaration public override IFeature[] Features { get; protected set; } Property Value Type Description IFeature[] The features. Overrides ModuleBaseClass<NavigationModule>.Features See Also ModuleBaseClass<TModule> Methods | Improve this Doc View Source ConfigureServices(IServiceCollection?, IConfiguration?, IHostEnvironment?) Configures the services for the module. Declaration public override IServiceCollection? ConfigureServices(IServiceCollection? services, IConfiguration? configuration, IHostEnvironment? environment) Parameters Type Name Description IServiceCollection services The services collection. IConfiguration configuration The configuration. IHostEnvironment environment The environment. Returns Type Description IServiceCollection Services Overrides ModuleBaseClass<NavigationModule>.ConfigureServices(IServiceCollection, IConfiguration, IHostEnvironment) See Also ModuleBaseClass<TModule> Implements IEquatable<T> IModule Extension Methods ExpandoObjectExtensions.ConvertToExpando<TEntity>(TEntity?) GenericExtensions.When<TObject>(TObject, bool, Func<TObject, TObject>) See Also ModuleBaseClass<TModule>"
  },
  "api/Mithril.Navigation.Queries.MenuItemVM.html": {
    "href": "api/Mithril.Navigation.Queries.MenuItemVM.html",
    "title": "Class MenuItemVM | Mithril API Reference",
    "keywords": "Class MenuItemVM MenuItemVM Inheritance object MenuItemVM Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Mithril.Navigation.Queries Assembly: Mithril.Navigation.dll Syntax public class MenuItemVM Constructors | Improve this Doc View Source MenuItemVM(MenuItem?) Initializes a new instance of the MenuItemVM class. Declaration public MenuItemVM(MenuItem? data) Parameters Type Name Description MenuItem data The data. Properties | Improve this Doc View Source Description Gets the description. Declaration public string? Description { get; } Property Value Type Description string The description. | Improve this Doc View Source Display Gets the display. Declaration public string? Display { get; } Property Value Type Description string The display. | Improve this Doc View Source Icon Gets the icon. Declaration public string? Icon { get; } Property Value Type Description string The icon. | Improve this Doc View Source Order Gets the order. Declaration public int Order { get; } Property Value Type Description int The order. | Improve this Doc View Source Url Gets the URL. Declaration public string? Url { get; } Property Value Type Description string The URL. Extension Methods ExpandoObjectExtensions.ConvertToExpando<TEntity>(TEntity?) GenericExtensions.When<TObject>(TObject, bool, Func<TObject, TObject>)"
  },
  "api/Mithril.Navigation.Queries.MenuQuery.html": {
    "href": "api/Mithril.Navigation.Queries.MenuQuery.html",
    "title": "Class MenuQuery | Mithril API Reference",
    "keywords": "Class MenuQuery Menu query Inheritance object QueryBaseClass<MenuVM> MenuQuery Implements IQuery<MenuVM> IQuery Inherited Members QueryBaseClass<MenuVM>.DeprecationReason QueryBaseClass<MenuVM>.Description QueryBaseClass<MenuVM>.Features QueryBaseClass<MenuVM>.ReturnType QueryBaseClass<MenuVM>.Version QueryBaseClass<MenuVM>.FeatureManager QueryBaseClass<MenuVM>.Logger QueryBaseClass<MenuVM>.IsFeatureEnabled() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Mithril.Navigation.Queries Assembly: Mithril.Navigation.dll Syntax public class MenuQuery : QueryBaseClass<MenuVM>, IQuery<MenuVM>, IQuery Constructors | Improve this Doc View Source MenuQuery(ILogger<MenuQuery>?, IFeatureManager?, IDataService?) Initializes a new instance of the MenuQuery class. Declaration public MenuQuery(ILogger<MenuQuery>? logger, IFeatureManager? featureManager, IDataService? dataService) Parameters Type Name Description ILogger<MenuQuery> logger The logger. IFeatureManager featureManager The feature manager. IDataService dataService The data service. See Also QueryBaseClass<TClass> Properties | Improve this Doc View Source Arguments Gets the arguments. Declaration public override IArgument[] Arguments { get; } Property Value Type Description IArgument[] The arguments. Overrides QueryBaseClass<MenuVM>.Arguments See Also QueryBaseClass<TClass> | Improve this Doc View Source Name Gets the name. Declaration public override string Name { get; } Property Value Type Description string The name. Overrides QueryBaseClass<MenuVM>.Name See Also QueryBaseClass<TClass> Methods | Improve this Doc View Source ResolveAsync(ClaimsPrincipal?, Arguments) Used to resolve the data asked for by the query. Declaration public override Task<MenuVM?> ResolveAsync(ClaimsPrincipal? user, Arguments arguments) Parameters Type Name Description ClaimsPrincipal user The user. Arguments arguments The arguments. Returns Type Description Task<MenuVM> The data specified. Overrides QueryBaseClass<MenuVM>.ResolveAsync(ClaimsPrincipal, Arguments) See Also QueryBaseClass<TClass> Implements IQuery<TClass> IQuery Extension Methods ExpandoObjectExtensions.ConvertToExpando<TEntity>(TEntity?) GenericExtensions.When<TObject>(TObject, bool, Func<TObject, TObject>) See Also QueryBaseClass<TClass>"
  },
  "api/Mithril.Navigation.Queries.MenuVM.html": {
    "href": "api/Mithril.Navigation.Queries.MenuVM.html",
    "title": "Class MenuVM | Mithril API Reference",
    "keywords": "Class MenuVM MenuVM Inheritance object MenuVM Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Mithril.Navigation.Queries Assembly: Mithril.Navigation.dll Syntax public class MenuVM Constructors | Improve this Doc View Source MenuVM(Menu?, ClaimsPrincipal?) Initializes a new instance of the MenuVM class. Declaration public MenuVM(Menu? data, ClaimsPrincipal? user) Parameters Type Name Description Menu data The data. ClaimsPrincipal user The user. Properties | Improve this Doc View Source Display Gets the display. Declaration public string? Display { get; } Property Value Type Description string The display. | Improve this Doc View Source MenuItems Gets the menu items. Declaration public List<MenuItemVM> MenuItems { get; } Property Value Type Description List<MenuItemVM> The menu items. Extension Methods ExpandoObjectExtensions.ConvertToExpando<TEntity>(TEntity?) GenericExtensions.When<TObject>(TObject, bool, Func<TObject, TObject>)"
  },
  "api/Mithril.Navigation.Queries.html": {
    "href": "api/Mithril.Navigation.Queries.html",
    "title": "Namespace Mithril.Navigation.Queries | Mithril API Reference",
    "keywords": "Namespace Mithril.Navigation.Queries Classes MenuItemVM MenuItemVM MenuQuery Menu query MenuVM MenuVM"
  },
  "api/Mithril.Navigation.Services.MenuBuilder.html": {
    "href": "api/Mithril.Navigation.Services.MenuBuilder.html",
    "title": "Class MenuBuilder | Mithril API Reference",
    "keywords": "Class MenuBuilder Menu builder Inheritance object MenuBuilder Implements IMenuBuilder Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Mithril.Navigation.Services Assembly: Mithril.Navigation.dll Syntax public class MenuBuilder : IMenuBuilder Constructors | Improve this Doc View Source MenuBuilder(string, IDataService?, ClaimsPrincipal?) Initializes a new instance of the MenuBuilder class. Declaration public MenuBuilder(string display, IDataService? dataService, ClaimsPrincipal? user) Parameters Type Name Description string display The display. IDataService dataService The data service. ClaimsPrincipal user The user. See Also IMenuBuilder Properties | Improve this Doc View Source Display Gets the display name of the menu. Declaration public string Display { get; } Property Value Type Description string The display name of the menu. See Also IMenuBuilder | Improve this Doc View Source Permissions Gets the permissions. Declaration public IPermission? Permissions { get; } Property Value Type Description IPermission The permissions. See Also IMenuBuilder Methods | Improve this Doc View Source AddOrUpdateMenuItem(string, string, string, string, int, IPermission?) Adds a menu item. Declaration public IMenuBuilder AddOrUpdateMenuItem(string display, string description, string icon, string url, int order = 0, IPermission? permission = null) Parameters Type Name Description string display The display. string description The description. string icon The icon. string url The URL. int order The order. IPermission permission The permission. Returns Type Description IMenuBuilder This See Also IMenuBuilder | Improve this Doc View Source BuildAsync() Builds this instance. Declaration public Task BuildAsync() Returns Type Description Task The async task. See Also IMenuBuilder | Improve this Doc View Source HasMenuItem(string) Determines whether [the menu] [has the menu item specified]. Declaration public bool HasMenuItem(string display) Parameters Type Name Description string display The display name. Returns Type Description bool true if it [has the menu item specified]; otherwise, false. See Also IMenuBuilder | Improve this Doc View Source SetSecurity(IPermission?) Sets the security. Declaration public IMenuBuilder SetSecurity(IPermission? permission) Parameters Type Name Description IPermission permission The permission. Returns Type Description IMenuBuilder This. See Also IMenuBuilder Implements IMenuBuilder Extension Methods ExpandoObjectExtensions.ConvertToExpando<TEntity>(TEntity?) GenericExtensions.When<TObject>(TObject, bool, Func<TObject, TObject>) See Also IMenuBuilder"
  },
  "api/Mithril.Navigation.Services.MenuService.html": {
    "href": "api/Mithril.Navigation.Services.MenuService.html",
    "title": "Class MenuService | Mithril API Reference",
    "keywords": "Class MenuService Menu service Inheritance object MenuService Implements IMenuService Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Mithril.Navigation.Services Assembly: Mithril.Navigation.dll Syntax public class MenuService : IMenuService Constructors | Improve this Doc View Source MenuService(IFeatureManager?, IDataService?) Initializes a new instance of the MenuService class. Declaration public MenuService(IFeatureManager? featureManager, IDataService? dataService) Parameters Type Name Description IFeatureManager featureManager The feature manager. IDataService dataService The data service. See Also IMenuService Methods | Improve this Doc View Source CreateMenuBuilder(string, ClaimsPrincipal?) Creates a menu builder. Declaration public IMenuBuilder? CreateMenuBuilder(string display, ClaimsPrincipal? user) Parameters Type Name Description string display The display name of the menu. ClaimsPrincipal user The user. Returns Type Description IMenuBuilder The menu builder. See Also IMenuService Implements IMenuService Extension Methods ExpandoObjectExtensions.ConvertToExpando<TEntity>(TEntity?) GenericExtensions.When<TObject>(TObject, bool, Func<TObject, TObject>) See Also IMenuService"
  },
  "api/Mithril.Navigation.Services.html": {
    "href": "api/Mithril.Navigation.Services.html",
    "title": "Namespace Mithril.Navigation.Services | Mithril API Reference",
    "keywords": "Namespace Mithril.Navigation.Services Classes MenuBuilder Menu builder MenuService Menu service"
  },
  "api/Mithril.Navigation.html": {
    "href": "api/Mithril.Navigation.html",
    "title": "Namespace Mithril.Navigation | Mithril API Reference",
    "keywords": "Namespace Mithril.Navigation Classes NavigationModule Navigation module"
  },
  "api/Mithril.Program.html": {
    "href": "api/Mithril.Program.html",
    "title": "Class Program | Mithril API Reference",
    "keywords": "Class Program Main program Inheritance object Program Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Mithril Assembly: Mithril.dll Syntax public static class Program Methods | Improve this Doc View Source Main(string[]) Defines the entry point of the application. Declaration public static Task Main(string[] args) Parameters Type Name Description string[] args The arguments. Returns Type Description Task"
  },
  "api/Mithril.Routing.Abstractions.Interfaces.IRoute.html": {
    "href": "api/Mithril.Routing.Abstractions.Interfaces.IRoute.html",
    "title": "Interface IRoute | Mithril API Reference",
    "keywords": "Interface IRoute Route interface Inherited Members IModel.Active IModel.Creator IModel.DateCreated IModel.DateModified IModel.ID IModel.Modifier IModel.TenantID IModel.CanBeModifiedBy(ClaimsPrincipal) IModel.CanBeViewedBy(ClaimsPrincipal) IModel.DeleteAsync(IDataService, ClaimsPrincipal, bool) IModel.SaveAsync(IDataService, ClaimsPrincipal) IModel.SetupObject(IDataService, ClaimsPrincipal) IModel.SetupObject(IDataService, IUser) IEquatable<IModel>.Equals(IModel) Namespace: Mithril.Routing.Abstractions.Interfaces Assembly: Mithril.Routing.Abstractions.dll Syntax public interface IRoute : IModel, IEquatable<IModel> Properties | Improve this Doc View Source InputPath Gets or sets the input path. Declaration string? InputPath { get; set; } Property Value Type Description string The input path. | Improve this Doc View Source OutputPath Gets or sets the output path. Declaration string? OutputPath { get; set; } Property Value Type Description string The output path. Extension Methods ExpandoObjectExtensions.ConvertToExpando<TEntity>(TEntity?) GenericExtensions.When<TObject>(TObject, bool, Func<TObject, TObject>)"
  },
  "api/Mithril.Routing.Abstractions.Interfaces.html": {
    "href": "api/Mithril.Routing.Abstractions.Interfaces.html",
    "title": "Namespace Mithril.Routing.Abstractions.Interfaces | Mithril API Reference",
    "keywords": "Namespace Mithril.Routing.Abstractions.Interfaces Interfaces IRoute Route interface"
  },
  "api/Mithril.Routing.Abstractions.Services.IRouteService.html": {
    "href": "api/Mithril.Routing.Abstractions.Services.IRouteService.html",
    "title": "Interface IRouteService | Mithril API Reference",
    "keywords": "Interface IRouteService Route manager Namespace: Mithril.Routing.Abstractions.Services Assembly: Mithril.Routing.Abstractions.dll Syntax public interface IRouteService Methods | Improve this Doc View Source AddRouteAsync(string, string) Adds the route. Declaration Task<IRouteService> AddRouteAsync(string inputPath, string outputPath) Parameters Type Name Description string inputPath The input path. string outputPath The output path. Returns Type Description Task<IRouteService> This. | Improve this Doc View Source GetRoute(string?) Gets the route. Declaration IRoute? GetRoute(string? inputPath) Parameters Type Name Description string inputPath The input path. Returns Type Description IRoute The route specified. Extension Methods ExpandoObjectExtensions.ConvertToExpando<TEntity>(TEntity?) GenericExtensions.When<TObject>(TObject, bool, Func<TObject, TObject>)"
  },
  "api/Mithril.Routing.Abstractions.Services.html": {
    "href": "api/Mithril.Routing.Abstractions.Services.html",
    "title": "Namespace Mithril.Routing.Abstractions.Services | Mithril API Reference",
    "keywords": "Namespace Mithril.Routing.Abstractions.Services Interfaces IRouteService Route manager"
  },
  "api/Mithril.Routing.Admin.RouteEditor.html": {
    "href": "api/Mithril.Routing.Admin.RouteEditor.html",
    "title": "Class RouteEditor | Mithril API Reference",
    "keywords": "Class RouteEditor Route editor Inheritance object EntityEditorBaseClass<RouteEntryVM> EntityEditorBaseClass<RouteEntryVM, RouteEntry> RouteEditor Implements IEntityEditor IEditor Inherited Members EntityEditorBaseClass<RouteEntryVM, RouteEntry>.ActivateAsync(long, ClaimsPrincipal) EntityEditorBaseClass<RouteEntryVM, RouteEntry>.CanView(ClaimsPrincipal) EntityEditorBaseClass<RouteEntryVM, RouteEntry>.DeleteEntityAsync(long, ClaimsPrincipal) EntityEditorBaseClass<RouteEntryVM, RouteEntry>.Load(long, ExpandoObject, ClaimsPrincipal) EntityEditorBaseClass<RouteEntryVM, RouteEntry>.LoadPageAsync(int, int, string, bool, string, ClaimsPrincipal) EntityEditorBaseClass<RouteEntryVM, RouteEntry>.SaveEntityAsync(long, ExpandoObject, ClaimsPrincipal) EntityEditorBaseClass<RouteEntryVM, RouteEntry>.TotalActiveAsync(ClaimsPrincipal) EntityEditorBaseClass<RouteEntryVM, RouteEntry>.Convert(RouteEntry, bool) EntityEditorBaseClass<RouteEntryVM, RouteEntry>.FilterQueryBySearchQuery(IQueryable<RouteEntry>, string) EntityEditorBaseClass<RouteEntryVM, RouteEntry>.LoadModel(long) EntityEditorBaseClass<RouteEntryVM, RouteEntry>.MakeActiveAsync(RouteEntry) EntityEditorBaseClass<RouteEntryVM, RouteEntry>.MakeInactiveAsync(RouteEntry) EntityEditorBaseClass<RouteEntryVM>.Category EntityEditorBaseClass<RouteEntryVM>.ComponentDefinition EntityEditorBaseClass<RouteEntryVM>.Description EntityEditorBaseClass<RouteEntryVM>.EntityType EntityEditorBaseClass<RouteEntryVM>.Name EntityEditorBaseClass<RouteEntryVM>.DataService EntityEditorBaseClass<RouteEntryVM>.ActivateAsync(long, ClaimsPrincipal) EntityEditorBaseClass<RouteEntryVM>.CanView(ClaimsPrincipal) EntityEditorBaseClass<RouteEntryVM>.DeleteEntityAsync(long, ClaimsPrincipal) EntityEditorBaseClass<RouteEntryVM>.Load(long, ExpandoObject, ClaimsPrincipal) EntityEditorBaseClass<RouteEntryVM>.LoadPageAsync(int, int, string, bool, string, ClaimsPrincipal) EntityEditorBaseClass<RouteEntryVM>.SaveEntityAsync(long, ExpandoObject, ClaimsPrincipal) EntityEditorBaseClass<RouteEntryVM>.TotalActiveAsync(ClaimsPrincipal) object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Mithril.Routing.Admin Assembly: Mithril.Routing.dll Syntax public class RouteEditor : EntityEditorBaseClass<RouteEntryVM, RouteEntry>, IEntityEditor, IEditor Constructors | Improve this Doc View Source RouteEditor(IDataService, IEntityMetadataService, string?) Initializes a new instance of the RouteEditor class. Declaration public RouteEditor(IDataService dataService, IEntityMetadataService entityMetadataService, string? dataType = null) Parameters Type Name Description IDataService dataService The data service. IEntityMetadataService entityMetadataService The entity metadata service. string dataType Type of the data. See Also EntityEditorBaseClass<TEntity, TModel> Properties | Improve this Doc View Source Icon Gets the icon. Declaration public override string Icon { get; } Property Value Type Description string The icon. Overrides EntityEditorBaseClass<RouteEntryVM>.Icon See Also EntityEditorBaseClass<TEntity, TModel> Methods | Improve this Doc View Source Convert(RouteEntry, bool) Converts the model into the appropriate view model. Declaration protected override IEntity Convert(RouteEntry model, bool full = true) Parameters Type Name Description RouteEntry model The model. bool full if set to true [full]. Returns Type Description IEntity The view model Overrides EntityEditorBaseClass<RouteEntryVM, RouteEntry>.Convert(RouteEntry, bool) See Also EntityEditorBaseClass<TEntity, TModel> | Improve this Doc View Source FilterQueryBySearchQuery(IQueryable<RouteEntry>?, string) Filters the query by search term. Declaration protected override IQueryable<RouteEntry>? FilterQueryBySearchQuery(IQueryable<RouteEntry>? query, string searchQuery) Parameters Type Name Description IQueryable<RouteEntry> query The query. string searchQuery The search query. Returns Type Description IQueryable<RouteEntry> The resulting query. Overrides EntityEditorBaseClass<RouteEntryVM, RouteEntry>.FilterQueryBySearchQuery(IQueryable<RouteEntry>, string) See Also EntityEditorBaseClass<TEntity, TModel> Implements IEntityEditor IEditor Extension Methods ExpandoObjectExtensions.ConvertToExpando<TEntity>(TEntity?) GenericExtensions.When<TObject>(TObject, bool, Func<TObject, TObject>) See Also EntityEditorBaseClass<TEntity, TModel>"
  },
  "api/Mithril.Routing.Admin.ViewModels.RouteEntryVM.html": {
    "href": "api/Mithril.Routing.Admin.ViewModels.RouteEntryVM.html",
    "title": "Class RouteEntryVM | Mithril API Reference",
    "keywords": "Class RouteEntryVM RouteEntry VM Inheritance object EntityBaseClass<RouteEntry> RouteEntryVM Implements IEntity<RouteEntry> IEntity Inherited Members EntityBaseClass<RouteEntry>.Active EntityBaseClass<RouteEntry>.ID object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Mithril.Routing.Admin.ViewModels Assembly: Mithril.Routing.dll Syntax public class RouteEntryVM : EntityBaseClass<RouteEntry>, IEntity<RouteEntry>, IEntity Constructors | Improve this Doc View Source RouteEntryVM() Initializes a new instance of the RouteEntryVM class. Declaration public RouteEntryVM() See Also IEntity<TModel> | Improve this Doc View Source RouteEntryVM(RouteEntry) Initializes a new instance of the RouteEntryVM class. Declaration public RouteEntryVM(RouteEntry model) Parameters Type Name Description RouteEntry model The model. See Also IEntity<TModel> Properties | Improve this Doc View Source InputPath Gets or sets the input path. Declaration [Required] [MaxLength(1024)] public string? InputPath { get; set; } Property Value Type Description string The input path. See Also IEntity<TModel> | Improve this Doc View Source OutputPath Gets or sets the output path. Declaration [Required] [MaxLength(1024)] public string? OutputPath { get; set; } Property Value Type Description string The output path. See Also IEntity<TModel> Methods | Improve this Doc View Source SaveAsync(long, IDataService?, ClaimsPrincipal?) Saves the changes asynchronously. Declaration public override Task<RouteEntry?> SaveAsync(long id, IDataService? dataService, ClaimsPrincipal? currentUser) Parameters Type Name Description long id The identifier. IDataService dataService The data service. ClaimsPrincipal currentUser The current user. Returns Type Description Task<RouteEntry> The async task. Overrides EntityBaseClass<RouteEntry>.SaveAsync(long, IDataService, ClaimsPrincipal) See Also IEntity<TModel> Implements IEntity<TModel> IEntity Extension Methods ExpandoObjectExtensions.ConvertToExpando<TEntity>(TEntity?) GenericExtensions.When<TObject>(TObject, bool, Func<TObject, TObject>) See Also IEntity<TModel>"
  },
  "api/Mithril.Routing.Admin.ViewModels.html": {
    "href": "api/Mithril.Routing.Admin.ViewModels.html",
    "title": "Namespace Mithril.Routing.Admin.ViewModels | Mithril API Reference",
    "keywords": "Namespace Mithril.Routing.Admin.ViewModels Classes RouteEntryVM RouteEntry VM"
  },
  "api/Mithril.Routing.Admin.html": {
    "href": "api/Mithril.Routing.Admin.html",
    "title": "Namespace Mithril.Routing.Admin | Mithril API Reference",
    "keywords": "Namespace Mithril.Routing.Admin Classes RouteEditor Route editor"
  },
  "api/Mithril.Routing.Models.Mappings.RouteEntryMapping.html": {
    "href": "api/Mithril.Routing.Models.Mappings.RouteEntryMapping.html",
    "title": "Class RouteEntryMapping | Mithril API Reference",
    "keywords": "Class RouteEntryMapping Route entry mapping Inheritance object MappingBaseClass<RouteEntry, DefaultDatabase> RouteEntryMapping Implements IMapping<RouteEntry> IMapping Inherited Members MappingBaseClass<RouteEntry, DefaultDatabase>.AddAutoKey() MappingBaseClass<RouteEntry, DefaultDatabase>.ContainsProperty(string) MappingBaseClass<RouteEntry, DefaultDatabase>.Copy(IMapping) MappingBaseClass<RouteEntry, DefaultDatabase>.CopyProperty(IIDProperty) MappingBaseClass<RouteEntry, DefaultDatabase>.CopyProperty(IProperty) MappingBaseClass<RouteEntry, DefaultDatabase>.CopyProperty(IMapProperty) MappingBaseClass<RouteEntry, DefaultDatabase>.CopyProperty(IManyToOneProperty) MappingBaseClass<RouteEntry, DefaultDatabase>.CopyProperty(IManyToManyProperty) MappingBaseClass<RouteEntry, DefaultDatabase>.Equals(object) MappingBaseClass<RouteEntry, DefaultDatabase>.GetColumnName(string) MappingBaseClass<RouteEntry, DefaultDatabase>.GetHashCode() MappingBaseClass<RouteEntry, DefaultDatabase>.ID<TDataType>(Expression<Func<RouteEntry, TDataType>>) MappingBaseClass<RouteEntry, DefaultDatabase>.ManyToMany<TDataType>(Expression<Func<RouteEntry, IList<TDataType>>>) MappingBaseClass<RouteEntry, DefaultDatabase>.ManyToOne<TDataType>(Expression<Func<RouteEntry, IList<TDataType>>>) MappingBaseClass<RouteEntry, DefaultDatabase>.ManyToOne<TDataType>(Expression<Func<RouteEntry, TDataType>>) MappingBaseClass<RouteEntry, DefaultDatabase>.Map<TDataType>(Expression<Func<RouteEntry, TDataType>>) MappingBaseClass<RouteEntry, DefaultDatabase>.Reduce(ILogger) MappingBaseClass<RouteEntry, DefaultDatabase>.Reduce(IMapping, ILogger) MappingBaseClass<RouteEntry, DefaultDatabase>.Reference<TDataType>(Expression<Func<RouteEntry, TDataType>>) MappingBaseClass<RouteEntry, DefaultDatabase>.SetQuery(QueryType, string, CommandType, params IParameter[]) MappingBaseClass<RouteEntry, DefaultDatabase>.Setup() MappingBaseClass<RouteEntry, DefaultDatabase>.ToString() MappingBaseClass<RouteEntry, DefaultDatabase>.AutoIDProperties MappingBaseClass<RouteEntry, DefaultDatabase>.DatabaseConfigType MappingBaseClass<RouteEntry, DefaultDatabase>.IDProperties MappingBaseClass<RouteEntry, DefaultDatabase>.ManyToManyProperties MappingBaseClass<RouteEntry, DefaultDatabase>.ManyToOneProperties MappingBaseClass<RouteEntry, DefaultDatabase>.MapProperties MappingBaseClass<RouteEntry, DefaultDatabase>.Merge MappingBaseClass<RouteEntry, DefaultDatabase>.ObjectType MappingBaseClass<RouteEntry, DefaultDatabase>.Order MappingBaseClass<RouteEntry, DefaultDatabase>.Prefix MappingBaseClass<RouteEntry, DefaultDatabase>.Queries MappingBaseClass<RouteEntry, DefaultDatabase>.ReferenceProperties MappingBaseClass<RouteEntry, DefaultDatabase>.SchemaName MappingBaseClass<RouteEntry, DefaultDatabase>.Suffix MappingBaseClass<RouteEntry, DefaultDatabase>.TableName object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Mithril.Routing.Models.Mappings Assembly: Mithril.Routing.dll Syntax public class RouteEntryMapping : MappingBaseClass<RouteEntry, DefaultDatabase>, IMapping<RouteEntry>, IMapping Constructors | Improve this Doc View Source RouteEntryMapping() Initializes a new instance of the RouteEntryMapping class. Declaration public RouteEntryMapping() See Also MappingBaseClass<TClassType, TDatabaseType> Implements IMapping<TClassType> IMapping Extension Methods ExpandoObjectExtensions.ConvertToExpando<TEntity>(TEntity?) GenericExtensions.When<TObject>(TObject, bool, Func<TObject, TObject>) See Also MappingBaseClass<TClassType, TDatabaseType>"
  },
  "api/Mithril.Routing.Models.Mappings.html": {
    "href": "api/Mithril.Routing.Models.Mappings.html",
    "title": "Namespace Mithril.Routing.Models.Mappings | Mithril API Reference",
    "keywords": "Namespace Mithril.Routing.Models.Mappings Classes RouteEntryMapping Route entry mapping"
  },
  "api/Mithril.Routing.Models.RouteEntry.html": {
    "href": "api/Mithril.Routing.Models.RouteEntry.html",
    "title": "Class RouteEntry | Mithril API Reference",
    "keywords": "Class RouteEntry Route entry Inheritance object ModelBase<RouteEntry> RouteEntry Implements IModel<RouteEntry> IEquatable<IModel<RouteEntry>> IComparable IComparable<RouteEntry> IEquatable<ModelBase<RouteEntry>> IRoute IModel IEquatable<IModel> Inherited Members ModelBase<RouteEntry>.Active ModelBase<RouteEntry>.Creator ModelBase<RouteEntry>.DateCreated ModelBase<RouteEntry>.DateModified ModelBase<RouteEntry>.ID ModelBase<RouteEntry>.Modifier ModelBase<RouteEntry>.TenantID ModelBase<RouteEntry>.All(IDataService) ModelBase<RouteEntry>.AllActive(IDataService) ModelBase<RouteEntry>.AllInactive(IDataService) ModelBase<RouteEntry>.Load(long, IDataService) ModelBase<RouteEntry>.Query(IDataService) ModelBase<RouteEntry>.CanBeModifiedBy(ClaimsPrincipal) ModelBase<RouteEntry>.CanBeViewedBy(ClaimsPrincipal) ModelBase<RouteEntry>.CompareTo(object) ModelBase<RouteEntry>.DeleteAsync(IDataService, ClaimsPrincipal, bool) ModelBase<RouteEntry>.Equals(IModel) ModelBase<RouteEntry>.Equals(IModel<RouteEntry>) ModelBase<RouteEntry>.Equals(ModelBase<RouteEntry>) ModelBase<RouteEntry>.SaveAsync(IDataService, ClaimsPrincipal) ModelBase<RouteEntry>.SetupObject(IDataService, ClaimsPrincipal) ModelBase<RouteEntry>.SetupObject(IDataService, IUser) ModelBase<RouteEntry>.SetupObjectAndReturn(IDataService, ClaimsPrincipal) object.Equals(object, object) object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Namespace: Mithril.Routing.Models Assembly: Mithril.Routing.dll Syntax public class RouteEntry : ModelBase<RouteEntry>, IModel<RouteEntry>, IEquatable<IModel<RouteEntry>>, IComparable, IComparable<RouteEntry>, IEquatable<ModelBase<RouteEntry>>, IRoute, IModel, IEquatable<IModel> Constructors | Improve this Doc View Source RouteEntry() Initializes a new instance of the RouteEntry class. Declaration public RouteEntry() See Also ModelBase<TClass> IRoute | Improve this Doc View Source RouteEntry(string, string) Initializes a new instance of the RouteEntry class. Declaration public RouteEntry(string inputPath, string outputPath) Parameters Type Name Description string inputPath The input path. string outputPath The output path. Exceptions Type Condition ArgumentNullException inputPath or outputPath ArgumentException inputPath or outputPath See Also ModelBase<TClass> IRoute Properties | Improve this Doc View Source InputPath Gets or sets the input path. Declaration [Required] [MaxLength(1024)] public string? InputPath { get; set; } Property Value Type Description string The input path. See Also ModelBase<TClass> IRoute | Improve this Doc View Source OutputPath Gets or sets the output path. Declaration [Required] [MaxLength(1024)] public string? OutputPath { get; set; } Property Value Type Description string The output path. See Also ModelBase<TClass> IRoute Methods | Improve this Doc View Source CompareTo(RouteEntry?) Compares the object to another object Declaration public override int CompareTo(RouteEntry? other) Parameters Type Name Description RouteEntry other Object to compare to Returns Type Description int 0 if they are equal, -1 if this is smaller, 1 if it is larger Overrides ModelBase<RouteEntry>.CompareTo(RouteEntry) See Also ModelBase<TClass> IRoute | Improve this Doc View Source Equals(RouteEntry) Indicates whether the current object is equal to another object of the same type. Declaration public bool Equals(RouteEntry other) Parameters Type Name Description RouteEntry other An object to compare with this object. Returns Type Description bool true if the current object is equal to the other parameter; otherwise, false. See Also ModelBase<TClass> IRoute | Improve this Doc View Source Equals(object?) Determines whether the specified object, is equal to this instance. Declaration public override bool Equals(object? obj) Parameters Type Name Description object obj The object to compare with this instance. Returns Type Description bool true if the specified object is equal to this instance; otherwise, false. Overrides ModelBase<RouteEntry>.Equals(object) See Also ModelBase<TClass> IRoute | Improve this Doc View Source GetHashCode() Returns a hash code for this instance. Declaration public override int GetHashCode() Returns Type Description int A hash code for this instance, suitable for use in hashing algorithms and data structures like a hash table. Overrides Mithril.Data.Abstractions.BaseClasses.ModelBase<Mithril.Routing.Models.RouteEntry>.GetHashCode() See Also ModelBase<TClass> IRoute | Improve this Doc View Source Load(string?, IDataService?) Loads the route by input path. Declaration public static RouteEntry? Load(string? inputPath, IDataService? dataService) Parameters Type Name Description string inputPath The input path. IDataService dataService The data service. Returns Type Description RouteEntry The route specified. See Also ModelBase<TClass> IRoute | Improve this Doc View Source LoadOrCreateAsync(string, string, IDataService?, ClaimsPrincipal?) Loads or creates the route. Declaration public static Task<RouteEntry> LoadOrCreateAsync(string inputPath, string outputPath, IDataService? dataService, ClaimsPrincipal? user) Parameters Type Name Description string inputPath The input path. string outputPath The output path. IDataService dataService The data service. ClaimsPrincipal user The user. Returns Type Description Task<RouteEntry> The route entry. See Also ModelBase<TClass> IRoute | Improve this Doc View Source ToString() Converts to string. Declaration public override string ToString() Returns Type Description string A string that represents this instance. Overrides object.ToString() See Also ModelBase<TClass> IRoute Operators | Improve this Doc View Source operator ==(RouteEntry, RouteEntry) Implements the operator ==. Declaration public static bool operator ==(RouteEntry first, RouteEntry second) Parameters Type Name Description RouteEntry first The first. RouteEntry second The second. Returns Type Description bool The result of the operator. See Also ModelBase<TClass> IRoute | Improve this Doc View Source operator >(RouteEntry, RouteEntry) Implements the operator >. Declaration public static bool operator >(RouteEntry left, RouteEntry right) Parameters Type Name Description RouteEntry left The left. RouteEntry right The right. Returns Type Description bool The result of the operator. See Also ModelBase<TClass> IRoute | Improve this Doc View Source operator >=(RouteEntry, RouteEntry) Implements the operator >=. Declaration public static bool operator >=(RouteEntry left, RouteEntry right) Parameters Type Name Description RouteEntry left The left. RouteEntry right The right. Returns Type Description bool The result of the operator. See Also ModelBase<TClass> IRoute | Improve this Doc View Source operator !=(RouteEntry, RouteEntry) Implements the operator !=. Declaration public static bool operator !=(RouteEntry left, RouteEntry right) Parameters Type Name Description RouteEntry left The left. RouteEntry right The right. Returns Type Description bool The result of the operator. See Also ModelBase<TClass> IRoute | Improve this Doc View Source operator <(RouteEntry, RouteEntry) Implements the operator <. Declaration public static bool operator <(RouteEntry left, RouteEntry right) Parameters Type Name Description RouteEntry left The left. RouteEntry right The right. Returns Type Description bool The result of the operator. See Also ModelBase<TClass> IRoute | Improve this Doc View Source operator <=(RouteEntry, RouteEntry) Implements the operator <=. Declaration public static bool operator <=(RouteEntry left, RouteEntry right) Parameters Type Name Description RouteEntry left The left. RouteEntry right The right. Returns Type Description bool The result of the operator. See Also ModelBase<TClass> IRoute Implements IModel<TClass> IEquatable<T> IComparable IComparable<T> IEquatable<T> IRoute IModel IEquatable<T> Extension Methods ExpandoObjectExtensions.ConvertToExpando<TEntity>(TEntity?) GenericExtensions.When<TObject>(TObject, bool, Func<TObject, TObject>) See Also ModelBase<TClass> IRoute"
  },
  "api/Mithril.Routing.Models.html": {
    "href": "api/Mithril.Routing.Models.html",
    "title": "Namespace Mithril.Routing.Models | Mithril API Reference",
    "keywords": "Namespace Mithril.Routing.Models Classes RouteEntry Route entry"
  },
  "api/Mithril.Routing.RoutingModule.html": {
    "href": "api/Mithril.Routing.RoutingModule.html",
    "title": "Class RoutingModule | Mithril API Reference",
    "keywords": "Class RoutingModule Routing module Inheritance object ModuleBaseClass<RoutingModule> RoutingModule Implements IEquatable<RoutingModule> IModule Inherited Members ModuleBaseClass<RoutingModule>.Category ModuleBaseClass<RoutingModule>.ContentPath ModuleBaseClass<RoutingModule>.Features ModuleBaseClass<RoutingModule>.ID ModuleBaseClass<RoutingModule>.LastModified ModuleBaseClass<RoutingModule>.Name ModuleBaseClass<RoutingModule>.Order ModuleBaseClass<RoutingModule>.Tags ModuleBaseClass<RoutingModule>.Version ModuleBaseClass<RoutingModule>.ConfigureApplication(IApplicationBuilder, IConfiguration, IHostEnvironment) ModuleBaseClass<RoutingModule>.ConfigureHostSettings(IHostBuilder, IConfiguration, IHostEnvironment) ModuleBaseClass<RoutingModule>.ConfigureLoggingSettings(ILoggingBuilder, IConfiguration, IHostEnvironment) ModuleBaseClass<RoutingModule>.ConfigureMVC(IMvcBuilder, IConfiguration, IHostEnvironment) ModuleBaseClass<RoutingModule>.ConfigureWebHostSettings(IWebHostBuilder, IConfiguration, IHostEnvironment) ModuleBaseClass<RoutingModule>.Equals(object) ModuleBaseClass<RoutingModule>.Equals(RoutingModule) ModuleBaseClass<RoutingModule>.GetHashCode() ModuleBaseClass<RoutingModule>.InitializeDataAsync(IDataService, IServiceProvider) ModuleBaseClass<RoutingModule>.OnStarted() ModuleBaseClass<RoutingModule>.OnStopped() ModuleBaseClass<RoutingModule>.OnStopping() object.Equals(object, object) object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Mithril.Routing Assembly: Mithril.Routing.dll Syntax public class RoutingModule : ModuleBaseClass<RoutingModule>, IEquatable<RoutingModule>, IModule Methods | Improve this Doc View Source ConfigureRoutes(IEndpointRouteBuilder?, IConfiguration?, IHostEnvironment?) Configures the routes. Declaration public override IEndpointRouteBuilder? ConfigureRoutes(IEndpointRouteBuilder? endpoints, IConfiguration? configuration, IHostEnvironment? environment) Parameters Type Name Description IEndpointRouteBuilder endpoints The endpoints. IConfiguration configuration The configuration. IHostEnvironment environment The environment. Returns Type Description IEndpointRouteBuilder Endpoint route builder Overrides ModuleBaseClass<RoutingModule>.ConfigureRoutes(IEndpointRouteBuilder, IConfiguration, IHostEnvironment) See Also ModuleBaseClass<TModule> | Improve this Doc View Source ConfigureServices(IServiceCollection?, IConfiguration?, IHostEnvironment?) Configures the services for the module. Declaration public override IServiceCollection? ConfigureServices(IServiceCollection? services, IConfiguration? configuration, IHostEnvironment? environment) Parameters Type Name Description IServiceCollection services The services collection. IConfiguration configuration The configuration. IHostEnvironment environment The environment. Returns Type Description IServiceCollection Services Overrides ModuleBaseClass<RoutingModule>.ConfigureServices(IServiceCollection, IConfiguration, IHostEnvironment) See Also ModuleBaseClass<TModule> Implements IEquatable<T> IModule Extension Methods ExpandoObjectExtensions.ConvertToExpando<TEntity>(TEntity?) GenericExtensions.When<TObject>(TObject, bool, Func<TObject, TObject>) See Also ModuleBaseClass<TModule>"
  },
  "api/Mithril.Routing.Services.RouteService.html": {
    "href": "api/Mithril.Routing.Services.RouteService.html",
    "title": "Class RouteService | Mithril API Reference",
    "keywords": "Class RouteService Route service Inheritance object RouteService Implements IRouteService Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Mithril.Routing.Services Assembly: Mithril.Routing.dll Syntax public class RouteService : IRouteService Constructors | Improve this Doc View Source RouteService(IDataService?) Initializes a new instance of the RouteService class. Declaration public RouteService(IDataService? dataService) Parameters Type Name Description IDataService dataService The data service. See Also IRouteService Methods | Improve this Doc View Source AddRouteAsync(string, string) Adds the route. Declaration public Task<IRouteService> AddRouteAsync(string inputPath, string outputPath) Parameters Type Name Description string inputPath The input path. string outputPath The output path. Returns Type Description Task<IRouteService> This. See Also IRouteService | Improve this Doc View Source GetRoute(string?) Gets the route. Declaration public IRoute? GetRoute(string? inputPath) Parameters Type Name Description string inputPath The input path. Returns Type Description IRoute The route specified. See Also IRouteService Implements IRouteService Extension Methods ExpandoObjectExtensions.ConvertToExpando<TEntity>(TEntity?) GenericExtensions.When<TObject>(TObject, bool, Func<TObject, TObject>) See Also IRouteService"
  },
  "api/Mithril.Routing.Services.html": {
    "href": "api/Mithril.Routing.Services.html",
    "title": "Namespace Mithril.Routing.Services | Mithril API Reference",
    "keywords": "Namespace Mithril.Routing.Services Classes RouteService Route service"
  },
  "api/Mithril.Routing.Transformers.RouteTransformer.html": {
    "href": "api/Mithril.Routing.Transformers.RouteTransformer.html",
    "title": "Class RouteTransformer | Mithril API Reference",
    "keywords": "Class RouteTransformer Route transformer Inheritance object DynamicRouteValueTransformer RouteTransformer Inherited Members DynamicRouteValueTransformer.FilterAsync(HttpContext, RouteValueDictionary, IReadOnlyList<Endpoint>) DynamicRouteValueTransformer.State object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Mithril.Routing.Transformers Assembly: Mithril.Routing.dll Syntax public class RouteTransformer : DynamicRouteValueTransformer Constructors | Improve this Doc View Source RouteTransformer(IRouteService?) Initializes a new instance of the RouteTransformer class. Declaration public RouteTransformer(IRouteService? routeManager) Parameters Type Name Description IRouteService routeManager The route manager. See Also DynamicRouteValueTransformer Properties | Improve this Doc View Source RouteManager Gets the route manager. Declaration public IRouteService? RouteManager { get; } Property Value Type Description IRouteService The route manager. See Also DynamicRouteValueTransformer Methods | Improve this Doc View Source TransformAsync(HttpContext, RouteValueDictionary) Creates a set of transformed route values that will be used to select an action. Declaration public override ValueTask<RouteValueDictionary> TransformAsync(HttpContext httpContext, RouteValueDictionary values) Parameters Type Name Description HttpContext httpContext The HttpContext associated with the current request. RouteValueDictionary values The route values associated with the current match. Implementations should not modify values. Returns Type Description ValueTask<RouteValueDictionary> A task which asynchronously returns a set of route values. Overrides DynamicRouteValueTransformer.TransformAsync(HttpContext, RouteValueDictionary) See Also DynamicRouteValueTransformer Extension Methods ExpandoObjectExtensions.ConvertToExpando<TEntity>(TEntity?) GenericExtensions.When<TObject>(TObject, bool, Func<TObject, TObject>) See Also DynamicRouteValueTransformer"
  },
  "api/Mithril.Routing.Transformers.html": {
    "href": "api/Mithril.Routing.Transformers.html",
    "title": "Namespace Mithril.Routing.Transformers | Mithril API Reference",
    "keywords": "Namespace Mithril.Routing.Transformers Classes RouteTransformer Route transformer"
  },
  "api/Mithril.Routing.html": {
    "href": "api/Mithril.Routing.html",
    "title": "Namespace Mithril.Routing | Mithril API Reference",
    "keywords": "Namespace Mithril.Routing Classes RoutingModule Routing module"
  },
  "api/Mithril.Security.Abstractions.Enums.PermissionType.html": {
    "href": "api/Mithril.Security.Abstractions.Enums.PermissionType.html",
    "title": "Enum PermissionType | Mithril API Reference",
    "keywords": "Enum PermissionType Permission type Namespace: Mithril.Security.Abstractions.Enums Assembly: Mithril.Security.Abstractions.dll Syntax public enum PermissionType Fields Name Description All All claims must match in order to be true Any Any claims can match in order to be true Extension Methods ExpandoObjectExtensions.ConvertToExpando<PermissionType>(PermissionType) GenericExtensions.When<PermissionType>(PermissionType, bool, Func<PermissionType, PermissionType>)"
  },
  "api/Mithril.Security.Abstractions.Enums.SystemPermissions.html": {
    "href": "api/Mithril.Security.Abstractions.Enums.SystemPermissions.html",
    "title": "Class SystemPermissions | Mithril API Reference",
    "keywords": "Class SystemPermissions Common system permissions. Inheritance object StringEnumBaseClass<SystemPermissions> SystemPermissions Inherited Members StringEnumBaseClass<SystemPermissions>.ToStringEnumBaseClass(string) StringEnumBaseClass<SystemPermissions>.ToString() StringEnumBaseClass<SystemPermissions>.Name object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Namespace: Mithril.Security.Abstractions.Enums Assembly: Mithril.Security.Abstractions.dll Syntax public class SystemPermissions : StringEnumBaseClass<SystemPermissions> Constructors | Improve this Doc View Source SystemPermissions() Initializes a new instance of the SystemPermissions class. Declaration public SystemPermissions() See Also StringEnumBaseClass<TClass> | Improve this Doc View Source SystemPermissions(string) Initializes a new instance of the SystemPermissions class. Declaration public SystemPermissions(string name) Parameters Type Name Description string name The name. See Also StringEnumBaseClass<TClass> Properties | Improve this Doc View Source AdminOnly Gets the admin only. Declaration public static SystemPermissions AdminOnly { get; } Property Value Type Description SystemPermissions The admin only. See Also StringEnumBaseClass<TClass> | Improve this Doc View Source ContentEditor Gets the content editor. Declaration public static SystemPermissions ContentEditor { get; } Property Value Type Description SystemPermissions The content editor. See Also StringEnumBaseClass<TClass> | Improve this Doc View Source DataEditor Gets the data editor. Declaration public static SystemPermissions DataEditor { get; } Property Value Type Description SystemPermissions The data editor. See Also StringEnumBaseClass<TClass> | Improve this Doc View Source FormEditor Gets the form editor. Declaration public static SystemPermissions FormEditor { get; } Property Value Type Description SystemPermissions The form editor. See Also StringEnumBaseClass<TClass> | Improve this Doc View Source ReportEditor Gets the report editor. Declaration public static SystemPermissions ReportEditor { get; } Property Value Type Description SystemPermissions The report editor. See Also StringEnumBaseClass<TClass> | Improve this Doc View Source User Gets the user. Declaration public static SystemPermissions User { get; } Property Value Type Description SystemPermissions The user. See Also StringEnumBaseClass<TClass> Extension Methods ExpandoObjectExtensions.ConvertToExpando<TEntity>(TEntity?) GenericExtensions.When<TObject>(TObject, bool, Func<TObject, TObject>) See Also StringEnumBaseClass<TClass>"
  },
  "api/Mithril.Security.Abstractions.Enums.html": {
    "href": "api/Mithril.Security.Abstractions.Enums.html",
    "title": "Namespace Mithril.Security.Abstractions.Enums | Mithril API Reference",
    "keywords": "Namespace Mithril.Security.Abstractions.Enums Classes SystemPermissions Common system permissions. Enums PermissionType Permission type"
  },
  "api/Mithril.Security.Abstractions.Interfaces.IPermission.html": {
    "href": "api/Mithril.Security.Abstractions.Interfaces.IPermission.html",
    "title": "Interface IPermission | Mithril API Reference",
    "keywords": "Interface IPermission Permission interface Inherited Members IModel.Active IModel.Creator IModel.DateCreated IModel.DateModified IModel.ID IModel.Modifier IModel.TenantID IModel.CanBeModifiedBy(ClaimsPrincipal) IModel.CanBeViewedBy(ClaimsPrincipal) IModel.DeleteAsync(IDataService, ClaimsPrincipal, bool) IModel.SaveAsync(IDataService, ClaimsPrincipal) IModel.SetupObject(IDataService, ClaimsPrincipal) IModel.SetupObject(IDataService, IUser) IEquatable<IModel>.Equals(IModel) IEquatable<IPermission>.Equals(IPermission) Namespace: Mithril.Security.Abstractions.Interfaces Assembly: Mithril.Security.Abstractions.dll Syntax public interface IPermission : IModel, IEquatable<IModel>, IEquatable<IPermission> Properties | Improve this Doc View Source Claims Gets the claims. Declaration IList<IUserClaim> Claims { get; } Property Value Type Description IList<IUserClaim> The claims. See Also IModel | Improve this Doc View Source DisplayName Gets or sets the display name. Declaration [Required] [MinLength(1)] [MaxLength(128)] string? DisplayName { get; set; } Property Value Type Description string The display name. See Also IModel | Improve this Doc View Source Operand Gets or sets the operand. Declaration PermissionType Operand { get; set; } Property Value Type Description PermissionType The operand. See Also IModel Methods | Improve this Doc View Source AddClaim(IUserClaim) Adds the claim. Declaration IPermission AddClaim(IUserClaim claim) Parameters Type Name Description IUserClaim claim The claim. Returns Type Description IPermission This. See Also IModel | Improve this Doc View Source HasPermission(IUser?) Determines whether the specified user has permission. Declaration bool HasPermission(IUser? user) Parameters Type Name Description IUser user The user. Returns Type Description bool true if the specified user has permission; otherwise, false. See Also IModel | Improve this Doc View Source HasPermission(ClaimsPrincipal?) Determines whether the specified user has permission. Declaration bool HasPermission(ClaimsPrincipal? user) Parameters Type Name Description ClaimsPrincipal user The user. Returns Type Description bool true if the specified user has permission; otherwise, false. See Also IModel | Improve this Doc View Source RemoveClaim(IUserClaim) Removes the claim. Declaration IPermission RemoveClaim(IUserClaim claim) Parameters Type Name Description IUserClaim claim The claim. Returns Type Description IPermission This. See Also IModel | Improve this Doc View Source ReplaceClaim(IUserClaim, IUserClaim) Replaces the claim. Declaration IPermission ReplaceClaim(IUserClaim originalClaim, IUserClaim newClaim) Parameters Type Name Description IUserClaim originalClaim The original claim. IUserClaim newClaim The new claim. Returns Type Description IPermission This See Also IModel Extension Methods ExpandoObjectExtensions.ConvertToExpando<TEntity>(TEntity?) GenericExtensions.When<TObject>(TObject, bool, Func<TObject, TObject>) See Also IModel"
  },
  "api/Mithril.Security.Abstractions.Interfaces.ITenant.html": {
    "href": "api/Mithril.Security.Abstractions.Interfaces.ITenant.html",
    "title": "Interface ITenant | Mithril API Reference",
    "keywords": "Interface ITenant Tenant interface Inherited Members IModel.Active IModel.Creator IModel.DateCreated IModel.DateModified IModel.ID IModel.Modifier IModel.TenantID IModel.CanBeModifiedBy(ClaimsPrincipal) IModel.CanBeViewedBy(ClaimsPrincipal) IModel.DeleteAsync(IDataService, ClaimsPrincipal, bool) IModel.SaveAsync(IDataService, ClaimsPrincipal) IModel.SetupObject(IDataService, ClaimsPrincipal) IModel.SetupObject(IDataService, IUser) IEquatable<IModel>.Equals(IModel) IEquatable<ITenant>.Equals(ITenant) Namespace: Mithril.Security.Abstractions.Interfaces Assembly: Mithril.Security.Abstractions.dll Syntax public interface ITenant : IModel, IEquatable<IModel>, IEquatable<ITenant> Properties | Improve this Doc View Source DisplayName Gets or sets the full name. Declaration string? DisplayName { get; set; } Property Value Type Description string The full name. See Also IModel | Improve this Doc View Source Users Gets or sets the users. Declaration IList<IUser> Users { get; set; } Property Value Type Description IList<IUser> The users. See Also IModel Extension Methods ExpandoObjectExtensions.ConvertToExpando<TEntity>(TEntity?) GenericExtensions.When<TObject>(TObject, bool, Func<TObject, TObject>) See Also IModel"
  },
  "api/Mithril.Security.Abstractions.Interfaces.html": {
    "href": "api/Mithril.Security.Abstractions.Interfaces.html",
    "title": "Namespace Mithril.Security.Abstractions.Interfaces | Mithril API Reference",
    "keywords": "Namespace Mithril.Security.Abstractions.Interfaces Interfaces IPermission Permission interface ITenant Tenant interface"
  },
  "api/Mithril.Security.Abstractions.Services.ISecurityService.html": {
    "href": "api/Mithril.Security.Abstractions.Services.ISecurityService.html",
    "title": "Interface ISecurityService | Mithril API Reference",
    "keywords": "Interface ISecurityService Permission service Namespace: Mithril.Security.Abstractions.Services Assembly: Mithril.Security.Abstractions.dll Syntax public interface ISecurityService Methods | Improve this Doc View Source LoadAllTenants() Loads all tenants. Declaration IEnumerable<ITenant> LoadAllTenants() Returns Type Description IEnumerable<ITenant> All tenants. | Improve this Doc View Source LoadAllUsers() Loads all users. Declaration IEnumerable<IUser> LoadAllUsers() Returns Type Description IEnumerable<IUser> All users. | Improve this Doc View Source LoadAnonymousUserAccount() Loads the anonymous user account. Declaration IUser? LoadAnonymousUserAccount() Returns Type Description IUser The anonymous user account. | Improve this Doc View Source LoadClaim(UserClaimTypes, string) Loads the user claim specified by the identifier. Declaration IUserClaim? LoadClaim(UserClaimTypes type, string value) Parameters Type Name Description UserClaimTypes type The type. string value The value. Returns Type Description IUserClaim The user claim specified. | Improve this Doc View Source LoadClaim(long) Loads the user claim specified by the identifier. Declaration IUserClaim? LoadClaim(long id) Parameters Type Name Description long id The identifier. Returns Type Description IUserClaim The user claim specified. | Improve this Doc View Source LoadCurrentUser() Loads the current user. Declaration IUser? LoadCurrentUser() Returns Type Description IUser The current user. | Improve this Doc View Source LoadOrCreateClaimAsync(UserClaimTypes, string) Loads or creates the user claim asynchronously based on the type and value. Declaration Task<IUserClaim> LoadOrCreateClaimAsync(UserClaimTypes type, string value) Parameters Type Name Description UserClaimTypes type The type. string value The value. Returns Type Description Task<IUserClaim> The user claim specified. | Improve this Doc View Source LoadOrCreatePermissionAsync(string, PermissionType, params IUserClaim[]) Loads or creates the permission asynchronously based on the display name. Declaration Task<IPermission> LoadOrCreatePermissionAsync(string displayName, PermissionType operand, params IUserClaim[] claims) Parameters Type Name Description string displayName The display name. PermissionType operand The operand. IUserClaim[] claims The claims. Returns Type Description Task<IPermission> The permission specified. | Improve this Doc View Source LoadPermission(SystemPermissions) Loads the permission specified. Declaration IPermission? LoadPermission(SystemPermissions permission) Parameters Type Name Description SystemPermissions permission The permission. Returns Type Description IPermission The permission specified. | Improve this Doc View Source LoadPermission(string) Loads the permission specified. Declaration IPermission? LoadPermission(string displayName) Parameters Type Name Description string displayName The display name. Returns Type Description IPermission The permission specified. | Improve this Doc View Source LoadSystemAccount() Loads the system account. Declaration IUser? LoadSystemAccount() Returns Type Description IUser The system account. | Improve this Doc View Source LoadSystemTenant() Loads the system tenant. Declaration ITenant? LoadSystemTenant() Returns Type Description ITenant The system tenant. Extension Methods ExpandoObjectExtensions.ConvertToExpando<TEntity>(TEntity?) GenericExtensions.When<TObject>(TObject, bool, Func<TObject, TObject>)"
  },
  "api/Mithril.Security.Abstractions.Services.html": {
    "href": "api/Mithril.Security.Abstractions.Services.html",
    "title": "Namespace Mithril.Security.Abstractions.Services | Mithril API Reference",
    "keywords": "Namespace Mithril.Security.Abstractions.Services Interfaces ISecurityService Permission service"
  },
  "api/Mithril.Security.Abstractions.SystemAccounts.html": {
    "href": "api/Mithril.Security.Abstractions.SystemAccounts.html",
    "title": "Class SystemAccounts | Mithril API Reference",
    "keywords": "Class SystemAccounts System accounts Inheritance object SystemAccounts Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Mithril.Security.Abstractions Assembly: Mithril.Security.Abstractions.dll Syntax public class SystemAccounts Constructors | Improve this Doc View Source SystemAccounts() Initializes a new instance of the SystemAccounts class. Declaration public SystemAccounts() Properties | Improve this Doc View Source AnonymousClaimsPrincipal Gets the anonymous claims principal. Declaration public ClaimsPrincipal AnonymousClaimsPrincipal { get; } Property Value Type Description ClaimsPrincipal The anonymous claims principal. | Improve this Doc View Source SystemClaimsPrincipal Gets the system claims principal. Declaration public ClaimsPrincipal SystemClaimsPrincipal { get; } Property Value Type Description ClaimsPrincipal The system claims principal. Extension Methods ExpandoObjectExtensions.ConvertToExpando<TEntity>(TEntity?) GenericExtensions.When<TObject>(TObject, bool, Func<TObject, TObject>)"
  },
  "api/Mithril.Security.Abstractions.html": {
    "href": "api/Mithril.Security.Abstractions.html",
    "title": "Namespace Mithril.Security.Abstractions | Mithril API Reference",
    "keywords": "Namespace Mithril.Security.Abstractions Classes SystemAccounts System accounts"
  },
  "api/Mithril.Security.Admin.DropDowns.UserClaimDropDown.html": {
    "href": "api/Mithril.Security.Admin.DropDowns.UserClaimDropDown.html",
    "title": "Class UserClaimDropDown | Mithril API Reference",
    "keywords": "Class UserClaimDropDown UserClaim drop down Inheritance object DropDownBaseClass<UserClaim> UserClaimDropDown Implements IDropDownQuery Inherited Members DropDownBaseClass<UserClaim>.Name DropDownBaseClass<UserClaim>.CanRun(string, ClaimsPrincipal) DropDownBaseClass<UserClaim>.GetDataAsync(string) DropDownBaseClass<UserClaim>.GetValues(string, int) DropDownBaseClass<UserClaim>.GetKey(UserClaim) object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Mithril.Security.Admin.DropDowns Assembly: Mithril.Security.dll Syntax public class UserClaimDropDown : DropDownBaseClass<UserClaim>, IDropDownQuery Methods | Improve this Doc View Source FilterQuery(IQueryable<UserClaim>, string) Filters the query. Declaration protected override IQueryable<UserClaim> FilterQuery(IQueryable<UserClaim> query, string value) Parameters Type Name Description IQueryable<UserClaim> query The query. string value The value. Returns Type Description IQueryable<UserClaim> The filtered query Overrides DropDownBaseClass<UserClaim>.FilterQuery(IQueryable<UserClaim>, string) See Also DropDownBaseClass<TModel> Implements IDropDownQuery Extension Methods ExpandoObjectExtensions.ConvertToExpando<TEntity>(TEntity?) GenericExtensions.When<TObject>(TObject, bool, Func<TObject, TObject>) See Also DropDownBaseClass<TModel>"
  },
  "api/Mithril.Security.Admin.DropDowns.html": {
    "href": "api/Mithril.Security.Admin.DropDowns.html",
    "title": "Namespace Mithril.Security.Admin.DropDowns | Mithril API Reference",
    "keywords": "Namespace Mithril.Security.Admin.DropDowns Classes UserClaimDropDown UserClaim drop down"
  },
  "api/Mithril.Security.Admin.PermissionEditor.html": {
    "href": "api/Mithril.Security.Admin.PermissionEditor.html",
    "title": "Class PermissionEditor | Mithril API Reference",
    "keywords": "Class PermissionEditor Permission editor service Inheritance object EntityEditorBaseClass<PermissionVM> EntityEditorBaseClass<PermissionVM, Permission> PermissionEditor Implements IEntityEditor IEditor Inherited Members EntityEditorBaseClass<PermissionVM, Permission>.ActivateAsync(long, ClaimsPrincipal) EntityEditorBaseClass<PermissionVM, Permission>.CanView(ClaimsPrincipal) EntityEditorBaseClass<PermissionVM, Permission>.DeleteEntityAsync(long, ClaimsPrincipal) EntityEditorBaseClass<PermissionVM, Permission>.Load(long, ExpandoObject, ClaimsPrincipal) EntityEditorBaseClass<PermissionVM, Permission>.LoadPageAsync(int, int, string, bool, string, ClaimsPrincipal) EntityEditorBaseClass<PermissionVM, Permission>.SaveEntityAsync(long, ExpandoObject, ClaimsPrincipal) EntityEditorBaseClass<PermissionVM, Permission>.TotalActiveAsync(ClaimsPrincipal) EntityEditorBaseClass<PermissionVM, Permission>.Convert(Permission, bool) EntityEditorBaseClass<PermissionVM, Permission>.FilterQueryBySearchQuery(IQueryable<Permission>, string) EntityEditorBaseClass<PermissionVM, Permission>.LoadModel(long) EntityEditorBaseClass<PermissionVM, Permission>.MakeActiveAsync(Permission) EntityEditorBaseClass<PermissionVM, Permission>.MakeInactiveAsync(Permission) EntityEditorBaseClass<PermissionVM>.Category EntityEditorBaseClass<PermissionVM>.ComponentDefinition EntityEditorBaseClass<PermissionVM>.Description EntityEditorBaseClass<PermissionVM>.EntityType EntityEditorBaseClass<PermissionVM>.Name EntityEditorBaseClass<PermissionVM>.DataService EntityEditorBaseClass<PermissionVM>.ActivateAsync(long, ClaimsPrincipal) EntityEditorBaseClass<PermissionVM>.CanView(ClaimsPrincipal) EntityEditorBaseClass<PermissionVM>.DeleteEntityAsync(long, ClaimsPrincipal) EntityEditorBaseClass<PermissionVM>.Load(long, ExpandoObject, ClaimsPrincipal) EntityEditorBaseClass<PermissionVM>.LoadPageAsync(int, int, string, bool, string, ClaimsPrincipal) EntityEditorBaseClass<PermissionVM>.SaveEntityAsync(long, ExpandoObject, ClaimsPrincipal) EntityEditorBaseClass<PermissionVM>.TotalActiveAsync(ClaimsPrincipal) object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Mithril.Security.Admin Assembly: Mithril.Security.dll Syntax public class PermissionEditor : EntityEditorBaseClass<PermissionVM, Permission>, IEntityEditor, IEditor Constructors | Improve this Doc View Source PermissionEditor(IDataService?, IEntityMetadataService?, string?) Initializes a new instance of the PermissionEditor class. Declaration public PermissionEditor(IDataService? dataService, IEntityMetadataService? entityMetadataService, string? dataType = null) Parameters Type Name Description IDataService dataService The data service. IEntityMetadataService entityMetadataService The entity metadata service. string dataType Type of the data. See Also EntityEditorBaseClass<TEntity, TModel> Properties | Improve this Doc View Source Icon Gets the icon. Declaration public override string Icon { get; } Property Value Type Description string The icon. Overrides EntityEditorBaseClass<PermissionVM>.Icon See Also EntityEditorBaseClass<TEntity, TModel> Methods | Improve this Doc View Source Convert(Permission, bool) Converts the model into the appropriate view model. Declaration protected override IEntity Convert(Permission model, bool full = true) Parameters Type Name Description Permission model The model. bool full if set to true [full]. Returns Type Description IEntity The view model Overrides EntityEditorBaseClass<PermissionVM, Permission>.Convert(Permission, bool) See Also EntityEditorBaseClass<TEntity, TModel> | Improve this Doc View Source FilterQueryBySearchQuery(IQueryable<Permission>?, string) Filters the query by search term. Declaration protected override IQueryable<Permission>? FilterQueryBySearchQuery(IQueryable<Permission>? query, string searchQuery) Parameters Type Name Description IQueryable<Permission> query The query. string searchQuery The search query. Returns Type Description IQueryable<Permission> The resulting query. Overrides EntityEditorBaseClass<PermissionVM, Permission>.FilterQueryBySearchQuery(IQueryable<Permission>, string) See Also EntityEditorBaseClass<TEntity, TModel> Implements IEntityEditor IEditor Extension Methods ExpandoObjectExtensions.ConvertToExpando<TEntity>(TEntity?) GenericExtensions.When<TObject>(TObject, bool, Func<TObject, TObject>) See Also EntityEditorBaseClass<TEntity, TModel>"
  },
  "api/Mithril.Security.Admin.ViewModels.ClaimDropDownVM.html": {
    "href": "api/Mithril.Security.Admin.ViewModels.ClaimDropDownVM.html",
    "title": "Class ClaimDropDownVM | Mithril API Reference",
    "keywords": "Class ClaimDropDownVM Claim Drop Down VM Inheritance object ClaimDropDownVM Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Mithril.Security.Admin.ViewModels Assembly: Mithril.Security.dll Syntax public class ClaimDropDownVM Constructors | Improve this Doc View Source ClaimDropDownVM() Initializes a new instance of the ClaimDropDownVM class. Declaration public ClaimDropDownVM() | Improve this Doc View Source ClaimDropDownVM(IUserClaim) Initializes a new instance of the ClaimDropDownVM class. Declaration public ClaimDropDownVM(IUserClaim claim) Parameters Type Name Description IUserClaim claim The claim. Properties | Improve this Doc View Source Claim Gets or sets the claim. Declaration [Order(1)] [Select(typeof(UserClaimDropDown), \"\")] public long Claim { get; set; } Property Value Type Description long The claim. Extension Methods ExpandoObjectExtensions.ConvertToExpando<TEntity>(TEntity?) GenericExtensions.When<TObject>(TObject, bool, Func<TObject, TObject>)"
  },
  "api/Mithril.Security.Admin.ViewModels.PermissionVM.html": {
    "href": "api/Mithril.Security.Admin.ViewModels.PermissionVM.html",
    "title": "Class PermissionVM | Mithril API Reference",
    "keywords": "Class PermissionVM Permission VM class Inheritance object EntityBaseClass<Permission> PermissionVM Implements IEntity<Permission> IEntity Inherited Members EntityBaseClass<Permission>.Active EntityBaseClass<Permission>.ID object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Mithril.Security.Admin.ViewModels Assembly: Mithril.Security.dll Syntax public class PermissionVM : EntityBaseClass<Permission>, IEntity<Permission>, IEntity Constructors | Improve this Doc View Source PermissionVM() Initializes a new instance of the PermissionVM class. Declaration public PermissionVM() See Also EntityBaseClass<TEntity> | Improve this Doc View Source PermissionVM(Permission) Initializes a new instance of the PermissionVM class. Declaration public PermissionVM(Permission model) Parameters Type Name Description Permission model The model. See Also EntityBaseClass<TEntity> Properties | Improve this Doc View Source Claims Gets or sets the claims. Declaration [Order(3)] public List<ClaimDropDownVM> Claims { get; set; } Property Value Type Description List<ClaimDropDownVM> The claims. See Also EntityBaseClass<TEntity> | Improve this Doc View Source DisplayName Gets or sets the display name. Declaration [Required] [MinLength(1)] [MaxLength(128)] [Order(1)] public string? DisplayName { get; set; } Property Value Type Description string The display name. See Also EntityBaseClass<TEntity> | Improve this Doc View Source Operand Gets or sets the operand. Declaration [Order(2)] public PermissionType Operand { get; set; } Property Value Type Description PermissionType The operand. See Also EntityBaseClass<TEntity> Methods | Improve this Doc View Source SaveAsync(long, IDataService?, ClaimsPrincipal?) Saves the changes asynchronously. Declaration public override Task<Permission?> SaveAsync(long id, IDataService? dataService, ClaimsPrincipal? currentUser) Parameters Type Name Description long id The identifier. IDataService dataService The data service. ClaimsPrincipal currentUser The current user. Returns Type Description Task<Permission> The async task. Overrides EntityBaseClass<Permission>.SaveAsync(long, IDataService, ClaimsPrincipal) See Also EntityBaseClass<TEntity> Implements IEntity<TModel> IEntity Extension Methods ExpandoObjectExtensions.ConvertToExpando<TEntity>(TEntity?) GenericExtensions.When<TObject>(TObject, bool, Func<TObject, TObject>) See Also EntityBaseClass<TEntity>"
  },
  "api/Mithril.Security.Admin.ViewModels.html": {
    "href": "api/Mithril.Security.Admin.ViewModels.html",
    "title": "Namespace Mithril.Security.Admin.ViewModels | Mithril API Reference",
    "keywords": "Namespace Mithril.Security.Admin.ViewModels Classes ClaimDropDownVM Claim Drop Down VM PermissionVM Permission VM class"
  },
  "api/Mithril.Security.Admin.html": {
    "href": "api/Mithril.Security.Admin.html",
    "title": "Namespace Mithril.Security.Admin | Mithril API Reference",
    "keywords": "Namespace Mithril.Security.Admin Classes PermissionEditor Permission editor service"
  },
  "api/Mithril.Security.AuthenticationModule.html": {
    "href": "api/Mithril.Security.AuthenticationModule.html",
    "title": "Class AuthenticationModule | Mithril API Reference",
    "keywords": "Class AuthenticationModule Windows Authentication module Inheritance object ModuleBaseClass<AuthenticationModule> AuthenticationModule Implements IEquatable<AuthenticationModule> IModule Inherited Members ModuleBaseClass<AuthenticationModule>.Category ModuleBaseClass<AuthenticationModule>.ContentPath ModuleBaseClass<AuthenticationModule>.Features ModuleBaseClass<AuthenticationModule>.ID ModuleBaseClass<AuthenticationModule>.LastModified ModuleBaseClass<AuthenticationModule>.Name ModuleBaseClass<AuthenticationModule>.Tags ModuleBaseClass<AuthenticationModule>.Version ModuleBaseClass<AuthenticationModule>.ConfigureHostSettings(IHostBuilder, IConfiguration, IHostEnvironment) ModuleBaseClass<AuthenticationModule>.ConfigureLoggingSettings(ILoggingBuilder, IConfiguration, IHostEnvironment) ModuleBaseClass<AuthenticationModule>.ConfigureMVC(IMvcBuilder, IConfiguration, IHostEnvironment) ModuleBaseClass<AuthenticationModule>.ConfigureRoutes(IEndpointRouteBuilder, IConfiguration, IHostEnvironment) ModuleBaseClass<AuthenticationModule>.ConfigureWebHostSettings(IWebHostBuilder, IConfiguration, IHostEnvironment) ModuleBaseClass<AuthenticationModule>.Equals(object) ModuleBaseClass<AuthenticationModule>.Equals(AuthenticationModule) ModuleBaseClass<AuthenticationModule>.GetHashCode() ModuleBaseClass<AuthenticationModule>.OnStarted() ModuleBaseClass<AuthenticationModule>.OnStopped() ModuleBaseClass<AuthenticationModule>.OnStopping() object.Equals(object, object) object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Mithril.Security Assembly: Mithril.Security.dll Syntax public class AuthenticationModule : ModuleBaseClass<AuthenticationModule>, IEquatable<AuthenticationModule>, IModule Constructors | Improve this Doc View Source AuthenticationModule() Initializes a new instance of the AuthenticationModule class. Declaration public AuthenticationModule() See Also ModuleBaseClass<TModule> Properties | Improve this Doc View Source Order Gets the order that they are initialized in. Declaration public override int Order { get; } Property Value Type Description int The order that they are initialized in. Overrides ModuleBaseClass<AuthenticationModule>.Order See Also ModuleBaseClass<TModule> Methods | Improve this Doc View Source ConfigureApplication(IApplicationBuilder?, IConfiguration?, IHostEnvironment?) Configures the application. Declaration public override IApplicationBuilder? ConfigureApplication(IApplicationBuilder? app, IConfiguration? configuration, IHostEnvironment? environment) Parameters Type Name Description IApplicationBuilder app The application. IConfiguration configuration The configuration. IHostEnvironment environment The environment. Returns Type Description IApplicationBuilder Overrides ModuleBaseClass<AuthenticationModule>.ConfigureApplication(IApplicationBuilder, IConfiguration, IHostEnvironment) See Also ModuleBaseClass<TModule> | Improve this Doc View Source ConfigureServices(IServiceCollection?, IConfiguration?, IHostEnvironment?) Configures the services for the module. Declaration public override IServiceCollection? ConfigureServices(IServiceCollection? services, IConfiguration? configuration, IHostEnvironment? env) Parameters Type Name Description IServiceCollection services The services collection. IConfiguration configuration The configuration. IHostEnvironment env Returns Type Description IServiceCollection Overrides ModuleBaseClass<AuthenticationModule>.ConfigureServices(IServiceCollection, IConfiguration, IHostEnvironment) See Also ModuleBaseClass<TModule> | Improve this Doc View Source InitializeDataAsync(IDataService?, IServiceProvider?) Initializes the data. Declaration public override Task InitializeDataAsync(IDataService? dataService, IServiceProvider? services) Parameters Type Name Description IDataService dataService The data service. IServiceProvider services The services for the application. Returns Type Description Task The async task. Overrides ModuleBaseClass<AuthenticationModule>.InitializeDataAsync(IDataService, IServiceProvider) See Also ModuleBaseClass<TModule> Implements IEquatable<T> IModule Extension Methods ExpandoObjectExtensions.ConvertToExpando<TEntity>(TEntity?) GenericExtensions.When<TObject>(TObject, bool, Func<TObject, TObject>) See Also ModuleBaseClass<TModule>"
  },
  "api/Mithril.Security.Models.Mappings.IPermissionMapping.html": {
    "href": "api/Mithril.Security.Models.Mappings.IPermissionMapping.html",
    "title": "Class IPermissionMapping | Mithril API Reference",
    "keywords": "Class IPermissionMapping Permission mapping Inheritance object MappingBaseClass<IPermission, DefaultDatabase> IPermissionMapping Implements IMapping<IPermission> IMapping Inherited Members MappingBaseClass<IPermission, DefaultDatabase>.AddAutoKey() MappingBaseClass<IPermission, DefaultDatabase>.ContainsProperty(string) MappingBaseClass<IPermission, DefaultDatabase>.Copy(IMapping) MappingBaseClass<IPermission, DefaultDatabase>.CopyProperty(IIDProperty) MappingBaseClass<IPermission, DefaultDatabase>.CopyProperty(IProperty) MappingBaseClass<IPermission, DefaultDatabase>.CopyProperty(IMapProperty) MappingBaseClass<IPermission, DefaultDatabase>.CopyProperty(IManyToOneProperty) MappingBaseClass<IPermission, DefaultDatabase>.CopyProperty(IManyToManyProperty) MappingBaseClass<IPermission, DefaultDatabase>.Equals(object) MappingBaseClass<IPermission, DefaultDatabase>.GetColumnName(string) MappingBaseClass<IPermission, DefaultDatabase>.GetHashCode() MappingBaseClass<IPermission, DefaultDatabase>.ID<TDataType>(Expression<Func<IPermission, TDataType>>) MappingBaseClass<IPermission, DefaultDatabase>.ManyToMany<TDataType>(Expression<Func<IPermission, IList<TDataType>>>) MappingBaseClass<IPermission, DefaultDatabase>.ManyToOne<TDataType>(Expression<Func<IPermission, IList<TDataType>>>) MappingBaseClass<IPermission, DefaultDatabase>.ManyToOne<TDataType>(Expression<Func<IPermission, TDataType>>) MappingBaseClass<IPermission, DefaultDatabase>.Map<TDataType>(Expression<Func<IPermission, TDataType>>) MappingBaseClass<IPermission, DefaultDatabase>.Reduce(ILogger) MappingBaseClass<IPermission, DefaultDatabase>.Reduce(IMapping, ILogger) MappingBaseClass<IPermission, DefaultDatabase>.Reference<TDataType>(Expression<Func<IPermission, TDataType>>) MappingBaseClass<IPermission, DefaultDatabase>.SetQuery(QueryType, string, CommandType, params IParameter[]) MappingBaseClass<IPermission, DefaultDatabase>.Setup() MappingBaseClass<IPermission, DefaultDatabase>.ToString() MappingBaseClass<IPermission, DefaultDatabase>.AutoIDProperties MappingBaseClass<IPermission, DefaultDatabase>.DatabaseConfigType MappingBaseClass<IPermission, DefaultDatabase>.IDProperties MappingBaseClass<IPermission, DefaultDatabase>.ManyToManyProperties MappingBaseClass<IPermission, DefaultDatabase>.ManyToOneProperties MappingBaseClass<IPermission, DefaultDatabase>.MapProperties MappingBaseClass<IPermission, DefaultDatabase>.Merge MappingBaseClass<IPermission, DefaultDatabase>.ObjectType MappingBaseClass<IPermission, DefaultDatabase>.Order MappingBaseClass<IPermission, DefaultDatabase>.Prefix MappingBaseClass<IPermission, DefaultDatabase>.Queries MappingBaseClass<IPermission, DefaultDatabase>.ReferenceProperties MappingBaseClass<IPermission, DefaultDatabase>.SchemaName MappingBaseClass<IPermission, DefaultDatabase>.Suffix MappingBaseClass<IPermission, DefaultDatabase>.TableName object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Mithril.Security.Models.Mappings Assembly: Mithril.Security.dll Syntax public class IPermissionMapping : MappingBaseClass<IPermission, DefaultDatabase>, IMapping<IPermission>, IMapping Constructors | Improve this Doc View Source IPermissionMapping() Initializes a new instance of the IPermissionMapping class. Declaration public IPermissionMapping() See Also MappingBaseClass<TClassType, TDatabaseType> Implements IMapping<TClassType> IMapping Extension Methods ExpandoObjectExtensions.ConvertToExpando<TEntity>(TEntity?) GenericExtensions.When<TObject>(TObject, bool, Func<TObject, TObject>) See Also MappingBaseClass<TClassType, TDatabaseType>"
  },
  "api/Mithril.Security.Models.Mappings.ITenantMapping.html": {
    "href": "api/Mithril.Security.Models.Mappings.ITenantMapping.html",
    "title": "Class ITenantMapping | Mithril API Reference",
    "keywords": "Class ITenantMapping ITenant mapping Inheritance object MappingBaseClass<ITenant, DefaultDatabase> ITenantMapping Implements IMapping<ITenant> IMapping Inherited Members MappingBaseClass<ITenant, DefaultDatabase>.AddAutoKey() MappingBaseClass<ITenant, DefaultDatabase>.ContainsProperty(string) MappingBaseClass<ITenant, DefaultDatabase>.Copy(IMapping) MappingBaseClass<ITenant, DefaultDatabase>.CopyProperty(IIDProperty) MappingBaseClass<ITenant, DefaultDatabase>.CopyProperty(IProperty) MappingBaseClass<ITenant, DefaultDatabase>.CopyProperty(IMapProperty) MappingBaseClass<ITenant, DefaultDatabase>.CopyProperty(IManyToOneProperty) MappingBaseClass<ITenant, DefaultDatabase>.CopyProperty(IManyToManyProperty) MappingBaseClass<ITenant, DefaultDatabase>.Equals(object) MappingBaseClass<ITenant, DefaultDatabase>.GetColumnName(string) MappingBaseClass<ITenant, DefaultDatabase>.GetHashCode() MappingBaseClass<ITenant, DefaultDatabase>.ID<TDataType>(Expression<Func<ITenant, TDataType>>) MappingBaseClass<ITenant, DefaultDatabase>.ManyToMany<TDataType>(Expression<Func<ITenant, IList<TDataType>>>) MappingBaseClass<ITenant, DefaultDatabase>.ManyToOne<TDataType>(Expression<Func<ITenant, IList<TDataType>>>) MappingBaseClass<ITenant, DefaultDatabase>.ManyToOne<TDataType>(Expression<Func<ITenant, TDataType>>) MappingBaseClass<ITenant, DefaultDatabase>.Map<TDataType>(Expression<Func<ITenant, TDataType>>) MappingBaseClass<ITenant, DefaultDatabase>.Reduce(ILogger) MappingBaseClass<ITenant, DefaultDatabase>.Reduce(IMapping, ILogger) MappingBaseClass<ITenant, DefaultDatabase>.Reference<TDataType>(Expression<Func<ITenant, TDataType>>) MappingBaseClass<ITenant, DefaultDatabase>.SetQuery(QueryType, string, CommandType, params IParameter[]) MappingBaseClass<ITenant, DefaultDatabase>.Setup() MappingBaseClass<ITenant, DefaultDatabase>.ToString() MappingBaseClass<ITenant, DefaultDatabase>.AutoIDProperties MappingBaseClass<ITenant, DefaultDatabase>.DatabaseConfigType MappingBaseClass<ITenant, DefaultDatabase>.IDProperties MappingBaseClass<ITenant, DefaultDatabase>.ManyToManyProperties MappingBaseClass<ITenant, DefaultDatabase>.ManyToOneProperties MappingBaseClass<ITenant, DefaultDatabase>.MapProperties MappingBaseClass<ITenant, DefaultDatabase>.Merge MappingBaseClass<ITenant, DefaultDatabase>.ObjectType MappingBaseClass<ITenant, DefaultDatabase>.Order MappingBaseClass<ITenant, DefaultDatabase>.Prefix MappingBaseClass<ITenant, DefaultDatabase>.Queries MappingBaseClass<ITenant, DefaultDatabase>.ReferenceProperties MappingBaseClass<ITenant, DefaultDatabase>.SchemaName MappingBaseClass<ITenant, DefaultDatabase>.Suffix MappingBaseClass<ITenant, DefaultDatabase>.TableName object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Mithril.Security.Models.Mappings Assembly: Mithril.Security.dll Syntax public class ITenantMapping : MappingBaseClass<ITenant, DefaultDatabase>, IMapping<ITenant>, IMapping Constructors | Improve this Doc View Source ITenantMapping() Initializes a new instance of the ITenantMapping class. Declaration public ITenantMapping() See Also MappingBaseClass<TClassType, TDatabaseType> Implements IMapping<TClassType> IMapping Extension Methods ExpandoObjectExtensions.ConvertToExpando<TEntity>(TEntity?) GenericExtensions.When<TObject>(TObject, bool, Func<TObject, TObject>) See Also MappingBaseClass<TClassType, TDatabaseType>"
  },
  "api/Mithril.Security.Models.Mappings.IUserClaimMapping.html": {
    "href": "api/Mithril.Security.Models.Mappings.IUserClaimMapping.html",
    "title": "Class IUserClaimMapping | Mithril API Reference",
    "keywords": "Class IUserClaimMapping IUserClaim mapping Inheritance object MappingBaseClass<IUserClaim, DefaultDatabase> IUserClaimMapping Implements IMapping<IUserClaim> IMapping Inherited Members MappingBaseClass<IUserClaim, DefaultDatabase>.AddAutoKey() MappingBaseClass<IUserClaim, DefaultDatabase>.ContainsProperty(string) MappingBaseClass<IUserClaim, DefaultDatabase>.Copy(IMapping) MappingBaseClass<IUserClaim, DefaultDatabase>.CopyProperty(IIDProperty) MappingBaseClass<IUserClaim, DefaultDatabase>.CopyProperty(IProperty) MappingBaseClass<IUserClaim, DefaultDatabase>.CopyProperty(IMapProperty) MappingBaseClass<IUserClaim, DefaultDatabase>.CopyProperty(IManyToOneProperty) MappingBaseClass<IUserClaim, DefaultDatabase>.CopyProperty(IManyToManyProperty) MappingBaseClass<IUserClaim, DefaultDatabase>.Equals(object) MappingBaseClass<IUserClaim, DefaultDatabase>.GetColumnName(string) MappingBaseClass<IUserClaim, DefaultDatabase>.GetHashCode() MappingBaseClass<IUserClaim, DefaultDatabase>.ID<TDataType>(Expression<Func<IUserClaim, TDataType>>) MappingBaseClass<IUserClaim, DefaultDatabase>.ManyToMany<TDataType>(Expression<Func<IUserClaim, IList<TDataType>>>) MappingBaseClass<IUserClaim, DefaultDatabase>.ManyToOne<TDataType>(Expression<Func<IUserClaim, IList<TDataType>>>) MappingBaseClass<IUserClaim, DefaultDatabase>.ManyToOne<TDataType>(Expression<Func<IUserClaim, TDataType>>) MappingBaseClass<IUserClaim, DefaultDatabase>.Map<TDataType>(Expression<Func<IUserClaim, TDataType>>) MappingBaseClass<IUserClaim, DefaultDatabase>.Reduce(ILogger) MappingBaseClass<IUserClaim, DefaultDatabase>.Reduce(IMapping, ILogger) MappingBaseClass<IUserClaim, DefaultDatabase>.Reference<TDataType>(Expression<Func<IUserClaim, TDataType>>) MappingBaseClass<IUserClaim, DefaultDatabase>.SetQuery(QueryType, string, CommandType, params IParameter[]) MappingBaseClass<IUserClaim, DefaultDatabase>.Setup() MappingBaseClass<IUserClaim, DefaultDatabase>.ToString() MappingBaseClass<IUserClaim, DefaultDatabase>.AutoIDProperties MappingBaseClass<IUserClaim, DefaultDatabase>.DatabaseConfigType MappingBaseClass<IUserClaim, DefaultDatabase>.IDProperties MappingBaseClass<IUserClaim, DefaultDatabase>.ManyToManyProperties MappingBaseClass<IUserClaim, DefaultDatabase>.ManyToOneProperties MappingBaseClass<IUserClaim, DefaultDatabase>.MapProperties MappingBaseClass<IUserClaim, DefaultDatabase>.Merge MappingBaseClass<IUserClaim, DefaultDatabase>.ObjectType MappingBaseClass<IUserClaim, DefaultDatabase>.Order MappingBaseClass<IUserClaim, DefaultDatabase>.Prefix MappingBaseClass<IUserClaim, DefaultDatabase>.Queries MappingBaseClass<IUserClaim, DefaultDatabase>.ReferenceProperties MappingBaseClass<IUserClaim, DefaultDatabase>.SchemaName MappingBaseClass<IUserClaim, DefaultDatabase>.Suffix MappingBaseClass<IUserClaim, DefaultDatabase>.TableName object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Mithril.Security.Models.Mappings Assembly: Mithril.Security.dll Syntax public class IUserClaimMapping : MappingBaseClass<IUserClaim, DefaultDatabase>, IMapping<IUserClaim>, IMapping Constructors | Improve this Doc View Source IUserClaimMapping() Initializes a new instance of the IUserClaimMapping class. Declaration public IUserClaimMapping() See Also MappingBaseClass<TClassType, TDatabaseType> Implements IMapping<TClassType> IMapping Extension Methods ExpandoObjectExtensions.ConvertToExpando<TEntity>(TEntity?) GenericExtensions.When<TObject>(TObject, bool, Func<TObject, TObject>) See Also MappingBaseClass<TClassType, TDatabaseType>"
  },
  "api/Mithril.Security.Models.Mappings.IUserMapping.html": {
    "href": "api/Mithril.Security.Models.Mappings.IUserMapping.html",
    "title": "Class IUserMapping | Mithril API Reference",
    "keywords": "Class IUserMapping IUser mapping Inheritance object MappingBaseClass<IUser, DefaultDatabase> IUserMapping Implements IMapping<IUser> IMapping Inherited Members MappingBaseClass<IUser, DefaultDatabase>.AddAutoKey() MappingBaseClass<IUser, DefaultDatabase>.ContainsProperty(string) MappingBaseClass<IUser, DefaultDatabase>.Copy(IMapping) MappingBaseClass<IUser, DefaultDatabase>.CopyProperty(IIDProperty) MappingBaseClass<IUser, DefaultDatabase>.CopyProperty(IProperty) MappingBaseClass<IUser, DefaultDatabase>.CopyProperty(IMapProperty) MappingBaseClass<IUser, DefaultDatabase>.CopyProperty(IManyToOneProperty) MappingBaseClass<IUser, DefaultDatabase>.CopyProperty(IManyToManyProperty) MappingBaseClass<IUser, DefaultDatabase>.Equals(object) MappingBaseClass<IUser, DefaultDatabase>.GetColumnName(string) MappingBaseClass<IUser, DefaultDatabase>.GetHashCode() MappingBaseClass<IUser, DefaultDatabase>.ID<TDataType>(Expression<Func<IUser, TDataType>>) MappingBaseClass<IUser, DefaultDatabase>.ManyToMany<TDataType>(Expression<Func<IUser, IList<TDataType>>>) MappingBaseClass<IUser, DefaultDatabase>.ManyToOne<TDataType>(Expression<Func<IUser, IList<TDataType>>>) MappingBaseClass<IUser, DefaultDatabase>.ManyToOne<TDataType>(Expression<Func<IUser, TDataType>>) MappingBaseClass<IUser, DefaultDatabase>.Map<TDataType>(Expression<Func<IUser, TDataType>>) MappingBaseClass<IUser, DefaultDatabase>.Reduce(ILogger) MappingBaseClass<IUser, DefaultDatabase>.Reduce(IMapping, ILogger) MappingBaseClass<IUser, DefaultDatabase>.Reference<TDataType>(Expression<Func<IUser, TDataType>>) MappingBaseClass<IUser, DefaultDatabase>.SetQuery(QueryType, string, CommandType, params IParameter[]) MappingBaseClass<IUser, DefaultDatabase>.Setup() MappingBaseClass<IUser, DefaultDatabase>.ToString() MappingBaseClass<IUser, DefaultDatabase>.AutoIDProperties MappingBaseClass<IUser, DefaultDatabase>.DatabaseConfigType MappingBaseClass<IUser, DefaultDatabase>.IDProperties MappingBaseClass<IUser, DefaultDatabase>.ManyToManyProperties MappingBaseClass<IUser, DefaultDatabase>.ManyToOneProperties MappingBaseClass<IUser, DefaultDatabase>.MapProperties MappingBaseClass<IUser, DefaultDatabase>.Merge MappingBaseClass<IUser, DefaultDatabase>.ObjectType MappingBaseClass<IUser, DefaultDatabase>.Order MappingBaseClass<IUser, DefaultDatabase>.Prefix MappingBaseClass<IUser, DefaultDatabase>.Queries MappingBaseClass<IUser, DefaultDatabase>.ReferenceProperties MappingBaseClass<IUser, DefaultDatabase>.SchemaName MappingBaseClass<IUser, DefaultDatabase>.Suffix MappingBaseClass<IUser, DefaultDatabase>.TableName object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Mithril.Security.Models.Mappings Assembly: Mithril.Security.dll Syntax public class IUserMapping : MappingBaseClass<IUser, DefaultDatabase>, IMapping<IUser>, IMapping Constructors | Improve this Doc View Source IUserMapping() Initializes a new instance of the IUserMapping class. Declaration public IUserMapping() See Also MappingBaseClass<TClassType, TDatabaseType> Implements IMapping<TClassType> IMapping Extension Methods ExpandoObjectExtensions.ConvertToExpando<TEntity>(TEntity?) GenericExtensions.When<TObject>(TObject, bool, Func<TObject, TObject>) See Also MappingBaseClass<TClassType, TDatabaseType>"
  },
  "api/Mithril.Security.Models.Mappings.PermissionMapping.html": {
    "href": "api/Mithril.Security.Models.Mappings.PermissionMapping.html",
    "title": "Class PermissionMapping | Mithril API Reference",
    "keywords": "Class PermissionMapping Permission mapping Inheritance object MappingBaseClass<Permission, DefaultDatabase> PermissionMapping Implements IMapping<Permission> IMapping Inherited Members MappingBaseClass<Permission, DefaultDatabase>.AddAutoKey() MappingBaseClass<Permission, DefaultDatabase>.ContainsProperty(string) MappingBaseClass<Permission, DefaultDatabase>.Copy(IMapping) MappingBaseClass<Permission, DefaultDatabase>.CopyProperty(IIDProperty) MappingBaseClass<Permission, DefaultDatabase>.CopyProperty(IProperty) MappingBaseClass<Permission, DefaultDatabase>.CopyProperty(IMapProperty) MappingBaseClass<Permission, DefaultDatabase>.CopyProperty(IManyToOneProperty) MappingBaseClass<Permission, DefaultDatabase>.CopyProperty(IManyToManyProperty) MappingBaseClass<Permission, DefaultDatabase>.Equals(object) MappingBaseClass<Permission, DefaultDatabase>.GetColumnName(string) MappingBaseClass<Permission, DefaultDatabase>.GetHashCode() MappingBaseClass<Permission, DefaultDatabase>.ID<TDataType>(Expression<Func<Permission, TDataType>>) MappingBaseClass<Permission, DefaultDatabase>.ManyToMany<TDataType>(Expression<Func<Permission, IList<TDataType>>>) MappingBaseClass<Permission, DefaultDatabase>.ManyToOne<TDataType>(Expression<Func<Permission, IList<TDataType>>>) MappingBaseClass<Permission, DefaultDatabase>.ManyToOne<TDataType>(Expression<Func<Permission, TDataType>>) MappingBaseClass<Permission, DefaultDatabase>.Map<TDataType>(Expression<Func<Permission, TDataType>>) MappingBaseClass<Permission, DefaultDatabase>.Reduce(ILogger) MappingBaseClass<Permission, DefaultDatabase>.Reduce(IMapping, ILogger) MappingBaseClass<Permission, DefaultDatabase>.Reference<TDataType>(Expression<Func<Permission, TDataType>>) MappingBaseClass<Permission, DefaultDatabase>.SetQuery(QueryType, string, CommandType, params IParameter[]) MappingBaseClass<Permission, DefaultDatabase>.Setup() MappingBaseClass<Permission, DefaultDatabase>.ToString() MappingBaseClass<Permission, DefaultDatabase>.AutoIDProperties MappingBaseClass<Permission, DefaultDatabase>.DatabaseConfigType MappingBaseClass<Permission, DefaultDatabase>.IDProperties MappingBaseClass<Permission, DefaultDatabase>.ManyToManyProperties MappingBaseClass<Permission, DefaultDatabase>.ManyToOneProperties MappingBaseClass<Permission, DefaultDatabase>.MapProperties MappingBaseClass<Permission, DefaultDatabase>.Merge MappingBaseClass<Permission, DefaultDatabase>.ObjectType MappingBaseClass<Permission, DefaultDatabase>.Order MappingBaseClass<Permission, DefaultDatabase>.Prefix MappingBaseClass<Permission, DefaultDatabase>.Queries MappingBaseClass<Permission, DefaultDatabase>.ReferenceProperties MappingBaseClass<Permission, DefaultDatabase>.SchemaName MappingBaseClass<Permission, DefaultDatabase>.Suffix MappingBaseClass<Permission, DefaultDatabase>.TableName object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Mithril.Security.Models.Mappings Assembly: Mithril.Security.dll Syntax public class PermissionMapping : MappingBaseClass<Permission, DefaultDatabase>, IMapping<Permission>, IMapping Constructors | Improve this Doc View Source PermissionMapping() Initializes a new instance of the PermissionMapping class. Declaration public PermissionMapping() See Also MappingBaseClass<TClassType, TDatabaseType> Implements IMapping<TClassType> IMapping Extension Methods ExpandoObjectExtensions.ConvertToExpando<TEntity>(TEntity?) GenericExtensions.When<TObject>(TObject, bool, Func<TObject, TObject>) See Also MappingBaseClass<TClassType, TDatabaseType>"
  },
  "api/Mithril.Security.Models.Mappings.TenantMapping.html": {
    "href": "api/Mithril.Security.Models.Mappings.TenantMapping.html",
    "title": "Class TenantMapping | Mithril API Reference",
    "keywords": "Class TenantMapping Tenant mapping Inheritance object MappingBaseClass<Tenant, DefaultDatabase> TenantMapping Implements IMapping<Tenant> IMapping Inherited Members MappingBaseClass<Tenant, DefaultDatabase>.AddAutoKey() MappingBaseClass<Tenant, DefaultDatabase>.ContainsProperty(string) MappingBaseClass<Tenant, DefaultDatabase>.Copy(IMapping) MappingBaseClass<Tenant, DefaultDatabase>.CopyProperty(IIDProperty) MappingBaseClass<Tenant, DefaultDatabase>.CopyProperty(IProperty) MappingBaseClass<Tenant, DefaultDatabase>.CopyProperty(IMapProperty) MappingBaseClass<Tenant, DefaultDatabase>.CopyProperty(IManyToOneProperty) MappingBaseClass<Tenant, DefaultDatabase>.CopyProperty(IManyToManyProperty) MappingBaseClass<Tenant, DefaultDatabase>.Equals(object) MappingBaseClass<Tenant, DefaultDatabase>.GetColumnName(string) MappingBaseClass<Tenant, DefaultDatabase>.GetHashCode() MappingBaseClass<Tenant, DefaultDatabase>.ID<TDataType>(Expression<Func<Tenant, TDataType>>) MappingBaseClass<Tenant, DefaultDatabase>.ManyToMany<TDataType>(Expression<Func<Tenant, IList<TDataType>>>) MappingBaseClass<Tenant, DefaultDatabase>.ManyToOne<TDataType>(Expression<Func<Tenant, IList<TDataType>>>) MappingBaseClass<Tenant, DefaultDatabase>.ManyToOne<TDataType>(Expression<Func<Tenant, TDataType>>) MappingBaseClass<Tenant, DefaultDatabase>.Map<TDataType>(Expression<Func<Tenant, TDataType>>) MappingBaseClass<Tenant, DefaultDatabase>.Reduce(ILogger) MappingBaseClass<Tenant, DefaultDatabase>.Reduce(IMapping, ILogger) MappingBaseClass<Tenant, DefaultDatabase>.Reference<TDataType>(Expression<Func<Tenant, TDataType>>) MappingBaseClass<Tenant, DefaultDatabase>.SetQuery(QueryType, string, CommandType, params IParameter[]) MappingBaseClass<Tenant, DefaultDatabase>.Setup() MappingBaseClass<Tenant, DefaultDatabase>.ToString() MappingBaseClass<Tenant, DefaultDatabase>.AutoIDProperties MappingBaseClass<Tenant, DefaultDatabase>.DatabaseConfigType MappingBaseClass<Tenant, DefaultDatabase>.IDProperties MappingBaseClass<Tenant, DefaultDatabase>.ManyToManyProperties MappingBaseClass<Tenant, DefaultDatabase>.ManyToOneProperties MappingBaseClass<Tenant, DefaultDatabase>.MapProperties MappingBaseClass<Tenant, DefaultDatabase>.Merge MappingBaseClass<Tenant, DefaultDatabase>.ObjectType MappingBaseClass<Tenant, DefaultDatabase>.Order MappingBaseClass<Tenant, DefaultDatabase>.Prefix MappingBaseClass<Tenant, DefaultDatabase>.Queries MappingBaseClass<Tenant, DefaultDatabase>.ReferenceProperties MappingBaseClass<Tenant, DefaultDatabase>.SchemaName MappingBaseClass<Tenant, DefaultDatabase>.Suffix MappingBaseClass<Tenant, DefaultDatabase>.TableName object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Mithril.Security.Models.Mappings Assembly: Mithril.Security.dll Syntax public class TenantMapping : MappingBaseClass<Tenant, DefaultDatabase>, IMapping<Tenant>, IMapping Constructors | Improve this Doc View Source TenantMapping() Initializes a new instance of the TenantMapping class. Declaration public TenantMapping() See Also MappingBaseClass<TClassType, TDatabaseType> Implements IMapping<TClassType> IMapping Extension Methods ExpandoObjectExtensions.ConvertToExpando<TEntity>(TEntity?) GenericExtensions.When<TObject>(TObject, bool, Func<TObject, TObject>) See Also MappingBaseClass<TClassType, TDatabaseType>"
  },
  "api/Mithril.Security.Models.Mappings.UserClaimMapping.html": {
    "href": "api/Mithril.Security.Models.Mappings.UserClaimMapping.html",
    "title": "Class UserClaimMapping | Mithril API Reference",
    "keywords": "Class UserClaimMapping User claim mapping Inheritance object MappingBaseClass<UserClaim, DefaultDatabase> UserClaimMapping Implements IMapping<UserClaim> IMapping Inherited Members MappingBaseClass<UserClaim, DefaultDatabase>.AddAutoKey() MappingBaseClass<UserClaim, DefaultDatabase>.ContainsProperty(string) MappingBaseClass<UserClaim, DefaultDatabase>.Copy(IMapping) MappingBaseClass<UserClaim, DefaultDatabase>.CopyProperty(IIDProperty) MappingBaseClass<UserClaim, DefaultDatabase>.CopyProperty(IProperty) MappingBaseClass<UserClaim, DefaultDatabase>.CopyProperty(IMapProperty) MappingBaseClass<UserClaim, DefaultDatabase>.CopyProperty(IManyToOneProperty) MappingBaseClass<UserClaim, DefaultDatabase>.CopyProperty(IManyToManyProperty) MappingBaseClass<UserClaim, DefaultDatabase>.Equals(object) MappingBaseClass<UserClaim, DefaultDatabase>.GetColumnName(string) MappingBaseClass<UserClaim, DefaultDatabase>.GetHashCode() MappingBaseClass<UserClaim, DefaultDatabase>.ID<TDataType>(Expression<Func<UserClaim, TDataType>>) MappingBaseClass<UserClaim, DefaultDatabase>.ManyToMany<TDataType>(Expression<Func<UserClaim, IList<TDataType>>>) MappingBaseClass<UserClaim, DefaultDatabase>.ManyToOne<TDataType>(Expression<Func<UserClaim, IList<TDataType>>>) MappingBaseClass<UserClaim, DefaultDatabase>.ManyToOne<TDataType>(Expression<Func<UserClaim, TDataType>>) MappingBaseClass<UserClaim, DefaultDatabase>.Map<TDataType>(Expression<Func<UserClaim, TDataType>>) MappingBaseClass<UserClaim, DefaultDatabase>.Reduce(ILogger) MappingBaseClass<UserClaim, DefaultDatabase>.Reduce(IMapping, ILogger) MappingBaseClass<UserClaim, DefaultDatabase>.Reference<TDataType>(Expression<Func<UserClaim, TDataType>>) MappingBaseClass<UserClaim, DefaultDatabase>.SetQuery(QueryType, string, CommandType, params IParameter[]) MappingBaseClass<UserClaim, DefaultDatabase>.Setup() MappingBaseClass<UserClaim, DefaultDatabase>.ToString() MappingBaseClass<UserClaim, DefaultDatabase>.AutoIDProperties MappingBaseClass<UserClaim, DefaultDatabase>.DatabaseConfigType MappingBaseClass<UserClaim, DefaultDatabase>.IDProperties MappingBaseClass<UserClaim, DefaultDatabase>.ManyToManyProperties MappingBaseClass<UserClaim, DefaultDatabase>.ManyToOneProperties MappingBaseClass<UserClaim, DefaultDatabase>.MapProperties MappingBaseClass<UserClaim, DefaultDatabase>.Merge MappingBaseClass<UserClaim, DefaultDatabase>.ObjectType MappingBaseClass<UserClaim, DefaultDatabase>.Order MappingBaseClass<UserClaim, DefaultDatabase>.Prefix MappingBaseClass<UserClaim, DefaultDatabase>.Queries MappingBaseClass<UserClaim, DefaultDatabase>.ReferenceProperties MappingBaseClass<UserClaim, DefaultDatabase>.SchemaName MappingBaseClass<UserClaim, DefaultDatabase>.Suffix MappingBaseClass<UserClaim, DefaultDatabase>.TableName object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Mithril.Security.Models.Mappings Assembly: Mithril.Security.dll Syntax public class UserClaimMapping : MappingBaseClass<UserClaim, DefaultDatabase>, IMapping<UserClaim>, IMapping Implements IMapping<TClassType> IMapping Extension Methods ExpandoObjectExtensions.ConvertToExpando<TEntity>(TEntity?) GenericExtensions.When<TObject>(TObject, bool, Func<TObject, TObject>) See Also MappingBaseClass<TClassType, TDatabaseType>"
  },
  "api/Mithril.Security.Models.Mappings.UserMapping.html": {
    "href": "api/Mithril.Security.Models.Mappings.UserMapping.html",
    "title": "Class UserMapping | Mithril API Reference",
    "keywords": "Class UserMapping User mapping Inheritance object MappingBaseClass<User, DefaultDatabase> UserMapping Implements IMapping<User> IMapping Inherited Members MappingBaseClass<User, DefaultDatabase>.AddAutoKey() MappingBaseClass<User, DefaultDatabase>.ContainsProperty(string) MappingBaseClass<User, DefaultDatabase>.Copy(IMapping) MappingBaseClass<User, DefaultDatabase>.CopyProperty(IIDProperty) MappingBaseClass<User, DefaultDatabase>.CopyProperty(IProperty) MappingBaseClass<User, DefaultDatabase>.CopyProperty(IMapProperty) MappingBaseClass<User, DefaultDatabase>.CopyProperty(IManyToOneProperty) MappingBaseClass<User, DefaultDatabase>.CopyProperty(IManyToManyProperty) MappingBaseClass<User, DefaultDatabase>.Equals(object) MappingBaseClass<User, DefaultDatabase>.GetColumnName(string) MappingBaseClass<User, DefaultDatabase>.GetHashCode() MappingBaseClass<User, DefaultDatabase>.ID<TDataType>(Expression<Func<User, TDataType>>) MappingBaseClass<User, DefaultDatabase>.ManyToMany<TDataType>(Expression<Func<User, IList<TDataType>>>) MappingBaseClass<User, DefaultDatabase>.ManyToOne<TDataType>(Expression<Func<User, IList<TDataType>>>) MappingBaseClass<User, DefaultDatabase>.ManyToOne<TDataType>(Expression<Func<User, TDataType>>) MappingBaseClass<User, DefaultDatabase>.Map<TDataType>(Expression<Func<User, TDataType>>) MappingBaseClass<User, DefaultDatabase>.Reduce(ILogger) MappingBaseClass<User, DefaultDatabase>.Reduce(IMapping, ILogger) MappingBaseClass<User, DefaultDatabase>.Reference<TDataType>(Expression<Func<User, TDataType>>) MappingBaseClass<User, DefaultDatabase>.SetQuery(QueryType, string, CommandType, params IParameter[]) MappingBaseClass<User, DefaultDatabase>.Setup() MappingBaseClass<User, DefaultDatabase>.ToString() MappingBaseClass<User, DefaultDatabase>.AutoIDProperties MappingBaseClass<User, DefaultDatabase>.DatabaseConfigType MappingBaseClass<User, DefaultDatabase>.IDProperties MappingBaseClass<User, DefaultDatabase>.ManyToManyProperties MappingBaseClass<User, DefaultDatabase>.ManyToOneProperties MappingBaseClass<User, DefaultDatabase>.MapProperties MappingBaseClass<User, DefaultDatabase>.Merge MappingBaseClass<User, DefaultDatabase>.ObjectType MappingBaseClass<User, DefaultDatabase>.Order MappingBaseClass<User, DefaultDatabase>.Prefix MappingBaseClass<User, DefaultDatabase>.Queries MappingBaseClass<User, DefaultDatabase>.ReferenceProperties MappingBaseClass<User, DefaultDatabase>.SchemaName MappingBaseClass<User, DefaultDatabase>.Suffix MappingBaseClass<User, DefaultDatabase>.TableName object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Mithril.Security.Models.Mappings Assembly: Mithril.Security.dll Syntax public class UserMapping : MappingBaseClass<User, DefaultDatabase>, IMapping<User>, IMapping Constructors | Improve this Doc View Source UserMapping() Initializes a new instance of the UserMapping class. Declaration public UserMapping() See Also MappingBaseClass<TClassType, TDatabaseType> Implements IMapping<TClassType> IMapping Extension Methods ExpandoObjectExtensions.ConvertToExpando<TEntity>(TEntity?) GenericExtensions.When<TObject>(TObject, bool, Func<TObject, TObject>) See Also MappingBaseClass<TClassType, TDatabaseType>"
  },
  "api/Mithril.Security.Models.Mappings.html": {
    "href": "api/Mithril.Security.Models.Mappings.html",
    "title": "Namespace Mithril.Security.Models.Mappings | Mithril API Reference",
    "keywords": "Namespace Mithril.Security.Models.Mappings Classes IPermissionMapping Permission mapping ITenantMapping ITenant mapping IUserClaimMapping IUserClaim mapping IUserMapping IUser mapping PermissionMapping Permission mapping TenantMapping Tenant mapping UserClaimMapping User claim mapping UserMapping User mapping"
  },
  "api/Mithril.Security.Models.Permission.html": {
    "href": "api/Mithril.Security.Models.Permission.html",
    "title": "Class Permission | Mithril API Reference",
    "keywords": "Class Permission Permission data holder Inheritance object ModelBase<Permission> Permission Implements IModel<Permission> IEquatable<IModel<Permission>> IComparable IComparable<Permission> IEquatable<ModelBase<Permission>> IPermission IModel IEquatable<IModel> IEquatable<IPermission> IEquatable<Permission> Inherited Members ModelBase<Permission>.Active ModelBase<Permission>.Creator ModelBase<Permission>.DateCreated ModelBase<Permission>.DateModified ModelBase<Permission>.ID ModelBase<Permission>.Modifier ModelBase<Permission>.TenantID ModelBase<Permission>.All(IDataService) ModelBase<Permission>.AllActive(IDataService) ModelBase<Permission>.AllInactive(IDataService) ModelBase<Permission>.Load(long, IDataService) ModelBase<Permission>.Query(IDataService) ModelBase<Permission>.CanBeModifiedBy(ClaimsPrincipal) ModelBase<Permission>.CanBeViewedBy(ClaimsPrincipal) ModelBase<Permission>.CompareTo(object) ModelBase<Permission>.DeleteAsync(IDataService, ClaimsPrincipal, bool) ModelBase<Permission>.Equals(IModel) ModelBase<Permission>.Equals(IModel<Permission>) ModelBase<Permission>.Equals(ModelBase<Permission>) ModelBase<Permission>.SaveAsync(IDataService, ClaimsPrincipal) ModelBase<Permission>.SetupObject(IDataService, ClaimsPrincipal) ModelBase<Permission>.SetupObject(IDataService, IUser) ModelBase<Permission>.SetupObjectAndReturn(IDataService, ClaimsPrincipal) object.Equals(object, object) object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Namespace: Mithril.Security.Models Assembly: Mithril.Security.dll Syntax public class Permission : ModelBase<Permission>, IModel<Permission>, IEquatable<IModel<Permission>>, IComparable, IComparable<Permission>, IEquatable<ModelBase<Permission>>, IPermission, IModel, IEquatable<IModel>, IEquatable<IPermission>, IEquatable<Permission> Constructors | Improve this Doc View Source Permission() Initializes a new instance of the Permission class. Declaration public Permission() See Also IPermission IEquatable<T> ModelBase<TClass> | Improve this Doc View Source Permission(string, PermissionType, params IUserClaim[]) Initializes a new instance of the Permission class. Declaration public Permission(string displayName, PermissionType operand, params IUserClaim[] claims) Parameters Type Name Description string displayName The display name. PermissionType operand The operand. IUserClaim[] claims The claims. Exceptions Type Condition ArgumentNullException claims ArgumentException displayName See Also IPermission IEquatable<T> ModelBase<TClass> Properties | Improve this Doc View Source Claims Gets or sets the claims. Declaration public virtual IList<IUserClaim> Claims { get; set; } Property Value Type Description IList<IUserClaim> The claims. See Also IPermission IEquatable<T> ModelBase<TClass> | Improve this Doc View Source DisplayName Gets or sets the display name. Declaration public string? DisplayName { get; set; } Property Value Type Description string The display name. See Also IPermission IEquatable<T> ModelBase<TClass> | Improve this Doc View Source Operand Gets or sets the operand. Declaration public PermissionType Operand { get; set; } Property Value Type Description PermissionType The operand. See Also IPermission IEquatable<T> ModelBase<TClass> Methods | Improve this Doc View Source AddClaim(IUserClaim?) Adds the claim. Declaration public IPermission AddClaim(IUserClaim? claim) Parameters Type Name Description IUserClaim claim The claim. Returns Type Description IPermission This. See Also IPermission IEquatable<T> ModelBase<TClass> | Improve this Doc View Source CompareTo(Permission?) Compares the object to another object Declaration public override int CompareTo(Permission? other) Parameters Type Name Description Permission other Object to compare to Returns Type Description int 0 if they are equal, -1 if this is smaller, 1 if it is larger Overrides ModelBase<Permission>.CompareTo(Permission) See Also IPermission IEquatable<T> ModelBase<TClass> | Improve this Doc View Source Equals(IPermission?) Indicates whether the current object is equal to another object of the same type. Declaration public bool Equals(IPermission? other) Parameters Type Name Description IPermission other An object to compare with this object. Returns Type Description bool true if the current object is equal to the other parameter; otherwise, false. See Also IPermission IEquatable<T> ModelBase<TClass> | Improve this Doc View Source Equals(Permission?) Indicates whether the current object is equal to another object of the same type. Declaration public bool Equals(Permission? other) Parameters Type Name Description Permission other An object to compare with this object. Returns Type Description bool true if the current object is equal to the other parameter; otherwise, false. See Also IPermission IEquatable<T> ModelBase<TClass> | Improve this Doc View Source Equals(object?) Determines whether the specified object, is equal to this instance. Declaration public override bool Equals(object? obj) Parameters Type Name Description object obj The object to compare with this instance. Returns Type Description bool true if the specified object is equal to this instance; otherwise, false. Overrides ModelBase<Permission>.Equals(object) See Also IPermission IEquatable<T> ModelBase<TClass> | Improve this Doc View Source GetHashCode() Returns a hash code for this instance. Declaration public override int GetHashCode() Returns Type Description int A hash code for this instance, suitable for use in hashing algorithms and data structures like a hash table. Overrides Mithril.Data.Abstractions.BaseClasses.ModelBase<Mithril.Security.Models.Permission>.GetHashCode() See Also IPermission IEquatable<T> ModelBase<TClass> | Improve this Doc View Source HasPermission(IUser?) Determines whether the specified user has permission. Declaration public bool HasPermission(IUser? user) Parameters Type Name Description IUser user The user. Returns Type Description bool true if the specified user has permission; otherwise, false. See Also IPermission IEquatable<T> ModelBase<TClass> | Improve this Doc View Source HasPermission(ClaimsPrincipal?) Determines whether the specified user has permission. Declaration public bool HasPermission(ClaimsPrincipal? user) Parameters Type Name Description ClaimsPrincipal user The user. Returns Type Description bool true if the specified user has permission; otherwise, false. See Also IPermission IEquatable<T> ModelBase<TClass> | Improve this Doc View Source Load(string, IDataService?) Loads a specific permission Declaration public static Permission? Load(string displayName, IDataService? dataService) Parameters Type Name Description string displayName The display name. IDataService dataService The data service. Returns Type Description Permission Permission specified See Also IPermission IEquatable<T> ModelBase<TClass> | Improve this Doc View Source LoadOrCreateAsync(string, PermissionType, IUserClaim[], IDataService?, ClaimsPrincipal?) Loads a specific claim or creates it. Declaration public static Task<IPermission> LoadOrCreateAsync(string displayName, PermissionType operand, IUserClaim[] claims, IDataService? context, ClaimsPrincipal? user) Parameters Type Name Description string displayName The display name. PermissionType operand The operand. IUserClaim[] claims The claims. IDataService context The context. ClaimsPrincipal user The user. Returns Type Description Task<IPermission> The user claim specified. See Also IPermission IEquatable<T> ModelBase<TClass> | Improve this Doc View Source RemoveClaim(IUserClaim) Removes the claim. Declaration public IPermission RemoveClaim(IUserClaim claim) Parameters Type Name Description IUserClaim claim The claim. Returns Type Description IPermission This. See Also IPermission IEquatable<T> ModelBase<TClass> | Improve this Doc View Source ReplaceClaim(IUserClaim, IUserClaim) Replaces the claim. Declaration public IPermission ReplaceClaim(IUserClaim originalClaim, IUserClaim newClaim) Parameters Type Name Description IUserClaim originalClaim The original claim. IUserClaim newClaim The new claim. Returns Type Description IPermission This See Also IPermission IEquatable<T> ModelBase<TClass> | Improve this Doc View Source ToString() Returns a string that represents this instance. Declaration public override string ToString() Returns Type Description string A string that represents this instance. Overrides object.ToString() See Also IPermission IEquatable<T> ModelBase<TClass> Operators | Improve this Doc View Source operator ==(Permission?, Permission?) Implements the operator ==. Declaration public static bool operator ==(Permission? first, Permission? second) Parameters Type Name Description Permission first The first. Permission second The second. Returns Type Description bool The result of the operator. See Also IPermission IEquatable<T> ModelBase<TClass> | Improve this Doc View Source operator >(Permission?, Permission?) Implements the operator >. Declaration public static bool operator >(Permission? left, Permission? right) Parameters Type Name Description Permission left The left. Permission right The right. Returns Type Description bool The result of the operator. See Also IPermission IEquatable<T> ModelBase<TClass> | Improve this Doc View Source operator >=(Permission?, Permission?) Implements the operator >=. Declaration public static bool operator >=(Permission? left, Permission? right) Parameters Type Name Description Permission left The left. Permission right The right. Returns Type Description bool The result of the operator. See Also IPermission IEquatable<T> ModelBase<TClass> | Improve this Doc View Source operator !=(Permission?, Permission?) Implements the operator !=. Declaration public static bool operator !=(Permission? left, Permission? right) Parameters Type Name Description Permission left The left. Permission right The right. Returns Type Description bool The result of the operator. See Also IPermission IEquatable<T> ModelBase<TClass> | Improve this Doc View Source operator <(Permission?, Permission?) Implements the operator <. Declaration public static bool operator <(Permission? left, Permission? right) Parameters Type Name Description Permission left The left. Permission right The right. Returns Type Description bool The result of the operator. See Also IPermission IEquatable<T> ModelBase<TClass> | Improve this Doc View Source operator <=(Permission?, Permission?) Implements the operator <=. Declaration public static bool operator <=(Permission? left, Permission? right) Parameters Type Name Description Permission left The left. Permission right The right. Returns Type Description bool The result of the operator. See Also IPermission IEquatable<T> ModelBase<TClass> Implements IModel<TClass> IEquatable<T> IComparable IComparable<T> IEquatable<T> IPermission IModel IEquatable<T> IEquatable<T> IEquatable<T> Extension Methods ExpandoObjectExtensions.ConvertToExpando<TEntity>(TEntity?) GenericExtensions.When<TObject>(TObject, bool, Func<TObject, TObject>) See Also IPermission IEquatable<T> ModelBase<TClass>"
  },
  "api/Mithril.Security.Models.Tenant.html": {
    "href": "api/Mithril.Security.Models.Tenant.html",
    "title": "Class Tenant | Mithril API Reference",
    "keywords": "Class Tenant Tenant model class Inheritance object ModelBase<Tenant> Tenant Implements IModel<Tenant> IEquatable<IModel<Tenant>> IComparable IComparable<Tenant> IEquatable<ModelBase<Tenant>> ITenant IModel IEquatable<IModel> IEquatable<ITenant> IEquatable<Tenant> Inherited Members ModelBase<Tenant>.Active ModelBase<Tenant>.Creator ModelBase<Tenant>.DateCreated ModelBase<Tenant>.DateModified ModelBase<Tenant>.ID ModelBase<Tenant>.Modifier ModelBase<Tenant>.TenantID ModelBase<Tenant>.All(IDataService) ModelBase<Tenant>.AllActive(IDataService) ModelBase<Tenant>.AllInactive(IDataService) ModelBase<Tenant>.Load(long, IDataService) ModelBase<Tenant>.Query(IDataService) ModelBase<Tenant>.CanBeModifiedBy(ClaimsPrincipal) ModelBase<Tenant>.CanBeViewedBy(ClaimsPrincipal) ModelBase<Tenant>.CompareTo(object) ModelBase<Tenant>.DeleteAsync(IDataService, ClaimsPrincipal, bool) ModelBase<Tenant>.Equals(IModel) ModelBase<Tenant>.Equals(IModel<Tenant>) ModelBase<Tenant>.Equals(ModelBase<Tenant>) ModelBase<Tenant>.SaveAsync(IDataService, ClaimsPrincipal) ModelBase<Tenant>.SetupObject(IDataService, ClaimsPrincipal) ModelBase<Tenant>.SetupObject(IDataService, IUser) ModelBase<Tenant>.SetupObjectAndReturn(IDataService, ClaimsPrincipal) object.Equals(object, object) object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Namespace: Mithril.Security.Models Assembly: Mithril.Security.dll Syntax public class Tenant : ModelBase<Tenant>, IModel<Tenant>, IEquatable<IModel<Tenant>>, IComparable, IComparable<Tenant>, IEquatable<ModelBase<Tenant>>, ITenant, IModel, IEquatable<IModel>, IEquatable<ITenant>, IEquatable<Tenant> Constructors | Improve this Doc View Source Tenant() Initializes a new instance of the Tenant class. Declaration public Tenant() See Also ITenant ModelBase<TClass> IEquatable<T> | Improve this Doc View Source Tenant(string) Initializes a new instance of the Tenant class. Declaration public Tenant(string displayName) Parameters Type Name Description string displayName The display name. Exceptions Type Condition ArgumentException displayName See Also ITenant ModelBase<TClass> IEquatable<T> Properties | Improve this Doc View Source DisplayName Gets or sets the display name. Declaration [Required] [MaxLength(100)] [MinLength(1)] public string? DisplayName { get; set; } Property Value Type Description string The display name. See Also ITenant ModelBase<TClass> IEquatable<T> | Improve this Doc View Source Users Gets or sets the users. Declaration public virtual IList<IUser> Users { get; set; } Property Value Type Description IList<IUser> The users. See Also ITenant ModelBase<TClass> IEquatable<T> Methods | Improve this Doc View Source CompareTo(Tenant?) Compares the object to another object Declaration public override int CompareTo(Tenant? other) Parameters Type Name Description Tenant other Object to compare to Returns Type Description int 0 if they are equal, -1 if this is smaller, 1 if it is larger Overrides ModelBase<Tenant>.CompareTo(Tenant) See Also ITenant ModelBase<TClass> IEquatable<T> | Improve this Doc View Source Equals(ITenant?) Indicates whether the current object is equal to another object of the same type. Declaration public bool Equals(ITenant? other) Parameters Type Name Description ITenant other An object to compare with this object. Returns Type Description bool true if the current object is equal to the other parameter; otherwise, false. See Also ITenant ModelBase<TClass> IEquatable<T> | Improve this Doc View Source Equals(Tenant?) Indicates whether the current object is equal to another object of the same type. Declaration public bool Equals(Tenant? other) Parameters Type Name Description Tenant other An object to compare with this object. Returns Type Description bool true if the current object is equal to the other parameter; otherwise, false. See Also ITenant ModelBase<TClass> IEquatable<T> | Improve this Doc View Source Equals(object?) Determines whether the specified object, is equal to this instance. Declaration public override bool Equals(object? obj) Parameters Type Name Description object obj The object to compare with this instance. Returns Type Description bool true if the specified object is equal to this instance; otherwise, false. Overrides ModelBase<Tenant>.Equals(object) See Also ITenant ModelBase<TClass> IEquatable<T> | Improve this Doc View Source GetHashCode() Returns a hash code for this instance. Declaration public override int GetHashCode() Returns Type Description int A hash code for this instance, suitable for use in hashing algorithms and data structures like a hash table. Overrides Mithril.Data.Abstractions.BaseClasses.ModelBase<Mithril.Security.Models.Tenant>.GetHashCode() See Also ITenant ModelBase<TClass> IEquatable<T> | Improve this Doc View Source Load(string, IDataService?) Loads the specified tenant by display name. Declaration public static Tenant? Load(string displayName, IDataService? dataService) Parameters Type Name Description string displayName The display name. IDataService dataService The data service. Returns Type Description Tenant The tenant specified. See Also ITenant ModelBase<TClass> IEquatable<T> | Improve this Doc View Source LoadOrCreateAsync(string, IDataService?, ClaimsPrincipal?) Loads or creates the Tenant if necessary. Declaration public static Task<Tenant> LoadOrCreateAsync(string displayName, IDataService? context, ClaimsPrincipal? user) Parameters Type Name Description string displayName The display name. IDataService context The context. ClaimsPrincipal user The user. Returns Type Description Task<Tenant> The Tenant specified. See Also ITenant ModelBase<TClass> IEquatable<T> | Improve this Doc View Source LoadOrCreateUserAsync(string, string, string, IDataService?, ClaimsPrincipal?, params IUserClaim[]) Loads the user or creates them asynchronously. Declaration public Task<User> LoadOrCreateUserAsync(string userName, string firstName, string lastName, IDataService? dataService, ClaimsPrincipal? user, params IUserClaim[] claims) Parameters Type Name Description string userName Name of the user. string firstName The first name. string lastName The last name. IDataService dataService The data service. ClaimsPrincipal user The user. IUserClaim[] claims The claims. Returns Type Description Task<User> The user specified. See Also ITenant ModelBase<TClass> IEquatable<T> | Improve this Doc View Source ToString() Returns a string that represents this instance. Declaration public override string ToString() Returns Type Description string A string that represents this instance. Overrides object.ToString() See Also ITenant ModelBase<TClass> IEquatable<T> Operators | Improve this Doc View Source operator ==(Tenant?, Tenant?) Implements the operator ==. Declaration public static bool operator ==(Tenant? first, Tenant? second) Parameters Type Name Description Tenant first The first. Tenant second The second. Returns Type Description bool The result of the operator. See Also ITenant ModelBase<TClass> IEquatable<T> | Improve this Doc View Source operator >(Tenant?, Tenant?) Implements the operator >. Declaration public static bool operator >(Tenant? left, Tenant? right) Parameters Type Name Description Tenant left The left. Tenant right The right. Returns Type Description bool The result of the operator. See Also ITenant ModelBase<TClass> IEquatable<T> | Improve this Doc View Source operator >=(Tenant?, Tenant?) Implements the operator >=. Declaration public static bool operator >=(Tenant? left, Tenant? right) Parameters Type Name Description Tenant left The left. Tenant right The right. Returns Type Description bool The result of the operator. See Also ITenant ModelBase<TClass> IEquatable<T> | Improve this Doc View Source operator !=(Tenant?, Tenant?) Implements the operator !=. Declaration public static bool operator !=(Tenant? left, Tenant? right) Parameters Type Name Description Tenant left The left. Tenant right The right. Returns Type Description bool The result of the operator. See Also ITenant ModelBase<TClass> IEquatable<T> | Improve this Doc View Source operator <(Tenant?, Tenant?) Implements the operator <. Declaration public static bool operator <(Tenant? left, Tenant? right) Parameters Type Name Description Tenant left The left. Tenant right The right. Returns Type Description bool The result of the operator. See Also ITenant ModelBase<TClass> IEquatable<T> | Improve this Doc View Source operator <=(Tenant?, Tenant?) Implements the operator <=. Declaration public static bool operator <=(Tenant? left, Tenant? right) Parameters Type Name Description Tenant left The left. Tenant right The right. Returns Type Description bool The result of the operator. See Also ITenant ModelBase<TClass> IEquatable<T> Implements IModel<TClass> IEquatable<T> IComparable IComparable<T> IEquatable<T> ITenant IModel IEquatable<T> IEquatable<T> IEquatable<T> Extension Methods ExpandoObjectExtensions.ConvertToExpando<TEntity>(TEntity?) GenericExtensions.When<TObject>(TObject, bool, Func<TObject, TObject>) See Also ITenant ModelBase<TClass> IEquatable<T>"
  },
  "api/Mithril.Security.Models.User.html": {
    "href": "api/Mithril.Security.Models.User.html",
    "title": "Class User | Mithril API Reference",
    "keywords": "Class User User model Inheritance object ModelBase<User> User Implements IModel<User> IEquatable<IModel<User>> IComparable IComparable<User> IEquatable<ModelBase<User>> IUser IModel IEquatable<IModel> IEquatable<IUser> IEquatable<User> Inherited Members ModelBase<User>.Active ModelBase<User>.Creator ModelBase<User>.DateCreated ModelBase<User>.DateModified ModelBase<User>.ID ModelBase<User>.Modifier ModelBase<User>.TenantID ModelBase<User>.All(IDataService) ModelBase<User>.AllActive(IDataService) ModelBase<User>.AllInactive(IDataService) ModelBase<User>.Load(long, IDataService) ModelBase<User>.Query(IDataService) ModelBase<User>.CanBeModifiedBy(ClaimsPrincipal) ModelBase<User>.CanBeViewedBy(ClaimsPrincipal) ModelBase<User>.CompareTo(object) ModelBase<User>.DeleteAsync(IDataService, ClaimsPrincipal, bool) ModelBase<User>.Equals(IModel) ModelBase<User>.Equals(IModel<User>) ModelBase<User>.Equals(ModelBase<User>) ModelBase<User>.SaveAsync(IDataService, ClaimsPrincipal) ModelBase<User>.SetupObject(IDataService, ClaimsPrincipal) ModelBase<User>.SetupObject(IDataService, IUser) ModelBase<User>.SetupObjectAndReturn(IDataService, ClaimsPrincipal) object.Equals(object, object) object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Namespace: Mithril.Security.Models Assembly: Mithril.Security.dll Syntax public class User : ModelBase<User>, IModel<User>, IEquatable<IModel<User>>, IComparable, IComparable<User>, IEquatable<ModelBase<User>>, IUser, IModel, IEquatable<IModel>, IEquatable<IUser>, IEquatable<User> Constructors | Improve this Doc View Source User() Initializes a new instance of the User class. Declaration public User() See Also ModelBase<TClass> IUser | Improve this Doc View Source User(string, string, string, ITenant?) Initializes a new instance of the User class. Declaration public User(string userName, string firstName, string lastName, ITenant? tenant) Parameters Type Name Description string userName Name of the user. string firstName The first name. string lastName The last name. ITenant tenant The tenant. Exceptions Type Condition ArgumentException userName or firstName or lastName ArgumentNullException firstName or lastName See Also ModelBase<TClass> IUser Properties | Improve this Doc View Source Claims Gets or sets the claims. Declaration public virtual IList<IUserClaim> Claims { get; set; } Property Value Type Description IList<IUserClaim> The claims. See Also ModelBase<TClass> IUser | Improve this Doc View Source ContactInformation Gets or sets the contact information. Declaration public virtual IList<ContactInfo> ContactInformation { get; set; } Property Value Type Description IList<ContactInfo> The contact information. See Also ModelBase<TClass> IUser | Improve this Doc View Source FirstName Gets or sets the first name. Declaration [Required] [MaxLength(100)] [MinLength(1)] public string? FirstName { get; set; } Property Value Type Description string The first name. See Also ModelBase<TClass> IUser | Improve this Doc View Source FullName Gets the full name. Declaration public string FullName { get; } Property Value Type Description string The full name. See Also ModelBase<TClass> IUser | Improve this Doc View Source Initials Gets the initials. Declaration public string Initials { get; } Property Value Type Description string The initials. See Also ModelBase<TClass> IUser | Improve this Doc View Source LastName Gets or sets the last name. Declaration [Required] [MaxLength(100)] [MinLength(1)] public string? LastName { get; set; } Property Value Type Description string The last name. See Also ModelBase<TClass> IUser | Improve this Doc View Source MiddleName Gets or sets the name of the middle. Declaration [MaxLength(100)] public string? MiddleName { get; set; } Property Value Type Description string The name of the middle. See Also ModelBase<TClass> IUser | Improve this Doc View Source NickName Gets or sets the nick name. Declaration [MaxLength(100)] public string? NickName { get; set; } Property Value Type Description string The nick name. See Also ModelBase<TClass> IUser | Improve this Doc View Source Prefix Gets or sets the prefix. Declaration [MaxLength(30)] public string? Prefix { get; set; } Property Value Type Description string The prefix. See Also ModelBase<TClass> IUser | Improve this Doc View Source ShortName Gets the short name. Declaration public string ShortName { get; } Property Value Type Description string The short name. See Also ModelBase<TClass> IUser | Improve this Doc View Source Suffix Gets or sets the suffix. Declaration [MaxLength(30)] public string? Suffix { get; set; } Property Value Type Description string The suffix. See Also ModelBase<TClass> IUser | Improve this Doc View Source Title Gets or sets the title. Declaration [MaxLength(100)] public string? Title { get; set; } Property Value Type Description string The title. See Also ModelBase<TClass> IUser | Improve this Doc View Source UserName Gets or sets the name of the user. Declaration public string? UserName { get; set; } Property Value Type Description string The name of the user. See Also ModelBase<TClass> IUser Methods | Improve this Doc View Source AddClaim(IUserClaim) Adds the claim. Declaration public User AddClaim(IUserClaim claim) Parameters Type Name Description IUserClaim claim The claim. Returns Type Description User This. See Also ModelBase<TClass> IUser | Improve this Doc View Source CanAccess(string, string?) Determines whether this instance can access the specified type. Declaration public bool CanAccess(string type, string? name) Parameters Type Name Description string type The type. string name The value. Returns Type Description bool true if this instance can access the specified type; otherwise, false. See Also ModelBase<TClass> IUser | Improve this Doc View Source CompareTo(User?) Compares the object to another object Declaration public override int CompareTo(User? other) Parameters Type Name Description User other Object to compare to Returns Type Description int 0 if they are equal, -1 if this is smaller, 1 if it is larger Overrides ModelBase<User>.CompareTo(User) See Also ModelBase<TClass> IUser | Improve this Doc View Source CreateOrUpdateContactInfoAsync(ContactInfoType, IDataService?, ClaimsPrincipal?, params string[]) Creates the contact info object or updates it asynchronously. Declaration public Task CreateOrUpdateContactInfoAsync(ContactInfoType type, IDataService? dataService, ClaimsPrincipal? user, params string[] value) Parameters Type Name Description ContactInfoType type The display name. IDataService dataService The data service. ClaimsPrincipal user The user. string[] value The value. Returns Type Description Task The async task See Also ModelBase<TClass> IUser | Improve this Doc View Source Equals(IUser?) Indicates whether the current object is equal to another object of the same type. Declaration public bool Equals(IUser? other) Parameters Type Name Description IUser other An object to compare with this object. Returns Type Description bool true if the current object is equal to the other parameter; otherwise, false. See Also ModelBase<TClass> IUser | Improve this Doc View Source Equals(User?) Indicates whether the current object is equal to another object of the same type. Declaration public bool Equals(User? other) Parameters Type Name Description User other An object to compare with this object. Returns Type Description bool true if the current object is equal to the other parameter; otherwise, false. See Also ModelBase<TClass> IUser | Improve this Doc View Source Equals(object?) Determines whether the specified object, is equal to this instance. Declaration public override bool Equals(object? obj) Parameters Type Name Description object obj The object to compare with this instance. Returns Type Description bool true if the specified object is equal to this instance; otherwise, false. Overrides ModelBase<User>.Equals(object) See Also ModelBase<TClass> IUser | Improve this Doc View Source Equals(ClaimsPrincipal?) Determines if this user object is equal to the user specified. Declaration public bool Equals(ClaimsPrincipal? user) Parameters Type Name Description ClaimsPrincipal user The user. Returns Type Description bool True if they are the same, false otherwise. See Also ModelBase<TClass> IUser | Improve this Doc View Source GetClaims(UserClaimTypes) Gets the claims of the type specified. Declaration public IEnumerable<IUserClaim> GetClaims(UserClaimTypes type) Parameters Type Name Description UserClaimTypes type The type. Returns Type Description IEnumerable<IUserClaim> The list of user claims specified. See Also ModelBase<TClass> IUser | Improve this Doc View Source GetContactInfo(params ContactInfoType[]) Gets the contact information requested. Declaration public IEnumerable<ContactInfo> GetContactInfo(params ContactInfoType[] types) Parameters Type Name Description ContactInfoType[] types The display name. Returns Type Description IEnumerable<ContactInfo> The contact info specified. See Also ModelBase<TClass> IUser | Improve this Doc View Source GetHashCode() Returns a hash code for this instance. Declaration public override int GetHashCode() Returns Type Description int A hash code for this instance, suitable for use in hashing algorithms and data structures like a hash table. Overrides Mithril.Data.Abstractions.BaseClasses.ModelBase<Mithril.Security.Models.User>.GetHashCode() See Also ModelBase<TClass> IUser | Improve this Doc View Source Load(string, IDataService?) Loads the specified user name. Declaration public static User? Load(string userName, IDataService? dataService) Parameters Type Name Description string userName Name of the user. IDataService dataService The data service. Returns Type Description User The user specified. See Also ModelBase<TClass> IUser | Improve this Doc View Source LoadCurrentUser(IDataService?) Loads the current user. Declaration public static User? LoadCurrentUser(IDataService? dataService) Parameters Type Name Description IDataService dataService The data service. Returns Type Description User The current user. See Also ModelBase<TClass> IUser | Improve this Doc View Source ToString() Returns a string that represents this instance. Declaration public override string ToString() Returns Type Description string A string that represents this instance. Overrides object.ToString() See Also ModelBase<TClass> IUser Operators | Improve this Doc View Source operator ==(User?, User?) Implements the operator ==. Declaration public static bool operator ==(User? first, User? second) Parameters Type Name Description User first The first. User second The second. Returns Type Description bool The result of the operator. See Also ModelBase<TClass> IUser | Improve this Doc View Source operator >(User?, User?) Implements the operator >. Declaration public static bool operator >(User? left, User? right) Parameters Type Name Description User left The left. User right The right. Returns Type Description bool The result of the operator. See Also ModelBase<TClass> IUser | Improve this Doc View Source operator >=(User?, User?) Implements the operator >=. Declaration public static bool operator >=(User? left, User? right) Parameters Type Name Description User left The left. User right The right. Returns Type Description bool The result of the operator. See Also ModelBase<TClass> IUser | Improve this Doc View Source operator !=(User?, User?) Implements the operator !=. Declaration public static bool operator !=(User? left, User? right) Parameters Type Name Description User left The left. User right The right. Returns Type Description bool The result of the operator. See Also ModelBase<TClass> IUser | Improve this Doc View Source operator <(User?, User?) Implements the operator <. Declaration public static bool operator <(User? left, User? right) Parameters Type Name Description User left The left. User right The right. Returns Type Description bool The result of the operator. See Also ModelBase<TClass> IUser | Improve this Doc View Source operator <=(User?, User?) Implements the operator <=. Declaration public static bool operator <=(User? left, User? right) Parameters Type Name Description User left The left. User right The right. Returns Type Description bool The result of the operator. See Also ModelBase<TClass> IUser Implements IModel<TClass> IEquatable<T> IComparable IComparable<T> IEquatable<T> IUser IModel IEquatable<T> IEquatable<T> IEquatable<T> Extension Methods ExpandoObjectExtensions.ConvertToExpando<TEntity>(TEntity?) GenericExtensions.When<TObject>(TObject, bool, Func<TObject, TObject>) See Also ModelBase<TClass> IUser"
  },
  "api/Mithril.Security.Models.UserClaim.html": {
    "href": "api/Mithril.Security.Models.UserClaim.html",
    "title": "Class UserClaim | Mithril API Reference",
    "keywords": "Class UserClaim User claim Inheritance object ModelBase<UserClaim> UserClaim Implements IModel<UserClaim> IEquatable<IModel<UserClaim>> IComparable IComparable<UserClaim> IEquatable<ModelBase<UserClaim>> IUserClaim IModel IEquatable<IModel> IEquatable<IUserClaim> IEquatable<UserClaim> Inherited Members ModelBase<UserClaim>.Active ModelBase<UserClaim>.Creator ModelBase<UserClaim>.DateCreated ModelBase<UserClaim>.DateModified ModelBase<UserClaim>.ID ModelBase<UserClaim>.Modifier ModelBase<UserClaim>.TenantID ModelBase<UserClaim>.All(IDataService) ModelBase<UserClaim>.AllActive(IDataService) ModelBase<UserClaim>.AllInactive(IDataService) ModelBase<UserClaim>.Load(long, IDataService) ModelBase<UserClaim>.Query(IDataService) ModelBase<UserClaim>.CanBeModifiedBy(ClaimsPrincipal) ModelBase<UserClaim>.CanBeViewedBy(ClaimsPrincipal) ModelBase<UserClaim>.CompareTo(object) ModelBase<UserClaim>.DeleteAsync(IDataService, ClaimsPrincipal, bool) ModelBase<UserClaim>.Equals(IModel) ModelBase<UserClaim>.Equals(IModel<UserClaim>) ModelBase<UserClaim>.Equals(ModelBase<UserClaim>) ModelBase<UserClaim>.SaveAsync(IDataService, ClaimsPrincipal) ModelBase<UserClaim>.SetupObject(IDataService, ClaimsPrincipal) ModelBase<UserClaim>.SetupObject(IDataService, IUser) ModelBase<UserClaim>.SetupObjectAndReturn(IDataService, ClaimsPrincipal) object.Equals(object, object) object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Namespace: Mithril.Security.Models Assembly: Mithril.Security.dll Syntax public class UserClaim : ModelBase<UserClaim>, IModel<UserClaim>, IEquatable<IModel<UserClaim>>, IComparable, IComparable<UserClaim>, IEquatable<ModelBase<UserClaim>>, IUserClaim, IModel, IEquatable<IModel>, IEquatable<IUserClaim>, IEquatable<UserClaim> Constructors | Improve this Doc View Source UserClaim() Initializes a new instance of the UserClaim class. Declaration public UserClaim() See Also IUserClaim IEquatable<T> ModelBase<TClass> | Improve this Doc View Source UserClaim(UserClaimTypes, string, params IUser[]) Initializes a new instance of the UserClaim class. Declaration public UserClaim(UserClaimTypes type, string value, params IUser[] users) Parameters Type Name Description UserClaimTypes type The type. string value The value. IUser[] users The users. See Also IUserClaim IEquatable<T> ModelBase<TClass> Properties | Improve this Doc View Source Type Gets or sets the type. Declaration public string? Type { get; set; } Property Value Type Description string The type. See Also IUserClaim IEquatable<T> ModelBase<TClass> | Improve this Doc View Source Users Gets or sets the users. Declaration public virtual IList<IUser> Users { get; set; } Property Value Type Description IList<IUser> The users. See Also IUserClaim IEquatable<T> ModelBase<TClass> | Improve this Doc View Source Value Gets or sets the value. Declaration public string? Value { get; set; } Property Value Type Description string The value. See Also IUserClaim IEquatable<T> ModelBase<TClass> Methods | Improve this Doc View Source CanAccess(IUser) Determines whether this instance can access the specified user. Declaration public bool CanAccess(IUser user) Parameters Type Name Description IUser user The user. Returns Type Description bool true if this instance can access the specified user; otherwise, false. See Also IUserClaim IEquatable<T> ModelBase<TClass> | Improve this Doc View Source CanAccess(ClaimsPrincipal?) Determines whether this instance can access the specified user. Declaration public bool CanAccess(ClaimsPrincipal? user) Parameters Type Name Description ClaimsPrincipal user The user. Returns Type Description bool true if this instance can access the specified user; otherwise, false. See Also IUserClaim IEquatable<T> ModelBase<TClass> | Improve this Doc View Source CanAccess(string, string?) Determines whether this instance can access the specified type. Declaration public bool CanAccess(string type, string? value) Parameters Type Name Description string type The type. string value The value. Returns Type Description bool true if this instance can access the specified type; otherwise, false. See Also IUserClaim IEquatable<T> ModelBase<TClass> | Improve this Doc View Source CompareTo(UserClaim?) Compares the object to another object Declaration public override int CompareTo(UserClaim? other) Parameters Type Name Description UserClaim other Object to compare to Returns Type Description int 0 if they are equal, -1 if this is smaller, 1 if it is larger Overrides ModelBase<UserClaim>.CompareTo(UserClaim) See Also IUserClaim IEquatable<T> ModelBase<TClass> | Improve this Doc View Source Equals(IUserClaim?) Indicates whether the current object is equal to another object of the same type. Declaration public bool Equals(IUserClaim? other) Parameters Type Name Description IUserClaim other An object to compare with this object. Returns Type Description bool true if the current object is equal to the other parameter; otherwise, false. See Also IUserClaim IEquatable<T> ModelBase<TClass> | Improve this Doc View Source Equals(UserClaim?) Indicates whether the current object is equal to another object of the same type. Declaration public bool Equals(UserClaim? other) Parameters Type Name Description UserClaim other An object to compare with this object. Returns Type Description bool true if the current object is equal to the other parameter; otherwise, false. See Also IUserClaim IEquatable<T> ModelBase<TClass> | Improve this Doc View Source Equals(object?) Determines whether the specified object, is equal to this instance. Declaration public override bool Equals(object? obj) Parameters Type Name Description object obj The object to compare with this instance. Returns Type Description bool true if the specified object is equal to this instance; otherwise, false. Overrides ModelBase<UserClaim>.Equals(object) See Also IUserClaim IEquatable<T> ModelBase<TClass> | Improve this Doc View Source GetHashCode() Returns a hash code for this instance. Declaration public override int GetHashCode() Returns Type Description int A hash code for this instance, suitable for use in hashing algorithms and data structures like a hash table. Overrides Mithril.Data.Abstractions.BaseClasses.ModelBase<Mithril.Security.Models.UserClaim>.GetHashCode() See Also IUserClaim IEquatable<T> ModelBase<TClass> | Improve this Doc View Source Load(UserClaimTypes, string, IDataService?) Loads a specific claim Declaration public static UserClaim? Load(UserClaimTypes type, string value, IDataService? dataService) Parameters Type Name Description UserClaimTypes type The type. string value The value. IDataService dataService The data service. Returns Type Description UserClaim User claim specified See Also IUserClaim IEquatable<T> ModelBase<TClass> | Improve this Doc View Source LoadOrCreateAsync(UserClaimTypes, string, IDataService?, ClaimsPrincipal?) Loads a specific claim or creates it. Declaration public static Task<IUserClaim> LoadOrCreateAsync(UserClaimTypes type, string value, IDataService? context, ClaimsPrincipal? user) Parameters Type Name Description UserClaimTypes type The type. string value The value. IDataService context The context. ClaimsPrincipal user The user. Returns Type Description Task<IUserClaim> The user claim specified. See Also IUserClaim IEquatable<T> ModelBase<TClass> | Improve this Doc View Source ToString() Returns a string that represents this instance. Declaration public override string ToString() Returns Type Description string A string that represents this instance. Overrides object.ToString() See Also IUserClaim IEquatable<T> ModelBase<TClass> Operators | Improve this Doc View Source operator ==(UserClaim?, UserClaim?) Implements the operator ==. Declaration public static bool operator ==(UserClaim? first, UserClaim? second) Parameters Type Name Description UserClaim first The first. UserClaim second The second. Returns Type Description bool The result of the operator. See Also IUserClaim IEquatable<T> ModelBase<TClass> | Improve this Doc View Source operator >(UserClaim?, UserClaim?) Implements the operator >. Declaration public static bool operator >(UserClaim? left, UserClaim? right) Parameters Type Name Description UserClaim left The left. UserClaim right The right. Returns Type Description bool The result of the operator. See Also IUserClaim IEquatable<T> ModelBase<TClass> | Improve this Doc View Source operator >=(UserClaim?, UserClaim?) Implements the operator >=. Declaration public static bool operator >=(UserClaim? left, UserClaim? right) Parameters Type Name Description UserClaim left The left. UserClaim right The right. Returns Type Description bool The result of the operator. See Also IUserClaim IEquatable<T> ModelBase<TClass> | Improve this Doc View Source operator !=(UserClaim?, UserClaim?) Implements the operator !=. Declaration public static bool operator !=(UserClaim? left, UserClaim? right) Parameters Type Name Description UserClaim left The left. UserClaim right The right. Returns Type Description bool The result of the operator. See Also IUserClaim IEquatable<T> ModelBase<TClass> | Improve this Doc View Source operator <(UserClaim?, UserClaim?) Implements the operator <. Declaration public static bool operator <(UserClaim? left, UserClaim? right) Parameters Type Name Description UserClaim left The left. UserClaim right The right. Returns Type Description bool The result of the operator. See Also IUserClaim IEquatable<T> ModelBase<TClass> | Improve this Doc View Source operator <=(UserClaim?, UserClaim?) Implements the operator <=. Declaration public static bool operator <=(UserClaim? left, UserClaim? right) Parameters Type Name Description UserClaim left The left. UserClaim right The right. Returns Type Description bool The result of the operator. See Also IUserClaim IEquatable<T> ModelBase<TClass> Implements IModel<TClass> IEquatable<T> IComparable IComparable<T> IEquatable<T> IUserClaim IModel IEquatable<T> IEquatable<T> IEquatable<T> Extension Methods ExpandoObjectExtensions.ConvertToExpando<TEntity>(TEntity?) GenericExtensions.When<TObject>(TObject, bool, Func<TObject, TObject>) See Also IUserClaim IEquatable<T> ModelBase<TClass>"
  },
  "api/Mithril.Security.Models.html": {
    "href": "api/Mithril.Security.Models.html",
    "title": "Namespace Mithril.Security.Models | Mithril API Reference",
    "keywords": "Namespace Mithril.Security.Models Classes Permission Permission data holder Tenant Tenant model class User User model UserClaim User claim"
  },
  "api/Mithril.Security.Services.SecurityService.html": {
    "href": "api/Mithril.Security.Services.SecurityService.html",
    "title": "Class SecurityService | Mithril API Reference",
    "keywords": "Class SecurityService Security service Inheritance object SecurityService Implements ISecurityService Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Mithril.Security.Services Assembly: Mithril.Security.dll Syntax public class SecurityService : ISecurityService Constructors | Improve this Doc View Source SecurityService(IDataService?, SystemAccounts?) Initializes a new instance of the SecurityService class. Declaration public SecurityService(IDataService? dataService, SystemAccounts? systemAccounts) Parameters Type Name Description IDataService dataService The data service. SystemAccounts systemAccounts The system accounts. See Also ISecurityService Methods | Improve this Doc View Source LoadAllTenants() Loads all tenants. Declaration public IEnumerable<ITenant> LoadAllTenants() Returns Type Description IEnumerable<ITenant> All tenants. See Also ISecurityService | Improve this Doc View Source LoadAllUsers() Loads all users. Declaration public IEnumerable<IUser> LoadAllUsers() Returns Type Description IEnumerable<IUser> The users. See Also ISecurityService | Improve this Doc View Source LoadAnonymousUserAccount() Loads the anonymous user account. Declaration public IUser? LoadAnonymousUserAccount() Returns Type Description IUser The anonymous user account. See Also ISecurityService | Improve this Doc View Source LoadClaim(UserClaimTypes, string) Loads the user claim specified by the identifier. Declaration public IUserClaim? LoadClaim(UserClaimTypes type, string value) Parameters Type Name Description UserClaimTypes type The type. string value The value. Returns Type Description IUserClaim The user claim specified. See Also ISecurityService | Improve this Doc View Source LoadClaim(long) Loads the user claim specified by the identifier. Declaration public IUserClaim? LoadClaim(long id) Parameters Type Name Description long id The identifier. Returns Type Description IUserClaim The user claim specified. See Also ISecurityService | Improve this Doc View Source LoadCurrentUser() Loads the current user. Declaration public IUser? LoadCurrentUser() Returns Type Description IUser The current user. See Also ISecurityService | Improve this Doc View Source LoadOrCreateClaimAsync(UserClaimTypes, string) Loads or creates the user claim asynchronously based on the type and value. Declaration public Task<IUserClaim> LoadOrCreateClaimAsync(UserClaimTypes type, string value) Parameters Type Name Description UserClaimTypes type The type. string value The value. Returns Type Description Task<IUserClaim> The user claim specified. See Also ISecurityService | Improve this Doc View Source LoadOrCreatePermissionAsync(string, PermissionType, params IUserClaim[]) Loads or creates the permission asynchronously based on the display name. Declaration public Task<IPermission> LoadOrCreatePermissionAsync(string displayName, PermissionType operand, params IUserClaim[] claims) Parameters Type Name Description string displayName The display name. PermissionType operand The operand. IUserClaim[] claims The claims. Returns Type Description Task<IPermission> The permission specified. See Also ISecurityService | Improve this Doc View Source LoadPermission(SystemPermissions) Loads the permission specified. Declaration public IPermission? LoadPermission(SystemPermissions permission) Parameters Type Name Description SystemPermissions permission The permission. Returns Type Description IPermission The permission specified. See Also ISecurityService | Improve this Doc View Source LoadPermission(string) Loads the permission specified. Declaration public IPermission? LoadPermission(string displayName) Parameters Type Name Description string displayName The display name. Returns Type Description IPermission The permission specified. See Also ISecurityService | Improve this Doc View Source LoadSystemAccount() Loads the system account. Declaration public IUser? LoadSystemAccount() Returns Type Description IUser The system account. See Also ISecurityService | Improve this Doc View Source LoadSystemTenant() Loads the system tenant. Declaration public ITenant? LoadSystemTenant() Returns Type Description ITenant The system tenant. See Also ISecurityService | Improve this Doc View Source LoadUser(long) Loads the user. Declaration public IUser? LoadUser(long id) Parameters Type Name Description long id The identifier. Returns Type Description IUser The user specified. See Also ISecurityService | Improve this Doc View Source LoadUser(string) Loads the user by username. Declaration public IUser? LoadUser(string username) Parameters Type Name Description string username The username. Returns Type Description IUser The user specified. See Also ISecurityService Implements ISecurityService Extension Methods ExpandoObjectExtensions.ConvertToExpando<TEntity>(TEntity?) GenericExtensions.When<TObject>(TObject, bool, Func<TObject, TObject>) See Also ISecurityService"
  },
  "api/Mithril.Security.Services.UserClaimsTransformer.html": {
    "href": "api/Mithril.Security.Services.UserClaimsTransformer.html",
    "title": "Class UserClaimsTransformer | Mithril API Reference",
    "keywords": "Class UserClaimsTransformer User claims transformer (adds claims to the ClaimsPrincipal object so we can use the system built into ASP.Net Core instead of our own) Inheritance object UserClaimsTransformer Implements IClaimsTransformation Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Mithril.Security.Services Assembly: Mithril.Security.dll Syntax public class UserClaimsTransformer : IClaimsTransformation Constructors | Improve this Doc View Source UserClaimsTransformer(IDataService?) Initializes a new instance of the UserClaimsTransformer class. Declaration public UserClaimsTransformer(IDataService? dataService) Parameters Type Name Description IDataService dataService The data service. See Also IClaimsTransformation Methods | Improve this Doc View Source TransformAsync(ClaimsPrincipal) Provides a central transformation point to change the specified principal. Note: this will be run on each AuthenticateAsync call, so its safer to return a new ClaimsPrincipal if your transformation is not idempotent. Declaration public Task<ClaimsPrincipal> TransformAsync(ClaimsPrincipal principal) Parameters Type Name Description ClaimsPrincipal principal The ClaimsPrincipal to transform. Returns Type Description Task<ClaimsPrincipal> The transformed principal. See Also IClaimsTransformation Implements IClaimsTransformation Extension Methods ExpandoObjectExtensions.ConvertToExpando<TEntity>(TEntity?) GenericExtensions.When<TObject>(TObject, bool, Func<TObject, TObject>) See Also IClaimsTransformation"
  },
  "api/Mithril.Security.Services.html": {
    "href": "api/Mithril.Security.Services.html",
    "title": "Namespace Mithril.Security.Services | Mithril API Reference",
    "keywords": "Namespace Mithril.Security.Services Classes SecurityService Security service UserClaimsTransformer User claims transformer (adds claims to the ClaimsPrincipal object so we can use the system built into ASP.Net Core instead of our own)"
  },
  "api/Mithril.Security.Windows.WindowsAuthenticationModule.html": {
    "href": "api/Mithril.Security.Windows.WindowsAuthenticationModule.html",
    "title": "Class WindowsAuthenticationModule | Mithril API Reference",
    "keywords": "Class WindowsAuthenticationModule Windows Authentication module Inheritance object ModuleBaseClass<WindowsAuthenticationModule> WindowsAuthenticationModule Implements IEquatable<WindowsAuthenticationModule> IModule Inherited Members ModuleBaseClass<WindowsAuthenticationModule>.Category ModuleBaseClass<WindowsAuthenticationModule>.ContentPath ModuleBaseClass<WindowsAuthenticationModule>.Features ModuleBaseClass<WindowsAuthenticationModule>.ID ModuleBaseClass<WindowsAuthenticationModule>.LastModified ModuleBaseClass<WindowsAuthenticationModule>.Name ModuleBaseClass<WindowsAuthenticationModule>.Order ModuleBaseClass<WindowsAuthenticationModule>.Tags ModuleBaseClass<WindowsAuthenticationModule>.Version ModuleBaseClass<WindowsAuthenticationModule>.ConfigureApplication(IApplicationBuilder, IConfiguration, IHostEnvironment) ModuleBaseClass<WindowsAuthenticationModule>.ConfigureHostSettings(IHostBuilder, IConfiguration, IHostEnvironment) ModuleBaseClass<WindowsAuthenticationModule>.ConfigureLoggingSettings(ILoggingBuilder, IConfiguration, IHostEnvironment) ModuleBaseClass<WindowsAuthenticationModule>.ConfigureMVC(IMvcBuilder, IConfiguration, IHostEnvironment) ModuleBaseClass<WindowsAuthenticationModule>.ConfigureRoutes(IEndpointRouteBuilder, IConfiguration, IHostEnvironment) ModuleBaseClass<WindowsAuthenticationModule>.ConfigureWebHostSettings(IWebHostBuilder, IConfiguration, IHostEnvironment) ModuleBaseClass<WindowsAuthenticationModule>.Equals(object) ModuleBaseClass<WindowsAuthenticationModule>.Equals(WindowsAuthenticationModule) ModuleBaseClass<WindowsAuthenticationModule>.GetHashCode() ModuleBaseClass<WindowsAuthenticationModule>.InitializeDataAsync(IDataService, IServiceProvider) ModuleBaseClass<WindowsAuthenticationModule>.OnStarted() ModuleBaseClass<WindowsAuthenticationModule>.OnStopped() ModuleBaseClass<WindowsAuthenticationModule>.OnStopping() object.Equals(object, object) object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Mithril.Security.Windows Assembly: Mithril.Security.Windows.dll Syntax public class WindowsAuthenticationModule : ModuleBaseClass<WindowsAuthenticationModule>, IEquatable<WindowsAuthenticationModule>, IModule Constructors | Improve this Doc View Source WindowsAuthenticationModule() Initializes a new instance of the WindowsAuthenticationModule class. Declaration public WindowsAuthenticationModule() See Also ModuleBaseClass<TModule> Methods | Improve this Doc View Source ConfigureServices(IServiceCollection?, IConfiguration?, IHostEnvironment?) Configures the services for the module. Declaration public override IServiceCollection? ConfigureServices(IServiceCollection? services, IConfiguration? configuration, IHostEnvironment? env) Parameters Type Name Description IServiceCollection services The services collection. IConfiguration configuration The configuration. IHostEnvironment env Returns Type Description IServiceCollection Overrides ModuleBaseClass<WindowsAuthenticationModule>.ConfigureServices(IServiceCollection, IConfiguration, IHostEnvironment) See Also ModuleBaseClass<TModule> Implements IEquatable<T> IModule Extension Methods ExpandoObjectExtensions.ConvertToExpando<TEntity>(TEntity?) GenericExtensions.When<TObject>(TObject, bool, Func<TObject, TObject>) See Also ModuleBaseClass<TModule>"
  },
  "api/Mithril.Security.Windows.html": {
    "href": "api/Mithril.Security.Windows.html",
    "title": "Namespace Mithril.Security.Windows | Mithril API Reference",
    "keywords": "Namespace Mithril.Security.Windows Classes WindowsAuthenticationModule Windows Authentication module"
  },
  "api/Mithril.Security.html": {
    "href": "api/Mithril.Security.html",
    "title": "Namespace Mithril.Security | Mithril API Reference",
    "keywords": "Namespace Mithril.Security Classes AuthenticationModule Windows Authentication module"
  },
  "api/Mithril.Tests.Helpers.TestBaseClass-1.html": {
    "href": "api/Mithril.Tests.Helpers.TestBaseClass-1.html",
    "title": "Class TestBaseClass<TTestObject> | Mithril API Reference",
    "keywords": "Class TestBaseClass<TTestObject> Test base class Inheritance object TestBaseClass TestBaseClass<TTestObject> Inherited Members TestBaseClass.IgnoreMethod TestBaseClass.ExceptionsToIgnore TestBaseClass.MaxDuration TestBaseClass.BreakType() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Mithril.Tests.Helpers Assembly: Mithril.Tests.Helpers.dll Syntax public abstract class TestBaseClass<TTestObject> : TestBaseClass Type Parameters Name Description TTestObject The type of the test object. Constructors | Improve this Doc View Source TestBaseClass() Initializes a new instance of the TestBaseClass<TTestObject> class. Declaration protected TestBaseClass() Properties | Improve this Doc View Source DiscoverInheritedMethods Gets or sets a value indicating whether [discover inherited methods]. Declaration protected bool DiscoverInheritedMethods { get; set; } Property Value Type Description bool true if [discover inherited methods]; otherwise, false. | Improve this Doc View Source ObjectType Gets the type of the object. Declaration protected override Type? ObjectType { get; set; } Property Value Type Description Type The type of the object. Overrides TestBaseClass.ObjectType | Improve this Doc View Source TestObject Gets or sets the test object. Declaration protected TTestObject? TestObject { get; set; } Property Value Type Description TTestObject The test object. Methods | Improve this Doc View Source BreakObject() Attempts to break the object. Declaration [Fact] public Task BreakObject() Returns Type Description Task The async task. Extension Methods ExpandoObjectExtensions.ConvertToExpando<TEntity>(TEntity?) GenericExtensions.When<TObject>(TObject, bool, Func<TObject, TObject>)"
  },
  "api/Mithril.Tests.Helpers.TestBaseClass.html": {
    "href": "api/Mithril.Tests.Helpers.TestBaseClass.html",
    "title": "Class TestBaseClass | Mithril API Reference",
    "keywords": "Class TestBaseClass Test base class Inheritance object TestBaseClass TestBaseClass<TTestObject> Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Mithril.Tests.Helpers Assembly: Mithril.Tests.Helpers.dll Syntax public abstract class TestBaseClass Constructors | Improve this Doc View Source TestBaseClass() Initializes a new instance of the TestBaseClass<TTestObject> class. Declaration protected TestBaseClass() Properties | Improve this Doc View Source ExceptionsToIgnore Gets or sets the exceptions to ignore. Declaration protected Type[] ExceptionsToIgnore { get; set; } Property Value Type Description Type[] The exceptions to ignore. | Improve this Doc View Source IgnoreMethod Gets the ignore method. Declaration protected static MethodInfo? IgnoreMethod { get; } Property Value Type Description MethodInfo The ignore method. | Improve this Doc View Source MaxDuration Gets or sets the maximum duration. Declaration protected int MaxDuration { get; set; } Property Value Type Description int The maximum duration. | Improve this Doc View Source ObjectType Gets the type of the object. Declaration protected abstract Type? ObjectType { get; set; } Property Value Type Description Type The type of the object. Methods | Improve this Doc View Source BreakType() Attempts to break the object. Declaration [Fact] public Task BreakType() Returns Type Description Task The async task. Extension Methods ExpandoObjectExtensions.ConvertToExpando<TEntity>(TEntity?) GenericExtensions.When<TObject>(TObject, bool, Func<TObject, TObject>)"
  },
  "api/Mithril.Tests.Helpers.html": {
    "href": "api/Mithril.Tests.Helpers.html",
    "title": "Namespace Mithril.Tests.Helpers | Mithril API Reference",
    "keywords": "Namespace Mithril.Tests.Helpers Classes TestBaseClass Test base class TestBaseClass<TTestObject> Test base class"
  },
  "api/Mithril.Theme.Default.DefaultTheme.html": {
    "href": "api/Mithril.Theme.Default.DefaultTheme.html",
    "title": "Class DefaultTheme | Mithril API Reference",
    "keywords": "Class DefaultTheme Default theme Inheritance object ThemeBaseClass<DefaultTheme> DefaultTheme Implements ITheme Inherited Members ThemeBaseClass<DefaultTheme>.Name ThemeBaseClass<DefaultTheme>.Zones object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Mithril.Theme.Default Assembly: Mithril.Theme.Default.dll Syntax public class DefaultTheme : ThemeBaseClass<DefaultTheme>, ITheme Implements ITheme Extension Methods ExpandoObjectExtensions.ConvertToExpando<TEntity>(TEntity?) GenericExtensions.When<TObject>(TObject, bool, Func<TObject, TObject>)"
  },
  "api/Mithril.Theme.Default.DefaultThemeModule.html": {
    "href": "api/Mithril.Theme.Default.DefaultThemeModule.html",
    "title": "Class DefaultThemeModule | Mithril API Reference",
    "keywords": "Class DefaultThemeModule Default theme module Inheritance object ModuleBaseClass<DefaultThemeModule> DefaultThemeModule Implements IEquatable<DefaultThemeModule> IModule Inherited Members ModuleBaseClass<DefaultThemeModule>.Category ModuleBaseClass<DefaultThemeModule>.ContentPath ModuleBaseClass<DefaultThemeModule>.Features ModuleBaseClass<DefaultThemeModule>.ID ModuleBaseClass<DefaultThemeModule>.LastModified ModuleBaseClass<DefaultThemeModule>.Name ModuleBaseClass<DefaultThemeModule>.Order ModuleBaseClass<DefaultThemeModule>.Tags ModuleBaseClass<DefaultThemeModule>.Version ModuleBaseClass<DefaultThemeModule>.ConfigureApplication(IApplicationBuilder, IConfiguration, IHostEnvironment) ModuleBaseClass<DefaultThemeModule>.ConfigureHostSettings(IHostBuilder, IConfiguration, IHostEnvironment) ModuleBaseClass<DefaultThemeModule>.ConfigureLoggingSettings(ILoggingBuilder, IConfiguration, IHostEnvironment) ModuleBaseClass<DefaultThemeModule>.ConfigureMVC(IMvcBuilder, IConfiguration, IHostEnvironment) ModuleBaseClass<DefaultThemeModule>.ConfigureRoutes(IEndpointRouteBuilder, IConfiguration, IHostEnvironment) ModuleBaseClass<DefaultThemeModule>.ConfigureServices(IServiceCollection, IConfiguration, IHostEnvironment) ModuleBaseClass<DefaultThemeModule>.ConfigureWebHostSettings(IWebHostBuilder, IConfiguration, IHostEnvironment) ModuleBaseClass<DefaultThemeModule>.Equals(object) ModuleBaseClass<DefaultThemeModule>.Equals(DefaultThemeModule) ModuleBaseClass<DefaultThemeModule>.GetHashCode() ModuleBaseClass<DefaultThemeModule>.InitializeDataAsync(IDataService, IServiceProvider) ModuleBaseClass<DefaultThemeModule>.OnStarted() ModuleBaseClass<DefaultThemeModule>.OnStopped() ModuleBaseClass<DefaultThemeModule>.OnStopping() object.Equals(object, object) object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Mithril.Theme.Default Assembly: Mithril.Theme.Default.dll Syntax public class DefaultThemeModule : ModuleBaseClass<DefaultThemeModule>, IEquatable<DefaultThemeModule>, IModule Implements IEquatable<T> IModule Extension Methods ExpandoObjectExtensions.ConvertToExpando<TEntity>(TEntity?) GenericExtensions.When<TObject>(TObject, bool, Func<TObject, TObject>)"
  },
  "api/Mithril.Theme.Default.html": {
    "href": "api/Mithril.Theme.Default.html",
    "title": "Namespace Mithril.Theme.Default | Mithril API Reference",
    "keywords": "Namespace Mithril.Theme.Default Classes DefaultTheme Default theme DefaultThemeModule Default theme module"
  },
  "api/Mithril.Themes.Abstractions.BaseClasses.ThemeBaseClass-1.html": {
    "href": "api/Mithril.Themes.Abstractions.BaseClasses.ThemeBaseClass-1.html",
    "title": "Class ThemeBaseClass<TTheme> | Mithril API Reference",
    "keywords": "Class ThemeBaseClass<TTheme> Theme base class Inheritance object ThemeBaseClass<TTheme> DefaultTheme Implements ITheme Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Mithril.Themes.Abstractions.BaseClasses Assembly: Mithril.Themes.Abstractions.dll Syntax public abstract class ThemeBaseClass<TTheme> : ITheme where TTheme : ThemeBaseClass<TTheme> Type Parameters Name Description TTheme The type of the theme. Constructors | Improve this Doc View Source ThemeBaseClass() Initializes a new instance of the ThemeBaseClass<TTheme> class. Declaration protected ThemeBaseClass() See Also ITheme Properties | Improve this Doc View Source Name Gets the name. Declaration public string Name { get; } Property Value Type Description string The name. See Also ITheme | Improve this Doc View Source Zones Gets the zones. Declaration public IEnumerable<string> Zones { get; } Property Value Type Description IEnumerable<string> The zones. See Also ITheme Implements ITheme Extension Methods ExpandoObjectExtensions.ConvertToExpando<TEntity>(TEntity?) GenericExtensions.When<TObject>(TObject, bool, Func<TObject, TObject>) See Also ITheme"
  },
  "api/Mithril.Themes.Abstractions.BaseClasses.ThemedRazorPage-1.html": {
    "href": "api/Mithril.Themes.Abstractions.BaseClasses.ThemedRazorPage-1.html",
    "title": "Class ThemedRazorPage<TModel> | Mithril API Reference",
    "keywords": "Class ThemedRazorPage<TModel> Themed Razor page Inheritance object RazorPageBase RazorPage RazorPage<TModel> ThemedRazorPage<TModel> Implements IRazorPage Inherited Members RazorPage<TModel>.Model RazorPage<TModel>.ViewData RazorPage.RenderBody() RazorPage.IgnoreBody() RazorPage.DefineSection(string, RenderAsyncDelegate) RazorPage.IsSectionDefined(string) RazorPage.RenderSection(string) RazorPage.RenderSection(string, bool) RazorPage.RenderSectionAsync(string) RazorPage.RenderSectionAsync(string, bool) RazorPage.IgnoreSection(string) RazorPage.EnsureRenderedBodyOrSections() RazorPage.BeginContext(int, int, bool) RazorPage.EndContext() RazorPage.Context RazorPageBase.CreateTagHelper<TTagHelper>() RazorPageBase.StartTagHelperWritingScope(HtmlEncoder) RazorPageBase.EndTagHelperWritingScope() RazorPageBase.BeginWriteTagHelperAttribute() RazorPageBase.EndWriteTagHelperAttribute() RazorPageBase.PushWriter(TextWriter) RazorPageBase.PopWriter() RazorPageBase.Href(string) RazorPageBase.Write(object) RazorPageBase.Write(string) RazorPageBase.WriteLiteral(object) RazorPageBase.WriteLiteral(string) RazorPageBase.BeginWriteAttribute(string, string, int, string, int, int) RazorPageBase.WriteAttributeValue(string, int, object, int, int, bool) RazorPageBase.EndWriteAttribute() RazorPageBase.BeginAddHtmlAttributeValues(TagHelperExecutionContext, string, int, HtmlAttributeValueStyle) RazorPageBase.AddHtmlAttributeValue(string, int, object, int, int, bool) RazorPageBase.EndAddHtmlAttributeValues(TagHelperExecutionContext) RazorPageBase.FlushAsync() RazorPageBase.SetAntiforgeryCookieAndHeader() RazorPageBase.ViewContext RazorPageBase.Layout RazorPageBase.Output RazorPageBase.Path RazorPageBase.SectionWriters RazorPageBase.ViewBag RazorPageBase.IsLayoutBeingRendered RazorPageBase.BodyContent RazorPageBase.PreviousSectionWriters RazorPageBase.DiagnosticSource RazorPageBase.HtmlEncoder RazorPageBase.User RazorPageBase.TempData object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Mithril.Themes.Abstractions.BaseClasses Assembly: Mithril.Themes.Abstractions.dll Syntax public abstract class ThemedRazorPage<TModel> : RazorPage<TModel>, IRazorPage Type Parameters Name Description TModel The type of the model. Constructors | Improve this Doc View Source ThemedRazorPage() Initializes a new instance of the ThemedRazorPage<TModel> class. Declaration protected ThemedRazorPage() See Also RazorPage<TModel> Properties | Improve this Doc View Source CurrentTheme Gets the current theme. Declaration protected ITheme? CurrentTheme { get; } Property Value Type Description ITheme The current theme. See Also RazorPage<TModel> | Improve this Doc View Source Debug Gets a value indicating whether this ThemedRazorPage<TModel> is in debug mode. Declaration protected bool Debug { get; } Property Value Type Description bool true if debug; otherwise, false. See Also RazorPage<TModel> | Improve this Doc View Source ResourceHolder Gets the resource holder. Declaration protected IResourceService? ResourceHolder { get; } Property Value Type Description IResourceService The resource holder. See Also RazorPage<TModel> | Improve this Doc View Source ThemeService Gets the theme service. Declaration public IThemeService? ThemeService { get; } Property Value Type Description IThemeService The theme service. See Also RazorPage<TModel> Methods | Improve this Doc View Source ExecuteAsync() Executes the page asynchronously. Declaration public override Task ExecuteAsync() Returns Type Description Task The async task. Overrides RazorPageBase.ExecuteAsync() See Also RazorPage<TModel> | Improve this Doc View Source GetService<TService>() Gets a service. Declaration protected TService? GetService<TService>() Returns Type Description TService The service specified. Type Parameters Name Description TService The type of the service. See Also RazorPage<TModel> Implements IRazorPage Extension Methods ExpandoObjectExtensions.ConvertToExpando<TEntity>(TEntity?) GenericExtensions.When<TObject>(TObject, bool, Func<TObject, TObject>) See Also RazorPage<TModel>"
  },
  "api/Mithril.Themes.Abstractions.BaseClasses.html": {
    "href": "api/Mithril.Themes.Abstractions.BaseClasses.html",
    "title": "Namespace Mithril.Themes.Abstractions.BaseClasses | Mithril API Reference",
    "keywords": "Namespace Mithril.Themes.Abstractions.BaseClasses Classes ThemeBaseClass<TTheme> Theme base class ThemedRazorPage<TModel> Themed Razor page"
  },
  "api/Mithril.Themes.Abstractions.Enums.ResourceType.html": {
    "href": "api/Mithril.Themes.Abstractions.Enums.ResourceType.html",
    "title": "Enum ResourceType | Mithril API Reference",
    "keywords": "Enum ResourceType Resource type Namespace: Mithril.Themes.Abstractions.Enums Assembly: Mithril.Themes.Abstractions.dll Syntax public enum ResourceType Fields Name Description CSS The CSS JavaScript The JavaScript Meta The meta Extension Methods ExpandoObjectExtensions.ConvertToExpando<ResourceType>(ResourceType) GenericExtensions.When<ResourceType>(ResourceType, bool, Func<ResourceType, ResourceType>)"
  },
  "api/Mithril.Themes.Abstractions.Enums.html": {
    "href": "api/Mithril.Themes.Abstractions.Enums.html",
    "title": "Namespace Mithril.Themes.Abstractions.Enums | Mithril API Reference",
    "keywords": "Namespace Mithril.Themes.Abstractions.Enums Enums ResourceType Resource type"
  },
  "api/Mithril.Themes.Abstractions.Interfaces.IResource.html": {
    "href": "api/Mithril.Themes.Abstractions.Interfaces.IResource.html",
    "title": "Interface IResource | Mithril API Reference",
    "keywords": "Interface IResource Resource interface Namespace: Mithril.Themes.Abstractions.Interfaces Assembly: Mithril.Themes.Abstractions.dll Syntax public interface IResource Properties | Improve this Doc View Source Location Gets the location. Declaration string? Location { get; } Property Value Type Description string The location. | Improve this Doc View Source Order Gets the order. Declaration int Order { get; } Property Value Type Description int The order. Methods | Improve this Doc View Source GetHtmlContent() Gets the content of the resource as an IHtmlContent item. Declaration IHtmlContent GetHtmlContent() Returns Type Description IHtmlContent The content. Extension Methods ExpandoObjectExtensions.ConvertToExpando<TEntity>(TEntity?) GenericExtensions.When<TObject>(TObject, bool, Func<TObject, TObject>)"
  },
  "api/Mithril.Themes.Abstractions.Interfaces.ITheme.html": {
    "href": "api/Mithril.Themes.Abstractions.Interfaces.ITheme.html",
    "title": "Interface ITheme | Mithril API Reference",
    "keywords": "Interface ITheme Theme interface Namespace: Mithril.Themes.Abstractions.Interfaces Assembly: Mithril.Themes.Abstractions.dll Syntax public interface ITheme Properties | Improve this Doc View Source Name Gets the name. Declaration string Name { get; } Property Value Type Description string The name. | Improve this Doc View Source Zones Gets the zones. Declaration IEnumerable<string> Zones { get; } Property Value Type Description IEnumerable<string> The zones. Extension Methods ExpandoObjectExtensions.ConvertToExpando<TEntity>(TEntity?) GenericExtensions.When<TObject>(TObject, bool, Func<TObject, TObject>)"
  },
  "api/Mithril.Themes.Abstractions.Interfaces.html": {
    "href": "api/Mithril.Themes.Abstractions.Interfaces.html",
    "title": "Namespace Mithril.Themes.Abstractions.Interfaces | Mithril API Reference",
    "keywords": "Namespace Mithril.Themes.Abstractions.Interfaces Interfaces IResource Resource interface ITheme Theme interface"
  },
  "api/Mithril.Themes.Abstractions.Services.IResourceService.html": {
    "href": "api/Mithril.Themes.Abstractions.Services.IResourceService.html",
    "title": "Interface IResourceService | Mithril API Reference",
    "keywords": "Interface IResourceService Resource service interface Namespace: Mithril.Themes.Abstractions.Services Assembly: Mithril.Themes.Abstractions.dll Syntax public interface IResourceService Methods | Improve this Doc View Source AddLinkResource(string?, string?, string?, string?, string?, string?, string?, string?, string?, string?, int, string?) Adds the link resource. Declaration bool AddLinkResource(string? href, string? rel, string? type, string? crossOrigin, string? hreflang, string? media, string? sizes, string? charset, string? rev, string? target, int tagOrder, string? location) Parameters Type Name Description string href The href. string rel The relative. string type The type. string crossOrigin The cross origin. string hreflang The hreflang. string media The media. string sizes The sizes. string charset The charset. string rev The rev. string target The target. int tagOrder The tag order. string location The location. Returns Type Description bool True if it is successfully added, false otherwise. | Improve this Doc View Source AddMetaResource(string?, string?, string?, string?, string?, string?, int) Adds a meta resource. Declaration bool AddMetaResource(string? name, string? scheme, string? httpEquiv, string? content, string? charset, string? property, int tagOrder) Parameters Type Name Description string name The name. string scheme The scheme. string httpEquiv The HTTP equiv. string content The content. string charset The charset. string property The property. int tagOrder The tag order. Returns Type Description bool True if it is successfully added, false otherwise. | Improve this Doc View Source AddResource(ResourceType, IResource) Adds the resource. Declaration bool AddResource(ResourceType type, IResource resource) Parameters Type Name Description ResourceType type The type. IResource resource The resource. Returns Type Description bool True if it is successfully added, false otherwise. | Improve this Doc View Source AddScriptContentResource(string?, string?, string?, string?, string?, string?, int, string?, string?, string?, string?) Adds the script content resource. Declaration bool AddScriptContentResource(string? content, string? async, string? charset, string? defer, string? type, string? xMLSpace, int tagOrder, string? location, string? integrity, string? crossOrigin, string? referrerPolicy) Parameters Type Name Description string content The content. string async The asynchronous. string charset The charset. string defer The defer. string type The type. string xMLSpace The xml:space. int tagOrder The tag order. string location The location. string integrity The integrity. string crossOrigin The cross origin. string referrerPolicy The referrer policy. Returns Type Description bool True if it is successfully added, false otherwise. | Improve this Doc View Source AddScriptFileResource(string?, string?, string?, string?, string?, string?, int, string?, string?, string?, string?) Adds the script file resource. Declaration bool AddScriptFileResource(string? file, string? async, string? charset, string? defer, string? type, string? xMLSpace, int tagOrder, string? location, string? integrity, string? crossOrigin, string? referrerPolicy) Parameters Type Name Description string file The file. string async The asynchronous. string charset The charset. string defer The defer. string type The type. string xMLSpace The x ml space. int tagOrder The tag order. string location The location. string integrity The integrity. string crossOrigin The cross origin. string referrerPolicy The referrer policy. Returns Type Description bool True if it is successfully added, false otherwise. | Improve this Doc View Source AddStyleResource(string?, string?, string?, int, string?) Adds the style resource. Declaration bool AddStyleResource(string? content, string? media, string? type, int tagOrder, string? location) Parameters Type Name Description string content The content. string media The media. string type The type. int tagOrder The tag order. string location The location. Returns Type Description bool True if it is successfully added, false otherwise. | Improve this Doc View Source NextOrderValue(ResourceType) Nexts the order value. Declaration int NextOrderValue(ResourceType type) Parameters Type Name Description ResourceType type The type. Returns Type Description int | Improve this Doc View Source Render(ResourceType, string) Renders the specified type. Declaration IHtmlContent Render(ResourceType type, string location = \"\") Parameters Type Name Description ResourceType type The type. string location The location. Returns Type Description IHtmlContent The HTML content. Extension Methods ExpandoObjectExtensions.ConvertToExpando<TEntity>(TEntity?) GenericExtensions.When<TObject>(TObject, bool, Func<TObject, TObject>)"
  },
  "api/Mithril.Themes.Abstractions.Services.IThemeService.html": {
    "href": "api/Mithril.Themes.Abstractions.Services.IThemeService.html",
    "title": "Interface IThemeService | Mithril API Reference",
    "keywords": "Interface IThemeService Theme manager interface Namespace: Mithril.Themes.Abstractions.Services Assembly: Mithril.Themes.Abstractions.dll Syntax public interface IThemeService Methods | Improve this Doc View Source GetAvailableThemes() Gets the themes. Declaration IEnumerable<ITheme> GetAvailableThemes() Returns Type Description IEnumerable<ITheme> The themes available. | Improve this Doc View Source LoadTheme(string?) Loads the theme based on the name. Declaration ITheme? LoadTheme(string? themeName = \"Default\") Parameters Type Name Description string themeName Name of the theme. Returns Type Description ITheme The theme associated with the name. | Improve this Doc View Source SetDefaultThemeAsync(ITheme?, ClaimsPrincipal?) Sets the default theme. Declaration Task<IThemeService> SetDefaultThemeAsync(ITheme? theme, ClaimsPrincipal? user) Parameters Type Name Description ITheme theme The theme. ClaimsPrincipal user The user. Returns Type Description Task<IThemeService> This. | Improve this Doc View Source SetThemeAlias(string?, ITheme?) Sets an alias for a theme Declaration IThemeService SetThemeAlias(string? themeName, ITheme? theme) Parameters Type Name Description string themeName The alias name ITheme theme The theme Returns Type Description IThemeService This. Extension Methods ExpandoObjectExtensions.ConvertToExpando<TEntity>(TEntity?) GenericExtensions.When<TObject>(TObject, bool, Func<TObject, TObject>)"
  },
  "api/Mithril.Themes.Abstractions.Services.html": {
    "href": "api/Mithril.Themes.Abstractions.Services.html",
    "title": "Namespace Mithril.Themes.Abstractions.Services | Mithril API Reference",
    "keywords": "Namespace Mithril.Themes.Abstractions.Services Interfaces IResourceService Resource service interface IThemeService Theme manager interface"
  },
  "api/Mithril.Themes.Abstractions.TagHelpers.LinkTagHelper.html": {
    "href": "api/Mithril.Themes.Abstractions.TagHelpers.LinkTagHelper.html",
    "title": "Class LinkTagHelper | Mithril API Reference",
    "keywords": "Class LinkTagHelper Link tag helper Inheritance object TagHelper LinkTagHelper Implements ITagHelper ITagHelperComponent Inherited Members TagHelper.Init(TagHelperContext) TagHelper.Process(TagHelperContext, TagHelperOutput) TagHelper.Order object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Mithril.Themes.Abstractions.TagHelpers Assembly: Mithril.Themes.Abstractions.dll Syntax public class LinkTagHelper : TagHelper, ITagHelper, ITagHelperComponent Constructors | Improve this Doc View Source LinkTagHelper(IResourceService?) Initializes a new instance of the LinkTagHelper class. Declaration public LinkTagHelper(IResourceService? resources) Parameters Type Name Description IResourceService resources The resources. See Also TagHelper Properties | Improve this Doc View Source Resources Gets the resources. Declaration public IResourceService? Resources { get; } Property Value Type Description IResourceService The resources. See Also TagHelper Methods | Improve this Doc View Source ProcessAsync(TagHelperContext, TagHelperOutput) Synchronously executes the TagHelper with the given context and output. Declaration public override Task ProcessAsync(TagHelperContext context, TagHelperOutput output) Parameters Type Name Description TagHelperContext context Contains information associated with the current HTML tag. TagHelperOutput output A stateful HTML element used to generate an HTML tag. Returns Type Description Task Overrides TagHelper.ProcessAsync(TagHelperContext, TagHelperOutput) See Also TagHelper Implements ITagHelper ITagHelperComponent Extension Methods ExpandoObjectExtensions.ConvertToExpando<TEntity>(TEntity?) GenericExtensions.When<TObject>(TObject, bool, Func<TObject, TObject>) See Also TagHelper"
  },
  "api/Mithril.Themes.Abstractions.TagHelpers.MetaTagHelper.html": {
    "href": "api/Mithril.Themes.Abstractions.TagHelpers.MetaTagHelper.html",
    "title": "Class MetaTagHelper | Mithril API Reference",
    "keywords": "Class MetaTagHelper Meta tag helper Inheritance object TagHelper MetaTagHelper Implements ITagHelper ITagHelperComponent Inherited Members TagHelper.Init(TagHelperContext) TagHelper.Process(TagHelperContext, TagHelperOutput) TagHelper.Order object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Mithril.Themes.Abstractions.TagHelpers Assembly: Mithril.Themes.Abstractions.dll Syntax public class MetaTagHelper : TagHelper, ITagHelper, ITagHelperComponent Constructors | Improve this Doc View Source MetaTagHelper(IResourceService?) Initializes a new instance of the MetaTagHelper class. Declaration public MetaTagHelper(IResourceService? resources) Parameters Type Name Description IResourceService resources The resources. See Also TagHelper Properties | Improve this Doc View Source Resources Gets the resources. Declaration public IResourceService? Resources { get; } Property Value Type Description IResourceService The resources. See Also TagHelper Methods | Improve this Doc View Source ProcessAsync(TagHelperContext, TagHelperOutput) Synchronously executes the TagHelper with the given context and output. Declaration public override Task ProcessAsync(TagHelperContext context, TagHelperOutput output) Parameters Type Name Description TagHelperContext context Contains information associated with the current HTML tag. TagHelperOutput output A stateful HTML element used to generate an HTML tag. Returns Type Description Task Overrides TagHelper.ProcessAsync(TagHelperContext, TagHelperOutput) See Also TagHelper Implements ITagHelper ITagHelperComponent Extension Methods ExpandoObjectExtensions.ConvertToExpando<TEntity>(TEntity?) GenericExtensions.When<TObject>(TObject, bool, Func<TObject, TObject>) See Also TagHelper"
  },
  "api/Mithril.Themes.Abstractions.TagHelpers.ScriptTagHelper.html": {
    "href": "api/Mithril.Themes.Abstractions.TagHelpers.ScriptTagHelper.html",
    "title": "Class ScriptTagHelper | Mithril API Reference",
    "keywords": "Class ScriptTagHelper Resource tag helper Inheritance object TagHelper ScriptTagHelper Implements ITagHelper ITagHelperComponent Inherited Members TagHelper.Init(TagHelperContext) TagHelper.Process(TagHelperContext, TagHelperOutput) TagHelper.Order object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Mithril.Themes.Abstractions.TagHelpers Assembly: Mithril.Themes.Abstractions.dll Syntax public class ScriptTagHelper : TagHelper, ITagHelper, ITagHelperComponent Constructors | Improve this Doc View Source ScriptTagHelper(IResourceService?) Initializes a new instance of the ScriptTagHelper class. Declaration public ScriptTagHelper(IResourceService? resources) Parameters Type Name Description IResourceService resources The resources. See Also TagHelper Properties | Improve this Doc View Source Resources Gets the resources. Declaration public IResourceService? Resources { get; } Property Value Type Description IResourceService The resources. See Also TagHelper Methods | Improve this Doc View Source ProcessAsync(TagHelperContext, TagHelperOutput) Synchronously executes the TagHelper with the given values for context and output. Declaration public override Task ProcessAsync(TagHelperContext context, TagHelperOutput output) Parameters Type Name Description TagHelperContext context Contains information associated with the current HTML tag. TagHelperOutput output A stateful HTML element used to generate an HTML tag. Returns Type Description Task Overrides TagHelper.ProcessAsync(TagHelperContext, TagHelperOutput) See Also TagHelper Implements ITagHelper ITagHelperComponent Extension Methods ExpandoObjectExtensions.ConvertToExpando<TEntity>(TEntity?) GenericExtensions.When<TObject>(TObject, bool, Func<TObject, TObject>) See Also TagHelper"
  },
  "api/Mithril.Themes.Abstractions.TagHelpers.StyleTagHelper.html": {
    "href": "api/Mithril.Themes.Abstractions.TagHelpers.StyleTagHelper.html",
    "title": "Class StyleTagHelper | Mithril API Reference",
    "keywords": "Class StyleTagHelper Style tag helper Inheritance object TagHelper StyleTagHelper Implements ITagHelper ITagHelperComponent Inherited Members TagHelper.Init(TagHelperContext) TagHelper.Process(TagHelperContext, TagHelperOutput) TagHelper.Order object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Mithril.Themes.Abstractions.TagHelpers Assembly: Mithril.Themes.Abstractions.dll Syntax public class StyleTagHelper : TagHelper, ITagHelper, ITagHelperComponent Constructors | Improve this Doc View Source StyleTagHelper(IResourceService?) Initializes a new instance of the StyleTagHelper class. Declaration public StyleTagHelper(IResourceService? resources) Parameters Type Name Description IResourceService resources The resources. See Also TagHelper Properties | Improve this Doc View Source Resources Gets the resources. Declaration public IResourceService? Resources { get; } Property Value Type Description IResourceService The resources. See Also TagHelper Methods | Improve this Doc View Source ProcessAsync(TagHelperContext, TagHelperOutput) Synchronously executes the TagHelper with the given context and output. Declaration public override Task ProcessAsync(TagHelperContext context, TagHelperOutput output) Parameters Type Name Description TagHelperContext context Contains information associated with the current HTML tag. TagHelperOutput output A stateful HTML element used to generate an HTML tag. Returns Type Description Task Overrides TagHelper.ProcessAsync(TagHelperContext, TagHelperOutput) See Also TagHelper Implements ITagHelper ITagHelperComponent Extension Methods ExpandoObjectExtensions.ConvertToExpando<TEntity>(TEntity?) GenericExtensions.When<TObject>(TObject, bool, Func<TObject, TObject>) See Also TagHelper"
  },
  "api/Mithril.Themes.Abstractions.TagHelpers.html": {
    "href": "api/Mithril.Themes.Abstractions.TagHelpers.html",
    "title": "Namespace Mithril.Themes.Abstractions.TagHelpers | Mithril API Reference",
    "keywords": "Namespace Mithril.Themes.Abstractions.TagHelpers Classes LinkTagHelper Link tag helper MetaTagHelper Meta tag helper ScriptTagHelper Resource tag helper StyleTagHelper Style tag helper"
  },
  "api/Mithril.Themes.Admin.DropDowns.ThemeList.html": {
    "href": "api/Mithril.Themes.Admin.DropDowns.ThemeList.html",
    "title": "Class ThemeList | Mithril API Reference",
    "keywords": "Class ThemeList Theme list Inheritance object DropDownBaseClass<Theme> ThemeList Implements IDropDownQuery Inherited Members DropDownBaseClass<Theme>.Name DropDownBaseClass<Theme>.CanRun(string, ClaimsPrincipal) DropDownBaseClass<Theme>.GetDataAsync(string) DropDownBaseClass<Theme>.GetValues(string, int) DropDownBaseClass<Theme>.GetKey(Theme) object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Mithril.Themes.Admin.DropDowns Assembly: Mithril.Themes.dll Syntax public class ThemeList : DropDownBaseClass<Theme>, IDropDownQuery Methods | Improve this Doc View Source FilterQuery(IQueryable<Theme>, string) Filters the query. Declaration protected override IQueryable<Theme> FilterQuery(IQueryable<Theme> query, string value) Parameters Type Name Description IQueryable<Theme> query The query. string value The value. Returns Type Description IQueryable<Theme> The filtered query Overrides DropDownBaseClass<Theme>.FilterQuery(IQueryable<Theme>, string) See Also DropDownBaseClass<TModel> Implements IDropDownQuery Extension Methods ExpandoObjectExtensions.ConvertToExpando<TEntity>(TEntity?) GenericExtensions.When<TObject>(TObject, bool, Func<TObject, TObject>) See Also DropDownBaseClass<TModel>"
  },
  "api/Mithril.Themes.Admin.DropDowns.html": {
    "href": "api/Mithril.Themes.Admin.DropDowns.html",
    "title": "Namespace Mithril.Themes.Admin.DropDowns | Mithril API Reference",
    "keywords": "Namespace Mithril.Themes.Admin.DropDowns Classes ThemeList Theme list"
  },
  "api/Mithril.Themes.Admin.ThemeEditor.html": {
    "href": "api/Mithril.Themes.Admin.ThemeEditor.html",
    "title": "Class ThemeEditor | Mithril API Reference",
    "keywords": "Class ThemeEditor Theme editor Inheritance object EntityEditorBaseClass<ThemeSettingsVM> SettingsEditorBaseClass<ThemeSettingsVM> ThemeEditor Implements IEntityEditor IEditor Inherited Members SettingsEditorBaseClass<ThemeSettingsVM>.Category SettingsEditorBaseClass<ThemeSettingsVM>.ActivateAsync(long, ClaimsPrincipal) SettingsEditorBaseClass<ThemeSettingsVM>.DeleteEntityAsync(long, ClaimsPrincipal) SettingsEditorBaseClass<ThemeSettingsVM>.LoadPageAsync(int, int, string, bool, string, ClaimsPrincipal) SettingsEditorBaseClass<ThemeSettingsVM>.SaveEntityAsync(long, ExpandoObject, ClaimsPrincipal) SettingsEditorBaseClass<ThemeSettingsVM>.TotalActiveAsync(ClaimsPrincipal) EntityEditorBaseClass<ThemeSettingsVM>.ComponentDefinition EntityEditorBaseClass<ThemeSettingsVM>.Description EntityEditorBaseClass<ThemeSettingsVM>.EntityType EntityEditorBaseClass<ThemeSettingsVM>.Name EntityEditorBaseClass<ThemeSettingsVM>.DataService EntityEditorBaseClass<ThemeSettingsVM>.CanView(ClaimsPrincipal) object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Mithril.Themes.Admin Assembly: Mithril.Themes.dll Syntax public class ThemeEditor : SettingsEditorBaseClass<ThemeSettingsVM>, IEntityEditor, IEditor Constructors | Improve this Doc View Source ThemeEditor(IThemeService?, IDataService?, IEntityMetadataService?) Initializes a new instance of the ThemeEditor class. Declaration public ThemeEditor(IThemeService? themeService, IDataService? dataService, IEntityMetadataService? entityMetadataService) Parameters Type Name Description IThemeService themeService The theme service. IDataService dataService The data service. IEntityMetadataService entityMetadataService The entity metadata service. See Also SettingsEditorBaseClass<TEntity> Properties | Improve this Doc View Source Icon Gets the icon. Declaration public override string Icon { get; } Property Value Type Description string The icon. Overrides EntityEditorBaseClass<ThemeSettingsVM>.Icon See Also SettingsEditorBaseClass<TEntity> Methods | Improve this Doc View Source Load(long, ExpandoObject?, ClaimsPrincipal?) Loads the specified identifier. Declaration public override IEntity? Load(long id, ExpandoObject? model, ClaimsPrincipal? currentUser) Parameters Type Name Description long id The identifier. ExpandoObject model The model. ClaimsPrincipal currentUser Returns Type Description IEntity The entity specified. Overrides EntityEditorBaseClass<ThemeSettingsVM>.Load(long, ExpandoObject, ClaimsPrincipal) See Also SettingsEditorBaseClass<TEntity> | Improve this Doc View Source SaveEntityAsync(long, ThemeSettingsVM?, ClaimsPrincipal?) Saves the entity asynchronous. Declaration protected override Task<bool> SaveEntityAsync(long id, ThemeSettingsVM? entity, ClaimsPrincipal? currentUser) Parameters Type Name Description long id The identifier. ThemeSettingsVM entity The entity. ClaimsPrincipal currentUser The current user. Returns Type Description Task<bool> Overrides SettingsEditorBaseClass<ThemeSettingsVM>.SaveEntityAsync(long, ThemeSettingsVM, ClaimsPrincipal) See Also SettingsEditorBaseClass<TEntity> Implements IEntityEditor IEditor Extension Methods ExpandoObjectExtensions.ConvertToExpando<TEntity>(TEntity?) GenericExtensions.When<TObject>(TObject, bool, Func<TObject, TObject>) See Also SettingsEditorBaseClass<TEntity>"
  },
  "api/Mithril.Themes.Admin.ViewModels.ThemeSettingsVM.html": {
    "href": "api/Mithril.Themes.Admin.ViewModels.ThemeSettingsVM.html",
    "title": "Class ThemeSettingsVM | Mithril API Reference",
    "keywords": "Class ThemeSettingsVM Theme settings VM Inheritance object SettingsBaseClass ThemeSettingsVM Implements IEntity Inherited Members SettingsBaseClass.Active SettingsBaseClass.ID object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Mithril.Themes.Admin.ViewModels Assembly: Mithril.Themes.dll Syntax public class ThemeSettingsVM : SettingsBaseClass, IEntity Constructors | Improve this Doc View Source ThemeSettingsVM() Initializes a new instance of the ThemeSettingsVM class. Declaration public ThemeSettingsVM() See Also IEntity | Improve this Doc View Source ThemeSettingsVM(IThemeService?, IDataService?) Initializes a new instance of the ThemeSettingsVM class. Declaration public ThemeSettingsVM(IThemeService? themes, IDataService? dataService) Parameters Type Name Description IThemeService themes The themes. IDataService dataService The data service. See Also IEntity Properties | Improve this Doc View Source CurrentTheme Gets or sets the current theme. Declaration [Select(typeof(ThemeList), \"\")] public long CurrentTheme { get; set; } Property Value Type Description long The current theme. See Also IEntity Implements IEntity Extension Methods ExpandoObjectExtensions.ConvertToExpando<TEntity>(TEntity?) GenericExtensions.When<TObject>(TObject, bool, Func<TObject, TObject>) See Also IEntity"
  },
  "api/Mithril.Themes.Admin.ViewModels.html": {
    "href": "api/Mithril.Themes.Admin.ViewModels.html",
    "title": "Namespace Mithril.Themes.Admin.ViewModels | Mithril API Reference",
    "keywords": "Namespace Mithril.Themes.Admin.ViewModels Classes ThemeSettingsVM Theme settings VM"
  },
  "api/Mithril.Themes.Admin.html": {
    "href": "api/Mithril.Themes.Admin.html",
    "title": "Namespace Mithril.Themes.Admin | Mithril API Reference",
    "keywords": "Namespace Mithril.Themes.Admin Classes ThemeEditor Theme editor"
  },
  "api/Mithril.Themes.Commands.SetThemeCommandHandler.html": {
    "href": "api/Mithril.Themes.Commands.SetThemeCommandHandler.html",
    "title": "Class SetThemeCommandHandler | Mithril API Reference",
    "keywords": "Class SetThemeCommandHandler Set theme command handler Inheritance object CommandHandlerBaseClass<SetThemeCommand, SetThemeCommandVM> SetThemeCommandHandler Implements ICommandHandler<SetThemeCommandVM> ICommandHandler Inherited Members CommandHandlerBaseClass<SetThemeCommand, SetThemeCommandVM>.CommandName CommandHandlerBaseClass<SetThemeCommand, SetThemeCommandVM>.ContentTypeAccepts CommandHandlerBaseClass<SetThemeCommand, SetThemeCommandVM>.Features CommandHandlerBaseClass<SetThemeCommand, SetThemeCommandVM>.Tags CommandHandlerBaseClass<SetThemeCommand, SetThemeCommandVM>.Version CommandHandlerBaseClass<SetThemeCommand, SetThemeCommandVM>.ViewModelType CommandHandlerBaseClass<SetThemeCommand, SetThemeCommandVM>.FeatureManager CommandHandlerBaseClass<SetThemeCommand, SetThemeCommandVM>.Logger CommandHandlerBaseClass<SetThemeCommand, SetThemeCommandVM>.CanHandle(ICommand) CommandHandlerBaseClass<SetThemeCommand, SetThemeCommandVM>.CreateAsync(SetThemeCommandVM, ClaimsPrincipal) CommandHandlerBaseClass<SetThemeCommand, SetThemeCommandVM>.HandleCommandAsync(params ICommand[]) CommandHandlerBaseClass<SetThemeCommand, SetThemeCommandVM>.HandleCommandAsync(SetThemeCommand[]) CommandHandlerBaseClass<SetThemeCommand, SetThemeCommandVM>.IsFeatureEnabled() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Mithril.Themes.Commands Assembly: Mithril.Themes.dll Syntax public class SetThemeCommandHandler : CommandHandlerBaseClass<SetThemeCommand, SetThemeCommandVM>, ICommandHandler<SetThemeCommandVM>, ICommandHandler Constructors | Improve this Doc View Source SetThemeCommandHandler(ILogger<SetThemeCommandHandler>?, IFeatureManager?, IDataService?, IThemeService?, IEnumerable<ITheme>) Initializes a new instance of the SetThemeCommandHandler class. Declaration public SetThemeCommandHandler(ILogger<SetThemeCommandHandler>? logger, IFeatureManager? featureManager, IDataService? dataService, IThemeService? themeService, IEnumerable<ITheme> themes) Parameters Type Name Description ILogger<SetThemeCommandHandler> logger The logger. IFeatureManager featureManager The feature manager. IDataService dataService Data service. IThemeService themeService Theme service. IEnumerable<ITheme> themes Themes in the system. See Also CommandHandlerBaseClass<TCommand, TViewModel> Properties | Improve this Doc View Source CommandName Gets the command type accepted. Declaration public override string CommandName { get; } Property Value Type Description string The command type accepted. Overrides CommandHandlerBaseClass<SetThemeCommand, SetThemeCommandVM>.CommandName See Also CommandHandlerBaseClass<TCommand, TViewModel> | Improve this Doc View Source Tags Gets the tags (Used by OpenAPI, etc). Declaration public override string[] Tags { get; } Property Value Type Description string[] The tags (Used by OpenAPI, etc). Overrides CommandHandlerBaseClass<SetThemeCommand, SetThemeCommandVM>.Tags See Also CommandHandlerBaseClass<TCommand, TViewModel> Methods | Improve this Doc View Source CreateAsync(SetThemeCommandVM?, ClaimsPrincipal) Creates the specified value. Declaration public override ValueTask<CommandCreationResult?> CreateAsync(SetThemeCommandVM? value, ClaimsPrincipal user) Parameters Type Name Description SetThemeCommandVM value The value. ClaimsPrincipal user The user. Returns Type Description ValueTask<CommandCreationResult> A command value converted from the ExpandoObject. Overrides CommandHandlerBaseClass<SetThemeCommand, SetThemeCommandVM>.CreateAsync(SetThemeCommandVM, ClaimsPrincipal) See Also CommandHandlerBaseClass<TCommand, TViewModel> | Improve this Doc View Source HandleCommandAsync(SetThemeCommand?[]?) Handles the command. Declaration protected override Task<IEvent[]> HandleCommandAsync(SetThemeCommand?[]? args) Parameters Type Name Description SetThemeCommand[] args The arguments. Returns Type Description Task<IEvent[]> The events generated by the command. Overrides CommandHandlerBaseClass<SetThemeCommand, SetThemeCommandVM>.HandleCommandAsync(SetThemeCommand[]) See Also CommandHandlerBaseClass<TCommand, TViewModel> Implements ICommandHandler<TViewModel> ICommandHandler Extension Methods ExpandoObjectExtensions.ConvertToExpando<TEntity>(TEntity?) GenericExtensions.When<TObject>(TObject, bool, Func<TObject, TObject>) See Also CommandHandlerBaseClass<TCommand, TViewModel>"
  },
  "api/Mithril.Themes.Commands.ThemeChangedEventDefaultHandler.html": {
    "href": "api/Mithril.Themes.Commands.ThemeChangedEventDefaultHandler.html",
    "title": "Class ThemeChangedEventDefaultHandler | Mithril API Reference",
    "keywords": "Class ThemeChangedEventDefaultHandler Theme changed event default handler Inheritance object EventHandlerBaseClass<ThemeChangedEventDefaultHandler, ThemeChangedEvent> ThemeChangedEventDefaultHandler Implements IEventHandler Inherited Members EventHandlerBaseClass<ThemeChangedEventDefaultHandler, ThemeChangedEvent>.Features EventHandlerBaseClass<ThemeChangedEventDefaultHandler, ThemeChangedEvent>.Name EventHandlerBaseClass<ThemeChangedEventDefaultHandler, ThemeChangedEvent>.FeatureManager EventHandlerBaseClass<ThemeChangedEventDefaultHandler, ThemeChangedEvent>.Logger EventHandlerBaseClass<ThemeChangedEventDefaultHandler, ThemeChangedEvent>.Accepts(IEvent) EventHandlerBaseClass<ThemeChangedEventDefaultHandler, ThemeChangedEvent>.Handle(IEvent) EventHandlerBaseClass<ThemeChangedEventDefaultHandler, ThemeChangedEvent>.Handle(ThemeChangedEvent) EventHandlerBaseClass<ThemeChangedEventDefaultHandler, ThemeChangedEvent>.IsFeatureEnabled() object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Mithril.Themes.Commands Assembly: Mithril.Themes.dll Syntax public class ThemeChangedEventDefaultHandler : EventHandlerBaseClass<ThemeChangedEventDefaultHandler, ThemeChangedEvent>, IEventHandler Constructors | Improve this Doc View Source ThemeChangedEventDefaultHandler(ILogger<ThemeChangedEventDefaultHandler>?, IFeatureManager?) Initializes a new instance of the ThemeChangedEventDefaultHandler class. Declaration public ThemeChangedEventDefaultHandler(ILogger<ThemeChangedEventDefaultHandler>? logger, IFeatureManager? featureManager) Parameters Type Name Description ILogger<ThemeChangedEventDefaultHandler> logger The logger. IFeatureManager featureManager The feature manager. Methods | Improve this Doc View Source Handle(ThemeChangedEvent) Handles the specified argument. Declaration protected override EventResult Handle(ThemeChangedEvent arg) Parameters Type Name Description ThemeChangedEvent arg The argument. Returns Type Description EventResult The result from processing the event. Overrides EventHandlerBaseClass<ThemeChangedEventDefaultHandler, ThemeChangedEvent>.Handle(ThemeChangedEvent) Implements IEventHandler Extension Methods ExpandoObjectExtensions.ConvertToExpando<TEntity>(TEntity?) GenericExtensions.When<TObject>(TObject, bool, Func<TObject, TObject>)"
  },
  "api/Mithril.Themes.Commands.ViewModels.SetThemeCommandVM.html": {
    "href": "api/Mithril.Themes.Commands.ViewModels.SetThemeCommandVM.html",
    "title": "Class SetThemeCommandVM | Mithril API Reference",
    "keywords": "Class SetThemeCommandVM Set theme command VM Inheritance object SetThemeCommandVM Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Mithril.Themes.Commands.ViewModels Assembly: Mithril.Themes.dll Syntax public class SetThemeCommandVM Properties | Improve this Doc View Source Name Gets or sets the name. Declaration public string? Name { get; set; } Property Value Type Description string The name. Extension Methods ExpandoObjectExtensions.ConvertToExpando<TEntity>(TEntity?) GenericExtensions.When<TObject>(TObject, bool, Func<TObject, TObject>)"
  },
  "api/Mithril.Themes.Commands.ViewModels.html": {
    "href": "api/Mithril.Themes.Commands.ViewModels.html",
    "title": "Namespace Mithril.Themes.Commands.ViewModels | Mithril API Reference",
    "keywords": "Namespace Mithril.Themes.Commands.ViewModels Classes SetThemeCommandVM Set theme command VM"
  },
  "api/Mithril.Themes.Commands.html": {
    "href": "api/Mithril.Themes.Commands.html",
    "title": "Namespace Mithril.Themes.Commands | Mithril API Reference",
    "keywords": "Namespace Mithril.Themes.Commands Classes SetThemeCommandHandler Set theme command handler ThemeChangedEventDefaultHandler Theme changed event default handler"
  },
  "api/Mithril.Themes.LocationExpanders.CompositeViewLocationExpanderProvider.html": {
    "href": "api/Mithril.Themes.LocationExpanders.CompositeViewLocationExpanderProvider.html",
    "title": "Class CompositeViewLocationExpanderProvider | Mithril API Reference",
    "keywords": "Class CompositeViewLocationExpanderProvider Composite view location expander provider. Inheritance object CompositeViewLocationExpanderProvider Implements IViewLocationExpanderProvider IViewLocationExpander Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Mithril.Themes.LocationExpanders Assembly: Mithril.Themes.dll Syntax public class CompositeViewLocationExpanderProvider : IViewLocationExpanderProvider, IViewLocationExpander Properties | Improve this Doc View Source Priority Gets the priority. Declaration public int Priority { get; } Property Value Type Description int The priority. See Also IViewLocationExpanderProvider Methods | Improve this Doc View Source ExpandViewLocations(ViewLocationExpanderContext, IEnumerable<string>) Invoked by a RazorViewEngine to determine potential locations for a view. Declaration public IEnumerable<string> ExpandViewLocations(ViewLocationExpanderContext context, IEnumerable<string> viewLocations) Parameters Type Name Description ViewLocationExpanderContext context The ViewLocationExpanderContext for the current view location expansion operation. IEnumerable<string> viewLocations The sequence of view locations to expand. Returns Type Description IEnumerable<string> A list of expanded view locations. See Also IViewLocationExpanderProvider | Improve this Doc View Source PopulateValues(ViewLocationExpanderContext) Invoked by a RazorViewEngine to determine the values that would be consumed by this instance of IViewLocationExpander. The calculated values are used to determine if the view location has changed since the last time it was located. Declaration public void PopulateValues(ViewLocationExpanderContext context) Parameters Type Name Description ViewLocationExpanderContext context The ViewLocationExpanderContext for the current view location expansion operation. See Also IViewLocationExpanderProvider Implements IViewLocationExpanderProvider IViewLocationExpander Extension Methods ExpandoObjectExtensions.ConvertToExpando<TEntity>(TEntity?) GenericExtensions.When<TObject>(TObject, bool, Func<TObject, TObject>) See Also IViewLocationExpanderProvider"
  },
  "api/Mithril.Themes.LocationExpanders.DefaultViewLocationExpanderProvider.html": {
    "href": "api/Mithril.Themes.LocationExpanders.DefaultViewLocationExpanderProvider.html",
    "title": "Class DefaultViewLocationExpanderProvider | Mithril API Reference",
    "keywords": "Class DefaultViewLocationExpanderProvider Default view location expander Inheritance object DefaultViewLocationExpanderProvider Implements IViewLocationExpanderProvider IViewLocationExpander Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Mithril.Themes.LocationExpanders Assembly: Mithril.Themes.dll Syntax public class DefaultViewLocationExpanderProvider : IViewLocationExpanderProvider, IViewLocationExpander Properties | Improve this Doc View Source Priority Gets the priority. Declaration public int Priority { get; } Property Value Type Description int The priority. See Also IViewLocationExpanderProvider Methods | Improve this Doc View Source ExpandViewLocations(ViewLocationExpanderContext, IEnumerable<string>) Invoked by a RazorViewEngine to determine potential locations for a view. Declaration public virtual IEnumerable<string> ExpandViewLocations(ViewLocationExpanderContext context, IEnumerable<string> viewLocations) Parameters Type Name Description ViewLocationExpanderContext context The ViewLocationExpanderContext for the current view location expansion operation. IEnumerable<string> viewLocations The sequence of view locations to expand. Returns Type Description IEnumerable<string> A list of expanded view locations. See Also IViewLocationExpanderProvider | Improve this Doc View Source PopulateValues(ViewLocationExpanderContext) Invoked by a RazorViewEngine to determine the values that would be consumed by this instance of IViewLocationExpander. The calculated values are used to determine if the view location has changed since the last time it was located. Declaration public void PopulateValues(ViewLocationExpanderContext context) Parameters Type Name Description ViewLocationExpanderContext context The ViewLocationExpanderContext for the current view location expansion operation. See Also IViewLocationExpanderProvider Implements IViewLocationExpanderProvider IViewLocationExpander Extension Methods ExpandoObjectExtensions.ConvertToExpando<TEntity>(TEntity?) GenericExtensions.When<TObject>(TObject, bool, Func<TObject, TObject>) See Also IViewLocationExpanderProvider"
  },
  "api/Mithril.Themes.LocationExpanders.Interfaces.IViewLocationExpanderProvider.html": {
    "href": "api/Mithril.Themes.LocationExpanders.Interfaces.IViewLocationExpanderProvider.html",
    "title": "Interface IViewLocationExpanderProvider | Mithril API Reference",
    "keywords": "Interface IViewLocationExpanderProvider View location expander provider interface Inherited Members IViewLocationExpander.PopulateValues(ViewLocationExpanderContext) IViewLocationExpander.ExpandViewLocations(ViewLocationExpanderContext, IEnumerable<string>) Namespace: Mithril.Themes.LocationExpanders.Interfaces Assembly: Mithril.Themes.dll Syntax public interface IViewLocationExpanderProvider : IViewLocationExpander Properties | Improve this Doc View Source Priority Gets the priority. Declaration int Priority { get; } Property Value Type Description int The priority. See Also IViewLocationExpander Extension Methods ExpandoObjectExtensions.ConvertToExpando<TEntity>(TEntity?) GenericExtensions.When<TObject>(TObject, bool, Func<TObject, TObject>) See Also IViewLocationExpander"
  },
  "api/Mithril.Themes.LocationExpanders.Interfaces.html": {
    "href": "api/Mithril.Themes.LocationExpanders.Interfaces.html",
    "title": "Namespace Mithril.Themes.LocationExpanders.Interfaces | Mithril API Reference",
    "keywords": "Namespace Mithril.Themes.LocationExpanders.Interfaces Interfaces IViewLocationExpanderProvider View location expander provider interface"
  },
  "api/Mithril.Themes.LocationExpanders.ModuleViewLocationExpanderProvider.html": {
    "href": "api/Mithril.Themes.LocationExpanders.ModuleViewLocationExpanderProvider.html",
    "title": "Class ModuleViewLocationExpanderProvider | Mithril API Reference",
    "keywords": "Class ModuleViewLocationExpanderProvider Module view location expander provider Inheritance object ModuleViewLocationExpanderProvider Implements IViewLocationExpanderProvider IViewLocationExpander Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Mithril.Themes.LocationExpanders Assembly: Mithril.Themes.dll Syntax public class ModuleViewLocationExpanderProvider : IViewLocationExpanderProvider, IViewLocationExpander Constructors | Improve this Doc View Source ModuleViewLocationExpanderProvider(IThemeService?) Initializes a new instance of the ModuleViewLocationExpanderProvider class. Declaration public ModuleViewLocationExpanderProvider(IThemeService? themeManager) Parameters Type Name Description IThemeService themeManager The theme manager. See Also IViewLocationExpanderProvider Properties | Improve this Doc View Source Priority Gets the priority. Declaration public int Priority { get; } Property Value Type Description int The priority. See Also IViewLocationExpanderProvider Methods | Improve this Doc View Source ExpandViewLocations(ViewLocationExpanderContext, IEnumerable<string>) Invoked by a RazorViewEngine to determine potential locations for a view. Declaration public virtual IEnumerable<string> ExpandViewLocations(ViewLocationExpanderContext context, IEnumerable<string> viewLocations) Parameters Type Name Description ViewLocationExpanderContext context The ViewLocationExpanderContext for the current view location expansion operation. IEnumerable<string> viewLocations The sequence of view locations to expand. Returns Type Description IEnumerable<string> A list of expanded view locations. See Also IViewLocationExpanderProvider | Improve this Doc View Source PopulateValues(ViewLocationExpanderContext) Invoked by a RazorViewEngine to determine the values that would be consumed by this instance of IViewLocationExpander. The calculated values are used to determine if the view location has changed since the last time it was located. Declaration public void PopulateValues(ViewLocationExpanderContext context) Parameters Type Name Description ViewLocationExpanderContext context The ViewLocationExpanderContext for the current view location expansion operation. See Also IViewLocationExpanderProvider Implements IViewLocationExpanderProvider IViewLocationExpander Extension Methods ExpandoObjectExtensions.ConvertToExpando<TEntity>(TEntity?) GenericExtensions.When<TObject>(TObject, bool, Func<TObject, TObject>) See Also IViewLocationExpanderProvider"
  },
  "api/Mithril.Themes.LocationExpanders.html": {
    "href": "api/Mithril.Themes.LocationExpanders.html",
    "title": "Namespace Mithril.Themes.LocationExpanders | Mithril API Reference",
    "keywords": "Namespace Mithril.Themes.LocationExpanders Classes CompositeViewLocationExpanderProvider Composite view location expander provider. DefaultViewLocationExpanderProvider Default view location expander ModuleViewLocationExpanderProvider Module view location expander provider"
  },
  "api/Mithril.Themes.Models.Mappings.SetThemeCommandMapping.html": {
    "href": "api/Mithril.Themes.Models.Mappings.SetThemeCommandMapping.html",
    "title": "Class SetThemeCommandMapping | Mithril API Reference",
    "keywords": "Class SetThemeCommandMapping Set theme command mapping Inheritance object MappingBaseClass<SetThemeCommand, DefaultDatabase> SetThemeCommandMapping Implements IMapping<SetThemeCommand> IMapping Inherited Members MappingBaseClass<SetThemeCommand, DefaultDatabase>.AddAutoKey() MappingBaseClass<SetThemeCommand, DefaultDatabase>.ContainsProperty(string) MappingBaseClass<SetThemeCommand, DefaultDatabase>.Copy(IMapping) MappingBaseClass<SetThemeCommand, DefaultDatabase>.CopyProperty(IIDProperty) MappingBaseClass<SetThemeCommand, DefaultDatabase>.CopyProperty(IProperty) MappingBaseClass<SetThemeCommand, DefaultDatabase>.CopyProperty(IMapProperty) MappingBaseClass<SetThemeCommand, DefaultDatabase>.CopyProperty(IManyToOneProperty) MappingBaseClass<SetThemeCommand, DefaultDatabase>.CopyProperty(IManyToManyProperty) MappingBaseClass<SetThemeCommand, DefaultDatabase>.Equals(object) MappingBaseClass<SetThemeCommand, DefaultDatabase>.GetColumnName(string) MappingBaseClass<SetThemeCommand, DefaultDatabase>.GetHashCode() MappingBaseClass<SetThemeCommand, DefaultDatabase>.ID<TDataType>(Expression<Func<SetThemeCommand, TDataType>>) MappingBaseClass<SetThemeCommand, DefaultDatabase>.ManyToMany<TDataType>(Expression<Func<SetThemeCommand, IList<TDataType>>>) MappingBaseClass<SetThemeCommand, DefaultDatabase>.ManyToOne<TDataType>(Expression<Func<SetThemeCommand, IList<TDataType>>>) MappingBaseClass<SetThemeCommand, DefaultDatabase>.ManyToOne<TDataType>(Expression<Func<SetThemeCommand, TDataType>>) MappingBaseClass<SetThemeCommand, DefaultDatabase>.Map<TDataType>(Expression<Func<SetThemeCommand, TDataType>>) MappingBaseClass<SetThemeCommand, DefaultDatabase>.Reduce(ILogger) MappingBaseClass<SetThemeCommand, DefaultDatabase>.Reduce(IMapping, ILogger) MappingBaseClass<SetThemeCommand, DefaultDatabase>.Reference<TDataType>(Expression<Func<SetThemeCommand, TDataType>>) MappingBaseClass<SetThemeCommand, DefaultDatabase>.SetQuery(QueryType, string, CommandType, params IParameter[]) MappingBaseClass<SetThemeCommand, DefaultDatabase>.Setup() MappingBaseClass<SetThemeCommand, DefaultDatabase>.ToString() MappingBaseClass<SetThemeCommand, DefaultDatabase>.AutoIDProperties MappingBaseClass<SetThemeCommand, DefaultDatabase>.DatabaseConfigType MappingBaseClass<SetThemeCommand, DefaultDatabase>.IDProperties MappingBaseClass<SetThemeCommand, DefaultDatabase>.ManyToManyProperties MappingBaseClass<SetThemeCommand, DefaultDatabase>.ManyToOneProperties MappingBaseClass<SetThemeCommand, DefaultDatabase>.MapProperties MappingBaseClass<SetThemeCommand, DefaultDatabase>.Merge MappingBaseClass<SetThemeCommand, DefaultDatabase>.ObjectType MappingBaseClass<SetThemeCommand, DefaultDatabase>.Order MappingBaseClass<SetThemeCommand, DefaultDatabase>.Prefix MappingBaseClass<SetThemeCommand, DefaultDatabase>.Queries MappingBaseClass<SetThemeCommand, DefaultDatabase>.ReferenceProperties MappingBaseClass<SetThemeCommand, DefaultDatabase>.SchemaName MappingBaseClass<SetThemeCommand, DefaultDatabase>.Suffix MappingBaseClass<SetThemeCommand, DefaultDatabase>.TableName object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Mithril.Themes.Models.Mappings Assembly: Mithril.Themes.dll Syntax public class SetThemeCommandMapping : MappingBaseClass<SetThemeCommand, DefaultDatabase>, IMapping<SetThemeCommand>, IMapping Constructors | Improve this Doc View Source SetThemeCommandMapping() Initializes a new instance of the SetThemeCommandMapping class. Declaration public SetThemeCommandMapping() See Also MappingBaseClass<TClassType, TDatabaseType> Implements IMapping<TClassType> IMapping Extension Methods ExpandoObjectExtensions.ConvertToExpando<TEntity>(TEntity?) GenericExtensions.When<TObject>(TObject, bool, Func<TObject, TObject>) See Also MappingBaseClass<TClassType, TDatabaseType>"
  },
  "api/Mithril.Themes.Models.Mappings.ThemeChangedEventMapping.html": {
    "href": "api/Mithril.Themes.Models.Mappings.ThemeChangedEventMapping.html",
    "title": "Class ThemeChangedEventMapping | Mithril API Reference",
    "keywords": "Class ThemeChangedEventMapping Theme change event mapping Inheritance object MappingBaseClass<ThemeChangedEvent, DefaultDatabase> ThemeChangedEventMapping Implements IMapping<ThemeChangedEvent> IMapping Inherited Members MappingBaseClass<ThemeChangedEvent, DefaultDatabase>.AddAutoKey() MappingBaseClass<ThemeChangedEvent, DefaultDatabase>.ContainsProperty(string) MappingBaseClass<ThemeChangedEvent, DefaultDatabase>.Copy(IMapping) MappingBaseClass<ThemeChangedEvent, DefaultDatabase>.CopyProperty(IIDProperty) MappingBaseClass<ThemeChangedEvent, DefaultDatabase>.CopyProperty(IProperty) MappingBaseClass<ThemeChangedEvent, DefaultDatabase>.CopyProperty(IMapProperty) MappingBaseClass<ThemeChangedEvent, DefaultDatabase>.CopyProperty(IManyToOneProperty) MappingBaseClass<ThemeChangedEvent, DefaultDatabase>.CopyProperty(IManyToManyProperty) MappingBaseClass<ThemeChangedEvent, DefaultDatabase>.Equals(object) MappingBaseClass<ThemeChangedEvent, DefaultDatabase>.GetColumnName(string) MappingBaseClass<ThemeChangedEvent, DefaultDatabase>.GetHashCode() MappingBaseClass<ThemeChangedEvent, DefaultDatabase>.ID<TDataType>(Expression<Func<ThemeChangedEvent, TDataType>>) MappingBaseClass<ThemeChangedEvent, DefaultDatabase>.ManyToMany<TDataType>(Expression<Func<ThemeChangedEvent, IList<TDataType>>>) MappingBaseClass<ThemeChangedEvent, DefaultDatabase>.ManyToOne<TDataType>(Expression<Func<ThemeChangedEvent, IList<TDataType>>>) MappingBaseClass<ThemeChangedEvent, DefaultDatabase>.ManyToOne<TDataType>(Expression<Func<ThemeChangedEvent, TDataType>>) MappingBaseClass<ThemeChangedEvent, DefaultDatabase>.Map<TDataType>(Expression<Func<ThemeChangedEvent, TDataType>>) MappingBaseClass<ThemeChangedEvent, DefaultDatabase>.Reduce(ILogger) MappingBaseClass<ThemeChangedEvent, DefaultDatabase>.Reduce(IMapping, ILogger) MappingBaseClass<ThemeChangedEvent, DefaultDatabase>.Reference<TDataType>(Expression<Func<ThemeChangedEvent, TDataType>>) MappingBaseClass<ThemeChangedEvent, DefaultDatabase>.SetQuery(QueryType, string, CommandType, params IParameter[]) MappingBaseClass<ThemeChangedEvent, DefaultDatabase>.Setup() MappingBaseClass<ThemeChangedEvent, DefaultDatabase>.ToString() MappingBaseClass<ThemeChangedEvent, DefaultDatabase>.AutoIDProperties MappingBaseClass<ThemeChangedEvent, DefaultDatabase>.DatabaseConfigType MappingBaseClass<ThemeChangedEvent, DefaultDatabase>.IDProperties MappingBaseClass<ThemeChangedEvent, DefaultDatabase>.ManyToManyProperties MappingBaseClass<ThemeChangedEvent, DefaultDatabase>.ManyToOneProperties MappingBaseClass<ThemeChangedEvent, DefaultDatabase>.MapProperties MappingBaseClass<ThemeChangedEvent, DefaultDatabase>.Merge MappingBaseClass<ThemeChangedEvent, DefaultDatabase>.ObjectType MappingBaseClass<ThemeChangedEvent, DefaultDatabase>.Order MappingBaseClass<ThemeChangedEvent, DefaultDatabase>.Prefix MappingBaseClass<ThemeChangedEvent, DefaultDatabase>.Queries MappingBaseClass<ThemeChangedEvent, DefaultDatabase>.ReferenceProperties MappingBaseClass<ThemeChangedEvent, DefaultDatabase>.SchemaName MappingBaseClass<ThemeChangedEvent, DefaultDatabase>.Suffix MappingBaseClass<ThemeChangedEvent, DefaultDatabase>.TableName object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Mithril.Themes.Models.Mappings Assembly: Mithril.Themes.dll Syntax public class ThemeChangedEventMapping : MappingBaseClass<ThemeChangedEvent, DefaultDatabase>, IMapping<ThemeChangedEvent>, IMapping Constructors | Improve this Doc View Source ThemeChangedEventMapping() Initializes a new instance of the ThemeChangedEventMapping class. Declaration public ThemeChangedEventMapping() Implements IMapping<TClassType> IMapping Extension Methods ExpandoObjectExtensions.ConvertToExpando<TEntity>(TEntity?) GenericExtensions.When<TObject>(TObject, bool, Func<TObject, TObject>)"
  },
  "api/Mithril.Themes.Models.Mappings.ThemeMapping.html": {
    "href": "api/Mithril.Themes.Models.Mappings.ThemeMapping.html",
    "title": "Class ThemeMapping | Mithril API Reference",
    "keywords": "Class ThemeMapping Theme mapping Inheritance object MappingBaseClass<Theme, DefaultDatabase> ThemeMapping Implements IMapping<Theme> IMapping Inherited Members MappingBaseClass<Theme, DefaultDatabase>.AddAutoKey() MappingBaseClass<Theme, DefaultDatabase>.ContainsProperty(string) MappingBaseClass<Theme, DefaultDatabase>.Copy(IMapping) MappingBaseClass<Theme, DefaultDatabase>.CopyProperty(IIDProperty) MappingBaseClass<Theme, DefaultDatabase>.CopyProperty(IProperty) MappingBaseClass<Theme, DefaultDatabase>.CopyProperty(IMapProperty) MappingBaseClass<Theme, DefaultDatabase>.CopyProperty(IManyToOneProperty) MappingBaseClass<Theme, DefaultDatabase>.CopyProperty(IManyToManyProperty) MappingBaseClass<Theme, DefaultDatabase>.Equals(object) MappingBaseClass<Theme, DefaultDatabase>.GetColumnName(string) MappingBaseClass<Theme, DefaultDatabase>.GetHashCode() MappingBaseClass<Theme, DefaultDatabase>.ID<TDataType>(Expression<Func<Theme, TDataType>>) MappingBaseClass<Theme, DefaultDatabase>.ManyToMany<TDataType>(Expression<Func<Theme, IList<TDataType>>>) MappingBaseClass<Theme, DefaultDatabase>.ManyToOne<TDataType>(Expression<Func<Theme, IList<TDataType>>>) MappingBaseClass<Theme, DefaultDatabase>.ManyToOne<TDataType>(Expression<Func<Theme, TDataType>>) MappingBaseClass<Theme, DefaultDatabase>.Map<TDataType>(Expression<Func<Theme, TDataType>>) MappingBaseClass<Theme, DefaultDatabase>.Reduce(ILogger) MappingBaseClass<Theme, DefaultDatabase>.Reduce(IMapping, ILogger) MappingBaseClass<Theme, DefaultDatabase>.Reference<TDataType>(Expression<Func<Theme, TDataType>>) MappingBaseClass<Theme, DefaultDatabase>.SetQuery(QueryType, string, CommandType, params IParameter[]) MappingBaseClass<Theme, DefaultDatabase>.Setup() MappingBaseClass<Theme, DefaultDatabase>.ToString() MappingBaseClass<Theme, DefaultDatabase>.AutoIDProperties MappingBaseClass<Theme, DefaultDatabase>.DatabaseConfigType MappingBaseClass<Theme, DefaultDatabase>.IDProperties MappingBaseClass<Theme, DefaultDatabase>.ManyToManyProperties MappingBaseClass<Theme, DefaultDatabase>.ManyToOneProperties MappingBaseClass<Theme, DefaultDatabase>.MapProperties MappingBaseClass<Theme, DefaultDatabase>.Merge MappingBaseClass<Theme, DefaultDatabase>.ObjectType MappingBaseClass<Theme, DefaultDatabase>.Order MappingBaseClass<Theme, DefaultDatabase>.Prefix MappingBaseClass<Theme, DefaultDatabase>.Queries MappingBaseClass<Theme, DefaultDatabase>.ReferenceProperties MappingBaseClass<Theme, DefaultDatabase>.SchemaName MappingBaseClass<Theme, DefaultDatabase>.Suffix MappingBaseClass<Theme, DefaultDatabase>.TableName object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Mithril.Themes.Models.Mappings Assembly: Mithril.Themes.dll Syntax public class ThemeMapping : MappingBaseClass<Theme, DefaultDatabase>, IMapping<Theme>, IMapping Constructors | Improve this Doc View Source ThemeMapping() Initializes a new instance of the ThemeMapping class. Declaration public ThemeMapping() See Also MappingBaseClass<TClassType, TDatabaseType> Implements IMapping<TClassType> IMapping Extension Methods ExpandoObjectExtensions.ConvertToExpando<TEntity>(TEntity?) GenericExtensions.When<TObject>(TObject, bool, Func<TObject, TObject>) See Also MappingBaseClass<TClassType, TDatabaseType>"
  },
  "api/Mithril.Themes.Models.Mappings.html": {
    "href": "api/Mithril.Themes.Models.Mappings.html",
    "title": "Namespace Mithril.Themes.Models.Mappings | Mithril API Reference",
    "keywords": "Namespace Mithril.Themes.Models.Mappings Classes SetThemeCommandMapping Set theme command mapping ThemeChangedEventMapping Theme change event mapping ThemeMapping Theme mapping"
  },
  "api/Mithril.Themes.Models.SetThemeCommand.html": {
    "href": "api/Mithril.Themes.Models.SetThemeCommand.html",
    "title": "Class SetThemeCommand | Mithril API Reference",
    "keywords": "Class SetThemeCommand Set theme command Inheritance object ModelBase<SetThemeCommand> CommandBaseClass<SetThemeCommand> SetThemeCommand Implements IModel<SetThemeCommand> IEquatable<IModel<SetThemeCommand>> IComparable IComparable<SetThemeCommand> IEquatable<ModelBase<SetThemeCommand>> ICommand IEquatable<ICommand> IModel IEquatable<IModel> IEquatable<CommandBaseClass<SetThemeCommand>> Inherited Members CommandBaseClass<SetThemeCommand>.Name CommandBaseClass<SetThemeCommand>.CompareTo(CommandBaseClass<SetThemeCommand>) CommandBaseClass<SetThemeCommand>.Equals(CommandBaseClass<SetThemeCommand>) CommandBaseClass<SetThemeCommand>.Equals(ICommand) CommandBaseClass<SetThemeCommand>.ToString() ModelBase<SetThemeCommand>.Active ModelBase<SetThemeCommand>.Creator ModelBase<SetThemeCommand>.DateCreated ModelBase<SetThemeCommand>.DateModified ModelBase<SetThemeCommand>.ID ModelBase<SetThemeCommand>.Modifier ModelBase<SetThemeCommand>.TenantID ModelBase<SetThemeCommand>.All(IDataService) ModelBase<SetThemeCommand>.AllActive(IDataService) ModelBase<SetThemeCommand>.AllInactive(IDataService) ModelBase<SetThemeCommand>.Load(long, IDataService) ModelBase<SetThemeCommand>.Query(IDataService) ModelBase<SetThemeCommand>.CanBeModifiedBy(ClaimsPrincipal) ModelBase<SetThemeCommand>.CanBeViewedBy(ClaimsPrincipal) ModelBase<SetThemeCommand>.CompareTo(object) ModelBase<SetThemeCommand>.DeleteAsync(IDataService, ClaimsPrincipal, bool) ModelBase<SetThemeCommand>.Equals(IModel) ModelBase<SetThemeCommand>.Equals(IModel<SetThemeCommand>) ModelBase<SetThemeCommand>.Equals(ModelBase<SetThemeCommand>) ModelBase<SetThemeCommand>.SaveAsync(IDataService, ClaimsPrincipal) ModelBase<SetThemeCommand>.SetupObject(IDataService, ClaimsPrincipal) ModelBase<SetThemeCommand>.SetupObject(IDataService, IUser) ModelBase<SetThemeCommand>.SetupObjectAndReturn(IDataService, ClaimsPrincipal) object.Equals(object, object) object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Namespace: Mithril.Themes.Models Assembly: Mithril.Themes.dll Syntax public class SetThemeCommand : CommandBaseClass<SetThemeCommand>, IModel<SetThemeCommand>, IEquatable<IModel<SetThemeCommand>>, IComparable, IComparable<SetThemeCommand>, IEquatable<ModelBase<SetThemeCommand>>, ICommand, IEquatable<ICommand>, IModel, IEquatable<IModel>, IEquatable<CommandBaseClass<SetThemeCommand>> Constructors | Improve this Doc View Source SetThemeCommand() Initializes a new instance of the SetThemeCommand class. Declaration public SetThemeCommand() See Also CommandBaseClass<TCommand> | Improve this Doc View Source SetThemeCommand(string?) Initializes a new instance of the SetThemeCommand class. Declaration public SetThemeCommand(string? themeName) Parameters Type Name Description string themeName Theme name See Also CommandBaseClass<TCommand> Properties | Improve this Doc View Source ThemeName Gets the theme name. Declaration [MaxLength(64)] [Required] [MinLength(1)] public string? ThemeName { get; set; } Property Value Type Description string The theme name. See Also CommandBaseClass<TCommand> Methods | Improve this Doc View Source CompareTo(SetThemeCommand?) Compares the object to another object Declaration public override int CompareTo(SetThemeCommand? other) Parameters Type Name Description SetThemeCommand other Object to compare to Returns Type Description int 0 if they are equal, -1 if this is smaller, 1 if it is larger Overrides ModelBase<SetThemeCommand>.CompareTo(SetThemeCommand) See Also CommandBaseClass<TCommand> | Improve this Doc View Source Equals(SetThemeCommand) Indicates whether the current object is equal to another object of the same type. Declaration public bool Equals(SetThemeCommand other) Parameters Type Name Description SetThemeCommand other An object to compare with this object. Returns Type Description bool true if the current object is equal to the other parameter; otherwise, false. See Also CommandBaseClass<TCommand> | Improve this Doc View Source Equals(object?) Determines whether the specified object, is equal to this instance. Declaration public override bool Equals(object? obj) Parameters Type Name Description object obj The object to compare with this instance. Returns Type Description bool true if the specified object is equal to this instance; otherwise, false. Overrides CommandBaseClass<SetThemeCommand>.Equals(object) See Also CommandBaseClass<TCommand> | Improve this Doc View Source GetHashCode() Returns a hash code for this instance. Declaration public override int GetHashCode() Returns Type Description int A hash code for this instance, suitable for use in hashing algorithms and data structures like a hash table. Overrides CommandBaseClass<SetThemeCommand>.GetHashCode() See Also CommandBaseClass<TCommand> Operators | Improve this Doc View Source operator ==(SetThemeCommand, SetThemeCommand) Implements the operator ==. Declaration public static bool operator ==(SetThemeCommand first, SetThemeCommand second) Parameters Type Name Description SetThemeCommand first The first. SetThemeCommand second The second. Returns Type Description bool The result of the operator. See Also CommandBaseClass<TCommand> | Improve this Doc View Source operator >(SetThemeCommand, SetThemeCommand) Implements the operator >. Declaration public static bool operator >(SetThemeCommand left, SetThemeCommand right) Parameters Type Name Description SetThemeCommand left The left. SetThemeCommand right The right. Returns Type Description bool The result of the operator. See Also CommandBaseClass<TCommand> | Improve this Doc View Source operator >=(SetThemeCommand, SetThemeCommand) Implements the operator >=. Declaration public static bool operator >=(SetThemeCommand left, SetThemeCommand right) Parameters Type Name Description SetThemeCommand left The left. SetThemeCommand right The right. Returns Type Description bool The result of the operator. See Also CommandBaseClass<TCommand> | Improve this Doc View Source operator !=(SetThemeCommand, SetThemeCommand) Implements the operator !=. Declaration public static bool operator !=(SetThemeCommand left, SetThemeCommand right) Parameters Type Name Description SetThemeCommand left The left. SetThemeCommand right The right. Returns Type Description bool The result of the operator. See Also CommandBaseClass<TCommand> | Improve this Doc View Source operator <(SetThemeCommand, SetThemeCommand) Implements the operator <. Declaration public static bool operator <(SetThemeCommand left, SetThemeCommand right) Parameters Type Name Description SetThemeCommand left The left. SetThemeCommand right The right. Returns Type Description bool The result of the operator. See Also CommandBaseClass<TCommand> | Improve this Doc View Source operator <=(SetThemeCommand, SetThemeCommand) Implements the operator <=. Declaration public static bool operator <=(SetThemeCommand left, SetThemeCommand right) Parameters Type Name Description SetThemeCommand left The left. SetThemeCommand right The right. Returns Type Description bool The result of the operator. See Also CommandBaseClass<TCommand> Implements IModel<TClass> IEquatable<T> IComparable IComparable<T> IEquatable<T> ICommand IEquatable<T> IModel IEquatable<T> IEquatable<T> Extension Methods ExpandoObjectExtensions.ConvertToExpando<TEntity>(TEntity?) GenericExtensions.When<TObject>(TObject, bool, Func<TObject, TObject>) See Also CommandBaseClass<TCommand>"
  },
  "api/Mithril.Themes.Models.Theme.html": {
    "href": "api/Mithril.Themes.Models.Theme.html",
    "title": "Class Theme | Mithril API Reference",
    "keywords": "Class Theme Theme model Inheritance object ModelBase<Theme> Theme Implements IModel<Theme> IModel IEquatable<IModel> IEquatable<IModel<Theme>> IComparable IComparable<Theme> IEquatable<ModelBase<Theme>> Inherited Members ModelBase<Theme>.Active ModelBase<Theme>.Creator ModelBase<Theme>.DateCreated ModelBase<Theme>.DateModified ModelBase<Theme>.ID ModelBase<Theme>.Modifier ModelBase<Theme>.TenantID ModelBase<Theme>.All(IDataService) ModelBase<Theme>.AllActive(IDataService) ModelBase<Theme>.AllInactive(IDataService) ModelBase<Theme>.Load(long, IDataService) ModelBase<Theme>.Query(IDataService) ModelBase<Theme>.CanBeModifiedBy(ClaimsPrincipal) ModelBase<Theme>.CanBeViewedBy(ClaimsPrincipal) ModelBase<Theme>.CompareTo(object) ModelBase<Theme>.DeleteAsync(IDataService, ClaimsPrincipal, bool) ModelBase<Theme>.Equals(IModel) ModelBase<Theme>.Equals(IModel<Theme>) ModelBase<Theme>.Equals(ModelBase<Theme>) ModelBase<Theme>.SaveAsync(IDataService, ClaimsPrincipal) ModelBase<Theme>.SetupObject(IDataService, ClaimsPrincipal) ModelBase<Theme>.SetupObject(IDataService, IUser) ModelBase<Theme>.SetupObjectAndReturn(IDataService, ClaimsPrincipal) object.Equals(object, object) object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Namespace: Mithril.Themes.Models Assembly: Mithril.Themes.dll Syntax public class Theme : ModelBase<Theme>, IModel<Theme>, IModel, IEquatable<IModel>, IEquatable<IModel<Theme>>, IComparable, IComparable<Theme>, IEquatable<ModelBase<Theme>> Constructors | Improve this Doc View Source Theme() Initializes a new instance of the Theme class. Declaration public Theme() See Also ModelBase<TClass> | Improve this Doc View Source Theme(string) Initializes a new instance of the Theme class. Declaration public Theme(string name) Parameters Type Name Description string name The name. Exceptions Type Condition ArgumentNullException name ArgumentException name See Also ModelBase<TClass> Properties | Improve this Doc View Source IsDefault Gets or sets a value indicating whether this instance is default. Declaration public bool IsDefault { get; set; } Property Value Type Description bool true if this instance is default; otherwise, false. See Also ModelBase<TClass> | Improve this Doc View Source Name Gets or sets the input path. Declaration [MaxLength(64)] [MinLength(1)] [Required] public string? Name { get; set; } Property Value Type Description string The input path. See Also ModelBase<TClass> Methods | Improve this Doc View Source CompareTo(Theme?) Compares the object to another object Declaration public override int CompareTo(Theme? other) Parameters Type Name Description Theme other Object to compare to Returns Type Description int 0 if they are equal, -1 if this is smaller, 1 if it is larger Overrides ModelBase<Theme>.CompareTo(Theme) See Also ModelBase<TClass> | Improve this Doc View Source Equals(Theme) Indicates whether the current object is equal to another object of the same type. Declaration public bool Equals(Theme other) Parameters Type Name Description Theme other An object to compare with this object. Returns Type Description bool true if the current object is equal to the other parameter; otherwise, false. See Also ModelBase<TClass> | Improve this Doc View Source Equals(object?) Determines whether the specified object, is equal to this instance. Declaration public override bool Equals(object? obj) Parameters Type Name Description object obj The object to compare with this instance. Returns Type Description bool true if the specified object is equal to this instance; otherwise, false. Overrides ModelBase<Theme>.Equals(object) See Also ModelBase<TClass> | Improve this Doc View Source GetHashCode() Returns a hash code for this instance. Declaration public override int GetHashCode() Returns Type Description int A hash code for this instance, suitable for use in hashing algorithms and data structures like a hash table. Overrides Mithril.Data.Abstractions.BaseClasses.ModelBase<Mithril.Themes.Models.Theme>.GetHashCode() See Also ModelBase<TClass> | Improve this Doc View Source Load(string?, IDataService?) Loads the theme by name. Declaration public static Theme? Load(string? name, IDataService? dataService) Parameters Type Name Description string name The name. IDataService dataService The data service. Returns Type Description Theme The route specified. See Also ModelBase<TClass> | Improve this Doc View Source LoadOrCreateAsync(string, IDataService?, ClaimsPrincipal?) Loads or creates the route. Declaration public static Task<Theme> LoadOrCreateAsync(string name, IDataService? dataService, ClaimsPrincipal? user) Parameters Type Name Description string name The name. IDataService dataService The data service. ClaimsPrincipal user The user. Returns Type Description Task<Theme> The route entry. See Also ModelBase<TClass> | Improve this Doc View Source ToString() Converts to string. Declaration public override string ToString() Returns Type Description string A string that represents this instance. Overrides object.ToString() See Also ModelBase<TClass> Operators | Improve this Doc View Source operator ==(Theme, Theme) Implements the operator ==. Declaration public static bool operator ==(Theme first, Theme second) Parameters Type Name Description Theme first The first. Theme second The second. Returns Type Description bool The result of the operator. See Also ModelBase<TClass> | Improve this Doc View Source operator >(Theme, Theme) Implements the operator >. Declaration public static bool operator >(Theme left, Theme right) Parameters Type Name Description Theme left The left. Theme right The right. Returns Type Description bool The result of the operator. See Also ModelBase<TClass> | Improve this Doc View Source operator >=(Theme, Theme) Implements the operator >=. Declaration public static bool operator >=(Theme left, Theme right) Parameters Type Name Description Theme left The left. Theme right The right. Returns Type Description bool The result of the operator. See Also ModelBase<TClass> | Improve this Doc View Source operator !=(Theme, Theme) Implements the operator !=. Declaration public static bool operator !=(Theme left, Theme right) Parameters Type Name Description Theme left The left. Theme right The right. Returns Type Description bool The result of the operator. See Also ModelBase<TClass> | Improve this Doc View Source operator <(Theme, Theme) Implements the operator <. Declaration public static bool operator <(Theme left, Theme right) Parameters Type Name Description Theme left The left. Theme right The right. Returns Type Description bool The result of the operator. See Also ModelBase<TClass> | Improve this Doc View Source operator <=(Theme, Theme) Implements the operator <=. Declaration public static bool operator <=(Theme left, Theme right) Parameters Type Name Description Theme left The left. Theme right The right. Returns Type Description bool The result of the operator. See Also ModelBase<TClass> Implements IModel<TClass> IModel IEquatable<T> IEquatable<T> IComparable IComparable<T> IEquatable<T> Extension Methods ExpandoObjectExtensions.ConvertToExpando<TEntity>(TEntity?) GenericExtensions.When<TObject>(TObject, bool, Func<TObject, TObject>) See Also ModelBase<TClass>"
  },
  "api/Mithril.Themes.Models.ThemeChangedEvent.html": {
    "href": "api/Mithril.Themes.Models.ThemeChangedEvent.html",
    "title": "Class ThemeChangedEvent | Mithril API Reference",
    "keywords": "Class ThemeChangedEvent Theme changed event Inheritance object ModelBase<ThemeChangedEvent> EventBaseClass<ThemeChangedEvent> ThemeChangedEvent Implements IModel<ThemeChangedEvent> IEquatable<IModel<ThemeChangedEvent>> IComparable IComparable<ThemeChangedEvent> IEquatable<ModelBase<ThemeChangedEvent>> IEvent IEquatable<IEvent> IModel IEquatable<IModel> IEquatable<EventBaseClass<ThemeChangedEvent>> Inherited Members EventBaseClass<ThemeChangedEvent>.Name EventBaseClass<ThemeChangedEvent>.RetryCount EventBaseClass<ThemeChangedEvent>.State EventBaseClass<ThemeChangedEvent>.CanRun() EventBaseClass<ThemeChangedEvent>.CompareTo(EventBaseClass<ThemeChangedEvent>) EventBaseClass<ThemeChangedEvent>.Equals(EventBaseClass<ThemeChangedEvent>) EventBaseClass<ThemeChangedEvent>.Equals(IEvent) EventBaseClass<ThemeChangedEvent>.ToString() ModelBase<ThemeChangedEvent>.Active ModelBase<ThemeChangedEvent>.Creator ModelBase<ThemeChangedEvent>.DateCreated ModelBase<ThemeChangedEvent>.DateModified ModelBase<ThemeChangedEvent>.ID ModelBase<ThemeChangedEvent>.Modifier ModelBase<ThemeChangedEvent>.TenantID ModelBase<ThemeChangedEvent>.All(IDataService) ModelBase<ThemeChangedEvent>.AllActive(IDataService) ModelBase<ThemeChangedEvent>.AllInactive(IDataService) ModelBase<ThemeChangedEvent>.Load(long, IDataService) ModelBase<ThemeChangedEvent>.Query(IDataService) ModelBase<ThemeChangedEvent>.CanBeModifiedBy(ClaimsPrincipal) ModelBase<ThemeChangedEvent>.CanBeViewedBy(ClaimsPrincipal) ModelBase<ThemeChangedEvent>.CompareTo(object) ModelBase<ThemeChangedEvent>.DeleteAsync(IDataService, ClaimsPrincipal, bool) ModelBase<ThemeChangedEvent>.Equals(IModel) ModelBase<ThemeChangedEvent>.Equals(IModel<ThemeChangedEvent>) ModelBase<ThemeChangedEvent>.Equals(ModelBase<ThemeChangedEvent>) ModelBase<ThemeChangedEvent>.SaveAsync(IDataService, ClaimsPrincipal) ModelBase<ThemeChangedEvent>.SetupObject(IDataService, ClaimsPrincipal) ModelBase<ThemeChangedEvent>.SetupObject(IDataService, IUser) ModelBase<ThemeChangedEvent>.SetupObjectAndReturn(IDataService, ClaimsPrincipal) object.Equals(object, object) object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) Namespace: Mithril.Themes.Models Assembly: Mithril.Themes.dll Syntax public class ThemeChangedEvent : EventBaseClass<ThemeChangedEvent>, IModel<ThemeChangedEvent>, IEquatable<IModel<ThemeChangedEvent>>, IComparable, IComparable<ThemeChangedEvent>, IEquatable<ModelBase<ThemeChangedEvent>>, IEvent, IEquatable<IEvent>, IModel, IEquatable<IModel>, IEquatable<EventBaseClass<ThemeChangedEvent>> Constructors | Improve this Doc View Source ThemeChangedEvent() Initializes a new instance of the ThemeChangedEvent class. Declaration public ThemeChangedEvent() See Also EventBaseClass<TEvent> | Improve this Doc View Source ThemeChangedEvent(string) Initializes a new instance of the ThemeChangedEvent class. Declaration public ThemeChangedEvent(string name) Parameters Type Name Description string name The name. See Also EventBaseClass<TEvent> Properties | Improve this Doc View Source ThemeName Gets or sets the message. Declaration [MaxLength(64)] public string? ThemeName { get; set; } Property Value Type Description string The message. See Also EventBaseClass<TEvent> Methods | Improve this Doc View Source CompareTo(ThemeChangedEvent?) Compares the object to another object Declaration public override int CompareTo(ThemeChangedEvent? other) Parameters Type Name Description ThemeChangedEvent other Object to compare to Returns Type Description int 0 if they are equal, -1 if this is smaller, 1 if it is larger Overrides ModelBase<ThemeChangedEvent>.CompareTo(ThemeChangedEvent) See Also EventBaseClass<TEvent> | Improve this Doc View Source Equals(ThemeChangedEvent) Indicates whether the current object is equal to another object of the same type. Declaration public bool Equals(ThemeChangedEvent other) Parameters Type Name Description ThemeChangedEvent other An object to compare with this object. Returns Type Description bool true if the current object is equal to the other parameter; otherwise, false. See Also EventBaseClass<TEvent> | Improve this Doc View Source Equals(object?) Determines whether the specified object, is equal to this instance. Declaration public override bool Equals(object? obj) Parameters Type Name Description object obj The object to compare with this instance. Returns Type Description bool true if the specified object is equal to this instance; otherwise, false. Overrides EventBaseClass<ThemeChangedEvent>.Equals(object) See Also EventBaseClass<TEvent> | Improve this Doc View Source GetData() Gets the data within the event. Declaration public override ExpandoObject GetData() Returns Type Description ExpandoObject The data from the event. Overrides EventBaseClass<ThemeChangedEvent>.GetData() See Also EventBaseClass<TEvent> | Improve this Doc View Source GetHashCode() Returns a hash code for this instance. Declaration public override int GetHashCode() Returns Type Description int A hash code for this instance, suitable for use in hashing algorithms and data structures like a hash table. Overrides EventBaseClass<ThemeChangedEvent>.GetHashCode() See Also EventBaseClass<TEvent> | Improve this Doc View Source GetSchema() Gets the schema. Declaration public override string GetSchema() Returns Type Description string The data schema. Overrides EventBaseClass<ThemeChangedEvent>.GetSchema() See Also EventBaseClass<TEvent> Operators | Improve this Doc View Source operator ==(ThemeChangedEvent, ThemeChangedEvent) Implements the operator ==. Declaration public static bool operator ==(ThemeChangedEvent first, ThemeChangedEvent second) Parameters Type Name Description ThemeChangedEvent first The first. ThemeChangedEvent second The second. Returns Type Description bool The result of the operator. See Also EventBaseClass<TEvent> | Improve this Doc View Source operator >(ThemeChangedEvent, ThemeChangedEvent) Implements the operator >. Declaration public static bool operator >(ThemeChangedEvent left, ThemeChangedEvent right) Parameters Type Name Description ThemeChangedEvent left The left. ThemeChangedEvent right The right. Returns Type Description bool The result of the operator. See Also EventBaseClass<TEvent> | Improve this Doc View Source operator >=(ThemeChangedEvent, ThemeChangedEvent) Implements the operator >=. Declaration public static bool operator >=(ThemeChangedEvent left, ThemeChangedEvent right) Parameters Type Name Description ThemeChangedEvent left The left. ThemeChangedEvent right The right. Returns Type Description bool The result of the operator. See Also EventBaseClass<TEvent> | Improve this Doc View Source operator !=(ThemeChangedEvent, ThemeChangedEvent) Implements the operator !=. Declaration public static bool operator !=(ThemeChangedEvent left, ThemeChangedEvent right) Parameters Type Name Description ThemeChangedEvent left The left. ThemeChangedEvent right The right. Returns Type Description bool The result of the operator. See Also EventBaseClass<TEvent> | Improve this Doc View Source operator <(ThemeChangedEvent, ThemeChangedEvent) Implements the operator <. Declaration public static bool operator <(ThemeChangedEvent left, ThemeChangedEvent right) Parameters Type Name Description ThemeChangedEvent left The left. ThemeChangedEvent right The right. Returns Type Description bool The result of the operator. See Also EventBaseClass<TEvent> | Improve this Doc View Source operator <=(ThemeChangedEvent, ThemeChangedEvent) Implements the operator <=. Declaration public static bool operator <=(ThemeChangedEvent left, ThemeChangedEvent right) Parameters Type Name Description ThemeChangedEvent left The left. ThemeChangedEvent right The right. Returns Type Description bool The result of the operator. See Also EventBaseClass<TEvent> Implements IModel<TClass> IEquatable<T> IComparable IComparable<T> IEquatable<T> IEvent IEquatable<T> IModel IEquatable<T> IEquatable<T> Extension Methods ExpandoObjectExtensions.ConvertToExpando<TEntity>(TEntity?) GenericExtensions.When<TObject>(TObject, bool, Func<TObject, TObject>) See Also EventBaseClass<TEvent>"
  },
  "api/Mithril.Themes.Models.html": {
    "href": "api/Mithril.Themes.Models.html",
    "title": "Namespace Mithril.Themes.Models | Mithril API Reference",
    "keywords": "Namespace Mithril.Themes.Models Classes SetThemeCommand Set theme command Theme Theme model ThemeChangedEvent Theme changed event"
  },
  "api/Mithril.Themes.Resources.LinkResource.html": {
    "href": "api/Mithril.Themes.Resources.LinkResource.html",
    "title": "Class LinkResource | Mithril API Reference",
    "keywords": "Class LinkResource Link resource Inheritance object LinkResource Implements IResource IEquatable<LinkResource> Inherited Members object.Equals(object, object) object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Mithril.Themes.Resources Assembly: Mithril.Themes.dll Syntax public class LinkResource : IResource, IEquatable<LinkResource> Constructors | Improve this Doc View Source LinkResource(string?, string?, string?, string?, string?, string?, string?, string?, string?, string?, int, string?) Initializes a new instance of the LinkResource class. Declaration public LinkResource(string? source, string? charset, string? crossOrigin, string? hrefLang, string? media, string? rel, string? rev, string? sizes, string? target, string? type, int order, string? location) Parameters Type Name Description string source The source. string charset The charset. string crossOrigin The cross origin. string hrefLang The href language. string media The media. string rel The relative. string rev The rev. string sizes The sizes. string target The target. string type The type. int order The order. string location The location. See Also IResource IEquatable<T> Properties | Improve this Doc View Source Charset Gets the charset. Declaration public string Charset { get; } Property Value Type Description string The charset. See Also IResource IEquatable<T> | Improve this Doc View Source CrossOrigin Gets the cross origin. Declaration public string CrossOrigin { get; } Property Value Type Description string The cross origin. See Also IResource IEquatable<T> | Improve this Doc View Source HrefLang Gets the href language. Declaration public string HrefLang { get; } Property Value Type Description string The href language. See Also IResource IEquatable<T> | Improve this Doc View Source Location Gets the location. Declaration public string Location { get; } Property Value Type Description string The location. See Also IResource IEquatable<T> | Improve this Doc View Source Media Gets the media. Declaration public string Media { get; } Property Value Type Description string The media. See Also IResource IEquatable<T> | Improve this Doc View Source Order Gets the order. Declaration public int Order { get; set; } Property Value Type Description int The order. See Also IResource IEquatable<T> | Improve this Doc View Source Rel Gets or sets the relative. Declaration public string Rel { get; set; } Property Value Type Description string The relative. See Also IResource IEquatable<T> | Improve this Doc View Source Rev Gets the rev. Declaration public string Rev { get; } Property Value Type Description string The rev. See Also IResource IEquatable<T> | Improve this Doc View Source Sizes Gets the sizes. Declaration public string Sizes { get; } Property Value Type Description string The sizes. See Also IResource IEquatable<T> | Improve this Doc View Source Source Gets or sets the source. Declaration public string Source { get; set; } Property Value Type Description string The source. See Also IResource IEquatable<T> | Improve this Doc View Source Target Gets the target. Declaration public string Target { get; } Property Value Type Description string The target. See Also IResource IEquatable<T> | Improve this Doc View Source Type Gets or sets the type. Declaration public string Type { get; set; } Property Value Type Description string The type. See Also IResource IEquatable<T> | Improve this Doc View Source Version Gets the version. Declaration public string Version { get; } Property Value Type Description string The version. See Also IResource IEquatable<T> Methods | Improve this Doc View Source Equals(LinkResource?) Indicates whether the current object is equal to another object of the same type. Declaration public bool Equals(LinkResource? other) Parameters Type Name Description LinkResource other An object to compare with this object. Returns Type Description bool true if the current object is equal to the other parameter; otherwise, false. See Also IResource IEquatable<T> | Improve this Doc View Source Equals(object?) Determines whether the specified object, is equal to this instance. Declaration public override bool Equals(object? obj) Parameters Type Name Description object obj The object to compare with this instance. Returns Type Description bool true if the specified object is equal to this instance; otherwise, false. Overrides object.Equals(object) See Also IResource IEquatable<T> | Improve this Doc View Source GetHashCode() Returns a hash code for this instance. Declaration public override int GetHashCode() Returns Type Description int A hash code for this instance, suitable for use in hashing algorithms and data structures like a hash table. Overrides object.GetHashCode() See Also IResource IEquatable<T> | Improve this Doc View Source GetHtmlContent() Gets the content of the resource as an IHtmlContent item. Declaration public IHtmlContent GetHtmlContent() Returns Type Description IHtmlContent The content. See Also IResource IEquatable<T> Operators | Improve this Doc View Source operator ==(LinkResource?, LinkResource?) Implements the operator ==. Declaration public static bool operator ==(LinkResource? resource1, LinkResource? resource2) Parameters Type Name Description LinkResource resource1 The resource1. LinkResource resource2 The resource2. Returns Type Description bool The result of the operator. See Also IResource IEquatable<T> | Improve this Doc View Source operator !=(LinkResource?, LinkResource?) Implements the operator !=. Declaration public static bool operator !=(LinkResource? resource1, LinkResource? resource2) Parameters Type Name Description LinkResource resource1 The resource1. LinkResource resource2 The resource2. Returns Type Description bool The result of the operator. See Also IResource IEquatable<T> Implements IResource IEquatable<T> Extension Methods ExpandoObjectExtensions.ConvertToExpando<TEntity>(TEntity?) GenericExtensions.When<TObject>(TObject, bool, Func<TObject, TObject>) See Also IResource IEquatable<T>"
  },
  "api/Mithril.Themes.Resources.MetaResource.html": {
    "href": "api/Mithril.Themes.Resources.MetaResource.html",
    "title": "Class MetaResource | Mithril API Reference",
    "keywords": "Class MetaResource Meta resource Inheritance object MetaResource Implements IResource IEquatable<MetaResource> Inherited Members object.Equals(object, object) object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Mithril.Themes.Resources Assembly: Mithril.Themes.dll Syntax public class MetaResource : IResource, IEquatable<MetaResource> Constructors | Improve this Doc View Source MetaResource(string?, string?, string?, string?, string?, string?, int) Initializes a new instance of the MetaResource class. Declaration public MetaResource(string? name, string? scheme, string? httpEquiv, string? content, string? charset, string? property, int order) Parameters Type Name Description string name The name. string scheme The schema. string httpEquiv The HTTP equiv. string content The content. string charset The charset. string property The property. int order The order. See Also IResource IEquatable<T> Properties | Improve this Doc View Source Charset Gets the charset. Declaration public string? Charset { get; } Property Value Type Description string The charset. See Also IResource IEquatable<T> | Improve this Doc View Source Content Gets the content. Declaration public string? Content { get; } Property Value Type Description string The content. See Also IResource IEquatable<T> | Improve this Doc View Source HttpEquiv Gets the HTTP equiv. Declaration public string? HttpEquiv { get; } Property Value Type Description string The HTTP equiv. See Also IResource IEquatable<T> | Improve this Doc View Source Location Gets the location. Declaration public string Location { get; } Property Value Type Description string The location. See Also IResource IEquatable<T> | Improve this Doc View Source Name Gets the name. Declaration public string? Name { get; } Property Value Type Description string The name. See Also IResource IEquatable<T> | Improve this Doc View Source Order Gets the order. Declaration public int Order { get; set; } Property Value Type Description int The order. See Also IResource IEquatable<T> | Improve this Doc View Source Property Gets the property. Declaration public string? Property { get; } Property Value Type Description string The property. See Also IResource IEquatable<T> | Improve this Doc View Source Scheme Gets the schema. Declaration public string? Scheme { get; } Property Value Type Description string The schema. See Also IResource IEquatable<T> Methods | Improve this Doc View Source Equals(MetaResource?) Indicates whether the current object is equal to another object of the same type. Declaration public bool Equals(MetaResource? other) Parameters Type Name Description MetaResource other An object to compare with this object. Returns Type Description bool true if the current object is equal to the other parameter; otherwise, false. See Also IResource IEquatable<T> | Improve this Doc View Source Equals(object?) Determines whether the specified object, is equal to this instance. Declaration public override bool Equals(object? obj) Parameters Type Name Description object obj The object to compare with this instance. Returns Type Description bool true if the specified object is equal to this instance; otherwise, false. Overrides object.Equals(object) See Also IResource IEquatable<T> | Improve this Doc View Source GetHashCode() Returns a hash code for this instance. Declaration public override int GetHashCode() Returns Type Description int A hash code for this instance, suitable for use in hashing algorithms and data structures like a hash table. Overrides object.GetHashCode() See Also IResource IEquatable<T> | Improve this Doc View Source GetHtmlContent() Gets the content of the resource as an IHtmlContent item. Declaration public IHtmlContent GetHtmlContent() Returns Type Description IHtmlContent The content. See Also IResource IEquatable<T> Operators | Improve this Doc View Source operator ==(MetaResource?, MetaResource?) Implements the operator ==. Declaration public static bool operator ==(MetaResource? resource1, MetaResource? resource2) Parameters Type Name Description MetaResource resource1 The resource1. MetaResource resource2 The resource2. Returns Type Description bool The result of the operator. See Also IResource IEquatable<T> | Improve this Doc View Source operator !=(MetaResource?, MetaResource?) Implements the operator !=. Declaration public static bool operator !=(MetaResource? resource1, MetaResource? resource2) Parameters Type Name Description MetaResource resource1 The resource1. MetaResource resource2 The resource2. Returns Type Description bool The result of the operator. See Also IResource IEquatable<T> Implements IResource IEquatable<T> Extension Methods ExpandoObjectExtensions.ConvertToExpando<TEntity>(TEntity?) GenericExtensions.When<TObject>(TObject, bool, Func<TObject, TObject>) See Also IResource IEquatable<T>"
  },
  "api/Mithril.Themes.Resources.ScriptContentResource.html": {
    "href": "api/Mithril.Themes.Resources.ScriptContentResource.html",
    "title": "Class ScriptContentResource | Mithril API Reference",
    "keywords": "Class ScriptContentResource Script content resource Inheritance object ScriptContentResource Implements IResource IEquatable<ScriptContentResource> Inherited Members object.Equals(object, object) object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Mithril.Themes.Resources Assembly: Mithril.Themes.dll Syntax public class ScriptContentResource : IResource, IEquatable<ScriptContentResource> Constructors | Improve this Doc View Source ScriptContentResource(string?, string?, string?, string?, string?, string?, int, string?, string?, string?, string?) Initializes a new instance of the ScriptContentResource class. Declaration public ScriptContentResource(string? content, string? async, string? charset, string? defer, string? type, string? xMLSpace, int tagOrder, string? location, string? integrity, string? crossOrigin, string? referrerPolicy) Parameters Type Name Description string content The content. string async The asynchronous. string charset The charset. string defer The defer. string type The type. string xMLSpace The x ml space. int tagOrder The tag order. string location The position. string integrity The integrity. string crossOrigin The cross origin. string referrerPolicy The referrer policy. See Also IResource IEquatable<T> Properties | Improve this Doc View Source Async Gets the asynchronous. Declaration public string Async { get; } Property Value Type Description string The asynchronous. See Also IResource IEquatable<T> | Improve this Doc View Source Charset Gets the charset. Declaration public string Charset { get; } Property Value Type Description string The charset. See Also IResource IEquatable<T> | Improve this Doc View Source Content Gets or sets the source. Declaration public string Content { get; set; } Property Value Type Description string The source. See Also IResource IEquatable<T> | Improve this Doc View Source CrossOrigin Gets the crossorigin. Declaration public string CrossOrigin { get; } Property Value Type Description string The crossorigin. See Also IResource IEquatable<T> | Improve this Doc View Source Defer Gets the defer. Declaration public bool Defer { get; } Property Value Type Description bool The defer. See Also IResource IEquatable<T> | Improve this Doc View Source Integrity Gets the integrity. Declaration public string Integrity { get; } Property Value Type Description string The integrity. See Also IResource IEquatable<T> | Improve this Doc View Source Location Gets the position. Declaration public string Location { get; } Property Value Type Description string The position. See Also IResource IEquatable<T> | Improve this Doc View Source Order Gets the order. Declaration public int Order { get; set; } Property Value Type Description int The order. See Also IResource IEquatable<T> | Improve this Doc View Source ReferrerPolicy Gets the referrerpolicy. Declaration public string ReferrerPolicy { get; } Property Value Type Description string The referrerpolicy. See Also IResource IEquatable<T> | Improve this Doc View Source Type Gets the type. Declaration public string Type { get; } Property Value Type Description string The type. See Also IResource IEquatable<T> | Improve this Doc View Source XMLSpace Gets the XML space. Declaration public string XMLSpace { get; } Property Value Type Description string The XML space. See Also IResource IEquatable<T> Methods | Improve this Doc View Source Equals(ScriptContentResource?) Indicates whether the current object is equal to another object of the same type. Declaration public bool Equals(ScriptContentResource? other) Parameters Type Name Description ScriptContentResource other An object to compare with this object. Returns Type Description bool true if the current object is equal to the other parameter; otherwise, false. See Also IResource IEquatable<T> | Improve this Doc View Source Equals(object?) Determines whether the specified object, is equal to this instance. Declaration public override bool Equals(object? obj) Parameters Type Name Description object obj The object to compare with this instance. Returns Type Description bool true if the specified object is equal to this instance; otherwise, false. Overrides object.Equals(object) See Also IResource IEquatable<T> | Improve this Doc View Source GetHashCode() Returns a hash code for this instance. Declaration public override int GetHashCode() Returns Type Description int A hash code for this instance, suitable for use in hashing algorithms and data structures like a hash table. Overrides object.GetHashCode() See Also IResource IEquatable<T> | Improve this Doc View Source GetHtmlContent() Gets the content of the resource as an IHtmlContent item. Declaration public IHtmlContent GetHtmlContent() Returns Type Description IHtmlContent The content. See Also IResource IEquatable<T> Operators | Improve this Doc View Source operator ==(ScriptContentResource?, ScriptContentResource?) Implements the operator ==. Declaration public static bool operator ==(ScriptContentResource? resource1, ScriptContentResource? resource2) Parameters Type Name Description ScriptContentResource resource1 The resource1. ScriptContentResource resource2 The resource2. Returns Type Description bool The result of the operator. See Also IResource IEquatable<T> | Improve this Doc View Source operator !=(ScriptContentResource?, ScriptContentResource?) Implements the operator !=. Declaration public static bool operator !=(ScriptContentResource? resource1, ScriptContentResource? resource2) Parameters Type Name Description ScriptContentResource resource1 The resource1. ScriptContentResource resource2 The resource2. Returns Type Description bool The result of the operator. See Also IResource IEquatable<T> Implements IResource IEquatable<T> Extension Methods ExpandoObjectExtensions.ConvertToExpando<TEntity>(TEntity?) GenericExtensions.When<TObject>(TObject, bool, Func<TObject, TObject>) See Also IResource IEquatable<T>"
  },
  "api/Mithril.Themes.Resources.ScriptFileResource.html": {
    "href": "api/Mithril.Themes.Resources.ScriptFileResource.html",
    "title": "Class ScriptFileResource | Mithril API Reference",
    "keywords": "Class ScriptFileResource Script file resource. Inheritance object ScriptFileResource Implements IResource IEquatable<ScriptFileResource> Inherited Members object.Equals(object, object) object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Mithril.Themes.Resources Assembly: Mithril.Themes.dll Syntax public class ScriptFileResource : IResource, IEquatable<ScriptFileResource> Constructors | Improve this Doc View Source ScriptFileResource(string?, string?, string?, string?, string?, string?, int, string?, string?, string?, string?) Initializes a new instance of the ScriptFileResource class. Declaration public ScriptFileResource(string? source, string? async, string? charset, string? defer, string? type, string? xMLSpace, int order, string? location, string? integrity, string? crossOrigin, string? referrerPolicy) Parameters Type Name Description string source The source. string async The asynchronous. string charset The charset. string defer The defer. string type The type. string xMLSpace The xml space. int order The order. string location The location. string integrity The integrity. string crossOrigin The cross origin. string referrerPolicy The referrer policy. See Also IEquatable<T> IResource Properties | Improve this Doc View Source Async Gets the asynchronous. Declaration public string Async { get; } Property Value Type Description string The asynchronous. See Also IEquatable<T> IResource | Improve this Doc View Source Charset Gets the charset. Declaration public string Charset { get; } Property Value Type Description string The charset. See Also IEquatable<T> IResource | Improve this Doc View Source CrossOrigin Gets the crossorigin. Declaration public string CrossOrigin { get; } Property Value Type Description string The crossorigin. See Also IEquatable<T> IResource | Improve this Doc View Source Defer Gets the defer. Declaration public bool Defer { get; } Property Value Type Description bool The defer. See Also IEquatable<T> IResource | Improve this Doc View Source Integrity Gets the integrity. Declaration public string Integrity { get; } Property Value Type Description string The integrity. See Also IEquatable<T> IResource | Improve this Doc View Source Location Gets the location. Declaration public string Location { get; } Property Value Type Description string The location. See Also IEquatable<T> IResource | Improve this Doc View Source Order Gets the order. Declaration public int Order { get; set; } Property Value Type Description int The order. See Also IEquatable<T> IResource | Improve this Doc View Source ReferrerPolicy Gets the referrerpolicy. Declaration public string ReferrerPolicy { get; } Property Value Type Description string The referrerpolicy. See Also IEquatable<T> IResource | Improve this Doc View Source Source Gets or sets the source. Declaration public string Source { get; set; } Property Value Type Description string The source. See Also IEquatable<T> IResource | Improve this Doc View Source Type Gets the type. Declaration public string Type { get; } Property Value Type Description string The type. See Also IEquatable<T> IResource | Improve this Doc View Source Version Gets the version. Declaration public string Version { get; } Property Value Type Description string The version. See Also IEquatable<T> IResource | Improve this Doc View Source XMLSpace Gets the XML space. Declaration public string XMLSpace { get; } Property Value Type Description string The XML space. See Also IEquatable<T> IResource Methods | Improve this Doc View Source Equals(ScriptFileResource?) Indicates whether the current object is equal to another object of the same type. Declaration public bool Equals(ScriptFileResource? other) Parameters Type Name Description ScriptFileResource other An object to compare with this object. Returns Type Description bool true if the current object is equal to the other parameter; otherwise, false. See Also IEquatable<T> IResource | Improve this Doc View Source Equals(object?) Determines whether the specified object, is equal to this instance. Declaration public override bool Equals(object? obj) Parameters Type Name Description object obj The object to compare with this instance. Returns Type Description bool true if the specified object is equal to this instance; otherwise, false. Overrides object.Equals(object) See Also IEquatable<T> IResource | Improve this Doc View Source GetHashCode() Returns a hash code for this instance. Declaration public override int GetHashCode() Returns Type Description int A hash code for this instance, suitable for use in hashing algorithms and data structures like a hash table. Overrides object.GetHashCode() See Also IEquatable<T> IResource | Improve this Doc View Source GetHtmlContent() Gets the content of the resource as an IHtmlContent item. Declaration public IHtmlContent GetHtmlContent() Returns Type Description IHtmlContent The content. See Also IEquatable<T> IResource Operators | Improve this Doc View Source operator ==(ScriptFileResource?, ScriptFileResource?) Implements the operator ==. Declaration public static bool operator ==(ScriptFileResource? resource1, ScriptFileResource? resource2) Parameters Type Name Description ScriptFileResource resource1 The resource1. ScriptFileResource resource2 The resource2. Returns Type Description bool The result of the operator. See Also IEquatable<T> IResource | Improve this Doc View Source operator !=(ScriptFileResource?, ScriptFileResource?) Implements the operator !=. Declaration public static bool operator !=(ScriptFileResource? resource1, ScriptFileResource? resource2) Parameters Type Name Description ScriptFileResource resource1 The resource1. ScriptFileResource resource2 The resource2. Returns Type Description bool The result of the operator. See Also IEquatable<T> IResource Implements IResource IEquatable<T> Extension Methods ExpandoObjectExtensions.ConvertToExpando<TEntity>(TEntity?) GenericExtensions.When<TObject>(TObject, bool, Func<TObject, TObject>) See Also IEquatable<T> IResource"
  },
  "api/Mithril.Themes.Resources.StyleResource.html": {
    "href": "api/Mithril.Themes.Resources.StyleResource.html",
    "title": "Class StyleResource | Mithril API Reference",
    "keywords": "Class StyleResource Style resource Inheritance object StyleResource Implements IResource IEquatable<StyleResource> Inherited Members object.Equals(object, object) object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Mithril.Themes.Resources Assembly: Mithril.Themes.dll Syntax public class StyleResource : IResource, IEquatable<StyleResource> Constructors | Improve this Doc View Source StyleResource(string?, string?, string?, int, string?) Initializes a new instance of the StyleResource class. Declaration public StyleResource(string? content, string? media, string? type, int order, string? location) Parameters Type Name Description string content The content. string media The media. string type The type. int order The order. string location The location. See Also IEquatable<T> IResource Properties | Improve this Doc View Source Content Gets or sets the source. Declaration public string Content { get; set; } Property Value Type Description string The source. See Also IEquatable<T> IResource | Improve this Doc View Source Location Gets the location. Declaration public string? Location { get; } Property Value Type Description string The location. See Also IEquatable<T> IResource | Improve this Doc View Source Media Gets or sets the media. Declaration public string? Media { get; set; } Property Value Type Description string The media. See Also IEquatable<T> IResource | Improve this Doc View Source Order Gets the order. Declaration public int Order { get; set; } Property Value Type Description int The order. See Also IEquatable<T> IResource | Improve this Doc View Source Type Gets or sets the type. Declaration public string? Type { get; set; } Property Value Type Description string The type. See Also IEquatable<T> IResource Methods | Improve this Doc View Source Equals(StyleResource?) Indicates whether the current object is equal to another object of the same type. Declaration public bool Equals(StyleResource? other) Parameters Type Name Description StyleResource other An object to compare with this object. Returns Type Description bool true if the current object is equal to the other parameter; otherwise, false. See Also IEquatable<T> IResource | Improve this Doc View Source Equals(object?) Determines whether the specified object, is equal to this instance. Declaration public override bool Equals(object? obj) Parameters Type Name Description object obj The object to compare with this instance. Returns Type Description bool true if the specified object is equal to this instance; otherwise, false. Overrides object.Equals(object) See Also IEquatable<T> IResource | Improve this Doc View Source GetHashCode() Returns a hash code for this instance. Declaration public override int GetHashCode() Returns Type Description int A hash code for this instance, suitable for use in hashing algorithms and data structures like a hash table. Overrides object.GetHashCode() See Also IEquatable<T> IResource | Improve this Doc View Source GetHtmlContent() Gets the content of the resource as an IHtmlContent item. Declaration public IHtmlContent GetHtmlContent() Returns Type Description IHtmlContent The content. See Also IEquatable<T> IResource Operators | Improve this Doc View Source operator ==(StyleResource?, StyleResource?) Implements the operator ==. Declaration public static bool operator ==(StyleResource? resource1, StyleResource? resource2) Parameters Type Name Description StyleResource resource1 The resource1. StyleResource resource2 The resource2. Returns Type Description bool The result of the operator. See Also IEquatable<T> IResource | Improve this Doc View Source operator !=(StyleResource?, StyleResource?) Implements the operator !=. Declaration public static bool operator !=(StyleResource? resource1, StyleResource? resource2) Parameters Type Name Description StyleResource resource1 The resource1. StyleResource resource2 The resource2. Returns Type Description bool The result of the operator. See Also IEquatable<T> IResource Implements IResource IEquatable<T> Extension Methods ExpandoObjectExtensions.ConvertToExpando<TEntity>(TEntity?) GenericExtensions.When<TObject>(TObject, bool, Func<TObject, TObject>) See Also IEquatable<T> IResource"
  },
  "api/Mithril.Themes.Resources.html": {
    "href": "api/Mithril.Themes.Resources.html",
    "title": "Namespace Mithril.Themes.Resources | Mithril API Reference",
    "keywords": "Namespace Mithril.Themes.Resources Classes LinkResource Link resource MetaResource Meta resource ScriptContentResource Script content resource ScriptFileResource Script file resource. StyleResource Style resource"
  },
  "api/Mithril.Themes.Services.ResourceService.html": {
    "href": "api/Mithril.Themes.Services.ResourceService.html",
    "title": "Class ResourceService | Mithril API Reference",
    "keywords": "Class ResourceService Resource service Inheritance object ResourceService Implements IResourceService Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Mithril.Themes.Services Assembly: Mithril.Themes.dll Syntax public class ResourceService : IResourceService Properties | Improve this Doc View Source Resources Gets or sets the resources. Declaration public ListMapping<ResourceType, IResource> Resources { get; } Property Value Type Description ListMapping<ResourceType, IResource> The resources. See Also IResourceService Methods | Improve this Doc View Source AddLinkResource(string?, string?, string?, string?, string?, string?, string?, string?, string?, string?, int, string?) Adds the link resource. Declaration public bool AddLinkResource(string? href, string? rel, string? type, string? crossOrigin, string? hreflang, string? media, string? sizes, string? charset, string? rev, string? target, int tagOrder, string? location) Parameters Type Name Description string href The href. string rel The relative. string type The type. string crossOrigin The cross origin. string hreflang The hreflang. string media The media. string sizes The sizes. string charset The charset. string rev The rev. string target The target. int tagOrder The tag order. string location The location. Returns Type Description bool True if it is successfully added, false otherwise. See Also IResourceService | Improve this Doc View Source AddMetaResource(string?, string?, string?, string?, string?, string?, int) Adds the meta resource. Declaration public bool AddMetaResource(string? name, string? scheme, string? httpEquiv, string? content, string? charset, string? property, int tagOrder) Parameters Type Name Description string name The name. string scheme The scheme. string httpEquiv The HTTP equiv. string content The content. string charset The charset. string property The property. int tagOrder The tag order. Returns Type Description bool True if it is successfully added, false otherwise. See Also IResourceService | Improve this Doc View Source AddResource(ResourceType, IResource) Adds the resource. Declaration public bool AddResource(ResourceType type, IResource resource) Parameters Type Name Description ResourceType type The type. IResource resource The resource. Returns Type Description bool True if it is successfully added, false otherwise. See Also IResourceService | Improve this Doc View Source AddScriptContentResource(string?, string?, string?, string?, string?, string?, int, string?, string?, string?, string?) Adds the script content resource. Declaration public bool AddScriptContentResource(string? content, string? async, string? charset, string? defer, string? type, string? xMLSpace, int tagOrder, string? location, string? integrity, string? crossOrigin, string? referrerPolicy) Parameters Type Name Description string content The content. string async The asynchronous. string charset The charset. string defer The defer. string type The type. string xMLSpace The xml:space. int tagOrder The tag order. string location The position. string integrity The integrity. string crossOrigin The cross origin. string referrerPolicy The referrer policy. Returns Type Description bool True if it is successfully added, false otherwise. See Also IResourceService | Improve this Doc View Source AddScriptFileResource(string?, string?, string?, string?, string?, string?, int, string?, string?, string?, string?) Adds the script file resource. Declaration public bool AddScriptFileResource(string? file, string? async, string? charset, string? defer, string? type, string? xMLSpace, int tagOrder, string? location, string? integrity, string? crossOrigin, string? referrerPolicy) Parameters Type Name Description string file The file. string async The asynchronous. string charset The charset. string defer The defer. string type The type. string xMLSpace The x ml space. int tagOrder The tag order. string location The position. string integrity The integrity. string crossOrigin The cross origin. string referrerPolicy The referrer policy. Returns Type Description bool True if it is successfully added, false otherwise. See Also IResourceService | Improve this Doc View Source AddStyleResource(string?, string?, string?, int, string?) Adds the style resource. Declaration public bool AddStyleResource(string? content, string? media, string? type, int tagOrder, string? location) Parameters Type Name Description string content The content. string media The media. string type The type. int tagOrder The tag order. string location Returns Type Description bool True if it is successfully added, false otherwise. See Also IResourceService | Improve this Doc View Source NextOrderValue(ResourceType) Nexts the order value. Declaration public int NextOrderValue(ResourceType type) Parameters Type Name Description ResourceType type The type. Returns Type Description int The next order value See Also IResourceService | Improve this Doc View Source Render(ResourceType, string) Renders the specified type. Declaration public IHtmlContent Render(ResourceType type, string location = \"\") Parameters Type Name Description ResourceType type The type. string location The location. Returns Type Description IHtmlContent The HTML content. See Also IResourceService Implements IResourceService Extension Methods ExpandoObjectExtensions.ConvertToExpando<TEntity>(TEntity?) GenericExtensions.When<TObject>(TObject, bool, Func<TObject, TObject>) See Also IResourceService"
  },
  "api/Mithril.Themes.Services.ThemeService.html": {
    "href": "api/Mithril.Themes.Services.ThemeService.html",
    "title": "Class ThemeService | Mithril API Reference",
    "keywords": "Class ThemeService Theme manager Inheritance object ThemeService Implements IThemeService Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Mithril.Themes.Services Assembly: Mithril.Themes.dll Syntax public class ThemeService : IThemeService Constructors | Improve this Doc View Source ThemeService(IEnumerable<ITheme>, IDataService?) Initializes a new instance of the ThemeService class. Declaration public ThemeService(IEnumerable<ITheme> themes, IDataService? dataService) Parameters Type Name Description IEnumerable<ITheme> themes The themes. IDataService dataService The data service. See Also IThemeService Methods | Improve this Doc View Source GetAvailableThemes() Gets the themes. Declaration public IEnumerable<ITheme> GetAvailableThemes() Returns Type Description IEnumerable<ITheme> The themes available. See Also IThemeService | Improve this Doc View Source LoadTheme(string?) Loads the theme based on the name. Declaration public ITheme? LoadTheme(string? themeName = \"Default\") Parameters Type Name Description string themeName Name of the theme. Returns Type Description ITheme The theme associated with the name. See Also IThemeService | Improve this Doc View Source SetDefaultThemeAsync(ITheme?, ClaimsPrincipal?) Sets the default theme. Declaration public Task<IThemeService> SetDefaultThemeAsync(ITheme? theme, ClaimsPrincipal? user) Parameters Type Name Description ITheme theme The theme. ClaimsPrincipal user The user. Returns Type Description Task<IThemeService> This. See Also IThemeService | Improve this Doc View Source SetThemeAlias(string?, ITheme?) Set an alias for a theme Declaration public IThemeService SetThemeAlias(string? themeName, ITheme? theme) Parameters Type Name Description string themeName Theme alias name ITheme theme Theme Returns Type Description IThemeService This. See Also IThemeService Implements IThemeService Extension Methods ExpandoObjectExtensions.ConvertToExpando<TEntity>(TEntity?) GenericExtensions.When<TObject>(TObject, bool, Func<TObject, TObject>) See Also IThemeService"
  },
  "api/Mithril.Themes.Services.html": {
    "href": "api/Mithril.Themes.Services.html",
    "title": "Namespace Mithril.Themes.Services | Mithril API Reference",
    "keywords": "Namespace Mithril.Themes.Services Classes ResourceService Resource service ThemeService Theme manager"
  },
  "api/Mithril.Themes.ThemesModule.html": {
    "href": "api/Mithril.Themes.ThemesModule.html",
    "title": "Class ThemesModule | Mithril API Reference",
    "keywords": "Class ThemesModule Themes module Inheritance object ModuleBaseClass<ThemesModule> ThemesModule Implements IEquatable<ThemesModule> IModule Inherited Members ModuleBaseClass<ThemesModule>.Category ModuleBaseClass<ThemesModule>.ContentPath ModuleBaseClass<ThemesModule>.Features ModuleBaseClass<ThemesModule>.ID ModuleBaseClass<ThemesModule>.LastModified ModuleBaseClass<ThemesModule>.Name ModuleBaseClass<ThemesModule>.Order ModuleBaseClass<ThemesModule>.Tags ModuleBaseClass<ThemesModule>.Version ModuleBaseClass<ThemesModule>.ConfigureApplication(IApplicationBuilder, IConfiguration, IHostEnvironment) ModuleBaseClass<ThemesModule>.ConfigureHostSettings(IHostBuilder, IConfiguration, IHostEnvironment) ModuleBaseClass<ThemesModule>.ConfigureLoggingSettings(ILoggingBuilder, IConfiguration, IHostEnvironment) ModuleBaseClass<ThemesModule>.ConfigureMVC(IMvcBuilder, IConfiguration, IHostEnvironment) ModuleBaseClass<ThemesModule>.ConfigureRoutes(IEndpointRouteBuilder, IConfiguration, IHostEnvironment) ModuleBaseClass<ThemesModule>.ConfigureWebHostSettings(IWebHostBuilder, IConfiguration, IHostEnvironment) ModuleBaseClass<ThemesModule>.Equals(object) ModuleBaseClass<ThemesModule>.Equals(ThemesModule) ModuleBaseClass<ThemesModule>.GetHashCode() ModuleBaseClass<ThemesModule>.OnStarted() ModuleBaseClass<ThemesModule>.OnStopped() ModuleBaseClass<ThemesModule>.OnStopping() object.Equals(object, object) object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: Mithril.Themes Assembly: Mithril.Themes.dll Syntax public class ThemesModule : ModuleBaseClass<ThemesModule>, IEquatable<ThemesModule>, IModule Methods | Improve this Doc View Source ConfigureServices(IServiceCollection?, IConfiguration?, IHostEnvironment?) Configures the services for the module. Declaration public override IServiceCollection? ConfigureServices(IServiceCollection? services, IConfiguration? configuration, IHostEnvironment? environment) Parameters Type Name Description IServiceCollection services The services collection. IConfiguration configuration The configuration. IHostEnvironment environment The environment. Returns Type Description IServiceCollection Services Overrides ModuleBaseClass<ThemesModule>.ConfigureServices(IServiceCollection, IConfiguration, IHostEnvironment) See Also ModuleBaseClass<TModule> | Improve this Doc View Source InitializeDataAsync(IDataService?, IServiceProvider?) Initializes the data. Declaration public override Task InitializeDataAsync(IDataService? dataService, IServiceProvider? services) Parameters Type Name Description IDataService dataService The data service. IServiceProvider services The services for the application. Returns Type Description Task Overrides ModuleBaseClass<ThemesModule>.InitializeDataAsync(IDataService, IServiceProvider) See Also ModuleBaseClass<TModule> Implements IEquatable<T> IModule Extension Methods ExpandoObjectExtensions.ConvertToExpando<TEntity>(TEntity?) GenericExtensions.When<TObject>(TObject, bool, Func<TObject, TObject>) See Also ModuleBaseClass<TModule>"
  },
  "api/Mithril.Themes.html": {
    "href": "api/Mithril.Themes.html",
    "title": "Namespace Mithril.Themes | Mithril API Reference",
    "keywords": "Namespace Mithril.Themes Classes ThemesModule Themes module"
  },
  "api/Mithril.html": {
    "href": "api/Mithril.html",
    "title": "Namespace Mithril | Mithril API Reference",
    "keywords": "Namespace Mithril Classes Program Main program"
  },
  "api/index.html": {
    "href": "api/index.html",
    "title": "Welcome | Mithril API Reference",
    "keywords": "Welcome Welcome to the API browser."
  },
  "articles/intro.html": {
    "href": "articles/intro.html",
    "title": "Code | Mithril API Reference",
    "keywords": "Code using Serilog; namespace Mithril { /// <summary> /// Main program /// </summary> public static class Program { /// <summary> /// Defines the entry point of the application. /// </summary> /// <param name=\"args\">The arguments.</param> public static async Task Main(string[] args) { try { WebApplicationBuilder? builder = WebApplication.CreateBuilder(args); await (builder.SetupMithril()?.RunAsync() ?? Task.CompletedTask).ConfigureAwait(false); } catch (Exception ex) { Log.Fatal(ex, \"Host terminated unexpectedly\"); } finally { Log.CloseAndFlush(); } } } }"
  },
  "index.html": {
    "href": "index.html",
    "title": "Mithril | Mithril API Reference",
    "keywords": "Mithril"
  }
}